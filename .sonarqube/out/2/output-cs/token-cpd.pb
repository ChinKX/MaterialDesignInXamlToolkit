≥h
ÉD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\..\paket-files\ControlzEx\ControlzEx\src\ControlzEx\BadgedEx.cs
	namespace 	

ControlzEx
 
{ 
public 

enum 
BadgePlacementMode "
{ 
TopLeft		 
,		 
Top

 
,

 
TopRight 
, 
Right 
, 
BottomRight 
, 
Bottom 
, 

BottomLeft 
, 
Left 
} 
[ 
TemplatePart 
( 
Name 
= "
BadgeContainerPartName /
,/ 0
Type1 5
=6 7
typeof8 >
(> ?
	UIElement? H
)H I
)I J
]J K
public 

class 
BadgedEx 
: 
ContentControl *
{ 
public 
const 
string "
BadgeContainerPartName 2
=3 4
$str5 J
;J K
	protected 
FrameworkElement "
_badgeContainer# 2
;2 3
public 
static 
readonly 
DependencyProperty 1
BadgeProperty2 ?
=@ A
DependencyPropertyB T
.T U
RegisterU ]
(] ^
$str 
, 
typeof 
( 
object "
)" #
,# $
typeof% +
(+ ,
BadgedEx, 4
)4 5
,5 6
new7 :%
FrameworkPropertyMetadata; T
(T U
defaultU \
(\ ]
object] c
)c d
,d e-
 FrameworkPropertyMetadataOptions	f Ü
.
Ü á
AffectsArrange
á ï
,
ï ñ
OnBadgeChanged
ó •
)
• ¶
)
¶ ß
;
ß ®
public 
object 
Badge 
{ 	
get 
{ 
return 
( 
object  
)  !
GetValue" *
(* +
BadgeProperty+ 8
)8 9
;9 :
}; <
set 
{ 
SetValue 
( 
BadgeProperty (
,( )
value* /
)/ 0
;0 1
}2 3
}   	
public"" 
static"" 
readonly"" 
DependencyProperty"" 1#
BadgeBackgroundProperty""2 I
=""J K
DependencyProperty""L ^
.""^ _
Register""_ g
(""g h
$str## 
,## 
typeof## %
(##% &
Brush##& +
)##+ ,
,##, -
typeof##. 4
(##4 5
BadgedEx##5 =
)##= >
,##> ?
new##@ C
PropertyMetadata##D T
(##T U
default##U \
(##\ ]
Brush##] b
)##b c
)##c d
)##d e
;##e f
public%% 
Brush%% 
BadgeBackground%% $
{&& 	
get'' 
{'' 
return'' 
('' 
Brush'' 
)''  
GetValue''! )
('') *#
BadgeBackgroundProperty''* A
)''A B
;''B C
}''D E
set(( 
{(( 
SetValue(( 
((( #
BadgeBackgroundProperty(( 2
,((2 3
value((4 9
)((9 :
;((: ;
}((< =
})) 	
public++ 
static++ 
readonly++ 
DependencyProperty++ 1#
BadgeForegroundProperty++2 I
=++J K
DependencyProperty++L ^
.++^ _
Register++_ g
(++g h
$str,, 
,,, 
typeof,, %
(,,% &
Brush,,& +
),,+ ,
,,,, -
typeof,,. 4
(,,4 5
BadgedEx,,5 =
),,= >
,,,> ?
new,,@ C
PropertyMetadata,,D T
(,,T U
default,,U \
(,,\ ]
Brush,,] b
),,b c
),,c d
),,d e
;,,e f
public.. 
Brush.. 
BadgeForeground.. $
{// 	
get00 
{00 
return00 
(00 
Brush00 
)00  
GetValue00! )
(00) *#
BadgeForegroundProperty00* A
)00A B
;00B C
}00D E
set11 
{11 
SetValue11 
(11 #
BadgeForegroundProperty11 2
,112 3
value114 9
)119 :
;11: ;
}11< =
}22 	
public44 
static44 
readonly44 
DependencyProperty44 1&
BadgePlacementModeProperty442 L
=44M N
DependencyProperty44O a
.44a b
Register44b j
(44j k
$str55  
,55  !
typeof55" (
(55( )
BadgePlacementMode55) ;
)55; <
,55< =
typeof55> D
(55D E
BadgedEx55E M
)55M N
,55N O
new55P S
PropertyMetadata55T d
(55d e
default55e l
(55l m
BadgePlacementMode55m 
)	55 Ä
)
55Ä Å
)
55Å Ç
;
55Ç É
public77 
BadgePlacementMode77 !
BadgePlacementMode77" 4
{88 	
get99 
{99 
return99 
(99 
BadgePlacementMode99 ,
)99, -
GetValue99. 6
(996 7&
BadgePlacementModeProperty997 Q
)99Q R
;99R S
}99T U
set:: 
{:: 
SetValue:: 
(:: &
BadgePlacementModeProperty:: 5
,::5 6
value::7 <
)::< =
;::= >
}::? @
};; 	
public== 
static== 
readonly== 
RoutedEvent== *
BadgeChangedEvent==+ <
==== >
EventManager>> 
.>> 
RegisterRoutedEvent>> ,
(>>, -
$str?? 
,?? 
RoutingStrategy@@ 
.@@  
Bubble@@  &
,@@& '
typeofAA 
(AA -
!RoutedPropertyChangedEventHandlerAA 8
<AA8 9
objectAA9 ?
>AA? @
)AA@ A
,AAA B
typeofBB 
(BB 
BadgedExBB 
)BB  
)BB  !
;BB! "
publicDD 
eventDD -
!RoutedPropertyChangedEventHandlerDD 6
<DD6 7
objectDD7 =
>DD= >
BadgeChangedDD? K
{EE 	
addFF 
{FF 

AddHandlerFF 
(FF 
BadgeChangedEventFF .
,FF. /
valueFF0 5
)FF5 6
;FF6 7
}FF8 9
removeGG 
{GG 
RemoveHandlerGG "
(GG" #
BadgeChangedEventGG# 4
,GG4 5
valueGG6 ;
)GG; <
;GG< =
}GG> ?
}HH 	
privateJJ 
staticJJ 
readonlyJJ !
DependencyPropertyKeyJJ  5!
IsBadgeSetPropertyKeyJJ6 K
=JJL M
DependencyPropertyKK 
.KK 
RegisterReadOnlyKK /
(KK/ 0
$strLL 
,LL 
typeofLL $
(LL$ %
boolLL% )
)LL) *
,LL* +
typeofLL, 2
(LL2 3
BadgedExLL3 ;
)LL; <
,LL< =
newMM 
PropertyMetadataMM $
(MM$ %
defaultMM% ,
(MM, -
boolMM- 1
)MM1 2
)MM2 3
)MM3 4
;MM4 5
publicOO 
staticOO 
readonlyOO 
DependencyPropertyOO 1
IsBadgeSetPropertyOO2 D
=OOE F!
IsBadgeSetPropertyKeyPP !
.PP! "
DependencyPropertyPP" 4
;PP4 5
publicRR 
boolRR 

IsBadgeSetRR 
{SS 	
getTT 
{TT 
returnTT 
(TT 
boolTT 
)TT 
GetValueTT  (
(TT( )
IsBadgeSetPropertyTT) ;
)TT; <
;TT< =
}TT> ?
privateUU 
setUU 
{UU 
SetValueUU "
(UU" #!
IsBadgeSetPropertyKeyUU# 8
,UU8 9
valueUU: ?
)UU? @
;UU@ A
}UUB C
}VV 	
privateXX 
staticXX 
voidXX 
OnBadgeChangedXX *
(XX* +
DependencyObjectXX+ ;
dXX< =
,XX= >.
"DependencyPropertyChangedEventArgsXX? a
eXXb c
)XXc d
{YY 	
varZZ 
instanceZZ 
=ZZ 
(ZZ 
BadgedExZZ $
)ZZ$ %
dZZ% &
;ZZ& '
instance\\ 
.\\ 

IsBadgeSet\\ 
=\\  !
!\\" #
string\\# )
.\\) *
IsNullOrWhiteSpace\\* <
(\\< =
e\\= >
.\\> ?
NewValue\\? G
as\\H J
string\\K Q
)\\Q R
||\\S U
(\\V W
e\\W X
.\\X Y
NewValue\\Y a
!=\\b d
null\\e i
&&\\j l
!\\m n
(\\n o
e\\o p
.\\p q
NewValue\\q y
is\\z |
string	\\} É
)
\\É Ñ
)
\\Ñ Ö
;
\\Ö Ü
var^^ 
args^^ 
=^^ 
new^^ *
RoutedPropertyChangedEventArgs^^ 9
<^^9 :
object^^: @
>^^@ A
(^^A B
e__ 
.__ 
OldValue__ 
,__ 
e`` 
.`` 
NewValue`` 
)`` 
{`` 
RoutedEvent`` (
=``) *
BadgeChangedEvent``+ <
}``< =
;``= >
instanceaa 
.aa 

RaiseEventaa 
(aa  
argsaa  $
)aa$ %
;aa% &
}bb 	
publicdd 
overridedd 
voiddd 
OnApplyTemplatedd ,
(dd, -
)dd- .
{ee 	
baseff 
.ff 
OnApplyTemplateff  
(ff  !
)ff! "
;ff" #
_badgeContainerhh 
=hh 
GetTemplateChildhh .
(hh. /"
BadgeContainerPartNamehh/ E
)hhE F
ashhG I
FrameworkElementhhJ Z
;hhZ [
}ii 	
	protectedkk 
overridekk 
Sizekk 
ArrangeOverridekk  /
(kk/ 0
Sizekk0 4
arrangeBoundskk5 B
)kkB C
{ll 	
varmm 
resultmm 
=mm 
basemm 
.mm 
ArrangeOverridemm -
(mm- .
arrangeBoundsmm. ;
)mm; <
;mm< =
ifoo 
(oo 
_badgeContaineroo 
==oo  "
nulloo# '
)oo' (
returnoo) /
resultoo0 6
;oo6 7
varqq  
containerDesiredSizeqq $
=qq% &
_badgeContainerqq' 6
.qq6 7
DesiredSizeqq7 B
;qqB C
ifrr 
(rr 
(rr  
containerDesiredSizerr %
.rr% &
Widthrr& +
<=rr, .
$numrr/ 2
||rr3 5 
containerDesiredSizerr6 J
.rrJ K
HeightrrK Q
<=rrR T
$numrrU X
)rrX Y
&&ss 
!ss 
doubless 
.ss 
IsNaNss  
(ss  !
_badgeContainerss! 0
.ss0 1
ActualWidthss1 <
)ss< =
&&ss> @
!ssA B
doublessB H
.ssH I

IsInfinityssI S
(ssS T
_badgeContainerssT c
.ssc d
ActualWidthssd o
)sso p
&&tt 
!tt 
doublett 
.tt 
IsNaNtt  
(tt  !
_badgeContainertt! 0
.tt0 1
ActualHeighttt1 =
)tt= >
&&tt? A
!ttB C
doublettC I
.ttI J

IsInfinityttJ T
(ttT U
_badgeContainerttU d
.ttd e
ActualHeighttte q
)ttq r
)ttr s
{uu  
containerDesiredSizevv $
=vv% &
newvv' *
Sizevv+ /
(vv/ 0
_badgeContainervv0 ?
.vv? @
ActualWidthvv@ K
,vvK L
_badgeContainervvM \
.vv\ ]
ActualHeightvv] i
)vvi j
;vvj k
}ww 
varyy 
hyy 
=yy 
$numyy 
-yy  
containerDesiredSizeyy ,
.yy, -
Widthyy- 2
/yy3 4
$numyy5 6
;yy6 7
varzz 
vzz 
=zz 
$numzz 
-zz  
containerDesiredSizezz ,
.zz, -
Heightzz- 3
/zz4 5
$numzz6 7
;zz7 8
_badgeContainer{{ 
.{{ 
Margin{{ "
={{# $
new{{% (
	Thickness{{) 2
({{2 3
$num{{3 4
){{4 5
;{{5 6
_badgeContainer|| 
.|| 
Margin|| "
=||# $
new||% (
	Thickness||) 2
(||2 3
h||3 4
,||4 5
v||6 7
,||7 8
h||9 :
,||: ;
v||< =
)||= >
;||> ?
return~~ 
result~~ 
;~~ 
} 	
}
ÄÄ 
}ÅÅ Î0
áD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\..\paket-files\ControlzEx\ControlzEx\src\ControlzEx\PackIconBase.cs
	namespace 	

ControlzEx
 
{ 
public 

abstract 
class 
PackIconBase &
:' (
Control) 0
{ 
internal 
abstract 
void 

UpdateData )
() *
)* +
;+ ,
} 
public 

abstract 
class 
PackIconBase &
<& '
TKind' ,
>, -
:. /
PackIconBase0 <
{ 
private 
static 
Lazy 
< 
IDictionary '
<' (
TKind( -
,- .
string/ 5
>5 6
>6 7

_dataIndex8 B
;B C
	protected   
PackIconBase   
(   
Func   #
<  # $
IDictionary  $ /
<  / 0
TKind  0 5
,  5 6
string  7 =
>  = >
>  > ?
dataIndexFactory  @ P
)  P Q
{!! 	
if"" 
("" 
dataIndexFactory""  
==""! #
null""$ (
)""( )
throw""* /
new""0 3!
ArgumentNullException""4 I
(""I J
nameof""J P
(""P Q
dataIndexFactory""Q a
)""a b
)""b c
;""c d
if$$ 
($$ 

_dataIndex$$ 
==$$ 
null$$ "
)$$" #

_dataIndex%% 
=%% 
new%%  
Lazy%%! %
<%%% &
IDictionary%%& 1
<%%1 2
TKind%%2 7
,%%7 8
string%%9 ?
>%%? @
>%%@ A
(%%A B
dataIndexFactory%%B R
)%%R S
;%%S T
}&& 	
public(( 
static(( 
readonly(( 
DependencyProperty(( 1
KindProperty((2 >
=)) 
DependencyProperty))  
.))  !
Register))! )
())) *
nameof))* 0
())0 1
Kind))1 5
)))5 6
,))6 7
typeof))8 >
())> ?
TKind))? D
)))D E
,))E F
typeof))G M
())M N
PackIconBase))N Z
<))Z [
TKind))[ `
>))` a
)))a b
,))b c
new))d g
PropertyMetadata))h x
())x y
default	))y Ä
(
))Ä Å
TKind
))Å Ü
)
))Ü á
,
))á à)
KindPropertyChangedCallback
))â §
)
))§ •
)
))• ¶
;
))¶ ß
private++ 
static++ 
void++ '
KindPropertyChangedCallback++ 7
(++7 8
DependencyObject++8 H
dependencyObject++I Y
,++Y Z.
"DependencyPropertyChangedEventArgs++[ }/
"dependencyPropertyChangedEventArgs	++~ †
)
++† °
{,, 	
(-- 
(-- 
PackIconBase-- 
)-- 
dependencyObject-- +
)--+ ,
.--, -

UpdateData--- 7
(--7 8
)--8 9
;--9 :
}.. 	
public33 
TKind33 
Kind33 
{44 	
get55 
{55 
return55 
(55 
TKind55 
)55  
GetValue55  (
(55( )
KindProperty55) 5
)555 6
;556 7
}558 9
set66 
{66 
SetValue66 
(66 
KindProperty66 '
,66' (
value66) .
)66. /
;66/ 0
}661 2
}77 	
privateFF 
staticFF 
readonlyFF !
DependencyPropertyKeyFF  5
DataPropertyKeyFF6 E
=GG 
DependencyPropertyGG  
.GG  !
RegisterReadOnlyGG! 1
(GG1 2
nameofGG2 8
(GG8 9
DataGG9 =
)GG= >
,GG> ?
typeofGG@ F
(GGF G
stringGGG M
)GGM N
,GGN O
typeofGGP V
(GGV W
PackIconBaseGGW c
<GGc d
TKindGGd i
>GGi j
)GGj k
,GGk l
newGGm p
PropertyMetadata	GGq Å
(
GGÅ Ç
$str
GGÇ Ñ
)
GGÑ Ö
)
GGÖ Ü
;
GGÜ á
publicJJ 
staticJJ 
readonlyJJ 
DependencyPropertyJJ 1
DataPropertyJJ2 >
=JJ? @
DataPropertyKeyJJA P
.JJP Q
DependencyPropertyJJQ c
;JJc d
[OO 	
TypeConverterOO	 
(OO 
typeofOO 
(OO 
GeometryConverterOO /
)OO/ 0
)OO0 1
]OO1 2
publicPP 
stringPP 
DataPP 
{QQ 	
getRR 
{RR 
returnRR 
(RR 
stringRR  
)RR  !
GetValueRR! )
(RR) *
DataPropertyRR* 6
)RR6 7
;RR7 8
}RR9 :
privateSS 
setSS 
{SS 
SetValueSS "
(SS" #
DataPropertyKeySS# 2
,SS2 3
valueSS4 9
)SS9 :
;SS: ;
}SS< =
}TT 	
publicZZ 
overrideZZ 
voidZZ 
OnApplyTemplateZZ ,
(ZZ, -
)ZZ- .
{\\ 	
base]] 
.]] 
OnApplyTemplate]]  
(]]  !
)]]! "
;]]" #

UpdateData__ 
(__ 
)__ 
;__ 
}`` 	
internalbb 
overridebb 
voidbb 

UpdateDatabb )
(bb) *
)bb* +
{cc 	
stringdd 
datadd 
=dd 
nulldd 
;dd 
ifee 
(ee 

_dataIndexee 
.ee 
Valueee  
!=ee! #
nullee$ (
)ee( )

_dataIndexff 
.ff 
Valueff  
.ff  !
TryGetValueff! ,
(ff, -
Kindff- 1
,ff1 2
outff3 6
dataff7 ;
)ff; <
;ff< =
Datagg 
=gg 
datagg 
;gg 
}hh 	
}ii 
}jj ÚÄ
ÇD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\..\paket-files\ControlzEx\ControlzEx\src\ControlzEx\PopupEx.cs
	namespace 	

ControlzEx
 
{ 
public 

class 
PopupEx 
: 
Popup  
{ 
public 
static 
readonly 
DependencyProperty 1.
"CloseOnMouseLeftButtonDownProperty2 T
= 
DependencyProperty  
.  !
Register! )
() *
nameof* 0
(0 1&
CloseOnMouseLeftButtonDown1 K
)K L
,L M
typeof* 0
(0 1
bool1 5
)5 6
,6 7
typeof* 0
(0 1
PopupEx1 8
)8 9
,9 :
new* -
PropertyMetadata. >
(> ?
false? D
)D E
)E F
;F G
public 
bool &
CloseOnMouseLeftButtonDown .
{   	
get!! 
{!! 
return!! 
(!! 
bool!! 
)!! 
GetValue!! '
(!!' (.
"CloseOnMouseLeftButtonDownProperty!!( J
)!!J K
;!!K L
}!!M N
set"" 
{"" 
SetValue"" 
("" .
"CloseOnMouseLeftButtonDownProperty"" =
,""= >
value""? D
)""D E
;""E F
}""G H
}## 	
public%% 
PopupEx%% 
(%% 
)%% 
{&& 	
this'' 
.'' 
Loaded'' 
+='' 
this'' 
.''  
PopupEx_Loaded''  .
;''. /
this(( 
.(( 
Opened(( 
+=(( 
this(( 
.((  
PopupEx_Opened((  .
;((. /
})) 	
public.. 
void.. 
RefreshPosition.. #
(..# $
)..$ %
{// 	
var00 
offset00 
=00 
this00 
.00 
HorizontalOffset00 .
;00. /
SetCurrentValue22 
(22 $
HorizontalOffsetProperty22 4
,224 5
offset226 <
+22= >
$num22? @
)22@ A
;22A B
SetCurrentValue33 
(33 $
HorizontalOffsetProperty33 4
,334 5
offset336 <
)33< =
;33= >
}44 	
private66 
void66 
PopupEx_Loaded66 #
(66# $
object66$ *
sender66+ 1
,661 2
RoutedEventArgs663 B
e66C D
)66D E
{77 	
var88 
target88 
=88 
this88 
.88 
PlacementTarget88 -
as88. 0
FrameworkElement881 A
;88A B
if99 
(99 
target99 
==99 
null99 
)99 
{:: 
return;; 
;;; 
}<< 
this>> 
.>> 

hostWindow>> 
=>> 
Window>> $
.>>$ %
	GetWindow>>% .
(>>. /
target>>/ 5
)>>5 6
;>>6 7
if?? 
(?? 
this?? 
.?? 

hostWindow?? 
==??  "
null??# '
)??' (
{@@ 
returnAA 
;AA 
}BB 
thisDD 
.DD 

hostWindowDD 
.DD 
LocationChangedDD +
-=DD, .
thisDD/ 3
.DD3 4,
 hostWindow_SizeOrLocationChangedDD4 T
;DDT U
thisEE 
.EE 

hostWindowEE 
.EE 
LocationChangedEE +
+=EE, .
thisEE/ 3
.EE3 4,
 hostWindow_SizeOrLocationChangedEE4 T
;EET U
thisFF 
.FF 

hostWindowFF 
.FF 
SizeChangedFF '
-=FF( *
thisFF+ /
.FF/ 0,
 hostWindow_SizeOrLocationChangedFF0 P
;FFP Q
thisGG 
.GG 

hostWindowGG 
.GG 
SizeChangedGG '
+=GG( *
thisGG+ /
.GG/ 0,
 hostWindow_SizeOrLocationChangedGG0 P
;GGP Q
targetHH 
.HH 
SizeChangedHH 
-=HH !
thisHH" &
.HH& ',
 hostWindow_SizeOrLocationChangedHH' G
;HHG H
targetII 
.II 
SizeChangedII 
+=II !
thisII" &
.II& ',
 hostWindow_SizeOrLocationChangedII' G
;IIG H
thisJJ 
.JJ 

hostWindowJJ 
.JJ 
StateChangedJJ (
-=JJ) +
thisJJ, 0
.JJ0 1#
hostWindow_StateChangedJJ1 H
;JJH I
thisKK 
.KK 

hostWindowKK 
.KK 
StateChangedKK (
+=KK) +
thisKK, 0
.KK0 1#
hostWindow_StateChangedKK1 H
;KKH I
thisLL 
.LL 

hostWindowLL 
.LL 
	ActivatedLL %
-=LL& (
thisLL) -
.LL- . 
hostWindow_ActivatedLL. B
;LLB C
thisMM 
.MM 

hostWindowMM 
.MM 
	ActivatedMM %
+=MM& (
thisMM) -
.MM- . 
hostWindow_ActivatedMM. B
;MMB C
thisNN 
.NN 

hostWindowNN 
.NN 
DeactivatedNN '
-=NN( *
thisNN+ /
.NN/ 0"
hostWindow_DeactivatedNN0 F
;NNF G
thisOO 
.OO 

hostWindowOO 
.OO 
DeactivatedOO '
+=OO( *
thisOO+ /
.OO/ 0"
hostWindow_DeactivatedOO0 F
;OOF G
thisQQ 
.QQ 
UnloadedQQ 
-=QQ 
thisQQ !
.QQ! "
PopupEx_UnloadedQQ" 2
;QQ2 3
thisRR 
.RR 
UnloadedRR 
+=RR 
thisRR !
.RR! "
PopupEx_UnloadedRR" 2
;RR2 3
}SS 	
privateUU 
voidUU 
PopupEx_OpenedUU #
(UU# $
objectUU$ *
senderUU+ 1
,UU1 2
	EventArgsUU3 <
eUU= >
)UU> ?
{VV 	
thisWW 
.WW 
SetTopmostStateWW  
(WW  !
trueWW! %
)WW% &
;WW& '
}XX 	
privateZZ 
voidZZ  
hostWindow_ActivatedZZ )
(ZZ) *
objectZZ* 0
senderZZ1 7
,ZZ7 8
	EventArgsZZ9 B
eZZC D
)ZZD E
{[[ 	
this\\ 
.\\ 
SetTopmostState\\  
(\\  !
true\\! %
)\\% &
;\\& '
}]] 	
private__ 
void__ "
hostWindow_Deactivated__ +
(__+ ,
object__, 2
sender__3 9
,__9 :
	EventArgs__; D
e__E F
)__F G
{`` 	
thisaa 
.aa 
SetTopmostStateaa  
(aa  !
falseaa! &
)aa& '
;aa' (
}bb 	
privatedd 
voiddd 
PopupEx_Unloadeddd %
(dd% &
objectdd& ,
senderdd- 3
,dd3 4
RoutedEventArgsdd5 D
eddE F
)ddF G
{ee 	
varff 
targetff 
=ff 
thisff 
.ff 
PlacementTargetff -
asff. 0
FrameworkElementff1 A
;ffA B
ifgg 
(gg 
targetgg 
!=gg 
nullgg 
)gg 
{hh 
targetii 
.ii 
SizeChangedii "
-=ii# %
thisii& *
.ii* +,
 hostWindow_SizeOrLocationChangedii+ K
;iiK L
}jj 
ifkk 
(kk 
thiskk 
.kk 

hostWindowkk 
!=kk  "
nullkk# '
)kk' (
{ll 
thismm 
.mm 

hostWindowmm 
.mm  
LocationChangedmm  /
-=mm0 2
thismm3 7
.mm7 8,
 hostWindow_SizeOrLocationChangedmm8 X
;mmX Y
thisnn 
.nn 

hostWindownn 
.nn  
SizeChangednn  +
-=nn, .
thisnn/ 3
.nn3 4,
 hostWindow_SizeOrLocationChangednn4 T
;nnT U
thisoo 
.oo 

hostWindowoo 
.oo  
StateChangedoo  ,
-=oo- /
thisoo0 4
.oo4 5#
hostWindow_StateChangedoo5 L
;ooL M
thispp 
.pp 

hostWindowpp 
.pp  
	Activatedpp  )
-=pp* ,
thispp- 1
.pp1 2 
hostWindow_Activatedpp2 F
;ppF G
thisqq 
.qq 

hostWindowqq 
.qq  
Deactivatedqq  +
-=qq, .
thisqq/ 3
.qq3 4"
hostWindow_Deactivatedqq4 J
;qqJ K
}rr 
thisss 
.ss 
Unloadedss 
-=ss 
thisss !
.ss! "
PopupEx_Unloadedss" 2
;ss2 3
thistt 
.tt 
Openedtt 
-=tt 
thistt 
.tt  
PopupEx_Openedtt  .
;tt. /
thisuu 
.uu 

hostWindowuu 
=uu 
nulluu "
;uu" #
}vv 	
privatexx 
voidxx #
hostWindow_StateChangedxx ,
(xx, -
objectxx- 3
senderxx4 :
,xx: ;
	EventArgsxx< E
exxF G
)xxG H
{yy 	
ifzz 
(zz 
thiszz 
.zz 

hostWindowzz 
!=zz  "
nullzz# '
&&zz( *
thiszz+ /
.zz/ 0

hostWindowzz0 :
.zz: ;
WindowStatezz; F
!=zzG I
WindowStatezzJ U
.zzU V
	MinimizedzzV _
)zz_ `
{{{ 
var}} 
target}} 
=}} 
this}} !
.}}! "
PlacementTarget}}" 1
as}}2 4
FrameworkElement}}5 E
;}}E F
var~~ 
holder~~ 
=~~ 
target~~ #
!=~~$ &
null~~' +
?~~, -
target~~. 4
.~~4 5
DataContext~~5 @
as~~A C%
AdornedElementPlaceholder~~D ]
:~~^ _
null~~` d
;~~d e
if 
( 
holder 
!= 
null "
&&# %
holder& ,
., -
AdornedElement- ;
!=< >
null? C
)C D
{
ÄÄ 
this
ÅÅ 
.
ÅÅ 
PopupAnimation
ÅÅ '
=
ÅÅ( )
PopupAnimation
ÅÅ* 8
.
ÅÅ8 9
None
ÅÅ9 =
;
ÅÅ= >
this
ÇÇ 
.
ÇÇ 
IsOpen
ÇÇ 
=
ÇÇ  !
false
ÇÇ" '
;
ÇÇ' (
var
ÉÉ 
errorTemplate
ÉÉ %
=
ÉÉ& '
holder
ÉÉ( .
.
ÉÉ. /
AdornedElement
ÉÉ/ =
.
ÉÉ= >
GetValue
ÉÉ> F
(
ÉÉF G

Validation
ÉÉG Q
.
ÉÉQ R#
ErrorTemplateProperty
ÉÉR g
)
ÉÉg h
;
ÉÉh i
holder
ÑÑ 
.
ÑÑ 
AdornedElement
ÑÑ )
.
ÑÑ) *
SetValue
ÑÑ* 2
(
ÑÑ2 3

Validation
ÑÑ3 =
.
ÑÑ= >#
ErrorTemplateProperty
ÑÑ> S
,
ÑÑS T
null
ÑÑU Y
)
ÑÑY Z
;
ÑÑZ [
holder
ÖÖ 
.
ÖÖ 
AdornedElement
ÖÖ )
.
ÖÖ) *
SetValue
ÖÖ* 2
(
ÖÖ2 3

Validation
ÖÖ3 =
.
ÖÖ= >#
ErrorTemplateProperty
ÖÖ> S
,
ÖÖS T
errorTemplate
ÖÖU b
)
ÖÖb c
;
ÖÖc d
}
ÜÜ 
}
áá 
}
àà 	
private
ää 
void
ää .
 hostWindow_SizeOrLocationChanged
ää 5
(
ää5 6
object
ää6 <
sender
ää= C
,
ääC D
	EventArgs
ääE N
e
ääO P
)
ääP Q
{
ãã 	
RefreshPosition
åå 
(
åå 
)
åå 
;
åå 
}
çç 	
private
èè 
void
èè 
SetTopmostState
èè $
(
èè$ %
bool
èè% )
isTop
èè* /
)
èè/ 0
{
êê 	
if
íí 
(
íí 
this
íí 
.
íí 
appliedTopMost
íí #
.
íí# $
HasValue
íí$ ,
&&
íí- /
this
íí0 4
.
íí4 5
appliedTopMost
íí5 C
==
ííD F
isTop
ííG L
)
ííL M
{
ìì 
return
îî 
;
îî 
}
ïï 
if
óó 
(
óó 
this
óó 
.
óó 
Child
óó 
==
óó 
null
óó "
)
óó" #
{
òò 
return
ôô 
;
ôô 
}
öö 
var
úú 

hwndSource
úú 
=
úú 
(
úú  
PresentationSource
úú 0
.
úú0 1

FromVisual
úú1 ;
(
úú; <
this
úú< @
.
úú@ A
Child
úúA F
)
úúF G
)
úúG H
as
úúI K

HwndSource
úúL V
;
úúV W
if
ùù 
(
ùù 

hwndSource
ùù 
==
ùù 
null
ùù "
)
ùù" #
{
ûû 
return
üü 
;
üü 
}
†† 
var
°° 
hwnd
°° 
=
°° 

hwndSource
°° !
.
°°! "
Handle
°°" (
;
°°( )
RECT
££ 
rect
££ 
;
££ 
if
§§ 
(
§§ 
!
§§ 
GetWindowRect
§§ 
(
§§ 
hwnd
§§ #
,
§§# $
out
§§% (
rect
§§) -
)
§§- .
)
§§. /
{
•• 
return
¶¶ 
;
¶¶ 
}
ßß 
var
™™ 
left
™™ 
=
™™ 
rect
™™ 
.
™™ 
Left
™™  
;
™™  !
var
´´ 
top
´´ 
=
´´ 
rect
´´ 
.
´´ 
Top
´´ 
;
´´ 
var
¨¨ 
width
¨¨ 
=
¨¨ 
rect
¨¨ 
.
¨¨ 
Width
¨¨ "
;
¨¨" #
var
≠≠ 
height
≠≠ 
=
≠≠ 
rect
≠≠ 
.
≠≠ 
Height
≠≠ $
;
≠≠$ %
if
ÆÆ 
(
ÆÆ 
isTop
ÆÆ 
)
ÆÆ 
{
ØØ 
SetWindowPos
∞∞ 
(
∞∞ 
hwnd
∞∞ !
,
∞∞! "
HWND_TOPMOST
∞∞# /
,
∞∞/ 0
left
∞∞1 5
,
∞∞5 6
top
∞∞7 :
,
∞∞: ;
width
∞∞< A
,
∞∞A B
height
∞∞C I
,
∞∞I J
SWP
∞∞K N
.
∞∞N O
TOPMOST
∞∞O V
)
∞∞V W
;
∞∞W X
}
±± 
else
≤≤ 
{
≥≥ 
SetWindowPos
∏∏ 
(
∏∏ 
hwnd
∏∏ !
,
∏∏! "
HWND_BOTTOM
∏∏# .
,
∏∏. /
left
∏∏0 4
,
∏∏4 5
top
∏∏6 9
,
∏∏9 :
width
∏∏; @
,
∏∏@ A
height
∏∏B H
,
∏∏H I
SWP
∏∏J M
.
∏∏M N
TOPMOST
∏∏N U
)
∏∏U V
;
∏∏V W
SetWindowPos
ππ 
(
ππ 
hwnd
ππ !
,
ππ! "
HWND_TOP
ππ# +
,
ππ+ ,
left
ππ- 1
,
ππ1 2
top
ππ3 6
,
ππ6 7
width
ππ8 =
,
ππ= >
height
ππ? E
,
ππE F
SWP
ππG J
.
ππJ K
TOPMOST
ππK R
)
ππR S
;
ππS T
SetWindowPos
∫∫ 
(
∫∫ 
hwnd
∫∫ !
,
∫∫! "
HWND_NOTOPMOST
∫∫# 1
,
∫∫1 2
left
∫∫3 7
,
∫∫7 8
top
∫∫9 <
,
∫∫< =
width
∫∫> C
,
∫∫C D
height
∫∫E K
,
∫∫K L
SWP
∫∫M P
.
∫∫P Q
TOPMOST
∫∫Q X
)
∫∫X Y
;
∫∫Y Z
}
ªª 
this
ΩΩ 
.
ΩΩ 
appliedTopMost
ΩΩ 
=
ΩΩ  !
isTop
ΩΩ" '
;
ΩΩ' (
}
ææ 	
	protected
¿¿ 
override
¿¿ 
void
¿¿ *
OnPreviewMouseLeftButtonDown
¿¿  <
(
¿¿< ="
MouseButtonEventArgs
¿¿= Q
e
¿¿R S
)
¿¿S T
{
¡¡ 	
if
¬¬ 
(
¬¬ (
CloseOnMouseLeftButtonDown
¬¬ *
)
¬¬* +
{
√√ 
this
ƒƒ 
.
ƒƒ 
IsOpen
ƒƒ 
=
ƒƒ 
false
ƒƒ #
;
ƒƒ# $
}
≈≈ 
}
∆∆ 	
private
»» 
Window
»» 

hostWindow
»» !
;
»»! "
private
…… 
bool
…… 
?
…… 
appliedTopMost
…… $
;
……$ %
static
   
readonly
   
IntPtr
   
HWND_TOPMOST
   +
=
  , -
new
  . 1
IntPtr
  2 8
(
  8 9
-
  9 :
$num
  : ;
)
  ; <
;
  < =
static
ÀÀ 
readonly
ÀÀ 
IntPtr
ÀÀ 
HWND_NOTOPMOST
ÀÀ -
=
ÀÀ. /
new
ÀÀ0 3
IntPtr
ÀÀ4 :
(
ÀÀ: ;
-
ÀÀ; <
$num
ÀÀ< =
)
ÀÀ= >
;
ÀÀ> ?
static
ÃÃ 
readonly
ÃÃ 
IntPtr
ÃÃ 
HWND_TOP
ÃÃ '
=
ÃÃ( )
new
ÃÃ* -
IntPtr
ÃÃ. 4
(
ÃÃ4 5
$num
ÃÃ5 6
)
ÃÃ6 7
;
ÃÃ7 8
static
ÕÕ 
readonly
ÕÕ 
IntPtr
ÕÕ 
HWND_BOTTOM
ÕÕ *
=
ÕÕ+ ,
new
ÕÕ- 0
IntPtr
ÕÕ1 7
(
ÕÕ7 8
$num
ÕÕ8 9
)
ÕÕ9 :
;
ÕÕ: ;
[
““ 	
Flags
““	 
]
““ 
internal
”” 
enum
”” 
SWP
”” 
{
‘‘ 	
ASYNCWINDOWPOS
’’ 
=
’’ 
$num
’’ #
,
’’# $

DEFERERASE
÷÷ 
=
÷÷ 
$num
÷÷ 
,
÷÷  
	DRAWFRAME
◊◊ 
=
◊◊ 
$num
◊◊ 
,
◊◊ 
FRAMECHANGED
ÿÿ 
=
ÿÿ 
$num
ÿÿ !
,
ÿÿ! "

HIDEWINDOW
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
,
ŸŸ  

NOACTIVATE
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
,
⁄⁄  

NOCOPYBITS
€€ 
=
€€ 
$num
€€ 
,
€€  
NOMOVE
‹‹ 
=
‹‹ 
$num
‹‹ 
,
‹‹ 
NOOWNERZORDER
›› 
=
›› 
$num
›› "
,
››" #
NOREDRAW
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ 
,
ﬁﬁ 
NOREPOSITION
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ !
,
ﬂﬂ! "
NOSENDCHANGING
‡‡ 
=
‡‡ 
$num
‡‡ #
,
‡‡# $
NOSIZE
·· 
=
·· 
$num
·· 
,
·· 
NOZORDER
‚‚ 
=
‚‚ 
$num
‚‚ 
,
‚‚ 

SHOWWINDOW
„„ 
=
„„ 
$num
„„ 
,
„„  
TOPMOST
‰‰ 
=
‰‰ 
SWP
‰‰ 
.
‰‰ 

NOACTIVATE
‰‰ $
|
‰‰% &
SWP
‰‰' *
.
‰‰* +
NOOWNERZORDER
‰‰+ 8
|
‰‰9 :
SWP
‰‰; >
.
‰‰> ?
NOSIZE
‰‰? E
|
‰‰F G
SWP
‰‰H K
.
‰‰K L
NOMOVE
‰‰L R
|
‰‰S T
SWP
‰‰U X
.
‰‰X Y
NOREDRAW
‰‰Y a
|
‰‰b c
SWP
‰‰d g
.
‰‰g h
NOSENDCHANGING
‰‰h v
,
‰‰v w
}
ÂÂ 	
[
ÁÁ 	
SuppressMessage
ÁÁ	 
(
ÁÁ 
$str
ÁÁ 0
,
ÁÁ0 1
$str
ÁÁ2 S
)
ÁÁS T
]
ÁÁT U
internal
ËË 
static
ËË 
int
ËË 
LOWORD
ËË "
(
ËË" #
int
ËË# &
i
ËË' (
)
ËË( )
{
ÈÈ 	
return
ÍÍ 
(
ÍÍ 
short
ÍÍ 
)
ÍÍ 
(
ÍÍ 
i
ÍÍ 
&
ÍÍ 
$num
ÍÍ %
)
ÍÍ% &
;
ÍÍ& '
}
ÎÎ 	
[
ÌÌ 	
StructLayout
ÌÌ	 
(
ÌÌ 

LayoutKind
ÌÌ  
.
ÌÌ  !

Sequential
ÌÌ! +
)
ÌÌ+ ,
]
ÌÌ, -
internal
ÓÓ 
struct
ÓÓ 
POINT
ÓÓ 
{
ÔÔ 	
public
 
int
 
x
 
;
 
public
ÒÒ 
int
ÒÒ 
y
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
[
ÙÙ 	
StructLayout
ÙÙ	 
(
ÙÙ 

LayoutKind
ÙÙ  
.
ÙÙ  !

Sequential
ÙÙ! +
)
ÙÙ+ ,
]
ÙÙ, -
internal
ıı 
struct
ıı 
SIZE
ıı 
{
ˆˆ 	
public
˜˜ 
int
˜˜ 
cx
˜˜ 
;
˜˜ 
public
¯¯ 
int
¯¯ 
cy
¯¯ 
;
¯¯ 
}
˘˘ 	
[
˚˚ 	
StructLayout
˚˚	 
(
˚˚ 

LayoutKind
˚˚  
.
˚˚  !

Sequential
˚˚! +
)
˚˚+ ,
]
˚˚, -
internal
¸¸ 
struct
¸¸ 
RECT
¸¸ 
{
˝˝ 	
private
˛˛ 
int
˛˛ 
_left
˛˛ 
;
˛˛ 
private
ˇˇ 
int
ˇˇ 
_top
ˇˇ 
;
ˇˇ 
private
ÄÄ 
int
ÄÄ 
_right
ÄÄ 
;
ÄÄ 
private
ÅÅ 
int
ÅÅ 
_bottom
ÅÅ 
;
ÅÅ  
[
ÉÉ 
SuppressMessage
ÉÉ 
(
ÉÉ 
$str
ÉÉ 4
,
ÉÉ4 5
$str
ÉÉ6 W
)
ÉÉW X
]
ÉÉX Y
public
ÑÑ 
void
ÑÑ 
Offset
ÑÑ 
(
ÑÑ 
int
ÑÑ "
dx
ÑÑ# %
,
ÑÑ% &
int
ÑÑ' *
dy
ÑÑ+ -
)
ÑÑ- .
{
ÖÖ 
_left
ÜÜ 
+=
ÜÜ 
dx
ÜÜ 
;
ÜÜ 
_top
áá 
+=
áá 
dy
áá 
;
áá 
_right
àà 
+=
àà 
dx
àà 
;
àà 
_bottom
ââ 
+=
ââ 
dy
ââ 
;
ââ 
}
ää 
[
åå 
SuppressMessage
åå 
(
åå 
$str
åå 4
,
åå4 5
$str
åå6 W
)
ååW X
]
ååX Y
public
çç 
int
çç 
Left
çç 
{
éé 
get
èè 
{
èè 
return
èè 
_left
èè "
;
èè" #
}
èè$ %
set
êê 
{
êê 
_left
êê 
=
êê 
value
êê #
;
êê# $
}
êê% &
}
ëë 
[
ìì 
SuppressMessage
ìì 
(
ìì 
$str
ìì 4
,
ìì4 5
$str
ìì6 W
)
ììW X
]
ììX Y
public
îî 
int
îî 
Right
îî 
{
ïï 
get
ññ 
{
ññ 
return
ññ 
_right
ññ #
;
ññ# $
}
ññ% &
set
óó 
{
óó 
_right
óó 
=
óó 
value
óó $
;
óó$ %
}
óó& '
}
òò 
[
öö 
SuppressMessage
öö 
(
öö 
$str
öö 4
,
öö4 5
$str
öö6 W
)
ööW X
]
ööX Y
public
õõ 
int
õõ 
Top
õõ 
{
úú 
get
ùù 
{
ùù 
return
ùù 
_top
ùù !
;
ùù! "
}
ùù# $
set
ûû 
{
ûû 
_top
ûû 
=
ûû 
value
ûû "
;
ûû" #
}
ûû$ %
}
üü 
[
°° 
SuppressMessage
°° 
(
°° 
$str
°° 4
,
°°4 5
$str
°°6 W
)
°°W X
]
°°X Y
public
¢¢ 
int
¢¢ 
Bottom
¢¢ 
{
££ 
get
§§ 
{
§§ 
return
§§ 
_bottom
§§ $
;
§§$ %
}
§§& '
set
•• 
{
•• 
_bottom
•• 
=
•• 
value
••  %
;
••% &
}
••' (
}
¶¶ 
[
®® 
SuppressMessage
®® 
(
®® 
$str
®® 4
,
®®4 5
$str
®®6 W
)
®®W X
]
®®X Y
public
©© 
int
©© 
Width
©© 
{
™™ 
get
´´ 
{
´´ 
return
´´ 
_right
´´ #
-
´´$ %
_left
´´& +
;
´´+ ,
}
´´- .
}
¨¨ 
[
ÆÆ 
SuppressMessage
ÆÆ 
(
ÆÆ 
$str
ÆÆ 4
,
ÆÆ4 5
$str
ÆÆ6 W
)
ÆÆW X
]
ÆÆX Y
public
ØØ 
int
ØØ 
Height
ØØ 
{
∞∞ 
get
±± 
{
±± 
return
±± 
_bottom
±± $
-
±±% &
_top
±±' +
;
±±+ ,
}
±±- .
}
≤≤ 
[
¥¥ 
SuppressMessage
¥¥ 
(
¥¥ 
$str
¥¥ 4
,
¥¥4 5
$str
¥¥6 W
)
¥¥W X
]
¥¥X Y
public
µµ 
POINT
µµ 
Position
µµ !
{
∂∂ 
get
∑∑ 
{
∑∑ 
return
∑∑ 
new
∑∑  
POINT
∑∑! &
{
∑∑' (
x
∑∑) *
=
∑∑+ ,
_left
∑∑- 2
,
∑∑2 3
y
∑∑4 5
=
∑∑6 7
_top
∑∑8 <
}
∑∑= >
;
∑∑> ?
}
∑∑@ A
}
∏∏ 
[
∫∫ 
SuppressMessage
∫∫ 
(
∫∫ 
$str
∫∫ 4
,
∫∫4 5
$str
∫∫6 W
)
∫∫W X
]
∫∫X Y
public
ªª 
SIZE
ªª 
Size
ªª 
{
ºº 
get
ΩΩ 
{
ΩΩ 
return
ΩΩ 
new
ΩΩ  
SIZE
ΩΩ! %
{
ΩΩ& '
cx
ΩΩ( *
=
ΩΩ+ ,
Width
ΩΩ- 2
,
ΩΩ2 3
cy
ΩΩ4 6
=
ΩΩ7 8
Height
ΩΩ9 ?
}
ΩΩ@ A
;
ΩΩA B
}
ΩΩC D
}
ææ 
public
¿¿ 
static
¿¿ 
RECT
¿¿ 
Union
¿¿ $
(
¿¿$ %
RECT
¿¿% )
rect1
¿¿* /
,
¿¿/ 0
RECT
¿¿1 5
rect2
¿¿6 ;
)
¿¿; <
{
¡¡ 
return
¬¬ 
new
¬¬ 
RECT
¬¬ 
{
¬¬  !
Left
√√ 
=
√√ 
Math
√√ 
.
√√  
Min
√√  #
(
√√# $
rect1
√√$ )
.
√√) *
Left
√√* .
,
√√. /
rect2
√√0 5
.
√√5 6
Left
√√6 :
)
√√: ;
,
√√; <
Top
ƒƒ 
=
ƒƒ 
Math
ƒƒ 
.
ƒƒ 
Min
ƒƒ "
(
ƒƒ" #
rect1
ƒƒ# (
.
ƒƒ( )
Top
ƒƒ) ,
,
ƒƒ, -
rect2
ƒƒ. 3
.
ƒƒ3 4
Top
ƒƒ4 7
)
ƒƒ7 8
,
ƒƒ8 9
Right
≈≈ 
=
≈≈ 
Math
≈≈  
.
≈≈  !
Max
≈≈! $
(
≈≈$ %
rect1
≈≈% *
.
≈≈* +
Right
≈≈+ 0
,
≈≈0 1
rect2
≈≈2 7
.
≈≈7 8
Right
≈≈8 =
)
≈≈= >
,
≈≈> ?
Bottom
∆∆ 
=
∆∆ 
Math
∆∆ !
.
∆∆! "
Max
∆∆" %
(
∆∆% &
rect1
∆∆& +
.
∆∆+ ,
Bottom
∆∆, 2
,
∆∆2 3
rect2
∆∆4 9
.
∆∆9 :
Bottom
∆∆: @
)
∆∆@ A
,
∆∆A B
}
«« 
;
«« 
}
»» 
public
   
override
   
bool
    
Equals
  ! '
(
  ' (
object
  ( .
obj
  / 2
)
  2 3
{
ÀÀ 
try
ÃÃ 
{
ÕÕ 
var
ŒŒ 
rc
ŒŒ 
=
ŒŒ 
(
ŒŒ 
RECT
ŒŒ "
)
ŒŒ" #
obj
ŒŒ# &
;
ŒŒ& '
return
œœ 
rc
œœ 
.
œœ 
_bottom
œœ %
==
œœ& (
_bottom
œœ) 0
&&
–– 
rc
–– 
.
–– 
_left
–– #
==
––$ &
_left
––' ,
&&
—— 
rc
—— 
.
—— 
_right
—— $
==
——% '
_right
——( .
&&
““ 
rc
““ 
.
““ 
_top
““ "
==
““# %
_top
““& *
;
““* +
}
”” 
catch
‘‘ 
(
‘‘ "
InvalidCastException
‘‘ +
)
‘‘+ ,
{
’’ 
return
÷÷ 
false
÷÷  
;
÷÷  !
}
◊◊ 
}
ÿÿ 
public
⁄⁄ 
override
⁄⁄ 
int
⁄⁄ 
GetHashCode
⁄⁄  +
(
⁄⁄+ ,
)
⁄⁄, -
{
€€ 
return
‹‹ 
(
‹‹ 
_left
‹‹ 
<<
‹‹  
$num
‹‹! #
|
‹‹$ %
LOWORD
‹‹& ,
(
‹‹, -
_right
‹‹- 3
)
‹‹3 4
)
‹‹4 5
^
‹‹6 7
(
‹‹8 9
_top
‹‹9 =
<<
‹‹> @
$num
‹‹A C
|
‹‹D E
LOWORD
‹‹F L
(
‹‹L M
_bottom
‹‹M T
)
‹‹T U
)
‹‹U V
;
‹‹V W
}
›› 
}
ﬁﬁ 	
[
‡‡ 	
SecurityCritical
‡‡	 
]
‡‡ 
[
·· 	
SuppressMessage
··	 
(
·· 
$str
·· 0
,
··0 1
$str
··2 S
)
··S T
]
··T U
[
‚‚ 	
	DllImport
‚‚	 
(
‚‚ 
$str
‚‚ 
,
‚‚  

EntryPoint
‚‚! +
=
‚‚, -
$str
‚‚. =
,
‚‚= >
SetLastError
‚‚? K
=
‚‚L M
true
‚‚N R
)
‚‚R S
]
‚‚S T
[
„„ 	
return
„„	 
:
„„ 
	MarshalAs
„„ 
(
„„ 
UnmanagedType
„„ (
.
„„( )
Bool
„„) -
)
„„- .
]
„„. /
private
‰‰ 
static
‰‰ 
extern
‰‰ 
bool
‰‰ "
GetWindowRect
‰‰# 0
(
‰‰0 1
IntPtr
‰‰1 7
hWnd
‰‰8 <
,
‰‰< =
out
‰‰> A
RECT
‰‰B F
lpRect
‰‰G M
)
‰‰M N
;
‰‰N O
[
ÊÊ 	
SecurityCritical
ÊÊ	 
]
ÊÊ 
[
ÁÁ 	
SuppressMessage
ÁÁ	 
(
ÁÁ 
$str
ÁÁ 0
,
ÁÁ0 1
$str
ÁÁ2 S
)
ÁÁS T
]
ÁÁT U
[
ËË 	
	DllImport
ËË	 
(
ËË 
$str
ËË 
,
ËË  

EntryPoint
ËË! +
=
ËË, -
$str
ËË. <
,
ËË< =
SetLastError
ËË> J
=
ËËK L
true
ËËM Q
)
ËËQ R
]
ËËR S
[
ÈÈ 	
return
ÈÈ	 
:
ÈÈ 
	MarshalAs
ÈÈ 
(
ÈÈ 
UnmanagedType
ÈÈ (
.
ÈÈ( )
Bool
ÈÈ) -
)
ÈÈ- .
]
ÈÈ. /
private
ÍÍ 
static
ÍÍ 
extern
ÍÍ 
bool
ÍÍ "
_SetWindowPos
ÍÍ# 0
(
ÍÍ0 1
IntPtr
ÍÍ1 7
hWnd
ÍÍ8 <
,
ÍÍ< =
IntPtr
ÍÍ> D
hWndInsertAfter
ÍÍE T
,
ÍÍT U
int
ÍÍV Y
x
ÍÍZ [
,
ÍÍ[ \
int
ÍÍ] `
y
ÍÍa b
,
ÍÍb c
int
ÍÍd g
cx
ÍÍh j
,
ÍÍj k
int
ÍÍl o
cy
ÍÍp r
,
ÍÍr s
SWP
ÍÍt w
uFlags
ÍÍx ~
)
ÍÍ~ 
;ÍÍ Ä
[
ÏÏ 	
SecurityCritical
ÏÏ	 
]
ÏÏ 
[
ÌÌ 	
SuppressMessage
ÌÌ	 
(
ÌÌ 
$str
ÌÌ 0
,
ÌÌ0 1
$str
ÌÌ2 S
)
ÌÌS T
]
ÌÌT U
private
ÓÓ 
static
ÓÓ 
bool
ÓÓ 
SetWindowPos
ÓÓ (
(
ÓÓ( )
IntPtr
ÓÓ) /
hWnd
ÓÓ0 4
,
ÓÓ4 5
IntPtr
ÓÓ6 <
hWndInsertAfter
ÓÓ= L
,
ÓÓL M
int
ÓÓN Q
x
ÓÓR S
,
ÓÓS T
int
ÓÓU X
y
ÓÓY Z
,
ÓÓZ [
int
ÓÓ\ _
cx
ÓÓ` b
,
ÓÓb c
int
ÓÓd g
cy
ÓÓh j
,
ÓÓj k
SWP
ÓÓl o
uFlags
ÓÓp v
)
ÓÓv w
{
ÔÔ 	
if
 
(
 
!
 
_SetWindowPos
 
(
 
hWnd
 #
,
# $
hWndInsertAfter
% 4
,
4 5
x
6 7
,
7 8
y
9 :
,
: ;
cx
< >
,
> ?
cy
@ B
,
B C
uFlags
D J
)
J K
)
K L
{
ÒÒ 
return
ÛÛ 
false
ÛÛ 
;
ÛÛ 
}
ÙÙ 
return
ˆˆ 
true
ˆˆ 
;
ˆˆ 
}
˜˜ 	
}
¯¯ 
}˘˘ …,
MD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Badged.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[		 
TemplatePart		 
(		 
Name		 
=		 "
BadgeContainerPartName		 /
,		/ 0
Type		1 5
=		6 7
typeof		8 >
(		> ?
	UIElement		? H
)		H I
)		I J
]		J K
public

 

class

 
Badged

 
:

 
BadgedEx

 "
{ 
public 
static 
readonly 
DependencyProperty 1*
BadgeChangedStoryboardProperty2 P
=Q R
DependencyPropertyS e
.e f
Registerf n
(n o
$str $
,$ %
typeof& ,
(, -

Storyboard- 7
)7 8
,8 9
typeof: @
(@ A
BadgedA G
)G H
,H I
newJ M
PropertyMetadataN ^
(^ _
default_ f
(f g

Storyboardg q
)q r
)r s
)s t
;t u
public 

Storyboard "
BadgeChangedStoryboard 0
{ 	
get 
{ 
return 
( 

Storyboard $
)$ %
this% )
.) *
GetValue* 2
(2 3*
BadgeChangedStoryboardProperty3 Q
)Q R
;R S
}T U
set 
{ 
this 
. 
SetValue 
(  *
BadgeChangedStoryboardProperty  >
,> ?
value@ E
)E F
;F G
}H I
} 	
static 
Badged 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
Badged< B
)B C
,C D
newE H%
FrameworkPropertyMetadataI b
(b c
typeofc i
(i j
Badgedj p
)p q
)q r
)r s
;s t
} 	
public 
static 
readonly 
DependencyProperty 1&
BadgeColorZoneModeProperty2 L
=M N
DependencyPropertyO a
.a b
Registerb j
(j k
$str  
,  !
typeof" (
(( )
ColorZoneMode) 6
)6 7
,7 8
typeof9 ?
(? @
Badged@ F
)F G
,G H
newI L
PropertyMetadataM ]
(] ^
default^ e
(e f
ColorZoneModef s
)s t
)t u
)u v
;v w
public 
ColorZoneMode 
BadgeColorZoneMode /
{ 	
get 
{ 
return 
( 
ColorZoneMode '
)' (
GetValue) 1
(1 2&
BadgeColorZoneModeProperty2 L
)L M
;M N
}O P
set   
{   
SetValue   
(   &
BadgeColorZoneModeProperty   5
,  5 6
value  7 <
)  < =
;  = >
}  ? @
}!! 	
public## 
override## 
void## 
OnApplyTemplate## ,
(##, -
)##- .
{$$ 	
this%% 
.%% 
BadgeChanged%% 
-=%%  
this%%! %
.%%% &
OnBadgeChanged%%& 4
;%%4 5
base'' 
.'' 
OnApplyTemplate''  
(''  !
)''! "
;''" #
this)) 
.)) 
BadgeChanged)) 
+=))  
this))! %
.))% &
OnBadgeChanged))& 4
;))4 5
}** 	
private,, 
void,, 
OnBadgeChanged,, #
(,,# $
object,,$ *
sender,,+ 1
,,,1 2*
RoutedPropertyChangedEventArgs,,3 Q
<,,Q R
object,,R X
>,,X Y
e,,Z [
),,[ \
{-- 	
var.. 
sb.. 
=.. 
this.. 
... "
BadgeChangedStoryboard.. 0
;..0 1
if// 
(// 
this// 
.// 
_badgeContainer// $
!=//% '
null//( ,
&&//- /
sb//0 2
!=//3 5
null//6 :
)//: ;
{00 
try11 
{22 
this33 
.33 
_badgeContainer33 (
.33( )
BeginStoryboard33) 8
(338 9
sb339 ;
)33; <
;33< =
}44 
catch55 
(55 
	Exception55  
exc55! $
)55$ %
{66 
Trace77 
.77 
	WriteLine77 #
(77# $
$str77$ d
)77d e
;77e f
Trace88 
.88 
	WriteLine88 #
(88# $
$"88$ &
{88& '
exc88' *
.88* +
Message88+ 2
}882 3
 (883 5
{885 6
exc886 9
.889 :
GetType88: A
(88A B
)88B C
.88C D
FullName88D L
}88L M
)88M N
"88N O
)88O P
;88P Q
Trace99 
.99 
	WriteLine99 #
(99# $
exc99$ '
.99' (

StackTrace99( 2
)992 3
;993 4
throw;; 
;;; 
}<< 
}== 
}>> 	
}?? 
}@@ ©S
[D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ButtonProgressAssist.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
{ 
public 

static 
class  
ButtonProgressAssist ,
{ 
public 
static 
readonly 
DependencyProperty 1
MinimumProperty2 A
=B C
DependencyPropertyD V
.V W
RegisterAttachedW g
(g h
$str 
, 
typeof 
( 
double $
)$ %
,% &
typeof' -
(- . 
ButtonProgressAssist. B
)B C
,C D
newE H%
FrameworkPropertyMetadataI b
(b c
defaultc j
(j k
doublek q
)q r
)r s
)s t
;t u
public 
static 
void 

SetMinimum %
(% &
DependencyObject& 6
element7 >
,> ?
double@ F
valueG L
)L M
{ 	
element 
. 
SetValue 
( 
MinimumProperty ,
,, -
value. 3
)3 4
;4 5
} 	
public 
static 
double 

GetMinimum '
(' (
DependencyObject( 8
element9 @
)@ A
{ 	
return 
( 
double 
) 
element "
." #
GetValue# +
(+ ,
MinimumProperty, ;
); <
;< =
} 	
public 
static 
readonly 
DependencyProperty 1
MaximumProperty2 A
=B C
DependencyPropertyD V
.V W
RegisterAttachedW g
(g h
$str 
, 
typeof 
( 
double $
)$ %
,% &
typeof' -
(- . 
ButtonProgressAssist. B
)B C
,C D
newE H%
FrameworkPropertyMetadataI b
(b c
$numc h
)h i
)i j
;j k
public 
static 
void 

SetMaximum %
(% &
DependencyObject& 6
element7 >
,> ?
double@ F
valueG L
)L M
{ 	
element   
.   
SetValue   
(   
MaximumProperty   ,
,  , -
value  . 3
)  3 4
;  4 5
}!! 	
public## 
static## 
double## 

GetMaximum## '
(##' (
DependencyObject##( 8
element##9 @
)##@ A
{$$ 	
return%% 
(%% 
double%% 
)%% 
element%% "
.%%" #
GetValue%%# +
(%%+ ,
MaximumProperty%%, ;
)%%; <
;%%< =
}&& 	
public(( 
static(( 
readonly(( 
DependencyProperty(( 1
ValueProperty((2 ?
=((@ A
DependencyProperty((B T
.((T U
RegisterAttached((U e
(((e f
$str)) 
,)) 
typeof)) 
()) 
double)) "
)))" #
,))# $
typeof))% +
())+ , 
ButtonProgressAssist)), @
)))@ A
,))A B
new))C F%
FrameworkPropertyMetadata))G `
())` a
default))a h
())h i
double))i o
)))o p
)))p q
)))q r
;))r s
public++ 
static++ 
void++ 
SetValue++ #
(++# $
DependencyObject++$ 4
element++5 <
,++< =
double++> D
value++E J
)++J K
{,, 	
element-- 
.-- 
SetValue-- 
(-- 
ValueProperty-- *
,--* +
value--, 1
)--1 2
;--2 3
}.. 	
public00 
static00 
double00 
GetValue00 %
(00% &
DependencyObject00& 6
element007 >
)00> ?
{11 	
return22 
(22 
double22 
)22 
element22 "
.22" #
GetValue22# +
(22+ ,
ValueProperty22, 9
)229 :
;22: ;
}33 	
public55 
static55 
readonly55 
DependencyProperty55 1#
IsIndeterminateProperty552 I
=55J K
DependencyProperty55L ^
.55^ _
RegisterAttached55_ o
(55o p
$str66 
,66 
typeof66 %
(66% &
bool66& *
)66* +
,66+ ,
typeof66- 3
(663 4 
ButtonProgressAssist664 H
)66H I
,66I J
new66K N%
FrameworkPropertyMetadata66O h
(66h i
default66i p
(66p q
bool66q u
)66u v
)66v w
)66w x
;66x y
public88 
static88 
void88 
SetIsIndeterminate88 -
(88- .
DependencyObject88. >
element88? F
,88F G
bool88H L
isIndeterminate88M \
)88\ ]
{99 	
element:: 
.:: 
SetValue:: 
(:: #
IsIndeterminateProperty:: 4
,::4 5
isIndeterminate::6 E
)::E F
;::F G
};; 	
public== 
static== 
bool== 
GetIsIndeterminate== -
(==- .
DependencyObject==. >
element==? F
)==F G
{>> 	
return?? 
(?? 
bool?? 
)?? 
element??  
.??  !
GetValue??! )
(??) *'
IndicatorForegroundProperty??* E
)??E F
;??F G
}@@ 	
publicBB 
staticBB 
readonlyBB 
DependencyPropertyBB 1'
IndicatorForegroundPropertyBB2 M
=BBN O
DependencyPropertyBBP b
.BBb c
RegisterAttachedBBc s
(BBs t
$strCC !
,CC! "
typeofCC# )
(CC) *
BrushCC* /
)CC/ 0
,CC0 1
typeofCC2 8
(CC8 9 
ButtonProgressAssistCC9 M
)CCM N
,CCN O
newCCP S%
FrameworkPropertyMetadataCCT m
(CCm n
defaultCCn u
(CCu v
BrushCCv {
)CC{ |
)CC| }
)CC} ~
;CC~ 
publicEE 
staticEE 
voidEE "
SetIndicatorForegroundEE 1
(EE1 2
DependencyObjectEE2 B
elementEEC J
,EEJ K
BrushEEL Q
indicatorForegroundEER e
)EEe f
{FF 	
elementGG 
.GG 
SetValueGG 
(GG '
IndicatorForegroundPropertyGG 8
,GG8 9
indicatorForegroundGG: M
)GGM N
;GGN O
}HH 	
publicJJ 
staticJJ 
BrushJJ "
GetIndicatorForegroundJJ 2
(JJ2 3
DependencyObjectJJ3 C
elementJJD K
)JJK L
{KK 	
returnLL 
(LL 
BrushLL 
)LL 
elementLL !
.LL! "
GetValueLL" *
(LL* +'
IndicatorForegroundPropertyLL+ F
)LLF G
;LLG H
}MM 	
publicOO 
staticOO 
readonlyOO 
DependencyPropertyOO 1'
IndicatorBackgroundPropertyOO2 M
=OON O
DependencyPropertyOOP b
.OOb c
RegisterAttachedOOc s
(OOs t
$strPP !
,PP! "
typeofPP# )
(PP) *
BrushPP* /
)PP/ 0
,PP0 1
typeofPP2 8
(PP8 9 
ButtonProgressAssistPP9 M
)PPM N
,PPN O
newPPP S%
FrameworkPropertyMetadataPPT m
(PPm n
defaultPPn u
(PPu v
BrushPPv {
)PP{ |
)PP| }
)PP} ~
;PP~ 
publicRR 
staticRR 
voidRR "
SetIndicatorBackgroundRR 1
(RR1 2
DependencyObjectRR2 B
elementRRC J
,RRJ K
BrushRRL Q
indicatorBackgroundRRR e
)RRe f
{SS 	
elementTT 
.TT 
SetValueTT 
(TT '
IndicatorBackgroundPropertyTT 8
,TT8 9
indicatorBackgroundTT: M
)TTM N
;TTN O
}UU 	
publicWW 
staticWW 
BrushWW "
GetIndicatorBackgroundWW 2
(WW2 3
DependencyObjectWW3 C
elementWWD K
)WWK L
{XX 	
returnYY 
(YY 
BrushYY 
)YY 
elementYY !
.YY! "
GetValueYY" *
(YY* +'
IndicatorForegroundPropertyYY+ F
)YYF G
;YYG H
}ZZ 	
public\\ 
static\\ 
readonly\\ 
DependencyProperty\\ 1&
IsIndicatorVisibleProperty\\2 L
=\\M N
DependencyProperty\\O a
.\\a b
RegisterAttached\\b r
(\\r s
$str]]  
,]]  !
typeof]]" (
(]]( )
bool]]) -
)]]- .
,]]. /
typeof]]0 6
(]]6 7 
ButtonProgressAssist]]7 K
)]]K L
,]]L M
new]]N Q%
FrameworkPropertyMetadata]]R k
(]]k l
default]]l s
(]]s t
bool]]t x
)]]x y
)]]y z
)]]z {
;]]{ |
public__ 
static__ 
void__ !
SetIsIndicatorVisible__ 0
(__0 1
DependencyObject__1 A
element__B I
,__I J
bool__K O
isIndicatorVisible__P b
)__b c
{`` 	
elementaa 
.aa 
SetValueaa 
(aa &
IsIndicatorVisiblePropertyaa 7
,aa7 8
isIndicatorVisibleaa9 K
)aaK L
;aaL M
}bb 	
publicdd 
staticdd 
booldd !
GetIsIndicatorVisibledd 0
(dd0 1
DependencyObjectdd1 A
elementddB I
)ddI J
{ee 	
returnff 
(ff 
boolff 
)ff 
elementff  
.ff  !
GetValueff! )
(ff) *&
IsIndicatorVisiblePropertyff* D
)ffD E
;ffE F
}gg 	
}hh 
}ii ≠/
KD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Card.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
{ 
[ 
TemplatePart 
( 
Name 
= 
ClipBorderPartName +
,+ ,
Type- 1
=2 3
typeof4 :
(: ;
Border; A
)A B
)B C
]C D
public 

class 
Card 
: 
ContentControl &
{ 
public 
const 
string 
ClipBorderPartName .
=/ 0
$str1 B
;B C
private 
Border 
_clipBorder "
;" #
static 
Card 
( 
) 
{ #
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
Card< @
)@ A
,A B
newC F%
FrameworkPropertyMetadataG `
(` a
typeofa g
(g h
Cardh l
)l m
)m n
)n o
;o p
} 
public 
override 
void 
OnApplyTemplate ,
(, -
)- .
{ 	
base 
. 
OnApplyTemplate  
(  !
)! "
;" #
_clipBorder 
= 
Template "
." #
FindName# +
(+ ,
ClipBorderPartName, >
,> ?
this@ D
)D E
asF H
BorderI O
;O P
}   	
	protected"" 
override"" 
void"" 
OnRenderSizeChanged""  3
(""3 4
SizeChangedInfo""4 C
sizeInfo""D L
)""L M
{## 	
base$$ 
.$$ 
OnRenderSizeChanged$$ $
($$$ %
sizeInfo$$% -
)$$- .
;$$. /
if&& 
(&& 
_clipBorder&& 
==&& 
null&& #
)&&# $
return&&% +
;&&+ ,
var(( 
farPoint(( 
=(( 
new(( 
Point(( $
((($ %
Math)) 
.)) 
Max)) 
()) 
$num)) 
,)) 
_clipBorder)) '
.))' (
ActualWidth))( 3
)))3 4
,))4 5
Math** 
.** 
Max** 
(** 
$num** 
,** 
_clipBorder** '
.**' (
ActualHeight**( 4
)**4 5
)**5 6
;**6 7
var,, 
clipRect,, 
=,, 
new,, 
Rect,, #
(,,# $
new-- 
Point-- 
(-- 
)-- 
,-- 
new.. 
Point.. 
(.. 
farPoint.. "
..." #
X..# $
,..$ %
farPoint..& .
.... /
Y../ 0
)..0 1
)..1 2
;..2 3
ContentClip00 
=00 
new00 
RectangleGeometry00 /
(00/ 0
clipRect000 8
,008 9
UniformCornerRadius00: M
,00M N
UniformCornerRadius00O b
)00b c
;00c d
}11 	
public33 
static33 
readonly33 
DependencyProperty33 1'
UniformCornerRadiusProperty332 M
=33N O
DependencyProperty33P b
.33b c
Register33c k
(33k l
nameof44 
(44 
UniformCornerRadius44 &
)44& '
,44' (
typeof44) /
(440 1
double441 7
)447 8
,448 9
typeof44: @
(44A B
Card44B F
)44F G
,44G H
new44I L%
FrameworkPropertyMetadata44M f
(44f g
$num44g j
,44j k-
 FrameworkPropertyMetadataOptions	44l å
.
44å ç
AffectsMeasure
44ç õ
)
44õ ú
)
44ú ù
;
44ù û
public66 
double66 
UniformCornerRadius66 )
{77 	
get88 
{88 
return88 
(88 
double88  
)88  !
GetValue88" *
(88* +'
UniformCornerRadiusProperty88+ F
)88F G
;88G H
}88I J
set99 
{99 
SetValue99 
(99 '
UniformCornerRadiusProperty99 6
,996 7
value998 =
)99= >
;99> ?
}99@ A
}:: 	
private<< 
static<< 
readonly<< !
DependencyPropertyKey<<  5"
ContentClipPropertyKey<<6 L
=<<M N
DependencyProperty== 
.== 
RegisterReadOnly== /
(==/ 0
$str>> 
,>> 
typeof>> %
(>>& '
Geometry>>' /
)>>/ 0
,>>0 1
typeof>>2 8
(>>9 :
Card>>: >
)>>> ?
,>>? @
new?? 
PropertyMetadata?? $
(??$ %
default??% ,
(??, -
Geometry??- 5
)??5 6
)??6 7
)??7 8
;??8 9
publicAA 
staticAA 
readonlyAA 
DependencyPropertyAA 1
ContentClipPropertyAA2 E
=AAF G"
ContentClipPropertyKeyBB "
.BB" #
DependencyPropertyBB# 5
;BB5 6
publicDD 
GeometryDD 
ContentClipDD #
{EE 	
getFF 
{FF 
returnFF 
(FF 
GeometryFF "
)FF" #
GetValueFF$ ,
(FF, -
ContentClipPropertyFF- @
)FF@ A
;FFA B
}FFC D
privateGG 
setGG 
{GG 
SetValueGG "
(GG" #"
ContentClipPropertyKeyGG# 9
,GG9 :
valueGG; @
)GG@ A
;GGA B
}GGC D
}HH 	
}II 
}JJ ¨a
KD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Chip.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[ 
TemplatePart 
( 
Name 
=  
DeleteButtonPartName -
,- .
Type/ 3
=4 5
typeof6 <
(< =
Button= C
)C D
)D E
]E F
public 

class 
Chip 
: 

ButtonBase "
{ 
private 

ButtonBase 
_deleteButton (
;( )
public 
const 
string  
DeleteButtonPartName 0
=1 2
$str3 F
;F G
static 
Chip 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
Chip< @
)@ A
,A B
newC F%
FrameworkPropertyMetadataG `
(` a
typeofa g
(g h
Chiph l
)l m
)m n
)n o
;o p
} 	
public 
static 
readonly 
DependencyProperty 1
IconProperty2 >
=? @
DependencyPropertyA S
.S T
RegisterT \
(\ ]
$str 
, 
typeof 
( 
object "
)" #
,# $
typeof% +
(, -
Chip- 1
)1 2
,2 3
new4 7
PropertyMetadata8 H
(H I
defaultI P
(P Q
objectQ W
)W X
)X Y
)Y Z
;Z [
public 
object 
Icon 
{ 	
get   
{   
return   
(   
object    
)    !
GetValue  " *
(  * +
IconProperty  + 7
)  7 8
;  8 9
}  : ;
set!! 
{!! 
SetValue!! 
(!! 
IconProperty!! '
,!!' (
value!!) .
)!!. /
;!!/ 0
}!!1 2
}"" 	
public$$ 
static$$ 
readonly$$ 
DependencyProperty$$ 1"
IconBackgroundProperty$$2 H
=$$I J
DependencyProperty$$K ]
.$$] ^
Register$$^ f
($$f g
$str%% 
,%% 
typeof%% $
(%%% &
Brush%%& +
)%%+ ,
,%%, -
typeof%%. 4
(%%5 6
Chip%%6 :
)%%: ;
,%%; <
new%%= @
PropertyMetadata%%A Q
(%%Q R
default%%R Y
(%%Y Z
Brush%%Z _
)%%_ `
)%%` a
)%%a b
;%%b c
public'' 
Brush'' 
IconBackground'' #
{(( 	
get)) 
{)) 
return)) 
()) 
Brush)) 
)))  
GetValue))! )
())) *"
IconBackgroundProperty))* @
)))@ A
;))A B
}))C D
set** 
{** 
SetValue** 
(** "
IconBackgroundProperty** 1
,**1 2
value**3 8
)**8 9
;**9 :
}**; <
}++ 	
public-- 
static-- 
readonly-- 
DependencyProperty-- 1"
IconForegroundProperty--2 H
=--I J
DependencyProperty--K ]
.--] ^
Register--^ f
(--f g
$str.. 
,.. 
typeof.. $
(..% &
Brush..& +
)..+ ,
,.., -
typeof... 4
(..5 6
Chip..6 :
)..: ;
,..; <
new..= @
PropertyMetadata..A Q
(..Q R
default..R Y
(..Y Z
Brush..Z _
).._ `
)..` a
)..a b
;..b c
public00 
Brush00 
IconForeground00 #
{11 	
get22 
{22 
return22 
(22 
Brush22 
)22  
GetValue22! )
(22) *"
IconForegroundProperty22* @
)22@ A
;22A B
}22C D
set33 
{33 
SetValue33 
(33 "
IconForegroundProperty33 1
,331 2
value333 8
)338 9
;339 :
}33; <
}44 	
public66 
static66 
readonly66 
DependencyProperty66 1
IsDeletableProperty662 E
=66F G
DependencyProperty66H Z
.66Z [
Register66[ c
(66c d
$str77 
,77 
typeof77 !
(77" #
bool77# '
)77' (
,77( )
typeof77* 0
(771 2
Chip772 6
)776 7
,777 8
new779 <
PropertyMetadata77= M
(77M N
default77N U
(77U V
bool77V Z
)77Z [
)77[ \
)77\ ]
;77] ^
public<< 
bool<< 
IsDeletable<< 
{== 	
get>> 
{>> 
return>> 
(>> 
bool>> 
)>> 
GetValue>>  (
(>>( )
IsDeletableProperty>>) <
)>>< =
;>>= >
}>>? @
set?? 
{?? 
SetValue?? 
(?? 
IsDeletableProperty?? .
,??. /
value??0 5
)??5 6
;??6 7
}??8 9
}@@ 	
publicBB 
staticBB 
readonlyBB 
DependencyPropertyBB 1!
DeleteCommandPropertyBB2 G
=BBH I
DependencyPropertyBBJ \
.BB\ ]
RegisterBB] e
(BBe f
$strCC 
,CC 
typeofCC #
(CC$ %
ICommandCC% -
)CC- .
,CC. /
typeofCC0 6
(CC7 8
ChipCC8 <
)CC< =
,CC= >
newCC? B
PropertyMetadataCCC S
(CCS T
defaultCCT [
(CC[ \
ICommandCC\ d
)CCd e
)CCe f
)CCf g
;CCg h
publicEE 
ICommandEE 
DeleteCommandEE %
{FF 	
getGG 
{GG 
returnGG 
(GG 
ICommandGG "
)GG" #
GetValueGG$ ,
(GG, -!
DeleteCommandPropertyGG- B
)GGB C
;GGC D
}GGE F
setHH 
{HH 
SetValueHH 
(HH !
DeleteCommandPropertyHH 0
,HH0 1
valueHH2 7
)HH7 8
;HH8 9
}HH: ;
}II 	
publicKK 
staticKK 
readonlyKK 
DependencyPropertyKK 1*
DeleteCommandParameterPropertyKK2 P
=KKQ R
DependencyPropertyKKS e
.KKe f
RegisterKKf n
(KKn o
$strLL $
,LL$ %
typeofLL& ,
(LL- .
objectLL. 4
)LL4 5
,LL5 6
typeofLL7 =
(LL> ?
ChipLL? C
)LLC D
,LLD E
newLLF I
PropertyMetadataLLJ Z
(LLZ [
defaultLL[ b
(LLb c
objectLLc i
)LLi j
)LLj k
)LLk l
;LLl m
publicNN 
objectNN "
DeleteCommandParameterNN ,
{OO 	
getPP 
{PP 
returnPP 
(PP 
objectPP  
)PP  !
GetValuePP" *
(PP* +*
DeleteCommandParameterPropertyPP+ I
)PPI J
;PPJ K
}PPL M
setQQ 
{QQ 
SetValueQQ 
(QQ *
DeleteCommandParameterPropertyQQ 9
,QQ9 :
valueQQ; @
)QQ@ A
;QQA B
}QQC D
}RR 	
publicTT 
staticTT 
readonlyTT 
DependencyPropertyTT 1!
DeleteToolTipPropertyTT2 G
=TTH I
DependencyPropertyTTJ \
.TT\ ]
RegisterTT] e
(TTe f
$strUU 
,UU 
typeofUU #
(UU$ %
objectUU% +
)UU+ ,
,UU, -
typeofUU. 4
(UU5 6
ChipUU6 :
)UU: ;
,UU; <
newUU= @
PropertyMetadataUUA Q
(UUQ R
defaultUUR Y
(UUY Z
objectUUZ `
)UU` a
)UUa b
)UUb c
;UUc d
publicWW 
objectWW 
DeleteToolTipWW #
{XX 	
getYY 
{YY 
returnYY 
(YY 
objectYY  
)YY  !
GetValueYY" *
(YY* +!
DeleteToolTipPropertyYY+ @
)YY@ A
;YYA B
}YYC D
setZZ 
{ZZ 
SetValueZZ 
(ZZ !
DeleteToolTipPropertyZZ 0
,ZZ0 1
valueZZ2 7
)ZZ7 8
;ZZ8 9
}ZZ: ;
}[[ 	
public`` 
static`` 
readonly`` 
RoutedEvent`` *
DeleteClickEvent``+ ;
=``< =
EventManager``> J
.``J K
RegisterRoutedEvent``K ^
(``^ _
$str``_ l
,``l m
RoutingStrategy``n }
.``} ~
Bubble	``~ Ñ
,
``Ñ Ö
typeof
``Ü å
(
``å ç 
RoutedEventHandler
``ç ü
)
``ü †
,
``† °
typeof
``¢ ®
(
``® ©
Chip
``© ≠
)
``≠ Æ
)
``Æ Ø
;
``Ø ∞
[ee 	
Categoryee	 
(ee 
$stree 
)ee 
]ee 
publicff 
eventff 
RoutedEventHandlerff '
DeleteClickff( 3
{ff4 5
addff6 9
{ff: ;

AddHandlerff< F
(ffF G
DeleteClickEventffG W
,ffW X
valueffY ^
)ff^ _
;ff_ `
}ffa b
removeffc i
{ffj k
RemoveHandlerffl y
(ffy z
DeleteClickEvent	ffz ä
,
ffä ã
value
ffå ë
)
ffë í
;
ffí ì
}
ffî ï
}
ffñ ó
publichh 
overridehh 
voidhh 
OnApplyTemplatehh ,
(hh, -
)hh- .
{ii 	
ifjj 
(jj 
_deleteButtonjj 
!=jj  
nulljj! %
)jj% &
_deleteButtonkk 
.kk 
Clickkk #
-=kk$ &
DeleteButtonOnClickkk' :
;kk: ;
_deleteButtonmm 
=mm 
GetTemplateChildmm ,
(mm, - 
DeleteButtonPartNamemm- A
)mmA B
asmmC E

ButtonBasemmF P
;mmP Q
ifnn 
(nn 
_deleteButtonnn 
!=nn  
nullnn! %
)nn% &
_deleteButtonoo 
.oo 
Clickoo #
+=oo$ &
DeleteButtonOnClickoo' :
;oo: ;
baseqq 
.qq 
OnApplyTemplateqq  
(qq  !
)qq! "
;qq" #
}rr 	
	protectedtt 
virtualtt 
voidtt 
OnDeleteClicktt ,
(tt, -
)tt- .
{uu 	
varvv 
newEventvv 
=vv 
newvv 
RoutedEventArgsvv .
(vv. /
DeleteClickEventvv/ ?
,vv? @
thisvvA E
)vvE F
;vvF G

RaiseEventww 
(ww 
newEventww 
)ww  
;ww  !
varyy 
commandyy 
=yy 
DeleteCommandyy '
;yy' (
ifzz 
(zz 
commandzz 
!=zz 
nullzz 
&&zz  "
commandzz# *
.zz* +

CanExecutezz+ 5
(zz5 6"
DeleteCommandParameterzz6 L
)zzL M
)zzM N
command{{ 
.{{ 
Execute{{ 
({{  "
DeleteCommandParameter{{  6
){{6 7
;{{7 8
}|| 	
private~~ 
void~~ 
DeleteButtonOnClick~~ (
(~~( )
object~~) /
sender~~0 6
,~~6 7
RoutedEventArgs~~8 G
routedEventArgs~~H W
)~~W X
{ 	
OnDeleteClick
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
routedEventArgs
ÅÅ 
.
ÅÅ 
Handled
ÅÅ #
=
ÅÅ$ %
true
ÅÅ& *
;
ÅÅ* +
}
ÇÇ 	
}
ÉÉ 
}ÑÑ Õú
LD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Clock.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 
enum 
ClockDisplayMode 
{ 
Hours 
, 
Minutes 	
} 
public 
enum "
ClockDisplayAutomation #
{ 
None 
, 
Cycle 
, 
ToMinutesOnly   
}!! 
[## 
TemplatePart## 
(## 
Name## 
=## 
HoursCanvasPartName## )
,##) *
Type##+ /
=##0 1
typeof##2 8
(##9 :
Canvas##: @
)##@ A
)##A B
]##B C
[$$ 
TemplatePart$$ 
($$ 
Name$$ 
=$$ !
MinutesCanvasPartName$$ .
,$$. /
Type$$0 4
=$$5 6
typeof$$7 =
($$= >
Canvas$$> D
)$$D E
)$$E F
]$$F G
[%% 
TemplatePart%% 
(%% 
Name%% 
=%% !
MinuteReadOutPartName%% +
,%%+ ,
Type%%- 1
=%%2 3
typeof%%4 :
(%%: ;
	TextBlock%%; D
)%%D E
)%%E F
]%%F G
[&& 
TemplatePart&& 
(&& 
Name&& 
=&& 
HourReadOutPartName&& )
,&&) *
Type&&+ /
=&&0 1
typeof&&2 8
(&&8 9
	TextBlock&&9 B
)&&B C
)&&C D
]&&D E
['' 
TemplateVisualState'' 
('' 
	GroupName'' "
=''# $
$str''% 8
,''8 9
Name'': >
=''? @ 
HoursVisualStateName''A U
)''U V
]''V W
[(( 
TemplateVisualState(( 
((( 
	GroupName(( "
=((# $
$str((% 8
,((8 9
Name((: >
=((? @"
MinutesVisualStateName((A W
)((W X
]((X Y
public)) 

class)) 
Clock)) 
:)) 
Control))  
{** 
public++ 
const++	 
string++ 
HoursCanvasPartName++ )
=++* +
$str++, >
;++> ?
public,, 
const,, 
string,, !
MinutesCanvasPartName,, 1
=,,2 3
$str,,4 H
;,,H I
public-- 
const--	 
string-- !
MinuteReadOutPartName-- +
=--, -
$str--. B
;--B C
public.. 
const..	 
string.. 
HourReadOutPartName.. )
=..* +
$str.., >
;..> ?
public00 
const00 
string00  
HoursVisualStateName00 -
=00. /
$str000 7
;007 8
public11 
const11 
string11 "
MinutesVisualStateName11 2
=113 4
$str115 >
;11> ?
private33 
Point33 
_centreCanvas33 #
=33$ %
new33& )
Point33* /
(33/ 0
$num330 1
,331 2
$num333 4
)334 5
;335 6
private44 
Point44 !
_currentStartPosition44 +
=44, -
new44. 1
Point442 7
(447 8
$num448 9
,449 :
$num44; <
)44< =
;44= >
private55 	
	TextBlock55
  
_hourReadOutPartName55 (
;55( )
private66 	
	TextBlock66
 "
_minuteReadOutPartName66 *
;66* +
static88 
Clock88	 
(88 
)88 
{99 #
DefaultStyleKeyProperty:: 
.:: 
OverrideMetadata:: +
(::+ ,
typeof::, 2
(::3 4
Clock::4 9
)::9 :
,::: ;
new::< ?%
FrameworkPropertyMetadata::@ Y
(::Y Z
typeof::Z `
(::a b
Clock::b g
)::g h
)::h i
)::i j
;::j k
};; 
public== 
Clock==	 
(== 
)== 
{>> 

AddHandler?? 
(?? 
ClockItemButton?? &
.??& '
DragStartedEvent??' 7
,??7 8
new??9 <#
DragStartedEventHandler??= T
(??T U'
ClockItemDragStartedHandler??U p
)??p q
)??q r
;??r s

AddHandler@@ 
(@@ 
ClockItemButton@@ 
.@@ 
DragDeltaEvent@@ ,
,@@, -
new@@. 1!
DragDeltaEventHandler@@2 G
(@@G H%
ClockItemDragDeltaHandler@@H a
)@@a b
)@@b c
;@@c d

AddHandlerAA 
(AA 
ClockItemButtonAA 
.AA 
DragCompletedEventAA 0
,AA0 1
newAA2 5%
DragCompletedEventHandlerAA6 O
(AAO P)
ClockItemDragCompletedHandlerAAP m
)AAm n
)AAn o
;AAo p
}BB 
publicDD 
staticDD	 
readonlyDD 
DependencyPropertyDD +
TimePropertyDD, 8
=DD9 :
DependencyPropertyDD; M
.DDM N
RegisterDDN V
(DDV W
nameofEE 
(EE 
TimeEE 
)EE 
,EE 
typeofEE  
(EE! "
DateTimeEE" *
)EE* +
,EE+ ,
typeofEE- 3
(EE4 5
ClockEE5 :
)EE: ;
,EE; <
newEE= @%
FrameworkPropertyMetadataEEA Z
(EEZ [
defaultEE[ b
(EEb c
DateTimeEEc k
)EEk l
,EEl m-
 FrameworkPropertyMetadataOptions	EEn é
.
EEé è"
BindsTwoWayByDefault
EEè £
,
EE£ §)
TimePropertyChangedCallback
EE• ¿
)
EE¿ ¡
)
EE¡ ¬
;
EE¬ √
privateGG 
staticGG 
voidGG '
TimePropertyChangedCallbackGG 4
(GG4 5
DependencyObjectGG5 E
dependencyObjectGGF V
,GGV W.
"DependencyPropertyChangedEventArgsGGX z/
"dependencyPropertyChangedEventArgs	GG{ ù
)
GGù û
{HH 
varII 	
clockII
 
=II 
(II 
ClockII 
)II 
dependencyObjectII *
;II* +
SetFlagsJJ 
(JJ 
clockJJ 
)JJ 
;JJ 
}KK 
publicMM 
DateTimeMM 
TimeMM 
{NN 
getOO 
{OO 
returnOO	 
(OO 
DateTimeOO 
)OO 
GetValueOO #
(OO# $
TimePropertyOO$ 0
)OO0 1
;OO1 2
}OO3 4
setPP 
{PP 
SetValuePP	 
(PP 
TimePropertyPP 
,PP 
valuePP  %
)PP% &
;PP& '
}PP( )
}QQ 
privateSS 
staticSS 
readonlySS !
DependencyPropertyKeySS 2%
IsMidnightHourPropertyKeySS3 L
=SSM N
DependencyPropertyTT	 
.TT 
RegisterReadOnlyTT ,
(TT, -
$strUU 
,UU 
typeofUU %
(UU& '
boolUU' +
)UU+ ,
,UU, -
typeofUU. 4
(UU5 6
ClockUU6 ;
)UU; <
,UU< =
newVV 
PropertyMetadataVV !
(VV! "
defaultVV" )
(VV) *
boolVV* .
)VV. /
)VV/ 0
)VV0 1
;VV1 2
publicXX 
staticXX 
readonlyXX 
DependencyPropertyXX 1"
IsMidnightHourPropertyXX2 H
=XXI J%
IsMidnightHourPropertyKeyYY %
.YY% &
DependencyPropertyYY& 8
;YY8 9
public[[ 
bool[[ 
IsMidnightHour[[ "
{\\ 	
get]] 
{]] 
return]] 
(]] 
bool]] 
)]] 
GetValue]] '
(]]' ("
IsMidnightHourProperty]]( >
)]]> ?
;]]? @
}]]A B
private^^ 
set^^ 
{^^ 
SetValue^^ "
(^^" #%
IsMidnightHourPropertyKey^^# <
,^^< =
value^^> C
)^^C D
;^^D E
}^^F G
}__ 	
privateaa 
staticaa 
readonlyaa !
DependencyPropertyKeyaa  5#
IsMiddayHourPropertyKeyaa6 M
=aaN O
DependencyPropertybb	 
.bb 
RegisterReadOnlybb ,
(bb, -
$strcc 
,cc 
typeofcc #
(cc$ %
boolcc% )
)cc) *
,cc* +
typeofcc, 2
(cc3 4
Clockcc4 9
)cc9 :
,cc: ;
newdd 
PropertyMetadatadd !
(dd! "
defaultdd" )
(dd) *
booldd* .
)dd. /
)dd/ 0
)dd0 1
;dd1 2
publicff 
staticff 
readonlyff 
DependencyPropertyff . 
IsMiddayHourPropertyff/ C
=ffD E#
IsMiddayHourPropertyKeygg #
.gg# $
DependencyPropertygg$ 6
;gg6 7
publicii 
boolii 
IsMiddayHourii 
{jj 
getkk	 
{kk 
returnkk 
(kk 
boolkk 
)kk 
GetValuekk %
(kk% & 
IsMiddayHourPropertykk& :
)kk: ;
;kk; <
}kk= >
privatell	 
setll 
{ll 
SetValuell 
(ll  #
IsMiddayHourPropertyKeyll  7
,ll7 8
valuell9 >
)ll> ?
;ll? @
}llA B
}mm 
publicoo 
staticoo	 
readonlyoo 
DependencyPropertyoo +"
IsPostMeridiemPropertyoo, B
=ooC D
DependencyPropertyooE W
.ooW X
RegisterooX `
(oo` a
nameofpp 
(pp 
IsPostMeridiempp !
)pp! "
,pp" #
typeofpp$ *
(pp+ ,
boolpp, 0
)pp0 1
,pp1 2
typeofpp3 9
(pp: ;
Clockpp; @
)pp@ A
,ppA B
newppC F
PropertyMetadatappG W
(ppW X
defaultppX _
(pp_ `
boolpp` d
)ppd e
,ppe f2
%IsPostMeridiemPropertyChangedCallback	ppg å
)
ppå ç
)
ppç é
;
ppé è
privaterr 	
staticrr
 
voidrr 1
%IsPostMeridiemPropertyChangedCallbackrr ;
(rr; <
DependencyObjectrr< L
dependencyObjectrrM ]
,rr] ^/
"DependencyPropertyChangedEventArgs	rr_ Å0
"dependencyPropertyChangedEventArgs
rrÇ §
)
rr§ •
{ss 
vartt 
clocktt 
=tt 
(tt 
Clocktt 
)tt 
dependencyObjecttt &
;tt& '
ifuu 
(uu 
clockuu 
.uu 
IsPostMeridiemuu 
&&uu 
clockuu $
.uu$ %
Timeuu% )
.uu) *
Houruu* .
<uu/ 0
$numuu1 3
)uu3 4
clockvv 	
.vv	 

Timevv
 
=vv 
newvv 
DateTimevv 
(vv 
clockvv #
.vv# $
Timevv$ (
.vv( )
Yearvv) -
,vv- .
clockvv/ 4
.vv4 5
Timevv5 9
.vv9 :
Monthvv: ?
,vv? @
clockvvA F
.vvF G
TimevvG K
.vvK L
DayvvL O
,vvO P
clockvvQ V
.vvV W
TimevvW [
.vv[ \
Hourvv\ `
+vva b
$numvvc e
,vve f
clockvvg l
.vvl m
Timevvm q
.vvq r
Minutevvr x
,vvx y
clockvvz 
.	vv Ä
Time
vvÄ Ñ
.
vvÑ Ö
Second
vvÖ ã
)
vvã å
;
vvå ç
elseww 
ifww 

(ww 
!ww 
clockww 
.ww 
IsPostMeridiemww !
&&ww" $
clockww% *
.ww* +
Timeww+ /
.ww/ 0
Hourww0 4
>=ww5 7
$numww8 :
)ww: ;
clockxx 	
.xx	 

Timexx
 
=xx 
newxx 
DateTimexx 
(xx 
clockxx #
.xx# $
Timexx$ (
.xx( )
Yearxx) -
,xx- .
clockxx/ 4
.xx4 5
Timexx5 9
.xx9 :
Monthxx: ?
,xx? @
clockxxA F
.xxF G
TimexxG K
.xxK L
DayxxL O
,xxO P
clockxxQ V
.xxV W
TimexxW [
.xx[ \
Hourxx\ `
-xxa b
$numxxc e
,xxe f
clockxxg l
.xxl m
Timexxm q
.xxq r
Minutexxr x
,xxx y
clockxxz 
.	xx Ä
Time
xxÄ Ñ
.
xxÑ Ö
Second
xxÖ ã
)
xxã å
;
xxå ç
}yy 
public{{ 
bool{{	 
IsPostMeridiem{{ 
{|| 
get}} 
{}} 
return}}	 
(}} 
bool}} 
)}} 
GetValue}} 
(}}  "
IsPostMeridiemProperty}}  6
)}}6 7
;}}7 8
}}}9 :
set~~ 
{~~ 
SetValue~~	 
(~~ "
IsPostMeridiemProperty~~ (
,~~( )
value~~* /
)~~/ 0
;~~0 1
}~~2 3
} 
public
ÅÅ 
static
ÅÅ 
readonly
ÅÅ  
DependencyProperty
ÅÅ .
Is24HoursProperty
ÅÅ/ @
=
ÅÅA B 
DependencyProperty
ÅÅC U
.
ÅÅU V
Register
ÅÅV ^
(
ÅÅ^ _
nameof
ÇÇ 
(
ÇÇ 
	Is24Hours
ÇÇ 
)
ÇÇ 
,
ÇÇ 
typeof
ÇÇ %
(
ÇÇ& '
bool
ÇÇ' +
)
ÇÇ+ ,
,
ÇÇ, -
typeof
ÇÇ. 4
(
ÇÇ5 6
Clock
ÇÇ6 ;
)
ÇÇ; <
,
ÇÇ< =
new
ÇÇ> A
PropertyMetadata
ÇÇB R
(
ÇÇR S
default
ÇÇS Z
(
ÇÇZ [
bool
ÇÇ[ _
)
ÇÇ_ `
)
ÇÇ` a
)
ÇÇa b
;
ÇÇb c
public
ÑÑ 
bool
ÑÑ 
	Is24Hours
ÑÑ 
{
ÖÖ 
get
ÜÜ	 
{
ÜÜ 
return
ÜÜ 
(
ÜÜ 
bool
ÜÜ 
)
ÜÜ 
GetValue
ÜÜ %
(
ÜÜ% &
Is24HoursProperty
ÜÜ& 7
)
ÜÜ7 8
;
ÜÜ8 9
}
ÜÜ: ;
set
áá	 
{
áá 
SetValue
áá 
(
áá 
Is24HoursProperty
áá )
,
áá) *
value
áá+ 0
)
áá0 1
;
áá1 2
}
áá3 4
}
àà 
public
ãã 
static
ãã	 
readonly
ãã  
DependencyProperty
ãã +!
DisplayModeProperty
ãã, ?
=
ãã@ A 
DependencyProperty
ããB T
.
ããT U
Register
ããU ]
(
ãã] ^
nameof
åå 
(
åå 
DisplayMode
åå 
)
åå 
,
åå  
typeof
åå! '
(
åå( )
ClockDisplayMode
åå) 9
)
åå9 :
,
åå: ;
typeof
åå< B
(
ååC D
Clock
ååD I
)
ååI J
,
ååJ K
new
ååL O'
FrameworkPropertyMetadata
ååP i
(
ååi j
ClockDisplayMode
ååj z
.
ååz {
Hoursåå{ Ä
,ååÄ Å2
"DisplayModePropertyChangedCallbackååÇ §
)åå§ •
)åå• ¶
;åå¶ ß
private
éé 
static
éé 
void
éé 0
"DisplayModePropertyChangedCallback
éé ;
(
éé; <
DependencyObject
éé< L
dependencyObject
ééM ]
,
éé] ^1
"DependencyPropertyChangedEventArgséé_ Å2
"dependencyPropertyChangedEventArgsééÇ §
)éé§ •
{
èè 
(
êê	 

(
êê
 
Clock
êê 
)
êê 
dependencyObject
êê !
)
êê! "
.
êê" #
GotoVisualState
êê# 2
(
êê2 3
!
êê3 4
TransitionAssist
êê4 D
.
êêD E#
GetDisableTransitions
êêE Z
(
êêZ [
dependencyObject
êê[ k
)
êêk l
)
êêl m
;
êêm n
}
ëë 
public
ìì 
ClockDisplayMode
ìì 
DisplayMode
ìì (
{
îî 
get
ïï 
{
ïï 
return
ïï	 
(
ïï 
ClockDisplayMode
ïï !
)
ïï! "
GetValue
ïï# +
(
ïï+ ,!
DisplayModeProperty
ïï, ?
)
ïï? @
;
ïï@ A
}
ïïB C
set
ññ 
{
ññ 
SetValue
ññ	 
(
ññ !
DisplayModeProperty
ññ %
,
ññ% &
value
ññ' ,
)
ññ, -
;
ññ- .
}
ññ/ 0
}
óó 
public
ôô 
static
ôô	 
readonly
ôô  
DependencyProperty
ôô +'
DisplayAutomationProperty
ôô, E
=
ôôF G 
DependencyProperty
ôôH Z
.
ôôZ [
Register
ôô[ c
(
ôôc d
nameof
öö 
(
öö 
DisplayAutomation
öö $
)
öö$ %
,
öö% &
typeof
öö' -
(
öö. /$
ClockDisplayAutomation
öö/ E
)
ööE F
,
ööF G
typeof
ööH N
(
ööO P
Clock
ööP U
)
ööU V
,
ööV W
new
ööX [
PropertyMetadata
öö\ l
(
ööl m
default
ööm t
(
ööt u%
ClockDisplayAutomationööu ã
)ööã å
)ööå ç
)ööç é
;ööé è
public
úú $
ClockDisplayAutomation
úú	 
DisplayAutomation
úú  1
{
ùù 
get
ûû 
{
ûû 
return
ûû	 
(
ûû $
ClockDisplayAutomation
ûû '
)
ûû' (
GetValue
ûû) 1
(
ûû1 2'
DisplayAutomationProperty
ûû2 K
)
ûûK L
;
ûûL M
}
ûûN O
set
üü 
{
üü 
SetValue
üü	 
(
üü '
DisplayAutomationProperty
üü +
,
üü+ ,
value
üü- 2
)
üü2 3
;
üü3 4
}
üü5 6
}
†† 
public
¢¢ 
static
¢¢	 
readonly
¢¢  
DependencyProperty
¢¢ +!
ButtonStyleProperty
¢¢, ?
=
¢¢@ A 
DependencyProperty
¢¢B T
.
¢¢T U
Register
¢¢U ]
(
¢¢] ^
nameof
££ 
(
££ 
ButtonStyle
££ 
)
££ 
,
££  
typeof
££! '
(
££( )
Style
££) .
)
££. /
,
££/ 0
typeof
££1 7
(
££8 9
Clock
££9 >
)
££> ?
,
££? @
new
££A D
PropertyMetadata
££E U
(
££U V
default
££V ]
(
££] ^
Style
££^ c
)
££c d
)
££d e
)
££e f
;
££f g
public
•• 
Style
••	 
ButtonStyle
•• 
{
¶¶ 
get
ßß 
{
ßß 
return
ßß	 
(
ßß 
Style
ßß 
)
ßß 
GetValue
ßß  
(
ßß  !!
ButtonStyleProperty
ßß! 4
)
ßß4 5
;
ßß5 6
}
ßß7 8
set
®® 
{
®® 
SetValue
®®	 
(
®® !
ButtonStyleProperty
®® %
,
®®% &
value
®®' ,
)
®®, -
;
®®- .
}
®®/ 0
}
©© 
public
´´ 
static
´´	 
readonly
´´  
DependencyProperty
´´ +'
LesserButtonStyleProperty
´´, E
=
´´F G 
DependencyProperty
´´H Z
.
´´Z [
Register
´´[ c
(
´´c d
nameof
¨¨ 
(
¨¨ 
LesserButtonStyle
¨¨ $
)
¨¨$ %
,
¨¨% &
typeof
¨¨' -
(
¨¨. /
Style
¨¨/ 4
)
¨¨4 5
,
¨¨5 6
typeof
¨¨7 =
(
¨¨> ?
Clock
¨¨? D
)
¨¨D E
,
¨¨E F
new
¨¨G J
PropertyMetadata
¨¨K [
(
¨¨[ \
default
¨¨\ c
(
¨¨c d
Style
¨¨d i
)
¨¨i j
)
¨¨j k
)
¨¨k l
;
¨¨l m
public
ÆÆ 
Style
ÆÆ	 
LesserButtonStyle
ÆÆ  
{
ØØ 
get
∞∞ 
{
∞∞ 
return
∞∞	 
(
∞∞ 
Style
∞∞ 
)
∞∞ 
GetValue
∞∞  
(
∞∞  !'
LesserButtonStyleProperty
∞∞! :
)
∞∞: ;
;
∞∞; <
}
∞∞= >
set
±± 
{
±± 
SetValue
±±	 
(
±± '
LesserButtonStyleProperty
±± +
,
±±+ ,
value
±±- 2
)
±±2 3
;
±±3 4
}
±±5 6
}
≤≤ 
public
¥¥ 
static
¥¥	 
readonly
¥¥  
DependencyProperty
¥¥ +'
ButtonRadiusRatioProperty
¥¥, E
=
¥¥F G 
DependencyProperty
¥¥H Z
.
¥¥Z [
Register
¥¥[ c
(
¥¥c d
nameof
µµ 
(
µµ 
ButtonRadiusRatio
µµ $
)
µµ$ %
,
µµ% &
typeof
µµ' -
(
µµ. /
double
µµ/ 5
)
µµ5 6
,
µµ6 7
typeof
µµ8 >
(
µµ? @
Clock
µµ@ E
)
µµE F
,
µµF G
new
µµH K
PropertyMetadata
µµL \
(
µµ\ ]
default
µµ] d
(
µµd e
double
µµe k
)
µµk l
)
µµl m
)
µµm n
;
µµn o
public
∑∑ 
double
∑∑	 
ButtonRadiusRatio
∑∑ !
{
∏∏ 
get
ππ 
{
ππ 
return
ππ	 
(
ππ 
double
ππ 
)
ππ 
GetValue
ππ !
(
ππ! "'
ButtonRadiusRatioProperty
ππ" ;
)
ππ; <
;
ππ< =
}
ππ> ?
set
∫∫ 
{
∫∫ 
SetValue
∫∫	 
(
∫∫ '
ButtonRadiusRatioProperty
∫∫ +
,
∫∫+ ,
value
∫∫- 2
)
∫∫2 3
;
∫∫3 4
}
∫∫5 6
}
ªª 
public
ΩΩ 
static
ΩΩ 
readonly
ΩΩ  
DependencyProperty
ΩΩ .,
ButtonRadiusInnerRatioProperty
ΩΩ/ M
=
ΩΩN O 
DependencyProperty
ΩΩP b
.
ΩΩb c
Register
ΩΩc k
(
ΩΩk l
nameof
ææ 
(
ææ $
ButtonRadiusInnerRatio
ææ )
)
ææ) *
,
ææ* +
typeof
ææ, 2
(
ææ3 4
double
ææ4 :
)
ææ: ;
,
ææ; <
typeof
ææ= C
(
ææD E
Clock
ææE J
)
ææJ K
,
ææK L
new
ææM P
PropertyMetadata
ææQ a
(
ææa b
default
ææb i
(
ææi j
double
ææj p
)
ææp q
)
ææq r
)
æær s
;
ææs t
public
¿¿ 
double
¿¿ $
ButtonRadiusInnerRatio
¿¿ )
{
¡¡ 
get
¬¬	 
{
¬¬ 
return
¬¬ 
(
¬¬ 
double
¬¬ 
)
¬¬ 
GetValue
¬¬ '
(
¬¬' (,
ButtonRadiusInnerRatioProperty
¬¬( F
)
¬¬F G
;
¬¬G H
}
¬¬I J
set
√√	 
{
√√ 
SetValue
√√ 
(
√√ ,
ButtonRadiusInnerRatioProperty
√√ 6
,
√√6 7
value
√√8 =
)
√√= >
;
√√> ?
}
√√@ A
}
ƒƒ 
private
∆∆ 	
static
∆∆
 
readonly
∆∆ #
DependencyPropertyKey
∆∆ /&
HourLineAnglePropertyKey
∆∆0 H
=
∆∆I J 
DependencyProperty
«« 
.
«« 
RegisterReadOnly
«« &
(
««& '
$str
»» 
,
»» 
typeof
»» 
(
»» 
double
»» #
)
»»# $
,
»»$ %
typeof
»»& ,
(
»»- .
Clock
»». 3
)
»»3 4
,
»»4 5
new
…… 
PropertyMetadata
…… 
(
…… 
default
……  
(
……  !
double
……! '
)
……' (
)
……( )
)
……) *
;
……* +
public
ÀÀ 
static
ÀÀ	 
readonly
ÀÀ  
DependencyProperty
ÀÀ +#
HourLineAngleProperty
ÀÀ, A
=
ÀÀB C&
HourLineAnglePropertyKey
ÃÃ 
.
ÃÃ  
DependencyProperty
ÃÃ .
;
ÃÃ. /
public
ŒŒ 
double
ŒŒ	 
HourLineAngle
ŒŒ 
{
œœ 
get
–– 
{
–– 
return
––	 
(
–– 
double
–– 
)
–– 
GetValue
–– !
(
––! "#
HourLineAngleProperty
––" 7
)
––7 8
;
––8 9
}
––: ;
private
—— 

set
—— 
{
—— 
SetValue
—— 
(
—— &
HourLineAnglePropertyKey
—— 2
,
——2 3
value
——4 9
)
——9 :
;
——: ;
}
——< =
}
““ 
public
‘‘ 
static
‘‘	 
readonly
‘‘ 
RoutedEvent
‘‘ $"
ClockChoiceMadeEvent
‘‘% 9
=
‘‘: ;
EventManager
’’ 
.
’’ !
RegisterRoutedEvent
’’ #
(
’’# $
$str
÷÷ 
,
÷÷ 
RoutingStrategy
◊◊ 
.
◊◊ 
Bubble
◊◊ 
,
◊◊ 
typeof
ÿÿ 

(
ÿÿ )
ClockChoiceMadeEventHandler
ÿÿ '
)
ÿÿ' (
,
ÿÿ( )
typeof
ŸŸ 

(
ŸŸ 
Clock
ŸŸ 
)
ŸŸ 
)
ŸŸ 
;
ŸŸ 
private
€€ 	
static
€€
 
void
€€ 
OnClockChoiceMade
€€ '
(
€€' (
DependencyObject
€€( 8
d
€€9 :
,
€€: ;
ClockDisplayMode
€€< L
displayMode
€€M X
)
€€X Y
{
‹‹ 
var
›› 
instance
›› 
=
›› 
(
›› 
Clock
›› 
)
›› 
d
›› 
;
›› 
var
ﬁﬁ $
dragCompletedEventArgs
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ  #&
ClockChoiceMadeEventArgs
ﬁﬁ$ <
(
ﬁﬁ< =
displayMode
ﬁﬁ= H
)
ﬁﬁH I
{
ﬂﬂ 
RoutedEvent
‡‡ 
=
‡‡ "
ClockChoiceMadeEvent
‡‡ &
,
‡‡& '
}
·· 
;
·· 
instance
„„ 
.
„„ 

RaiseEvent
„„ 
(
„„ $
dragCompletedEventArgs
„„ -
)
„„- .
;
„„. /
}
‰‰ 
public
ÊÊ 
override
ÊÊ	 
void
ÊÊ 
OnApplyTemplate
ÊÊ &
(
ÊÊ& '
)
ÊÊ' (
{
ÁÁ 
SetFlags
ËË 
(
ËË 
this
ËË 
)
ËË 
;
ËË 
GenerateButtons
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
if
ÌÌ 
(
ÌÌ	 
"
_hourReadOutPartName
ÌÌ
 
!=
ÌÌ !
null
ÌÌ" &
)
ÌÌ& '"
_hourReadOutPartName
ÓÓ 
.
ÓÓ (
PreviewMouseLeftButtonDown
ÓÓ 3
-=
ÓÓ4 6=
/HourReadOutPartNameOnPreviewMouseLeftButtonDown
ÓÓ7 f
;
ÓÓf g
if
ÔÔ 
(
ÔÔ $
_minuteReadOutPartName
ÔÔ 
!=
ÔÔ  
null
ÔÔ! %
)
ÔÔ% &$
_minuteReadOutPartName
 
.
 (
PreviewMouseLeftButtonDown
 5
-=
6 8?
1MinuteReadOutPartNameOnPreviewMouseLeftButtonDown
9 j
;
j k"
_hourReadOutPartName
ÒÒ 
=
ÒÒ 
GetTemplateChild
ÒÒ *
(
ÒÒ* +!
HourReadOutPartName
ÒÒ+ >
)
ÒÒ> ?
as
ÒÒ@ B
	TextBlock
ÒÒC L
;
ÒÒL M$
_minuteReadOutPartName
ÚÚ 
=
ÚÚ 
GetTemplateChild
ÚÚ ,
(
ÚÚ, -#
MinuteReadOutPartName
ÚÚ- B
)
ÚÚB C
as
ÚÚD F
	TextBlock
ÚÚG P
;
ÚÚP Q
if
ÛÛ 
(
ÛÛ "
_hourReadOutPartName
ÛÛ 
!=
ÛÛ 
null
ÛÛ #
)
ÛÛ# $"
_hourReadOutPartName
ÙÙ 
.
ÙÙ (
PreviewMouseLeftButtonDown
ÙÙ 3
+=
ÙÙ4 6=
/HourReadOutPartNameOnPreviewMouseLeftButtonDown
ÙÙ7 f
;
ÙÙf g
if
ıı 
(
ıı $
_minuteReadOutPartName
ıı 
!=
ıı  
null
ıı! %
)
ıı% &$
_minuteReadOutPartName
ˆˆ 
.
ˆˆ (
PreviewMouseLeftButtonDown
ˆˆ 5
+=
ˆˆ6 8?
1MinuteReadOutPartNameOnPreviewMouseLeftButtonDown
ˆˆ9 j
;
ˆˆj k
base
¯¯ 
.
¯¯ 
OnApplyTemplate
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
GotoVisualState
˙˙ 
(
˙˙ 
false
˙˙ !
)
˙˙! "
;
˙˙" #
}
˚˚ 
private
˝˝ 
void
˝˝ 
GotoVisualState
˝˝ !
(
˝˝! "
bool
˝˝" &
useTransitions
˝˝' 5
)
˝˝5 6
{
˛˛  
VisualStateManager
ˇˇ	 
.
ˇˇ 
	GoToState
ˇˇ %
(
ˇˇ% &
this
ˇˇ& *
,
ˇˇ* +
DisplayMode
ÄÄ 
==
ÄÄ 
ClockDisplayMode
ÄÄ ,
.
ÄÄ, -
Minutes
ÄÄ- 4
?
ÄÄ5 6$
MinutesVisualStateName
ÄÄ7 M
:
ÄÄN O"
HoursVisualStateName
ÄÄP d
,
ÄÄd e
useTransitions
ÄÄf t
)
ÄÄt u
;
ÄÄu v
}
ÅÅ 
private
ÉÉ 
void
ÉÉ 
GenerateButtons
ÉÉ !
(
ÉÉ! "
)
ÉÉ" #
{
ÑÑ 
var
ÖÖ	 
hoursCanvas
ÖÖ 
=
ÖÖ 
GetTemplateChild
ÖÖ +
(
ÖÖ+ ,!
HoursCanvasPartName
ÖÖ, ?
)
ÖÖ? @
as
ÖÖA C
Canvas
ÖÖD J
;
ÖÖJ K
if
ÜÜ	 
(
ÜÜ 
hoursCanvas
ÜÜ 
!=
ÜÜ 
null
ÜÜ  
)
ÜÜ  !
{
áá	 

if
àà 
(
àà 
	Is24Hours
àà 
)
àà 
{
ââ 
GenerateButtons
ää #
(
ää# $
hoursCanvas
ää$ /
,
ää/ 0

Enumerable
ää1 ;
.
ää; <
Range
ää< A
(
ääA B
$num
ääB D
,
ääD E
$num
ääF H
)
ääH I
.
ääI J
ToList
ääJ P
(
ääP Q
)
ääQ R
,
ääR S
ButtonRadiusRatio
ääT e
,
ääe f
new
ãã )
ClockItemIsCheckedConverter
ãã 7
(
ãã7 8
(
ãã8 9
)
ãã9 :
=>
ãã; =
Time
ãã> B
,
ããB C
ClockDisplayMode
ããD T
.
ããT U
Hours
ããU Z
,
ããZ [
	Is24Hours
ãã\ e
)
ããe f
,
ããf g
i
ããh i
=>
ããj l
$str
ããm z
,
ããz {
$strãã| Ä
)ããÄ Å
;ããÅ Ç
GenerateButtons
åå #
(
åå# $
hoursCanvas
åå$ /
,
åå/ 0

Enumerable
åå1 ;
.
åå; <
Range
åå< A
(
ååA B
$num
ååB C
,
ååC D
$num
ååE G
)
ååG H
.
ååH I
ToList
ååI O
(
ååO P
)
ååP Q
,
ååQ R$
ButtonRadiusInnerRatio
ååS i
,
ååi j
new
çç )
ClockItemIsCheckedConverter
çç 7
(
çç7 8
(
çç8 9
)
çç9 :
=>
çç; =
Time
çç> B
,
ççB C
ClockDisplayMode
ççD T
.
ççT U
Hours
ççU Z
,
ççZ [
	Is24Hours
çç\ e
)
ççe f
,
ççf g
i
ççh i
=>
ççj l
$str
ççm z
,
ççz {
$str
çç| 
)çç Ä
;ççÄ Å
}
éé 
else
èè 
GenerateButtons
êê  
(
êê  !
hoursCanvas
êê! ,
,
êê, -

Enumerable
êê. 8
.
êê8 9
Range
êê9 >
(
êê> ?
$num
êê? @
,
êê@ A
$num
êêB D
)
êêD E
.
êêE F
ToList
êêF L
(
êêL M
)
êêM N
,
êêN O
ButtonRadiusRatio
êêP a
,
êêa b
new
ëë )
ClockItemIsCheckedConverter
ëë 4
(
ëë4 5
(
ëë5 6
)
ëë6 7
=>
ëë8 :
Time
ëë; ?
,
ëë? @
ClockDisplayMode
ëëA Q
.
ëëQ R
Hours
ëëR W
,
ëëW X
	Is24Hours
ëëY b
)
ëëb c
,
ëëc d
i
ëëe f
=>
ëëg i
$str
ëëj w
,
ëëw x
$str
ëëy |
)
ëë| }
;
ëë} ~
}
íí	 

var
îî	 
minutesCanvas
îî 
=
îî 
GetTemplateChild
îî -
(
îî- .#
MinutesCanvasPartName
îî. C
)
îîC D
as
îîE G
Canvas
îîH N
;
îîN O
if
ïï	 
(
ïï 
minutesCanvas
ïï 
!=
ïï 
null
ïï "
)
ïï" #
GenerateButtons
ññ 
(
ññ 
minutesCanvas
ññ *
,
ññ* +

Enumerable
ññ, 6
.
ññ6 7
Range
ññ7 <
(
ññ< =
$num
ññ= >
,
ññ> ?
$num
ññ@ B
)
ññB C
.
ññC D
ToList
ññD J
(
ññJ K
)
ññK L
,
ññL M
ButtonRadiusRatio
ññN _
,
ññ_ `
new
óó )
ClockItemIsCheckedConverter
óó 3
(
óó3 4
(
óó4 5
)
óó5 6
=>
óó7 9
Time
óó: >
,
óó> ?
ClockDisplayMode
óó@ P
.
óóP Q
Minutes
óóQ X
,
óóX Y
	Is24Hours
óóZ c
)
óóc d
,
óód e
i
òò 
=>
òò 
(
òò 
(
òò 
i
òò 
/
òò 
$num
òò 
)
òò 
%
òò 
$num
òò  
)
òò  !
==
òò" $
$num
òò% (
?
òò) *
$str
òò+ 8
:
òò9 :
$str
òò; N
,
òòN O
$str
òòP S
)
òòS T
;
òòT U
}
ôô 
private
õõ 
void
õõ ?
1MinuteReadOutPartNameOnPreviewMouseLeftButtonDown
õõ C
(
õõC D
object
õõD J
sender
õõK Q
,
õõQ R"
MouseButtonEventArgs
õõS g
e
õõh i
)
õõi j
{
úú 
SetCurrentValue
ùù 
(
ùù 
Clock
ùù 
.
ùù !
DisplayModeProperty
ùù ,
,
ùù, -
ClockDisplayMode
ùù. >
.
ùù> ?
Minutes
ùù? F
)
ùùF G
;
ùùG H
}
ûû 
private
†† 	
void
††
 =
/HourReadOutPartNameOnPreviewMouseLeftButtonDown
†† >
(
††> ?
object
††? E
sender
††F L
,
††L M"
MouseButtonEventArgs
††N b"
mouseButtonEventArgs
††c w
)
††w x
{
°° 
SetCurrentValue
¢¢ 
(
¢¢ 
Clock
¢¢ 
.
¢¢ !
DisplayModeProperty
¢¢ ,
,
¢¢, -
ClockDisplayMode
¢¢. >
.
¢¢> ?
Hours
¢¢? D
)
¢¢D E
;
¢¢E F
}
££ 
private
•• 	
void
••
 
GenerateButtons
•• 
(
•• 
Panel
•• $
canvas
••% +
,
••+ ,
ICollection
••- 8
<
••8 9
int
••9 <
>
••< =
range
••> C
,
••C D
double
••E K
radiusRatio
••L W
,
••W X
IValueConverter
••Y h 
isCheckedConverter
••i {
,
••{ |
Func••} Å
<••Å Ç
int••Ç Ö
,••Ö Ü
string••á ç
>••ç é%
stylePropertySelector••è §
,••§ •
string
¶¶ 
format
¶¶ 
)
¶¶ 
{
ßß 
var
®® 
anglePerItem
®® 
=
®® 
$num
®® 
/
®® 
range
®® #
.
®®# $
Count
®®$ )
;
®®) *
var
©© 
radiansPerItem
©© 
=
©© 
anglePerItem
©© $
*
©©% &
(
©©' (
Math
©©( ,
.
©©, -
PI
©©- /
/
©©0 1
$num
©©2 5
)
©©5 6
;
©©6 7
if
¨¨ 
(
¨¨ 
canvas
¨¨ 
.
¨¨ 
Width
¨¨ 
<
¨¨ 
$num
¨¨ 
||
¨¨ 
Math
¨¨ "
.
¨¨" #
Abs
¨¨# &
(
¨¨& '
canvas
¨¨' -
.
¨¨- .
Height
¨¨. 4
-
¨¨5 6
canvas
¨¨7 =
.
¨¨= >
Width
¨¨> C
)
¨¨C D
>
¨¨E F
$num
¨¨G J
)
¨¨J K
return
¨¨L R
;
¨¨R S
_centreCanvas
ÆÆ 
=
ÆÆ 
new
ÆÆ 
Point
ÆÆ  %
(
ÆÆ% &
canvas
ÆÆ& ,
.
ÆÆ, -
Width
ÆÆ- 2
/
ÆÆ3 4
$num
ÆÆ5 6
,
ÆÆ6 7
canvas
ÆÆ8 >
.
ÆÆ> ?
Height
ÆÆ? E
/
ÆÆF G
$num
ÆÆH I
)
ÆÆI J
;
ÆÆJ K
var
ØØ 
hypotenuseRadius
ØØ  
=
ØØ! "
_centreCanvas
ØØ# 0
.
ØØ0 1
X
ØØ1 2
*
ØØ3 4
radiusRatio
ØØ5 @
;
ØØ@ A
foreach
±± 

(
±± 
var
±± 
i
±± 
in
±± 
range
±± 
)
±± 
{
≤≤ 
var
≥≥ 
button
≥≥ 
=
≥≥ 
new
≥≥ 
ClockItemButton
≥≥ $
(
≥≥$ %
)
≥≥% &
;
≥≥& '
button
¥¥ 

.
¥¥
 

SetBinding
¥¥ 
(
¥¥ 
StyleProperty
¥¥ #
,
¥¥# $

GetBinding
¥¥% /
(
¥¥/ 0#
stylePropertySelector
¥¥0 E
(
¥¥E F
i
¥¥F G
)
¥¥G H
)
¥¥H I
)
¥¥I J
;
¥¥J K
var
∂∂ 
adjacent
∂∂ 
=
∂∂ 
Math
∂∂ 
.
∂∂ 
Cos
∂∂ 
(
∂∂ 
i
∂∂ 
*
∂∂ 
radiansPerItem
∂∂ ,
)
∂∂, -
*
∂∂- .
hypotenuseRadius
∂∂. >
;
∂∂> ?
var
∑∑ 
opposite
∑∑ 
=
∑∑ 
Math
∑∑ 
.
∑∑ 
Sin
∑∑ 
(
∑∑ 
i
∑∑ 
*
∑∑ 
radiansPerItem
∑∑ ,
)
∑∑, -
*
∑∑- .
hypotenuseRadius
∑∑. >
;
∑∑> ?
button
ππ 
.
ππ 
CentreX
ππ 
=
ππ 
_centreCanvas
ππ %
.
ππ% &
X
ππ& '
+
ππ( )
opposite
ππ* 2
;
ππ2 3
button
∫∫ 
.
∫∫ 
CentreY
∫∫ 
=
∫∫  
_centreCanvas
∫∫! .
.
∫∫. /
Y
∫∫/ 0
-
∫∫1 2
adjacent
∫∫3 ;
;
∫∫; <
button
ºº 

.
ºº
 

SetBinding
ºº 
(
ºº 
ToggleButton
ºº "
.
ºº" #
IsCheckedProperty
ºº# 4
,
ºº4 5

GetBinding
ºº6 @
(
ºº@ A
$str
ººA G
,
ººG H
	converter
ººI R
:
ººR S 
isCheckedConverter
ººT f
,
ººf g 
converterParameter
ººh z
:
ººz {
i
ºº| }
)
ºº} ~
)
ºº~ 
;ºº Ä
button
ΩΩ 

.
ΩΩ
 

SetBinding
ΩΩ 
(
ΩΩ 
Canvas
ΩΩ 
.
ΩΩ 
LeftProperty
ΩΩ )
,
ΩΩ) *

GetBinding
ΩΩ+ 5
(
ΩΩ5 6
$str
ΩΩ6 9
,
ΩΩ9 :
button
ΩΩ; A
)
ΩΩA B
)
ΩΩB C
;
ΩΩC D
button
ææ 

.
ææ
 

SetBinding
ææ 
(
ææ 
Canvas
ææ 
.
ææ 
TopProperty
ææ (
,
ææ( )

GetBinding
ææ* 4
(
ææ4 5
$str
ææ5 8
,
ææ8 9
button
ææ: @
)
ææ@ A
)
ææA B
;
ææB C
button
¿¿ 

.
¿¿
 
Content
¿¿ 
=
¿¿ 
(
¿¿ 
i
¿¿ 
==
¿¿ 
$num
¿¿ 
?
¿¿ 
$num
¿¿  !
:
¿¿" #
(
¿¿$ %
i
¿¿% &
==
¿¿' )
$num
¿¿* ,
?
¿¿- .
$num
¿¿/ 0
:
¿¿1 2
i
¿¿3 4
)
¿¿4 5
)
¿¿5 6
.
¿¿6 7
ToString
¿¿7 ?
(
¿¿? @
format
¿¿@ F
)
¿¿F G
;
¿¿G H
canvas
¡¡ 

.
¡¡
 
Children
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
button
¡¡ 
)
¡¡ 
;
¡¡  
}
¬¬ 
}
√√ 	
private
∆∆ 
void
∆∆ +
ClockItemDragCompletedHandler
∆∆ 2
(
∆∆2 3
object
∆∆3 9
sender
∆∆: @
,
∆∆@ A$
DragCompletedEventArgs
∆∆B X
e
∆∆Y Z
)
∆∆Z [
{
«« 
OnClockChoiceMade
»» 
(
»» 
this
»» 
,
»» 
DisplayMode
»» &
)
»»& '
;
»»' (
switch
   	
(
  
 
DisplayAutomation
   
)
   
{
ÀÀ 
case
ÃÃ $
ClockDisplayAutomation
ÃÃ	 
.
ÃÃ  
None
ÃÃ  $
:
ÃÃ$ %
break
ÕÕ 

;
ÕÕ
 
case
ŒŒ $
ClockDisplayAutomation
ŒŒ	 
.
ŒŒ  
Cycle
ŒŒ  %
:
ŒŒ% &
DisplayMode
œœ 
=
œœ 
DisplayMode
œœ 
==
œœ !
ClockDisplayMode
œœ" 2
.
œœ2 3
Hours
œœ3 8
?
œœ9 :
ClockDisplayMode
œœ; K
.
œœK L
Minutes
œœL S
:
œœT U
ClockDisplayMode
œœV f
.
œœf g
Hours
œœg l
;
œœl m
break
–– 

;
––
 
case
—— $
ClockDisplayAutomation
——	 
.
——  
ToMinutesOnly
——  -
:
——- .
if
““ 
(
““ 	
DisplayMode
““	 
==
““ 
ClockDisplayMode
““ (
.
““( )
Hours
““) .
)
““. /
DisplayMode
”” 
=
”” 
ClockDisplayMode
”” $
.
””$ %
Minutes
””% ,
;
””, -
break
‘‘ 

;
‘‘
 
default
’’ 
:
’’ 
throw
÷÷ 

new
÷÷ )
ArgumentOutOfRangeException
÷÷ *
(
÷÷* +
)
÷÷+ ,
;
÷÷, -
}
◊◊ 
}
ÿÿ 
private
⁄⁄ 
void
⁄⁄ )
ClockItemDragStartedHandler
⁄⁄ 0
(
⁄⁄0 1
object
⁄⁄1 7
sender
⁄⁄8 >
,
⁄⁄> ?"
DragStartedEventArgs
⁄⁄@ T"
dragStartedEventArgs
⁄⁄U i
)
⁄⁄i j
{
€€ 	#
_currentStartPosition
‹‹ !
=
‹‹" #
new
‹‹$ '
Point
‹‹( -
(
‹‹- ."
dragStartedEventArgs
‹‹. B
.
‹‹B C
HorizontalOffset
‹‹C S
,
‹‹S T"
dragStartedEventArgs
‹‹U i
.
‹‹i j
VerticalOffset
‹‹j x
)
‹‹x y
;
‹‹y z
}
›› 	
private
ﬂﬂ 	
void
ﬂﬂ
 '
ClockItemDragDeltaHandler
ﬂﬂ (
(
ﬂﬂ( )
object
ﬂﬂ) /
sender
ﬂﬂ0 6
,
ﬂﬂ6 7 
DragDeltaEventArgs
ﬂﬂ8 J 
dragDeltaEventArgs
ﬂﬂK ]
)
ﬂﬂ] ^
{
‡‡ 
var
·· !
currentDragPosition
·· #
=
··$ %
new
··& )
Point
··* /
(
··/ 0#
_currentStartPosition
··0 E
.
··E F
X
··F G
+
··H I 
dragDeltaEventArgs
··J \
.
··\ ]
HorizontalChange
··] m
,
··m n$
_currentStartPosition··o Ñ
.··Ñ Ö
Y··Ö Ü
+··á à"
dragDeltaEventArgs··â õ
.··õ ú
VerticalChange··ú ™
)··™ ´
;··´ ¨
var
‚‚ 
delta
‚‚ 
=
‚‚ 
new
‚‚ 
Point
‚‚ !
(
‚‚! "!
currentDragPosition
‚‚" 5
.
‚‚5 6
X
‚‚6 7
-
‚‚8 9
_centreCanvas
‚‚: G
.
‚‚G H
X
‚‚H I
,
‚‚I J!
currentDragPosition
‚‚K ^
.
‚‚^ _
Y
‚‚_ `
-
‚‚a b
_centreCanvas
‚‚c p
.
‚‚p q
Y
‚‚q r
)
‚‚r s
;
‚‚s t
var
‰‰ 
angle
‰‰ 
=
‰‰ 
Math
‰‰ 
.
‰‰ 
Atan2
‰‰ "
(
‰‰" #
delta
‰‰# (
.
‰‰( )
X
‰‰) *
,
‰‰* +
-
‰‰, -
delta
‰‰- 2
.
‰‰2 3
Y
‰‰3 4
)
‰‰4 5
;
‰‰5 6
if
ÂÂ 
(
ÂÂ 
angle
ÂÂ 
<
ÂÂ 
$num
ÂÂ 
)
ÂÂ 
angle
ÂÂ  
+=
ÂÂ! #
$num
ÂÂ$ %
*
ÂÂ& '
Math
ÂÂ( ,
.
ÂÂ, -
PI
ÂÂ- /
;
ÂÂ/ 0
DateTime
ÁÁ 
time
ÁÁ 
;
ÁÁ 
if
ËË 
(
ËË	 

DisplayMode
ËË
 
==
ËË 
ClockDisplayMode
ËË )
.
ËË) *
Hours
ËË* /
)
ËË/ 0
{
ÈÈ 
if
ÍÍ
 
(
ÍÍ 
	Is24Hours
ÍÍ 
)
ÍÍ 
{
ÎÎ
 
var
ÏÏ 
outerBoundary
ÏÏ 
=
ÏÏ  !
(
ÏÏ" #
_centreCanvas
ÏÏ# 0
.
ÏÏ0 1
X
ÏÏ1 2
*
ÏÏ2 3$
ButtonRadiusInnerRatio
ÏÏ3 I
+
ÏÏJ K
(
ÌÌ# $
_centreCanvas
ÌÌ$ 1
.
ÌÌ1 2
X
ÌÌ2 3
*
ÌÌ3 4
ButtonRadiusRatio
ÌÌ4 E
-
ÌÌF G
_centreCanvas
ÌÌH U
.
ÌÌU V
X
ÌÌV W
*
ÌÌW X$
ButtonRadiusInnerRatio
ÌÌX n
)
ÌÌn o
/
ÌÌo p
$num
ÌÌp q
)
ÌÌq r
;
ÌÌr s
var
ÓÓ 
sqrt
ÓÓ 
=
ÓÓ 
Math
ÓÓ 
.
ÓÓ 
Sqrt
ÓÓ "
(
ÓÓ" #
(
ÓÓ# $
_centreCanvas
ÓÓ$ 1
.
ÓÓ1 2
X
ÓÓ2 3
-
ÓÓ4 5!
currentDragPosition
ÓÓ6 I
.
ÓÓI J
X
ÓÓJ K
)
ÓÓK L
*
ÓÓM N
(
ÓÓO P
_centreCanvas
ÓÓP ]
.
ÓÓ] ^
X
ÓÓ^ _
-
ÓÓ` a!
currentDragPosition
ÓÓb u
.
ÓÓu v
X
ÓÓv w
)
ÓÓw x
+
ÓÓy z
(
ÓÓ{ |
_centreCanvasÓÓ| â
.ÓÓâ ä
YÓÓä ã
-ÓÓå ç#
currentDragPositionÓÓé °
.ÓÓ° ¢
YÓÓ¢ £
)ÓÓ£ §
*ÓÓ• ¶
(ÓÓß ®
_centreCanvasÓÓ® µ
.ÓÓµ ∂
YÓÓ∂ ∑
-ÓÓ∏ π#
currentDragPositionÓÓ∫ Õ
.ÓÓÕ Œ
YÓÓŒ œ
)ÓÓœ –
)ÓÓ– —
;ÓÓ— “
var
ÔÔ  
localIsPostMerdiem
ÔÔ $
=
ÔÔ% &
sqrt
ÔÔ' +
>
ÔÔ, -
outerBoundary
ÔÔ. ;
;
ÔÔ; <
var
ÒÒ 
hour
ÒÒ 
=
ÒÒ 
(
ÒÒ 
int
ÒÒ 
)
ÒÒ 
Math
ÒÒ #
.
ÒÒ# $
Round
ÒÒ$ )
(
ÒÒ) *
$num
ÒÒ* +
*
ÒÒ+ ,
angle
ÒÒ, 1
/
ÒÒ1 2
Math
ÒÒ2 6
.
ÒÒ6 7
PI
ÒÒ7 9
,
ÒÒ9 :
MidpointRounding
ÒÒ; K
.
ÒÒK L
AwayFromZero
ÒÒL X
)
ÒÒX Y
%
ÒÒY Z
$num
ÒÒZ \
+
ÒÒ] ^
(
ÒÒ_ ` 
localIsPostMerdiem
ÒÒ` r
?
ÒÒs t
$num
ÒÒu w
:
ÒÒx y
$num
ÒÒz {
)
ÒÒ{ |
;
ÒÒ| }
if
ÚÚ 
(
ÚÚ 
hour
ÚÚ 
==
ÚÚ 
$num
ÚÚ 
)
ÚÚ 
hour
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
else
ÙÙ 
if
ÙÙ 
(
ÙÙ 
hour
ÙÙ !
==
ÙÙ" $
$num
ÙÙ% &
)
ÙÙ& '
hour
ıı 
=
ıı 
$num
ıı !
;
ıı! "
time
ˆˆ 
=
ˆˆ 
new
ˆˆ 
DateTime
ˆˆ !
(
ˆˆ! "
Time
ˆˆ" &
.
ˆˆ& '
Year
ˆˆ' +
,
ˆˆ+ ,
Time
ˆˆ- 1
.
ˆˆ1 2
Month
ˆˆ2 7
,
ˆˆ7 8
Time
ˆˆ9 =
.
ˆˆ= >
Day
ˆˆ> A
,
ˆˆA B
hour
ˆˆC G
,
ˆˆG H
Time
ˆˆI M
.
ˆˆM N
Minute
ˆˆN T
,
ˆˆT U
Time
ˆˆV Z
.
ˆˆZ [
Second
ˆˆ[ a
)
ˆˆa b
;
ˆˆb c
}
˜˜ 
else
¯¯
 
time
˘˘ 
=
˘˘ 
new
˘˘ 
DateTime
˘˘ !
(
˘˘! "
Time
˘˘" &
.
˘˘& '
Year
˘˘' +
,
˘˘+ ,
Time
˘˘- 1
.
˘˘1 2
Month
˘˘2 7
,
˘˘7 8
Time
˘˘9 =
.
˘˘= >
Day
˘˘> A
,
˘˘A B
(
˙˙ 
int
˙˙ 
)
˙˙ 
Math
˙˙ 
.
˙˙ 
Round
˙˙ "
(
˙˙" #
$num
˙˙# $
*
˙˙$ %
angle
˙˙% *
/
˙˙* +
Math
˙˙+ /
.
˙˙/ 0
PI
˙˙0 2
,
˙˙2 3
MidpointRounding
˙˙4 D
.
˙˙D E
AwayFromZero
˙˙E Q
)
˙˙Q R
%
˙˙R S
$num
˙˙S U
+
˙˙V W
(
˙˙X Y
IsPostMeridiem
˙˙Y g
?
˙˙h i
$num
˙˙j l
:
˙˙m n
$num
˙˙o p
)
˙˙p q
,
˙˙q r
Time
˚˚ 
.
˚˚ 
Minute
˚˚ 
,
˚˚ 
Time
˚˚ #
.
˚˚# $
Second
˚˚$ *
)
˚˚* +
;
˚˚+ ,
}
¸¸ 
else
˝˝ 
time
˛˛ 
=
˛˛ 
new
˛˛ 
DateTime
˛˛ #
(
˛˛# $
Time
˛˛$ (
.
˛˛( )
Year
˛˛) -
,
˛˛- .
Time
˛˛/ 3
.
˛˛3 4
Month
˛˛4 9
,
˛˛9 :
Time
˛˛; ?
.
˛˛? @
Day
˛˛@ C
,
˛˛C D
Time
˛˛E I
.
˛˛I J
Hour
˛˛J N
,
˛˛N O
(
˛˛P Q
int
˛˛Q T
)
˛˛T U
Math
˛˛U Y
.
˛˛Y Z
Round
˛˛Z _
(
˛˛_ `
$num
˛˛` b
*
˛˛c d
angle
˛˛e j
/
˛˛k l
Math
˛˛m q
.
˛˛q r
PI
˛˛r t
,
˛˛t u
MidpointRounding˛˛v Ü
.˛˛Ü á
AwayFromZero˛˛á ì
)˛˛ì î
%˛˛ï ñ
$num˛˛ó ô
,˛˛ô ö
Time˛˛õ ü
.˛˛ü †
Second˛˛† ¶
)˛˛¶ ß
;˛˛ß ®
SetCurrentValue
ÄÄ 
(
ÄÄ 
TimeProperty
ÄÄ (
,
ÄÄ( )
time
ÄÄ* .
)
ÄÄ. /
;
ÄÄ/ 0
}
ÅÅ 	
private
ÉÉ 
static
ÉÉ 
void
ÉÉ 
SetFlags
ÉÉ $
(
ÉÉ$ %
Clock
ÉÉ% *
clock
ÉÉ+ 0
)
ÉÉ0 1
{
ÑÑ 	
clock
ÖÖ 
.
ÖÖ 
IsPostMeridiem
ÖÖ  
=
ÖÖ! "
clock
ÖÖ# (
.
ÖÖ( )
Time
ÖÖ) -
.
ÖÖ- .
Hour
ÖÖ. 2
>=
ÖÖ3 5
$num
ÖÖ6 8
;
ÖÖ8 9
clock
ÜÜ 
.
ÜÜ 
IsMidnightHour
ÜÜ  
=
ÜÜ! "
clock
ÜÜ# (
.
ÜÜ( )
Time
ÜÜ) -
.
ÜÜ- .
Hour
ÜÜ. 2
==
ÜÜ3 5
$num
ÜÜ6 7
;
ÜÜ7 8
clock
áá 
.
áá 
IsMiddayHour
áá 
=
áá  
clock
áá! &
.
áá& '
Time
áá' +
.
áá+ ,
Hour
áá, 0
==
áá1 3
$num
áá4 6
;
áá6 7
}
àà 	
private
ää 
BindingBase
ää 

GetBinding
ää &
(
ää& '
string
ää' -
propertyName
ää. :
,
ää: ;
object
ää< B
owner
ääC H
=
ääI J
null
ääK O
,
ääO P
IValueConverter
ääQ `
	converter
ääa j
=
ääk l
null
ääm q
,
ääq r
object
ääs y!
converterParameterääz å
=ääç é
nullääè ì
)ääì î
{
ãã 
var
åå 
result
åå 
=
åå 
new
åå 
Binding
åå 
(
åå 
propertyName
åå (
)
åå( )
{
åå* +
Source
åå+ 1
=
åå2 3
owner
åå4 9
??
åå: <
this
åå= A
,
ååA B
	Converter
ååC L
=
ååM N
	converter
ååO X
,
ååX Y 
ConverterParameter
ååZ l
=
ååm n!
converterParameterååo Å
}ååÅ Ç
;ååÇ É
return
çç 	
result
çç
 
;
çç 
}
éé 
}
èè 
}êê ∞
_D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ClockChoiceMadeEventArgs.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 
delegate 
void '
ClockChoiceMadeEventHandler 1
(1 2
object2 8
sender9 ?
,? @$
ClockChoiceMadeEventArgsA Y
eZ [
)[ \
;\ ]
public 
class $
ClockChoiceMadeEventArgs &
:' (
RoutedEventArgs) 8
{ 
private		 	
readonly		
 
ClockDisplayMode		 #
_displayMode		$ 0
;		0 1
public $
ClockChoiceMadeEventArgs	 !
(! "
ClockDisplayMode" 2
displayMode3 >
)> ?
{ 
_displayMode 
= 
displayMode 
; 
} 
public $
ClockChoiceMadeEventArgs	 !
(! "
ClockDisplayMode" 2
displayMode3 >
,> ?
RoutedEvent@ K
routedEventL W
)W X
:Y Z
base[ _
(_ `
routedEvent` k
)k l
{ 
_displayMode 
= 
displayMode 
; 
} 
public $
ClockChoiceMadeEventArgs	 !
(! "
ClockDisplayMode" 2
displayMode3 >
,> ?
RoutedEvent@ K
routedEventL W
,W X
objectY _
source` f
)f g
:h i
basej n
(n o
routedEvento z
,z {
source	| Ç
)
Ç É
{ 
_displayMode 
= 
displayMode 
; 
} 
public 
ClockDisplayMode	 
Mode 
{ 
get 
{ 
return	 
_displayMode 
; 
} 
} 
} 
} ¶Ä
VD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ClockItemButton.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[		 
TemplatePart		 
(		 
Name		 
=		 
ThumbPartName		 #
,		# $
Type		% )
=		* +
typeof		, 2
(		2 3
Thumb		3 8
)		8 9
)		9 :
]		: ;
public

 
class

 
ClockItemButton

 
:

 
ToggleButton

  ,
{ 
public 
const	 
string 
ThumbPartName #
=$ %
$str& 2
;2 3
public 
static	 
readonly 
DependencyProperty +
CentreXProperty, ;
=< =
DependencyProperty> P
.P Q
RegisterQ Y
(Y Z
nameof 
( 
CentreX 
) 
, 
typeof #
($ %
double% +
)+ ,
,, -
typeof. 4
(5 6
ClockItemButton6 E
)E F
,F G
newH K
PropertyMetadataL \
(\ ]
default] d
(d e
doublee k
)k l
)l m
)m n
;n o
public 
double	 
CentreX 
{ 
get 
{ 
return	 
( 
double 
) 
GetValue !
(! "
CentreXProperty" 1
)1 2
;2 3
}4 5
set 
{ 
SetValue	 
( 
CentreXProperty !
,! "
value# (
)( )
;) *
}+ ,
} 
public 
static	 
readonly 
DependencyProperty +
CentreYProperty, ;
=< =
DependencyProperty> P
.P Q
RegisterQ Y
(Y Z
nameof 
( 
CentreY 
) 
, 
typeof #
($ %
double% +
)+ ,
,, -
typeof. 4
(5 6
ClockItemButton6 E
)E F
,F G
newH K
PropertyMetadataL \
(\ ]
default] d
(d e
doublee k
)k l
)l m
)m n
;n o
public 
double	 
CentreY 
{ 
get 
{ 
return	 
( 
double 
) 
GetValue !
(! "
CentreYProperty" 1
)1 2
;2 3
}4 5
set 
{ 
SetValue	 
( 
CentreYProperty !
,! "
value# (
)( )
;) *
}+ ,
} 
private   	
static  
 
readonly   !
DependencyPropertyKey   /
XPropertyKey  0 <
=  = >
DependencyProperty!! 
.!! 
RegisterReadOnly!! &
(!!& '
$str"" 
,"" 
typeof""	 
("" 
double"" 
)"" 
,"" 
typeof"" 
(""  
ClockItemButton""  /
)""/ 0
,""0 1
new## 
PropertyMetadata## 
(## 
default##  
(##  !
double##! '
)##' (
)##( )
)##) *
;##* +
public%% 
static%%	 
readonly%% 
DependencyProperty%% +
	XProperty%%, 5
=%%6 7
XPropertyKey&& 
.&& 
DependencyProperty&& "
;&&" #
public(( 
double((	 
X(( 
{)) 
get** 
{** 
return**	 
(** 
double** 
)** 
GetValue**  
(**  !
	XProperty**! *
)*** +
;**+ ,
}**- .
private++ 

set++ 
{++ 
SetValue++ 
(++ 
XPropertyKey++ &
,++& '
value++( -
)++- .
;++. /
}++0 1
},, 
private.. 	
static..
 
readonly.. !
DependencyPropertyKey.. /
YPropertyKey..0 <
=..= >
DependencyProperty// 
.// 
RegisterReadOnly// &
(//& '
$str00 
,00 
typeof00	 
(00 
double00 
)00 
,00 
typeof00 
(00  
ClockItemButton00  /
)00/ 0
,000 1
new11 
PropertyMetadata11 
(11 
default11  
(11  !
double11! '
)11' (
)11( )
)11) *
;11* +
public33 
static33	 
readonly33 
DependencyProperty33 +
	YProperty33, 5
=336 7
YPropertyKey44 
.44 
DependencyProperty44 "
;44" #
private66 	
Thumb66
 
_thumb66 
;66 
public88 
double88	 
Y88 
{99 
get:: 
{:: 
return::	 
(:: 
double:: 
):: 
GetValue::  
(::  !
	YProperty::! *
)::* +
;::+ ,
}::- .
private;; 

set;; 
{;; 
SetValue;; 
(;; 
YPropertyKey;; &
,;;& '
value;;( -
);;- .
;;;. /
};;0 1
}<< 
public>> 
override>>	 
void>> 
OnApplyTemplate>> &
(>>& '
)>>' (
{?? 
if@@ 
(@@ 
_thumb@@ 
!=@@ 
null@@ 
)@@ 
{AA 
_thumbBB 
.BB 
DragStartedBB "
-=BB# %
ThumbOnDragStartedBB& 8
;BB8 9
_thumbCC 

.CC
 
	DragDeltaCC 
-=CC 
ThumbOnDragDeltaCC (
;CC( )
_thumbDD 

.DD
 
DragCompletedDD 
-=DD  
ThumbOnDragCompletedDD 0
;DD0 1
}EE 
_thumbGG 	
=GG
 
GetTemplateChildGG 
(GG 
ThumbPartNameGG *
)GG* +
asGG, .
ThumbGG/ 4
;GG4 5
ifII 
(II 
_thumbII 
!=II 
nullII 
)II 
{JJ 
_thumbKK 
.KK 
DragStartedKK "
+=KK# %
ThumbOnDragStartedKK& 8
;KK8 9
_thumbLL 
.LL 
	DragDeltaLL  
+=LL! #
ThumbOnDragDeltaLL$ 4
;LL4 5
_thumbMM 

.MM
 
DragCompletedMM 
+=MM  
ThumbOnDragCompletedMM 0
;MM0 1
}NN 
basePP 
.PP 
OnApplyTemplatePP 
(PP 
)PP 
;PP 
}QQ 
publicSS 
staticSS	 
readonlySS 
RoutedEventSS $
DragDeltaEventSS% 3
=SS4 5
EventManagerTT 
.TT 
RegisterRoutedEventTT #
(TT# $
$strUU 
,UU 
RoutingStrategyVV 
.VV 
BubbleVV 
,VV 
typeofWW 

(WW !
DragDeltaEventHandlerWW !
)WW! "
,WW" #
typeofXX 

(XX 
ClockItemButtonXX 
)XX 
)XX 
;XX 
privateZZ 	
staticZZ
 
voidZZ 
OnDragDeltaZZ !
(ZZ! "
DependencyObject[[ 
d[[ 
,[[ 
double[[ 
horizontalChange[[ .
,[[. /
double[[0 6
verticalChange[[7 E
)[[E F
{\\ 
var]] 
instance]] 
=]] 
(]] 
ClockItemButton]] "
)]]" #
d]]$ %
;]]% &
var^^ 
dragDeltaEventArgs^^ 
=^^ 
new^^ 
DragDeltaEventArgs^^  2
(^^2 3
horizontalChange^^3 C
,^^C D
verticalChange^^E S
)^^S T
{__ 
RoutedEvent`` 
=`` 
DragDeltaEvent``  
,``  !
Sourceaa 

=aa 
daa 
}bb 
;bb 
instancedd 
.dd 

RaiseEventdd 
(dd 
dragDeltaEventArgsdd )
)dd) *
;dd* +
}ee 
publicgg 
staticgg 
readonlygg 
RoutedEventgg *
DragStartedEventgg+ ;
=gg< =
EventManagerhh 
.hh 
RegisterRoutedEventhh ,
(hh, -
$strii 
,ii 
RoutingStrategyjj 
.jj  
Bubblejj  &
,jj& '
typeofkk 
(kk #
DragStartedEventHandlerkk .
)kk. /
,kk/ 0
typeofll 
(ll 
ClockItemButtonll &
)ll& '
)ll' (
;ll( )
publicnn 
staticnn	 
readonlynn 
RoutedEventnn $
DragCompletedEventnn% 7
=nn8 9
EventManageroo 
.oo 
RegisterRoutedEventoo #
(oo# $
$strpp 
,pp 
RoutingStrategyqq 
.qq 
Bubbleqq 
,qq 
typeofrr 

(rr %
DragCompletedEventHandlerrr %
)rr% &
,rr& '
typeofss 

(ss 
ClockItemButtonss 
)ss 
)ss 
;ss 
privateuu 
staticuu 
voiduu 
OnDragStarteduu )
(uu) *
DependencyObjectuu* :
duu; <
,uu< =
doubleuu> D
horizontalOffsetuuE U
,uuU V
doubleuuW ]
verticalOffsetuu^ l
)uul m
{vv 	
varww 
instanceww 
=ww 
(ww 
ClockItemButtonww +
)ww+ ,
dww, -
;ww- .
varxx  
dragStartedEventArgsxx $
=xx% &
newxx' * 
DragStartedEventArgsxx+ ?
(xx? @
horizontalOffsetxx@ P
,xxP Q
verticalOffsetxxR `
)xx` a
{yy 
RoutedEventzz 
=zz 
DragStartedEventzz .
,zz. /
Source{{ 
={{ 
d{{ 
}|| 
;|| 
instance~~ 
.~~ 

RaiseEvent~~ 
(~~   
dragStartedEventArgs~~  4
)~~4 5
;~~5 6
} 	
private
ÅÅ 	
static
ÅÅ
 
void
ÅÅ 
OnDragCompleted
ÅÅ %
(
ÅÅ% &
DependencyObject
ÅÅ& 6
d
ÅÅ7 8
,
ÅÅ8 9
double
ÅÅ: @
horizontalChange
ÅÅA Q
,
ÅÅQ R
double
ÅÅS Y
verticalChange
ÅÅZ h
,
ÅÅh i
bool
ÅÅj n
canceled
ÅÅo w
)
ÅÅw x
{
ÇÇ 
var
ÉÉ 
instance
ÉÉ 
=
ÉÉ 
(
ÉÉ 
ClockItemButton
ÉÉ "
)
ÉÉ" #
d
ÉÉ# $
;
ÉÉ$ %
var
ÑÑ $
dragCompletedEventArgs
ÑÑ 
=
ÑÑ 
new
ÑÑ  #$
DragCompletedEventArgs
ÑÑ$ :
(
ÑÑ: ;
horizontalChange
ÑÑ; K
,
ÑÑK L
verticalChange
ÑÑM [
,
ÑÑ[ \
canceled
ÑÑ] e
)
ÑÑe f
{
ÖÖ 
RoutedEvent
ÜÜ 
=
ÜÜ  
DragCompletedEvent
ÜÜ $
,
ÜÜ$ %
Source
áá 

=
áá 
d
áá 
}
àà 
;
àà 
instance
ää 
.
ää 

RaiseEvent
ää 
(
ää $
dragCompletedEventArgs
ää -
)
ää- .
;
ää. /
}
ãã 
	protected
çç 
override
çç 
void
çç *
OnPreviewMouseLeftButtonDown
çç 6
(
çç6 7"
MouseButtonEventArgs
çç7 K
e
ççL M
)
ççM N
{
éé 
if
èè 
(
èè 
_thumb
èè 
==
èè 
null
èè 
)
èè 
return
èè 
;
èè 
base
ëë 
.
ëë *
OnPreviewMouseLeftButtonDown
ëë $
(
ëë$ %
e
ëë% &
)
ëë& '
;
ëë' (
if
íí 
(
íí 
!
íí 
	IsChecked
íí 
.
íí 
HasValue
íí 
||
íí 
!
íí 
	IsChecked
íí (
.
íí( )
Value
íí) .
)
íí. /
{
ìì 
OnToggle
îî 
(
îî 
)
îî 
;
îî 
}
ïï 
}
ññ 
	protected
õõ 
override
õõ 
void
õõ 
OnClick
õõ !
(
õõ! "
)
õõ" #
{
úú 
if
ùù 
(
ùù 
_thumb
ùù 
==
ùù 
null
ùù 
)
ùù 
base
ûû 
.
ûû 	
OnClick
ûû	 
(
ûû 
)
ûû 
;
ûû 
}
üü 
private
°° 
void
°°  
ThumbOnDragStarted
°° '
(
°°' (
object
°°( .
sender
°°/ 5
,
°°5 6"
DragStartedEventArgs
°°7 K"
dragStartedEventArgs
°°L `
)
°°` a
{
¢¢ 	
OnDragStarted
§§ 
(
§§ 
this
§§ 
,
§§ 
CentreX
§§  '
+
§§( )"
dragStartedEventArgs
§§* >
.
§§> ?
HorizontalOffset
§§? O
-
§§P Q
Width
§§R W
/
§§X Y
$num
§§Z ]
,
§§] ^
CentreY
§§_ f
+
§§g h"
dragStartedEventArgs
§§i }
.
§§} ~
VerticalOffset§§~ å
-§§ç é
Height§§è ï
/§§ñ ó
$num§§ò õ
)§§õ ú
;§§ú ù
}
•• 	
private
ßß 	
void
ßß
 
ThumbOnDragDelta
ßß 
(
ßß  
object
ßß  &
sender
ßß' -
,
ßß- . 
DragDeltaEventArgs
ßß/ A 
dragDeltaEventArgs
ßßB T
)
ßßT U
{
®® 
OnDragDelta
©© 
(
©© 
this
©© 
,
©©  
dragDeltaEventArgs
©© '
.
©©' (
HorizontalChange
©©( 8
,
©©8 9 
dragDeltaEventArgs
©©: L
.
©©L M
VerticalChange
©©M [
)
©©[ \
;
©©\ ]
}
™™ 
private
¨¨ 	
void
¨¨
 "
ThumbOnDragCompleted
¨¨ #
(
¨¨# $
object
¨¨$ *
sender
¨¨+ 1
,
¨¨1 2$
DragCompletedEventArgs
¨¨3 I$
dragCompletedEventArgs
¨¨J `
)
¨¨` a
{
≠≠ 
OnDragCompleted
ÆÆ 
(
ÆÆ 
this
ÆÆ 
,
ÆÆ $
dragCompletedEventArgs
ÆÆ /
.
ÆÆ/ 0
HorizontalChange
ÆÆ0 @
,
ÆÆ@ A$
dragCompletedEventArgs
ÆÆB X
.
ÆÆX Y
VerticalChange
ÆÆY g
,
ÆÆg h$
dragCompletedEventArgs
ÆÆi 
.ÆÆ Ä
CanceledÆÆÄ à
)ÆÆà â
;ÆÆâ ä
}
ØØ 
	protected
±± 
override
±± 
Size
±± 
ArrangeOverride
±± )
(
±±) *
Size
±±* .
	finalSize
±±/ 8
)
±±8 9
{
≤≤ 

Dispatcher
≥≥ 
.
≥≥ 
BeginInvoke
≥≥ 
(
≥≥ 
new
≥≥ 
Action
≥≥ $
(
≥≥$ %
(
≥≥% &
)
≥≥& '
=>
≥≥( *
{
¥¥ 
X
µµ 
=
µµ 
CentreX
µµ 
-
µµ 
	finalSize
µµ 
.
µµ 
Width
µµ !
/
µµ! "
$num
µµ" #
;
µµ# $
Y
∂∂ 
=
∂∂ 
CentreY
∂∂ 
-
∂∂ 
	finalSize
∂∂ 
.
∂∂ 
Height
∂∂ "
/
∂∂" #
$num
∂∂# $
;
∂∂$ %
}
∑∑ 
)
∑∑ 
)
∑∑ 
;
∑∑ 
return
ππ 	
base
ππ
 
.
ππ 
ArrangeOverride
ππ 
(
ππ 
	finalSize
ππ (
)
ππ( )
;
ππ) *
}
∫∫ 
}
ªª 
}ºº ≈
PD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ColorZone.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

enum 
ColorZoneMode 
{ 
Standard 
, 
Inverted 
, 
PrimaryLight 
, 

PrimaryMid 
, 
PrimaryDark 
, 
Accent 
, 
Light 
, 
Dark 
} 
public!! 

class!! 
	ColorZone!! 
:!! 
ContentControl!! +
{"" 
static## 
	ColorZone## 
(## 
)## 
{$$ 	#
DefaultStyleKeyProperty%% #
.%%# $
OverrideMetadata%%$ 4
(%%4 5
typeof%%5 ;
(%%; <
	ColorZone%%< E
)%%E F
,%%F G
new%%H K%
FrameworkPropertyMetadata%%L e
(%%e f
typeof%%f l
(%%l m
	ColorZone%%m v
)%%v w
)%%w x
)%%x y
;%%y z
}&& 	
public(( 
static(( 
readonly(( 
DependencyProperty(( 1
ModeProperty((2 >
=((? @
DependencyProperty((A S
.((S T
Register((T \
(((\ ]
nameof)) 
()) 
Mode)) 
))) 
,)) 
typeof))  
())! "
ColorZoneMode))" /
)))/ 0
,))0 1
typeof))2 8
())9 :
	ColorZone)): C
)))C D
,))D E
new))F I
PropertyMetadata))J Z
())Z [
default))[ b
())b c
ColorZoneMode))c p
)))p q
)))q r
)))r s
;))s t
public++ 
ColorZoneMode++ 
Mode++ !
{,, 	
get-- 
{-- 
return-- 
(-- 
ColorZoneMode-- '
)--' (
GetValue--) 1
(--1 2
ModeProperty--2 >
)--> ?
;--? @
}--A B
set.. 
{.. 
SetValue.. 
(.. 
ModeProperty.. '
,..' (
value..) .
)... /
;../ 0
}..1 2
}// 	
public11 
static11 
readonly11 
DependencyProperty11 1 
CornerRadiusProperty112 F
=11G H
DependencyProperty11I [
.11[ \
Register11\ d
(11d e
nameof22 
(22 
CornerRadius22 
)22  
,22  !
typeof22" (
(22) *
CornerRadius22* 6
)226 7
,227 8
typeof229 ?
(22@ A
	ColorZone22A J
)22J K
,22K L
new22M P
PropertyMetadata22Q a
(22a b
default22b i
(22i j
CornerRadius22j v
)22v w
)22w x
)22x y
;22y z
public44 
CornerRadius44 
CornerRadius44 (
{55 	
get66 
{66 
return66 
(66 
CornerRadius66 &
)66& '
GetValue66( 0
(660 1 
CornerRadiusProperty661 E
)66E F
;66F G
}66H I
set77 
{77 
SetValue77 
(77  
CornerRadiusProperty77 /
,77/ 0
value771 6
)776 7
;777 8
}779 :
}88 	
}99 
}:: ﬂ
VD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ColorZoneAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{		 
public

 

static

 
class

 
ColorZoneAssist

 '
{ 
public 
static 
readonly 
DependencyProperty 1
ModeProperty2 >
=? @
DependencyPropertyA S
.S T
RegisterAttachedT d
(d e
$str 
, 
typeof 
( 
ColorZoneMode (
)( )
,) *
typeof+ 1
(1 2
ColorZoneAssist2 A
)A B
,B C
newD G%
FrameworkPropertyMetadataH a
(a b
defaultb i
(i j
ColorZoneModej w
)w x
,x y-
 FrameworkPropertyMetadataOptions	z ö
.
ö õ
Inherits
õ £
)
£ §
)
§ •
;
• ¶
public 
static 
void 
SetMode "
(" #
DependencyObject# 3
element4 ;
,; <
ColorZoneMode= J
valueK P
)P Q
{ 	
element 
. 
SetValue 
( 
ModeProperty )
,) *
value+ 0
)0 1
;1 2
} 	
public 
static 
ColorZoneMode #
GetMode$ +
(+ ,
DependencyObject, <
element= D
)D E
{ 	
return 
( 
ColorZoneMode !
)! "
element" )
.) *
GetValue* 2
(2 3
ModeProperty3 ?
)? @
;@ A
} 	
} 
} ÿ
UD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ComboBoxAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
ComboBoxAssist &
{ 
public

 
static

 
readonly

 
DependencyProperty

 1
ClassicModeProperty

2 E
=

F G
DependencyProperty

H Z
.

Z [
RegisterAttached

[ k
(

k l
$str 
, 
typeof 
( 
bool 
) 
, 
typeof 
( 
ComboBoxAssist "
)" #
,# $
new %
FrameworkPropertyMetadata )
() *
false* /
,/ 0,
 FrameworkPropertyMetadataOptions 0
.0 1
AffectsRender1 >
|? @,
 FrameworkPropertyMetadataOptionsA a
.a b
Inheritsb j
)j k
)k l
;l m
public 
static 
bool 
GetClassicMode )
() *
DependencyObject* :
element; B
)B C
{ 	
return 
( 
bool 
) 
element  
.  !
GetValue! )
() *
ClassicModeProperty* =
)= >
;> ?
} 	
public 
static 
void 
SetClassicMode )
() *
DependencyObject* :
element; B
,B C
objectD J
valueK P
)P Q
{ 	
element 
. 
SetValue 
( 
ClassicModeProperty 0
,0 1
value2 7
)7 8
;8 9
} 	
public   
static   
readonly   
DependencyProperty   1$
ShowSelectedItemProperty  2 J
=  K L
DependencyProperty  M _
.  _ `
RegisterAttached  ` p
(  p q
$str!! 
,!! 
typeof"" 
("" 
bool"" 
)"" 
,"" 
typeof## 
(## 
ComboBoxAssist## "
)##" #
,### $
new$$ %
FrameworkPropertyMetadata$$ )
($$) *
false$$* /
,$$/ 0,
 FrameworkPropertyMetadataOptions%% 0
.%%0 1
AffectsRender%%1 >
|%%? @,
 FrameworkPropertyMetadataOptions%%A a
.%%a b
Inherits%%b j
)%%j k
)%%k l
;%%l m
public'' 
static'' 
bool'' 
GetShowSelectedItem'' .
(''. /
DependencyObject''/ ?
element''@ G
)''G H
{(( 	
return)) 
()) 
bool)) 
))) 
element))  
.))  !
GetValue))! )
())) *$
ShowSelectedItemProperty))* B
)))B C
;))C D
}** 	
public,, 
static,, 
void,, 
SetShowSelectedItem,, .
(,,. /
DependencyObject,,/ ?
element,,@ G
,,,G H
object,,I O
value,,P U
),,U V
{-- 	
element.. 
... 
SetValue.. 
(.. $
ShowSelectedItemProperty.. 5
,..5 6
value..7 <
)..< =
;..= >
}// 	
}00 
}11 ¥≥
TD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ComboBoxPopup.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
{ 
public 

enum "
ComboBoxPopupPlacement &
{ 
	Undefined 
, 
Down 
, 
Up 

,
 
Classic 
} 
public 

class 
ComboBoxPopup 
:  
Popup! &
{ 
public 
static 
readonly 
DependencyProperty 1%
UpContentTemplateProperty2 K
= 
DependencyProperty  
.  !
Register! )
() *
nameof* 0
(0 1
UpContentTemplate1 B
)B C
,C D
typeof 
( 
ControlTemplate &
)& '
,' (
typeof 
( 
ComboBoxPopup $
)$ %
,% &
new 
UIPropertyMetadata &
(& '
null' +
,+ ,1
%CreateTemplatePropertyChangedCallback- R
(R S"
ComboBoxPopupPlacementS i
.i j
Classicj q
)q r
)r s
)s t
;t u
public 
ControlTemplate 
UpContentTemplate 0
{ 	
get   
{   
return   
(   
ControlTemplate   )
)  ) *
GetValue  * 2
(  2 3%
UpContentTemplateProperty  3 L
)  L M
;  M N
}  O P
set!! 
{!! 
SetValue!! 
(!! %
UpContentTemplateProperty!! 4
,!!4 5
value!!6 ;
)!!; <
;!!< =
}!!> ?
}"" 	
public(( 
static(( 
readonly(( 
DependencyProperty(( 1'
DownContentTemplateProperty((2 M
=)) 
DependencyProperty))  
.))  !
Register))! )
())) *
nameof))* 0
())0 1
DownContentTemplate))1 D
)))D E
,))E F
typeof** 
(** 
ControlTemplate** &
)**& '
,**' (
typeof++ 
(++ 
ComboBoxPopup++ $
)++$ %
,++% &
new,, 
UIPropertyMetadata,, &
(,,& '
null,,' +
,,,+ ,1
%CreateTemplatePropertyChangedCallback,,- R
(,,R S"
ComboBoxPopupPlacement,,S i
.,,i j
Down,,j n
),,n o
),,o p
),,p q
;,,q r
public.. 
ControlTemplate.. 
DownContentTemplate.. 2
{// 	
get00 
{00 
return00 
(00 
ControlTemplate00 )
)00) *
GetValue00* 2
(002 3'
DownContentTemplateProperty003 N
)00N O
;00O P
}00Q R
set11 
{11 
SetValue11 
(11 '
DownContentTemplateProperty11 6
,116 7
value118 =
)11= >
;11> ?
}11@ A
}22 	
public88 
static88 
readonly88 
DependencyProperty88 1*
ClassicContentTemplateProperty882 P
=99 
DependencyProperty99  
.99  !
Register99! )
(99) *
nameof99* 0
(990 1"
ClassicContentTemplate991 G
)99G H
,99H I
typeof:: 
(:: 
ControlTemplate:: &
)::& '
,::' (
typeof;; 
(;; 
ComboBoxPopup;; $
);;$ %
,;;% &
new<< 
UIPropertyMetadata<< &
(<<& '
null<<' +
,<<+ ,1
%CreateTemplatePropertyChangedCallback<<- R
(<<R S"
ComboBoxPopupPlacement<<S i
.<<i j
Up<<j l
)<<l m
)<<m n
)<<n o
;<<o p
public>> 
ControlTemplate>> "
ClassicContentTemplate>> 5
{?? 	
get@@ 
{@@ 
return@@ 
(@@ 
ControlTemplate@@ )
)@@) *
GetValue@@* 2
(@@2 3*
ClassicContentTemplateProperty@@3 Q
)@@Q R
;@@R S
}@@T U
setAA 
{AA 
SetValueAA 
(AA *
ClassicContentTemplatePropertyAA 9
,AA9 :
valueAA; @
)AA@ A
;AAA B
}AAC D
}BB 	
publicHH 
staticHH 
readonlyHH 
DependencyPropertyHH 1$
UpVerticalOffsetPropertyHH2 J
=II 
DependencyPropertyII  
.II  !
RegisterII! )
(II) *
nameofII* 0
(II0 1
UpVerticalOffsetII1 A
)IIA B
,IIB C
typeofJJ 
(JJ 
doubleJJ 
)JJ 
,JJ 
typeofKK 
(KK 
ComboBoxPopupKK $
)KK$ %
,KK% &
newLL 
PropertyMetadataLL $
(LL$ %
$numLL% (
)LL( )
)LL) *
;LL* +
publicNN 
doubleNN 
UpVerticalOffsetNN &
{OO 	
getPP 
{PP 
returnPP 
(PP 
doublePP  
)PP  !
GetValuePP! )
(PP) *$
UpVerticalOffsetPropertyPP* B
)PPB C
;PPC D
}PPE F
setQQ 
{QQ 
SetValueQQ 
(QQ $
UpVerticalOffsetPropertyQQ 3
,QQ3 4
valueQQ5 :
)QQ: ;
;QQ; <
}QQ= >
}RR 	
publicXX 
staticXX 
readonlyXX 
DependencyPropertyXX 1&
DownVerticalOffsetPropertyXX2 L
=YY 
DependencyPropertyYY  
.YY  !
RegisterYY! )
(YY) *
nameofYY* 0
(YY0 1
DownVerticalOffsetYY1 C
)YYC D
,YYD E
typeofZZ 
(ZZ 
doubleZZ 
)ZZ 
,ZZ 
typeof[[ 
([[ 
ComboBoxPopup[[ $
)[[$ %
,[[% &
new\\ 
PropertyMetadata\\ $
(\\$ %
$num\\% (
)\\( )
)\\) *
;\\* +
public^^ 
double^^ 
DownVerticalOffset^^ (
{__ 	
get`` 
{`` 
return`` 
(`` 
double``  
)``  !
GetValue``! )
(``) *&
DownVerticalOffsetProperty``* D
)``D E
;``E F
}``G H
setaa 
{aa 
SetValueaa 
(aa &
DownVerticalOffsetPropertyaa 5
,aa5 6
valueaa7 <
)aa< =
;aa= >
}aa? @
}bb 	
publichh 
statichh 
readonlyhh 
DependencyPropertyhh 1"
PopupPlacementPropertyhh2 H
=ii 
DependencyPropertyii  
.ii  !
Registerii! )
(ii) *
nameofii* 0
(ii0 1
PopupPlacementii1 ?
)ii? @
,ii@ A
typeofjj 
(jj "
ComboBoxPopupPlacementjj -
)jj- .
,jj. /
typeofkk 
(kk 
ComboBoxPopupkk $
)kk$ %
,kk% &
newll 
PropertyMetadatall $
(ll$ %"
ComboBoxPopupPlacementll% ;
.ll; <
	Undefinedll< E
,llE F1
%PopupPlacementPropertyChangedCallbackllG l
)lll m
)llm n
;lln o
publicnn "
ComboBoxPopupPlacementnn %
PopupPlacementnn& 4
{oo 	
getpp 
{pp 
returnpp 
(pp "
ComboBoxPopupPlacementpp 0
)pp0 1
GetValuepp1 9
(pp9 :"
PopupPlacementPropertypp: P
)ppP Q
;ppQ R
}ppS T
setqq 
{qq 
SetValueqq 
(qq "
PopupPlacementPropertyqq 1
,qq1 2
valueqq3 8
)qq8 9
;qq9 :
}qq; <
}rr 	
privatexx 
staticxx 
readonlyxx !
DependencyPropertyKeyxx  5!
BackgroundPropertyKeyxx6 K
=xxL M
DependencyPropertyyy 
.yy 
RegisterReadOnlyyy /
(yy/ 0
$strzz 
,zz 
typeofzz $
(zz$ %
Brushzz% *
)zz* +
,zz+ ,
typeofzz- 3
(zz3 4
ComboBoxPopupzz4 A
)zzA B
,zzB C
new{{ 
PropertyMetadata{{ $
({{$ %
default{{% ,
({{, -
Brush{{- 2
){{2 3
){{3 4
){{4 5
;{{5 6
public}} 
static}} 
readonly}} 
DependencyProperty}} 1
BackgroundProperty}}2 D
=}}E F!
BackgroundPropertyKey~~ !
.~~! "
DependencyProperty~~" 4
;~~4 5
public
ÄÄ 
Brush
ÄÄ 

Background
ÄÄ 
{
ÅÅ 	
get
ÇÇ 
{
ÇÇ 
return
ÇÇ 
(
ÇÇ 
Brush
ÇÇ 
)
ÇÇ  
GetValue
ÇÇ! )
(
ÇÇ) * 
BackgroundProperty
ÇÇ* <
)
ÇÇ< =
;
ÇÇ= >
}
ÇÇ? @
private
ÉÉ 
set
ÉÉ 
{
ÉÉ 
SetValue
ÉÉ "
(
ÉÉ" ##
BackgroundPropertyKey
ÉÉ# 8
,
ÉÉ8 9
value
ÉÉ: ?
)
ÉÉ? @
;
ÉÉ@ A
}
ÉÉB C
}
ÑÑ 	
public
ää 
static
ää 
readonly
ää  
DependencyProperty
ää 1+
DefaultVerticalOffsetProperty
ää2 O
=
ãã  
DependencyProperty
ãã  
.
ãã  !
Register
ãã! )
(
ãã) *
nameof
ãã* 0
(
ãã0 1#
DefaultVerticalOffset
ãã1 F
)
ããF G
,
ããG H
typeof
åå 
(
åå 
double
åå 
)
åå 
,
åå 
typeof
çç 
(
çç 
ComboBoxPopup
çç $
)
çç$ %
,
çç% &
new
éé 
PropertyMetadata
éé $
(
éé$ %
$num
éé% (
)
éé( )
)
éé) *
;
éé* +
public
êê 
double
êê #
DefaultVerticalOffset
êê +
{
ëë 	
get
íí 
{
íí 
return
íí 
(
íí 
double
íí  
)
íí  !
GetValue
íí! )
(
íí) *+
DefaultVerticalOffsetProperty
íí* G
)
ííG H
;
ííH I
}
ííJ K
set
ìì 
{
ìì 
SetValue
ìì 
(
ìì +
DefaultVerticalOffsetProperty
ìì 8
,
ìì8 9
value
ìì: ?
)
ìì? @
;
ìì@ A
}
ììB C
}
îî 	
public
öö 
double
öö #
VisiblePlacementWidth
öö +
{
õõ 	
get
úú 
{
úú 
return
úú 
(
úú 
double
úú  
)
úú  !
GetValue
úú! )
(
úú) *+
VisiblePlacementWidthProperty
úú* G
)
úúG H
;
úúH I
}
úúJ K
set
ùù 
{
ùù 
SetValue
ùù 
(
ùù +
VisiblePlacementWidthProperty
ùù 8
,
ùù8 9
value
ùù: ?
)
ùù? @
;
ùù@ A
}
ùùB C
}
ûû 	
public
†† 
static
†† 
readonly
††  
DependencyProperty
†† 1+
VisiblePlacementWidthProperty
††2 O
=
°°  
DependencyProperty
°°  
.
°°  !
Register
°°! )
(
°°) *
nameof
°°* 0
(
°°0 1#
VisiblePlacementWidth
°°1 F
)
°°F G
,
°°G H
typeof
¢¢ 
(
¢¢ 
double
¢¢ 
)
¢¢ 
,
¢¢ 
typeof
££ 
(
££ 
ComboBoxPopup
££ $
)
££$ %
,
££% &
new
§§ 
PropertyMetadata
§§ $
(
§§$ %
$num
§§% (
)
§§( )
)
§§) *
;
§§* +
public
™™ 
static
™™ 
readonly
™™  
DependencyProperty
™™ 1!
ClassicModeProperty
™™2 E
=
´´  
DependencyProperty
´´  
.
´´  !
Register
´´! )
(
´´) *
nameof
¨¨ 
(
¨¨ 
ClassicMode
¨¨ "
)
¨¨" #
,
¨¨# $
typeof
≠≠ 
(
≠≠ 
bool
≠≠ 
)
≠≠ 
,
≠≠ 
typeof
ÆÆ 
(
ÆÆ 
ComboBoxPopup
ÆÆ $
)
ÆÆ$ %
,
ÆÆ% &
new
ØØ '
FrameworkPropertyMetadata
ØØ -
(
ØØ- .
true
ØØ. 2
)
ØØ2 3
)
ØØ3 4
;
ØØ4 5
public
±± 
bool
±± 
ClassicMode
±± 
{
≤≤ 	
get
≥≥ 
{
≥≥ 
return
≥≥ 
(
≥≥ 
bool
≥≥ 
)
≥≥ 
GetValue
≥≥ '
(
≥≥' (!
ClassicModeProperty
≥≥( ;
)
≥≥; <
;
≥≥< =
}
≥≥> ?
set
¥¥ 
{
¥¥ 
SetValue
¥¥ 
(
¥¥ !
ClassicModeProperty
¥¥ .
,
¥¥. /
value
¥¥0 5
)
¥¥5 6
;
¥¥6 7
}
¥¥8 9
}
µµ 	
public
ππ 
ComboBoxPopup
ππ 
(
ππ 
)
ππ 
{
∫∫ 	*
CustomPopupPlacementCallback
ªª (
=
ªª) *2
$ComboBoxCustomPopupPlacementCallback
ªª+ O
;
ªªO P
var
ºº %
childPropertyDescriptor
ºº '
=
ºº( )*
DependencyPropertyDescriptor
ºº* F
.
ººF G
FromProperty
ººG S
(
ººS T
ComboBoxPopup
ººT a
.
ººa b
ChildProperty
ººb o
,
ººo p
typeof
ººq w
(
ººw x
ComboBoxPopupººx Ö
)ººÖ Ü
)ººÜ á
;ººá à
EventHandler
ΩΩ !
childChangedHandler
ΩΩ ,
=
ΩΩ- .
(
ΩΩ/ 0
sender
ΩΩ0 6
,
ΩΩ6 7
x
ΩΩ8 9
)
ΩΩ9 :
=>
ΩΩ; =
{
ææ 
if
øø 
(
øø 
PopupPlacement
øø "
!=
øø# %$
ComboBoxPopupPlacement
øø& <
.
øø< =
	Undefined
øø= F
)
øøF G
{
¿¿ !
UpdateChildTemplate
¡¡ '
(
¡¡' (
PopupPlacement
¡¡( 6
)
¡¡6 7
;
¡¡7 8
}
¬¬ 
}
√√ 
;
√√ 
Loaded
≈≈ 
+=
≈≈ 
(
≈≈ 
sender
≈≈ 
,
≈≈ 
args
≈≈ #
)
≈≈# $
=>
≈≈% '
{
∆∆ %
childPropertyDescriptor
«« '
.
««' (
AddValueChanged
««( 7
(
««7 8
this
««8 <
,
««< =!
childChangedHandler
««> Q
)
««Q R
;
««R S
}
»» 
;
»» 
Unloaded
   
+=
   
(
   
sender
   
,
    
args
  ! %
)
  % &
=>
  ' )
{
ÀÀ %
childPropertyDescriptor
ÃÃ '
.
ÃÃ' ( 
RemoveValueChanged
ÃÃ( :
(
ÃÃ: ;
this
ÃÃ; ?
,
ÃÃ? @!
childChangedHandler
ÃÃA T
)
ÃÃT U
;
ÃÃU V
}
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
private
–– 
void
–– 
SetupBackground
–– $
(
––$ %
IEnumerable
––% 0
<
––0 1
DependencyObject
––1 A
>
––A B
visualAncestry
––C Q
)
––Q R
{
—— 	
var
““ 

background
““ 
=
““ 
visualAncestry
““ +
.
”” 
Select
”” 
(
”” 
v
”” 
=>
”” 
(
”” 
v
”” 
as
””  "
Control
””# *
)
””* +
?
””+ ,
.
””, -

Background
””- 7
??
””8 :
(
””; <
v
””< =
as
””> @
Panel
””A F
)
””F G
?
””G H
.
””H I

Background
””I S
??
””T V
(
””W X
v
””X Y
as
””Z \
Border
””] c
)
””c d
?
””d e
.
””e f

Background
””f p
)
””p q
.
‘‘ 
FirstOrDefault
‘‘ 
(
‘‘  
v
‘‘  !
=>
‘‘" $
v
‘‘% &
!=
‘‘' )
null
‘‘* .
&&
‘‘/ 1
!
‘‘2 3
Equals
‘‘3 9
(
‘‘9 :
v
‘‘: ;
,
‘‘; <
Brushes
‘‘= D
.
‘‘D E
Transparent
‘‘E P
)
‘‘P Q
&&
‘‘R T
v
‘‘U V
is
‘‘W Y
SolidColorBrush
‘‘Z i
)
‘‘i j
;
‘‘j k
if
÷÷ 
(
÷÷ 

background
÷÷ 
!=
÷÷ 
null
÷÷ "
)
÷÷" #
{
◊◊ 

Background
ÿÿ 
=
ÿÿ 

background
ÿÿ '
;
ÿÿ' (
}
ŸŸ 
}
⁄⁄ 	
private
‹‹ 
void
‹‹ (
SetupVisiblePlacementWidth
‹‹ /
(
‹‹/ 0
IEnumerable
‹‹0 ;
<
‹‹; <
DependencyObject
‹‹< L
>
‹‹L M
visualAncestry
‹‹N \
)
‹‹\ ]
{
›› 	
var
ﬁﬁ 
parent
ﬁﬁ 
=
ﬁﬁ 
visualAncestry
ﬁﬁ '
.
ﬁﬁ' (
OfType
ﬁﬁ( .
<
ﬁﬁ. /
Panel
ﬁﬁ/ 4
>
ﬁﬁ4 5
(
ﬁﬁ5 6
)
ﬁﬁ6 7
.
ﬁﬁ7 8
	ElementAt
ﬁﬁ8 A
(
ﬁﬁA B
$num
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E#
VisiblePlacementWidth
ﬂﬂ !
=
ﬂﬂ" #

TreeHelper
ﬂﬂ$ .
.
ﬂﬂ. /
GetVisibleWidth
ﬂﬂ/ >
(
ﬂﬂ> ?
(
ﬂﬂ? @
FrameworkElement
ﬂﬂ@ P
)
ﬂﬂP Q
PlacementTarget
ﬂﬂQ `
,
ﬂﬂ` a
parent
ﬂﬂb h
)
ﬂﬂh i
;
ﬂﬂi j
}
‡‡ 	
private
‚‚ "
CustomPopupPlacement
‚‚ $
[
‚‚$ %
]
‚‚% &2
$ComboBoxCustomPopupPlacementCallback
‚‚' K
(
‚‚K L
Size
„„ 
	popupSize
„„ 
,
„„ 
Size
„„  

targetSize
„„! +
,
„„+ ,
Point
„„- 2
offset
„„3 9
)
„„9 :
{
‰‰ 	
var
ÂÂ 
visualAncestry
ÂÂ 
=
ÂÂ  
PlacementTarget
ÂÂ! 0
.
ÂÂ0 1
GetVisualAncestry
ÂÂ1 B
(
ÂÂB C
)
ÂÂC D
.
ÂÂD E
ToList
ÂÂE K
(
ÂÂK L
)
ÂÂL M
;
ÂÂM N
SetupBackground
ÁÁ 
(
ÁÁ 
visualAncestry
ÁÁ *
)
ÁÁ* +
;
ÁÁ+ ,(
SetupVisiblePlacementWidth
ÈÈ &
(
ÈÈ& '
visualAncestry
ÈÈ' 5
)
ÈÈ5 6
;
ÈÈ6 7
var
ÎÎ 
data
ÎÎ 
=
ÎÎ  
GetPositioningData
ÎÎ )
(
ÎÎ) *
visualAncestry
ÎÎ* 8
,
ÎÎ8 9
	popupSize
ÎÎ: C
,
ÎÎC D

targetSize
ÎÎE O
,
ÎÎO P
offset
ÎÎQ W
)
ÎÎW X
;
ÎÎX Y
var
ÏÏ 
preferUpIfSafe
ÏÏ 
=
ÏÏ  
data
ÏÏ! %
.
ÏÏ% &
	LocationY
ÏÏ& /
+
ÏÏ0 1
data
ÏÏ2 6
.
ÏÏ6 7
	PopupSize
ÏÏ7 @
.
ÏÏ@ A
Height
ÏÏA G
>
ÏÏH I
data
ÏÏJ N
.
ÏÏN O
ScreenHeight
ÏÏO [
;
ÏÏ[ \
if
ÓÓ 
(
ÓÓ 
ClassicMode
ÓÓ 
||
ÔÔ 
data
ÔÔ 
.
ÔÔ 
	LocationX
ÔÔ !
+
ÔÔ" #
data
ÔÔ$ (
.
ÔÔ( )
	PopupSize
ÔÔ) 2
.
ÔÔ2 3
Width
ÔÔ3 8
-
ÔÔ9 :
data
ÔÔ; ?
.
ÔÔ? @
RealOffsetX
ÔÔ@ K
>
ÔÔL M
data
ÔÔN R
.
ÔÔR S
ScreenWidth
ÔÔS ^
||
 
data
 
.
 
	LocationX
 !
-
" #
data
$ (
.
( )
RealOffsetX
) 4
<
5 6
$num
7 8
||
ÒÒ 
!
ÒÒ 
preferUpIfSafe
ÒÒ "
&&
ÒÒ# %
data
ÒÒ& *
.
ÒÒ* +
	LocationY
ÒÒ+ 4
-
ÒÒ5 6
Math
ÒÒ7 ;
.
ÒÒ; <
Abs
ÒÒ< ?
(
ÒÒ? @
data
ÒÒ@ D
.
ÒÒD E
NewDownY
ÒÒE M
)
ÒÒM N
<
ÒÒO P
$num
ÒÒQ R
)
ÒÒR S
{
ÚÚ 
SetCurrentValue
ÛÛ 
(
ÛÛ  $
PopupPlacementProperty
ÛÛ  6
,
ÛÛ6 7$
ComboBoxPopupPlacement
ÛÛ8 N
.
ÛÛN O
Classic
ÛÛO V
)
ÛÛV W
;
ÛÛW X
return
ÙÙ 
new
ÙÙ 
[
ÙÙ 
]
ÙÙ 
{
ÙÙ &
GetClassicPopupPlacement
ÙÙ 7
(
ÙÙ7 8
this
ÙÙ8 <
,
ÙÙ< =
data
ÙÙ> B
)
ÙÙB C
}
ÙÙD E
;
ÙÙE F
}
ıı 
if
ˆˆ 
(
ˆˆ 
preferUpIfSafe
ˆˆ 
)
ˆˆ 
{
˜˜ 
SetCurrentValue
¯¯ 
(
¯¯  $
PopupPlacementProperty
¯¯  6
,
¯¯6 7$
ComboBoxPopupPlacement
¯¯8 N
.
¯¯N O
Up
¯¯O Q
)
¯¯Q R
;
¯¯R S
return
˘˘ 
new
˘˘ 
[
˘˘ 
]
˘˘ 
{
˘˘ !
GetUpPopupPlacement
˘˘ 2
(
˘˘2 3
data
˘˘3 7
)
˘˘7 8
}
˘˘9 :
;
˘˘: ;
}
˙˙ 
SetCurrentValue
˚˚ 
(
˚˚ $
PopupPlacementProperty
˚˚ 2
,
˚˚2 3$
ComboBoxPopupPlacement
˚˚4 J
.
˚˚J K
Down
˚˚K O
)
˚˚O P
;
˚˚P Q
return
¸¸ 
new
¸¸ 
[
¸¸ 
]
¸¸ 
{
¸¸ #
GetDownPopupPlacement
¸¸ 0
(
¸¸0 1
data
¸¸1 5
)
¸¸5 6
}
¸¸7 8
;
¸¸8 9
}
˝˝ 	
private
ˇˇ 
void
ˇˇ $
SetChildTemplateIfNeed
ˇˇ +
(
ˇˇ+ ,
ControlTemplate
ˇˇ, ;
template
ˇˇ< D
)
ˇˇD E
{
ÄÄ 	
var
ÅÅ 
contentControl
ÅÅ 
=
ÅÅ  
Child
ÅÅ! &
as
ÅÅ' )
ContentControl
ÅÅ* 8
;
ÅÅ8 9
if
ÇÇ 
(
ÇÇ 
contentControl
ÇÇ 
==
ÇÇ !
null
ÇÇ" &
)
ÇÇ& '
return
ÇÇ( .
;
ÇÇ. /
if
ÖÖ 
(
ÖÖ 
!
ÖÖ 
ReferenceEquals
ÖÖ  
(
ÖÖ  !
contentControl
ÖÖ! /
.
ÖÖ/ 0
Template
ÖÖ0 8
,
ÖÖ8 9
template
ÖÖ: B
)
ÖÖB C
)
ÖÖC D
{
ÜÜ 
contentControl
áá 
.
áá 
Template
áá '
=
áá( )
template
áá* 2
;
áá2 3
}
àà 
}
ââ 	
private
ãã 
PositioningData
ãã  
GetPositioningData
ãã  2
(
ãã2 3
IEnumerable
ãã3 >
<
ãã> ?
DependencyObject
ãã? O
>
ããO P
visualAncestry
ããQ _
,
ãã_ `
Size
ããa e
	popupSize
ããf o
,
ãão p
Size
ããq u

targetSizeããv Ä
,ããÄ Å
PointããÇ á
offsetããà é
)ããé è
{
åå 	
var
çç  
locationFromScreen
çç "
=
çç# $
PlacementTarget
çç% 4
.
çç4 5
PointToScreen
çç5 B
(
ççB C
new
ççC F
Point
ççG L
(
ççL M
$num
ççM N
,
ççN O
$num
ççP Q
)
ççQ R
)
ççR S
;
ççS T
var
èè 

mainVisual
èè 
=
èè 
visualAncestry
èè +
.
èè+ ,
OfType
èè, 2
<
èè2 3
Visual
èè3 9
>
èè9 :
(
èè: ;
)
èè; <
.
èè< =
LastOrDefault
èè= J
(
èèJ K
)
èèK L
;
èèL M
if
êê 
(
êê 

mainVisual
êê 
==
êê 
null
êê "
)
êê" #
throw
êê$ )
new
êê* -
ArgumentException
êê. ?
(
êê? @
$"
êê@ B
{
êêB C
nameof
êêC I
(
êêI J
visualAncestry
êêJ X
)
êêX Y
}
êêY Z(
 must contains unless one 
êêZ t
{
êêt u
nameof
êêu {
(
êê{ |
Visualêê| Ç
)êêÇ É
}êêÉ Ñ 
 control inside.êêÑ î
"êêî ï
)êêï ñ
;êêñ ó
var
íí 
screen
íí 
=
íí 
Screen
íí 
.
íí  
	FromPoint
íí  )
(
íí) * 
locationFromScreen
íí* <
)
íí< =
;
íí= >
var
ìì 
screenWidth
ìì 
=
ìì 
(
ìì 
int
ìì "
)
ìì" #
	DpiHelper
ìì# ,
.
ìì, - 
TransformToDeviceX
ìì- ?
(
ìì? @

mainVisual
ìì@ J
,
ììJ K
(
ììL M
int
ììM P
)
ììP Q
screen
ììQ W
.
ììW X
Bounds
ììX ^
.
ìì^ _
Width
ìì_ d
)
ììd e
;
ììe f
var
îî 
screenHeight
îî 
=
îî 
(
îî  
int
îî  #
)
îî# $
	DpiHelper
îî$ -
.
îî- . 
TransformToDeviceY
îî. @
(
îî@ A

mainVisual
îîA K
,
îîK L
(
îîM N
int
îîN Q
)
îîQ R
screen
îîR X
.
îîX Y
Bounds
îîY _
.
îî_ `
Height
îî` f
)
îîf g
;
îîg h
var
óó 
	locationX
óó 
=
óó 
(
óó 
int
óó  
)
óó  !
(
óó! " 
locationFromScreen
óó" 4
.
óó4 5
X
óó5 6
-
óó7 8
screen
óó9 ?
.
óó? @
Bounds
óó@ F
.
óóF G
X
óóG H
)
óóH I
%
óóJ K
screenWidth
óóL W
;
óóW X
var
òò 
	locationY
òò 
=
òò 
(
òò 
int
òò  
)
òò  !
(
òò! " 
locationFromScreen
òò" 4
.
òò4 5
Y
òò5 6
-
òò7 8
screen
òò9 ?
.
òò? @
Bounds
òò@ F
.
òòF G
Y
òòG H
)
òòH I
%
òòJ K
screenHeight
òòL X
;
òòX Y
var
öö &
upVerticalOffsetIndepent
öö (
=
öö) *
	DpiHelper
öö+ 4
.
öö4 5 
TransformToDeviceY
öö5 G
(
ööG H

mainVisual
ööH R
,
ööR S
UpVerticalOffset
ööT d
)
ööd e
;
ööe f
var
õõ 
newUpY
õõ 
=
õõ &
upVerticalOffsetIndepent
õõ 1
-
õõ2 3
	popupSize
õõ4 =
.
õõ= >
Height
õõ> D
+
õõE F

targetSize
õõG Q
.
õõQ R
Height
õõR X
;
õõX Y
var
úú 
newDownY
úú 
=
úú 
	DpiHelper
úú $
.
úú$ % 
TransformToDeviceY
úú% 7
(
úú7 8

mainVisual
úú8 B
,
úúB C 
DownVerticalOffset
úúD V
)
úúV W
;
úúW X
double
ûû 
offsetX
ûû 
;
ûû 
const
üü 
int
üü !
rtlHorizontalOffset
üü )
=
üü* +
$num
üü, .
;
üü. /
if
°° 
(
°° 
FlowDirection
°° 
==
°°  
FlowDirection
°°! .
.
°°. /
LeftToRight
°°/ :
)
°°: ;
offsetX
¢¢ 
=
¢¢ 
	DpiHelper
¢¢ #
.
¢¢# $ 
TransformToDeviceX
¢¢$ 6
(
¢¢6 7

mainVisual
¢¢7 A
,
¢¢A B
offset
¢¢C I
.
¢¢I J
X
¢¢J K
)
¢¢K L
;
¢¢L M
else
££ 
offsetX
§§ 
=
§§ 
	DpiHelper
§§ #
.
§§# $ 
TransformToDeviceX
§§$ 6
(
§§6 7

mainVisual
§§7 A
,
§§A B
offset
•• 
.
•• 
X
•• 
-
•• 

targetSize
•• )
.
••) *
Width
••* /
-
••0 1!
rtlHorizontalOffset
••2 E
)
••E F
;
••F G
return
ßß 
new
ßß 
PositioningData
ßß &
(
ßß& '

mainVisual
®® 
,
®® 
offsetX
®® #
,
®®# $
newUpY
©© 
,
©© 
newDownY
©©  
,
©©  !
	popupSize
™™ 
,
™™ 

targetSize
™™ %
,
™™% &
	locationX
´´ 
,
´´ 
	locationY
´´ $
,
´´$ %
screenHeight
¨¨ 
,
¨¨ 
screenWidth
¨¨ )
)
¨¨) *
;
¨¨* +
}
≠≠ 	
private
ØØ 
static
ØØ %
PropertyChangedCallback
ØØ .3
%CreateTemplatePropertyChangedCallback
ØØ/ T
(
ØØT U$
ComboBoxPopupPlacement
ØØU k
popupPlacement
ØØl z
)
ØØz {
{
∞∞ 	
return
±± 
delegate
±± 
(
±± 
DependencyObject
±± -
d
±±. /
,
±±/ 00
"DependencyPropertyChangedEventArgs
±±1 S
e
±±T U
)
±±U V
{
≤≤ 
var
≥≥ 
popup
≥≥ 
=
≥≥ 
d
≥≥ 
as
≥≥  
ComboBoxPopup
≥≥! .
;
≥≥. /
if
¥¥ 
(
¥¥ 
popup
¥¥ 
==
¥¥ 
null
¥¥ !
)
¥¥! "
return
¥¥# )
;
¥¥) *
var
∂∂ 
template
∂∂ 
=
∂∂ 
e
∂∂  
.
∂∂  !
NewValue
∂∂! )
as
∂∂* ,
ControlTemplate
∂∂- <
;
∂∂< =
if
∑∑ 
(
∑∑ 
template
∑∑ 
==
∑∑ 
null
∑∑  $
)
∑∑$ %
return
∑∑& ,
;
∑∑, -
if
ππ 
(
ππ 
popup
ππ 
.
ππ 
PopupPlacement
ππ (
==
ππ) +
popupPlacement
ππ, :
)
ππ: ;
{
∫∫ 
popup
ªª 
.
ªª $
SetChildTemplateIfNeed
ªª 0
(
ªª0 1
template
ªª1 9
)
ªª9 :
;
ªª: ;
}
ºº 
}
ΩΩ 
;
ΩΩ 
}
ææ 	
private
¿¿ 
void
¿¿ !
UpdateChildTemplate
¿¿ (
(
¿¿( )$
ComboBoxPopupPlacement
¿¿) ?
	placement
¿¿@ I
)
¿¿I J
{
¡¡ 	
switch
¬¬ 
(
¬¬ 
	placement
¬¬ 
)
¬¬ 
{
√√ 
case
ƒƒ $
ComboBoxPopupPlacement
ƒƒ +
.
ƒƒ+ ,
Classic
ƒƒ, 3
:
ƒƒ3 4$
SetChildTemplateIfNeed
≈≈ *
(
≈≈* +$
ClassicContentTemplate
≈≈+ A
)
≈≈A B
;
≈≈B C
break
∆∆ 
;
∆∆ 
case
«« $
ComboBoxPopupPlacement
«« +
.
««+ ,
Down
««, 0
:
««0 1$
SetChildTemplateIfNeed
»» *
(
»»* +!
DownContentTemplate
»»+ >
)
»»> ?
;
»»? @
break
…… 
;
…… 
case
   $
ComboBoxPopupPlacement
   +
.
  + ,
Up
  , .
:
  . /$
SetChildTemplateIfNeed
ÀÀ *
(
ÀÀ* +
UpContentTemplate
ÀÀ+ <
)
ÀÀ< =
;
ÀÀ= >
break
ÃÃ 
;
ÃÃ 
}
œœ 
}
–– 	
private
““ 
static
““ 
void
““ 3
%PopupPlacementPropertyChangedCallback
““ A
(
““A B
DependencyObject
““B R
d
““S T
,
““T U0
"DependencyPropertyChangedEventArgs
““V x
e
““y z
)
““z {
{
”” 	
var
‘‘ 
popup
‘‘ 
=
‘‘ 
d
‘‘ 
as
‘‘ 
ComboBoxPopup
‘‘ *
;
‘‘* +
if
’’ 
(
’’ 
popup
’’ 
==
’’ 
null
’’ 
)
’’ 
return
’’ %
;
’’% &
if
◊◊ 
(
◊◊ 
!
◊◊ 
(
◊◊ 
e
◊◊ 
.
◊◊ 
NewValue
◊◊ 
is
◊◊ $
ComboBoxPopupPlacement
◊◊  6
)
◊◊6 7
)
◊◊7 8
return
◊◊9 ?
;
◊◊? @
var
ÿÿ 
	placement
ÿÿ 
=
ÿÿ 
(
ÿÿ $
ComboBoxPopupPlacement
ÿÿ 3
)
ÿÿ3 4
e
ÿÿ4 5
.
ÿÿ5 6
NewValue
ÿÿ6 >
;
ÿÿ> ?
popup
ŸŸ 
.
ŸŸ !
UpdateChildTemplate
ŸŸ %
(
ŸŸ% &
	placement
ŸŸ& /
)
ŸŸ/ 0
;
ŸŸ0 1
}
⁄⁄ 	
private
‹‹ 
static
‹‹ "
CustomPopupPlacement
‹‹ +&
GetClassicPopupPlacement
‹‹, D
(
‹‹D E
ComboBoxPopup
‹‹E R
popup
‹‹S X
,
‹‹X Y
PositioningData
‹‹Z i
data
‹‹j n
)
‹‹n o
{
›› 	
var
ﬁﬁ +
defaultVerticalOffsetIndepent
ﬁﬁ -
=
ﬁﬁ. /
	DpiHelper
ﬁﬁ0 9
.
ﬁﬁ9 : 
TransformToDeviceY
ﬁﬁ: L
(
ﬁﬁL M
data
ﬁﬁM Q
.
ﬁﬁQ R

MainVisual
ﬁﬁR \
,
ﬁﬁ\ ]
popup
ﬁﬁ^ c
.
ﬁﬁc d#
DefaultVerticalOffset
ﬁﬁd y
)
ﬁﬁy z
;
ﬁﬁz {
var
ﬂﬂ 
newY
ﬂﬂ 
=
ﬂﬂ 
data
ﬂﬂ 
.
ﬂﬂ 
	LocationY
ﬂﬂ %
+
ﬂﬂ& '
data
ﬂﬂ( ,
.
ﬂﬂ, -
	PopupSize
ﬂﬂ- 6
.
ﬂﬂ6 7
Height
ﬂﬂ7 =
>
ﬂﬂ> ?
data
ﬂﬂ@ D
.
ﬂﬂD E
ScreenHeight
ﬂﬂE Q
?
‡‡ 
-
‡‡ 
(
‡‡ +
defaultVerticalOffsetIndepent
‡‡ 1
+
‡‡2 3
data
‡‡4 8
.
‡‡8 9
	PopupSize
‡‡9 B
.
‡‡B C
Height
‡‡C I
)
‡‡I J
:
·· +
defaultVerticalOffsetIndepent
·· /
+
··0 1
data
··2 6
.
··6 7

TargetSize
··7 A
.
··A B
Height
··B H
;
··H I
return
„„ 
new
„„ "
CustomPopupPlacement
„„ +
(
„„+ ,
new
„„, /
Point
„„0 5
(
„„5 6
data
„„6 :
.
„„: ;
OffsetX
„„; B
,
„„B C
newY
„„D H
)
„„H I
,
„„I J
PopupPrimaryAxis
„„K [
.
„„[ \

Horizontal
„„\ f
)
„„f g
;
„„g h
}
‰‰ 	
private
ÊÊ 
static
ÊÊ "
CustomPopupPlacement
ÊÊ +#
GetDownPopupPlacement
ÊÊ, A
(
ÊÊA B
PositioningData
ÊÊB Q
data
ÊÊR V
)
ÊÊV W
{
ÁÁ 	
return
ËË 
new
ËË "
CustomPopupPlacement
ËË +
(
ËË+ ,
new
ËË, /
Point
ËË0 5
(
ËË5 6
data
ËË6 :
.
ËË: ;
OffsetX
ËË; B
,
ËËB C
data
ËËD H
.
ËËH I
NewDownY
ËËI Q
)
ËËQ R
,
ËËR S
PopupPrimaryAxis
ËËT d
.
ËËd e
None
ËËe i
)
ËËi j
;
ËËj k
}
ÈÈ 	
private
ÎÎ 
static
ÎÎ "
CustomPopupPlacement
ÎÎ +!
GetUpPopupPlacement
ÎÎ, ?
(
ÎÎ? @
PositioningData
ÎÎ@ O
data
ÎÎP T
)
ÎÎT U
{
ÏÏ 	
return
ÌÌ 
new
ÌÌ "
CustomPopupPlacement
ÌÌ +
(
ÌÌ+ ,
new
ÌÌ, /
Point
ÌÌ0 5
(
ÌÌ5 6
data
ÌÌ6 :
.
ÌÌ: ;
OffsetX
ÌÌ; B
,
ÌÌB C
data
ÌÌD H
.
ÌÌH I
NewUpY
ÌÌI O
)
ÌÌO P
,
ÌÌP Q
PopupPrimaryAxis
ÌÌR b
.
ÌÌb c
None
ÌÌc g
)
ÌÌg h
;
ÌÌh i
}
ÓÓ 	
private
 
struct
 
PositioningData
 &
{
ÒÒ 	
public
ÚÚ 
Visual
ÚÚ 

MainVisual
ÚÚ $
{
ÚÚ% &
get
ÚÚ' *
;
ÚÚ* +
}
ÚÚ, -
public
ÛÛ 
double
ÛÛ 
OffsetX
ÛÛ !
{
ÛÛ" #
get
ÛÛ$ '
;
ÛÛ' (
}
ÛÛ) *
public
ÙÙ 
double
ÙÙ 
NewUpY
ÙÙ  
{
ÙÙ! "
get
ÙÙ# &
;
ÙÙ& '
}
ÙÙ( )
public
ıı 
double
ıı 
NewDownY
ıı "
{
ıı# $
get
ıı% (
;
ıı( )
}
ıı* +
public
ˆˆ 
double
ˆˆ 
RealOffsetX
ˆˆ %
=>
ˆˆ& (
(
ˆˆ) *
	PopupSize
ˆˆ* 3
.
ˆˆ3 4
Width
ˆˆ4 9
-
ˆˆ: ;

TargetSize
ˆˆ< F
.
ˆˆF G
Width
ˆˆG L
)
ˆˆL M
/
ˆˆN O
$num
ˆˆP S
;
ˆˆS T
public
˜˜ 
Size
˜˜ 
	PopupSize
˜˜ !
{
˜˜" #
get
˜˜$ '
;
˜˜' (
}
˜˜) *
public
¯¯ 
Size
¯¯ 

TargetSize
¯¯ "
{
¯¯# $
get
¯¯% (
;
¯¯( )
}
¯¯* +
public
˘˘ 
double
˘˘ 
	LocationX
˘˘ #
{
˘˘$ %
get
˘˘& )
;
˘˘) *
}
˘˘+ ,
public
˙˙ 
double
˙˙ 
	LocationY
˙˙ #
{
˙˙$ %
get
˙˙& )
;
˙˙) *
}
˙˙+ ,
public
˚˚ 
double
˚˚ 
ScreenHeight
˚˚ &
{
˚˚' (
get
˚˚) ,
;
˚˚, -
}
˚˚. /
public
¸¸ 
double
¸¸ 
ScreenWidth
¸¸ %
{
¸¸& '
get
¸¸( +
;
¸¸+ ,
}
¸¸- .
public
˛˛ 
PositioningData
˛˛ "
(
˛˛" #
Visual
˛˛# )

mainVisual
˛˛* 4
,
˛˛4 5
double
˛˛6 <
offsetX
˛˛= D
,
˛˛D E
double
˛˛F L
newUpY
˛˛M S
,
˛˛S T
double
˛˛U [
newDownY
˛˛\ d
,
˛˛d e
Size
˛˛f j
	popupSize
˛˛k t
,
˛˛t u
Size
˛˛v z

targetSize˛˛{ Ö
,˛˛Ö Ü
double˛˛á ç
	locationX˛˛é ó
,˛˛ó ò
double˛˛ô ü
	locationY˛˛† ©
,˛˛© ™
double˛˛´ ±
screenHeight˛˛≤ æ
,˛˛æ ø
double˛˛¿ ∆
screenWidth˛˛« “
)˛˛“ ”
{
ˇˇ 

MainVisual
ÄÄ 
=
ÄÄ 

mainVisual
ÄÄ '
;
ÄÄ' (
OffsetX
ÅÅ 
=
ÅÅ 
offsetX
ÅÅ !
;
ÅÅ! "
NewUpY
ÇÇ 
=
ÇÇ 
newUpY
ÇÇ 
;
ÇÇ  
NewDownY
ÉÉ 
=
ÉÉ 
newDownY
ÉÉ #
;
ÉÉ# $
	PopupSize
ÑÑ 
=
ÑÑ 
	popupSize
ÑÑ %
;
ÑÑ% &

TargetSize
ÑÑ' 1
=
ÑÑ2 3

targetSize
ÑÑ4 >
;
ÑÑ> ?
	LocationX
ÖÖ 
=
ÖÖ 
	locationX
ÖÖ %
;
ÖÖ% &
	LocationY
ÖÖ' 0
=
ÖÖ1 2
	locationY
ÖÖ3 <
;
ÖÖ< =
ScreenWidth
ÜÜ 
=
ÜÜ 
screenWidth
ÜÜ )
;
ÜÜ) *
ScreenHeight
ÜÜ+ 7
=
ÜÜ8 9
screenHeight
ÜÜ: F
;
ÜÜF G
}
áá 
}
àà 	
}
ââ 
}ää √
nD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\BooleanToVisibilityConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class (
BooleanToVisibilityConverter -
:. /
IValueConverter0 ?
{		 
public

 

Visibility

 
	TrueValue

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
=

2 3

Visibility

4 >
.

> ?
Visible

? F
;

F G
public 

Visibility 

FalseValue $
{% &
get' *
;* +
set, /
;/ 0
}1 2
=3 4

Visibility5 ?
.? @
	Collapsed@ I
;I J
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
bool 
bValue 
= 
false 
;  
if 
( 
value 
is 
bool 
) 
{ 
bValue 
= 
( 
bool 
) 
value $
;$ %
} 
return 
( 
bValue 
) 
? 
	TrueValue '
:( )

FalseValue* 4
;4 5
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
value 
as 

Visibility &
?& '
==( *
	TrueValue+ 4
;4 5
} 	
} 
} •
eD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\BrushRoundConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public		 

class		 
BrushRoundConverter		 $
:		% &
IValueConverter		' 6
{

 
public 
Brush 
	HighValue 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
Brushes/ 6
.6 7
White7 <
;< =
public 
Brush 
LowValue 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
Brushes. 5
.5 6
Black6 ;
;; <
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
var 
solidColorBrush 
=  !
value" '
as( *
SolidColorBrush+ :
;: ;
if 
( 
solidColorBrush 
==  "
null# '
)' (
return) /
null0 4
;4 5
var 
color 
= 
solidColorBrush '
.' (
Color( -
;- .
var 

brightness 
= 
$num  
*! "
color# (
.( )
R) *
++ ,
$num- 1
*2 3
color4 9
.9 :
G: ;
+< =
$num> B
*C D
colorE J
.J K
BK L
;L M
return 

brightness 
< 
$num  #
?$ %
LowValue& .
:/ 0
	HighValue1 :
;: ;
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
} 
}   ª
uD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\BrushToRadialGradientBrushConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public		 
class		 /
#BrushToRadialGradientBrushConverter		 1
:		2 3
IValueConverter		4 C
{

 
public 
object	 
Convert 
( 
object 
value $
,$ %
Type& *

targetType+ 5
,5 6
object7 =
	parameter> G
,G H
CultureInfoI T
cultureU \
)\ ]
{ 
var 
solidColorBrush 
= 
value 
as !
SolidColorBrush" 1
;1 2
if 
( 
solidColorBrush 
== 
null 
) 
return  &
Binding' .
.. /
	DoNothing/ 8
;8 9
return 	
new
 
RadialGradientBrush !
(! "
solidColorBrush" 1
.1 2
Color2 7
,7 8
Colors9 ?
.? @
Transparent@ K
)K L
{ 
Center 

= 
new 
Point 
( 
$num 
, 
$num 
) 
, 
GradientOrigin 
= 
new 
Point 
( 
$num !
,! "
$num# %
)% &
,& '
RadiusX 
= 
$num 
, 
RadiusY 
= 
$num 
, 
Opacity 
= 
$num 
} 
; 
} 
public 
object	 
ConvertBack 
( 
object "
value# (
,( )
Type* .

targetType/ 9
,9 :
object; A
	parameterB K
,K L
CultureInfoM X
cultureY `
)` a
{ 
return 	
Binding
 
. 
	DoNothing 
; 
} 
} 
} ø
oD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\CalendarDateCoalesceConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class )
CalendarDateCoalesceConverter .
:/ 0 
IMultiValueConverter1 E
{ 
public 
object 
Convert 
( 
object $
[$ %
]% &
values' -
,- .
Type/ 3

targetType4 >
,> ?
object@ F
	parameterG P
,P Q
CultureInfoR ]
culture^ e
)e f
{ 	
if 
( 
values 
. 
Length 
!=  
$num! "
)" #
throw$ )
new* -
ArgumentException. ?
(? @
$str@ L
,L M
$strN V
)V W
;W X
if 
( 
! 
( 
values 
[ 
$num 
] 
is 
DateTime '
)' (
)( )
throw* /
new0 3
ArgumentException4 E
(E F
$strF R
,R S
$strT \
)\ ]
;] ^
if 
( 
values 
[ 
$num 
] 
!= 
null !
&&" $
!% &
(& '
values' -
[- .
$num. /
]/ 0
is1 3
DateTime4 <
?< =
)= >
)> ?
throw@ E
newF I
ArgumentExceptionJ [
([ \
$str\ h
,h i
$strj r
)r s
;s t
var 
selectedDate 
= 
(  
DateTime  (
?( )
)) *
values+ 1
[1 2
$num2 3
]3 4
;4 5
return 
selectedDate 
??  "
values# )
[) *
$num* +
]+ ,
;, -
} 	
public 
object 
[ 
] 
ConvertBack #
(# $
object$ *
value+ 0
,0 1
Type2 6
[6 7
]7 8
targetTypes9 D
,D E
objectF L
	parameterM V
,V W
CultureInfoX c
cultured k
)k l
{ 	
return 
null 
; 
} 	
}   
}!! ÿ)
zD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\CircularProgressBar\ArcEndPointConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
.- .
CircularProgressBar. A
{ 
public 

class  
ArcEndPointConverter %
:& ' 
IMultiValueConverter( <
{		 
public

 
object

 
Convert

 
(

 
object

 $
[

$ %
]

% &
values

' -
,

- .
Type

/ 3

targetType

4 >
,

> ?
object

@ F
	parameter

G P
,

P Q
CultureInfo

R ]
culture

^ e
)

e f
{ 	
var 
actualWidth 
= 
values $
[$ %
$num% &
]& '
.' (
ExtractDouble( 5
(5 6
)6 7
;7 8
var 
value 
= 
values 
[ 
$num  
]  !
.! "
ExtractDouble" /
(/ 0
)0 1
;1 2
var 
minimum 
= 
values  
[  !
$num! "
]" #
.# $
ExtractDouble$ 1
(1 2
)2 3
;3 4
var 
maximum 
= 
values  
[  !
$num! "
]" #
.# $
ExtractDouble$ 1
(1 2
)2 3
;3 4
if 
( 
new 
[ 
] 
{ 
actualWidth "
," #
value$ )
,) *
minimum+ 2
,2 3
maximum4 ;
}; <
.< =
AnyNan= C
(C D
)D E
)E F
return 
Binding 
. 
	DoNothing (
;( )
if 
( 
values 
. 
Length 
==  
$num! "
)" #
{ 
var $
fullIndeterminateScaling ,
=- .
values/ 5
[5 6
$num6 7
]7 8
.8 9
ExtractDouble9 F
(F G
)G H
;H I
if 
( 
! 
double 
. 
IsNaN !
(! "$
fullIndeterminateScaling" :
): ;
&&< >$
fullIndeterminateScaling? W
>X Y
$numZ ]
)] ^
{ 
value 
= 
( 
maximum $
-% &
minimum' .
). /
*/ 0$
fullIndeterminateScaling0 H
;H I
} 
} 
var 
percent 
= 
maximum !
<=" $
minimum% ,
?- .
$num/ 2
:3 4
(5 6
value6 ;
-< =
minimum> E
)E F
/F G
(G H
maximumH O
-P Q
minimumR Y
)Y Z
;Z [
var 
degrees 
= 
$num 
* 
percent %
;% &
var 
radians 
= 
degrees !
*! "
(" #
Math# '
.' (
PI( *
/* +
$num+ .
). /
;/ 0
var!! 
centre!! 
=!! 
new!! 
Point!! "
(!!" #
actualWidth!!# .
/!!. /
$num!!/ 0
,!!0 1
actualWidth!!2 =
/!!= >
$num!!> ?
)!!? @
;!!@ A
var"" 
hypotenuseRadius""  
=""! "
(""# $
actualWidth""$ /
/""/ 0
$num""0 1
)""1 2
;""2 3
var$$ 
adjacent$$ 
=$$ 
Math$$ 
.$$  
Cos$$  #
($$# $
radians$$$ +
)$$+ ,
*$$, -
hypotenuseRadius$$- =
;$$= >
var%% 
opposite%% 
=%% 
Math%% 
.%%  
Sin%%  #
(%%# $
radians%%$ +
)%%+ ,
*%%, -
hypotenuseRadius%%- =
;%%= >
return'' 
new'' 
Point'' 
('' 
centre'' #
.''# $
X''$ %
+''& '
opposite''( 0
,''0 1
centre''2 8
.''8 9
Y''9 :
-''; <
adjacent''= E
)''E F
;''F G
}(( 	
public** 
object** 
[** 
]** 
ConvertBack** #
(**# $
object**$ *
value**+ 0
,**0 1
Type**2 6
[**6 7
]**7 8
targetTypes**9 D
,**D E
object**F L
	parameter**M V
,**V W
CultureInfo**X c
culture**d k
)**k l
{++ 	
throw,, 
new,, #
NotImplementedException,, -
(,,- .
),,. /
;,,/ 0
}-- 	
}.. 
}// å
vD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\CircularProgressBar\ArcSizeConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
.- .
CircularProgressBar. A
{ 
public 

class 
ArcSizeConverter !
:" #
IValueConverter$ 3
{		 
public

 
object

 
Convert

 
(

 
object

 $
value

% *
,

* +
Type

, 0

targetType

1 ;
,

; <
object

= C
	parameter

D M
,

M N
CultureInfo

O Z
culture

[ b
)

b c
{ 	
if 
( 
value 
is 
double 
&&  "
(# $
($ %
double% +
)+ ,
value, 1
>2 3
$num4 7
)7 8
)8 9
{ 
return 
new 
Size 
(  
(  !
double! '
)' (
value( -
/. /
$num0 1
,1 2
(3 4
double4 :
): ;
value; @
/A B
$numC D
)D E
;E F
} 
return 
new 
Point 
( 
) 
; 
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
} 
} ≈
mD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\CircularProgressBar\LocalEx.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
.- .
CircularProgressBar. A
{ 
internal 
static 
class 
LocalEx !
{		 
public

 
static

 
double

 
ExtractDouble

 *
(

* +
this

+ /
object

0 6
val

7 :
)

: ;
{ 	
var 
d 
= 
val 
as 
double !
?! "
??# %
double& ,
., -
NaN- 0
;0 1
return 
double 
. 

IsInfinity $
($ %
d% &
)& '
?( )
double* 0
.0 1
NaN1 4
:5 6
d7 8
;8 9
} 	
public 
static 
bool 
AnyNan !
(! "
this" &
IEnumerable' 2
<2 3
double3 9
>9 :
vals; ?
)? @
{ 	
return 
vals 
. 
Any 
( 
double "
." #
IsNaN# (
)( )
;) *
} 	
} 
} ‡
wD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\CircularProgressBar\LargeArcConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
.- .
CircularProgressBar. A
{ 
public 

class 
LargeArcConverter "
:# $ 
IMultiValueConverter% 9
{ 
public		 
object		 
Convert		 
(		 
object		 $
[		$ %
]		% &
values		' -
,		- .
Type		/ 3

targetType		4 >
,		> ?
object		@ F
	parameter		G P
,		P Q
CultureInfo		R ]
culture		^ e
)		e f
{

 	
var 
value 
= 
values 
[ 
$num  
]  !
.! "
ExtractDouble" /
(/ 0
)0 1
;1 2
var 
minimum 
= 
values  
[  !
$num! "
]" #
.# $
ExtractDouble$ 1
(1 2
)2 3
;3 4
var 
maximum 
= 
values  
[  !
$num! "
]" #
.# $
ExtractDouble$ 1
(1 2
)2 3
;3 4
if 
( 
new 
[ 
] 
{ 
value 
, 
minimum &
,& '
maximum( /
}0 1
.1 2
AnyNan2 8
(8 9
)9 :
): ;
return 
Binding 
. 
	DoNothing (
;( )
if 
( 
values 
. 
Length 
==  
$num! "
)" #
{ 
var $
fullIndeterminateScaling ,
=- .
values/ 5
[5 6
$num6 7
]7 8
.8 9
ExtractDouble9 F
(F G
)G H
;H I
if 
( 
! 
double 
. 
IsNaN !
(! "$
fullIndeterminateScaling" :
): ;
&&< >$
fullIndeterminateScaling? W
>X Y
$numZ ]
)] ^
{ 
value 
= 
( 
maximum $
-% &
minimum' .
). /
*0 1$
fullIndeterminateScaling2 J
;J K
} 
} 
var 
percent 
= 
maximum !
<=" $
minimum% ,
?- .
$num/ 2
:3 4
(5 6
value6 ;
-< =
minimum> E
)E F
/G H
(I J
maximumJ Q
-R S
minimumT [
)[ \
;\ ]
return 
percent 
> 
$num  
;  !
} 	
public   
object   
[   
]   
ConvertBack   #
(  # $
object  $ *
value  + 0
,  0 1
Type  2 6
[  6 7
]  7 8
targetTypes  9 D
,  D E
object  F L
	parameter  M V
,  V W
CultureInfo  X c
culture  d k
)  k l
{!! 	
throw"" 
new"" #
NotImplementedException"" -
(""- .
)"". /
;""/ 0
}## 	
}$$ 
}%% ˜

ÑD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\CircularProgressBar\RotateTransformCentreConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
.- .
CircularProgressBar. A
{ 
public 

class *
RotateTransformCentreConverter /
:0 1
IValueConverter2 A
{ 
public		 
object		 
Convert		 
(		 
object		 $
value		% *
,		* +
Type		, 0

targetType		1 ;
,		; <
object		= C
	parameter		D M
,		M N
CultureInfo		O Z
culture		[ b
)		b c
{

 	
return 
( 
double 
) 
value !
/! "
$num" #
;# $
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
} 
} ˇ
~D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\CircularProgressBar\RotateTransformConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
.- .
CircularProgressBar. A
{ 
public 

class $
RotateTransformConverter )
:* + 
IMultiValueConverter, @
{ 
public		 
object		 
Convert		 
(		 
object		 $
[		$ %
]		% &
values		' -
,		- .
Type		/ 3

targetType		4 >
,		> ?
object		@ F
	parameter		G P
,		P Q
CultureInfo		R ]
culture		^ e
)		e f
{

 	
var 
value 
= 
values 
[ 
$num  
]  !
.! "
ExtractDouble" /
(/ 0
)0 1
;1 2
var 
minimum 
= 
values  
[  !
$num! "
]" #
.# $
ExtractDouble$ 1
(1 2
)2 3
;3 4
var 
maximum 
= 
values  
[  !
$num! "
]" #
.# $
ExtractDouble$ 1
(1 2
)2 3
;3 4
if 
( 
new 
[ 
] 
{ 
value 
, 
minimum &
,& '
maximum( /
}0 1
.1 2
AnyNan2 8
(8 9
)9 :
): ;
return 
Binding 
. 
	DoNothing (
;( )
var 
percent 
= 
maximum !
<=" $
minimum% ,
?- .
$num/ 2
:3 4
(5 6
value6 ;
-< =
minimum> E
)E F
/G H
(I J
maximumJ Q
-R S
minimumT [
)[ \
;\ ]
return 
$num 
* 
percent 
; 
} 	
public 
object 
[ 
] 
ConvertBack #
(# $
object$ *
value+ 0
,0 1
Type2 6
[6 7
]7 8
targetTypes9 D
,D E
objectF L
	parameterM V
,V W
CultureInfoX c
cultured k
)k l
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
} 
} ß
yD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\CircularProgressBar\StartPointConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
.- .
CircularProgressBar. A
{ 
public 

class 
StartPointConverter $
:% &
IValueConverter' 6
{		 
[

 	
Obsolete

	 
]

 
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
if 
( 
value 
is 
double 
&&  "
(# $
($ %
double% +
)+ ,
value- 2
>3 4
$num5 8
)8 9
)9 :
{ 
return 
new 
Point  
(  !
(! "
double" (
)( )
value) .
// 0
$num1 2
,2 3
$num4 5
)5 6
;6 7
} 
return 
new 
Point 
( 
) 
; 
} 	
[ 	
Obsolete	 
] 
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
} 
} â9
mD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\ClockItemIsCheckedConverter.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
.

" #

Converters

# -
{ 
internal 	
class
 '
ClockItemIsCheckedConverter +
:, -
IValueConverter. =
{ 
private 	
readonly
 
Func 
< 
DateTime  
>  !
_currentTimeGetter" 4
;4 5
private 	
readonly
 
ClockDisplayMode #
_displayMode$ 0
;0 1
private 
readonly 
bool 

_is24Hours %
;% &
public '
ClockItemIsCheckedConverter	 $
($ %
Func% )
<) *
DateTime* 2
>2 3
currentTimeGetter4 E
,E F
ClockDisplayModeG W
displayModeX c
,c d
boole i
	is24Hoursj s
)s t
{ 
if 
( 
currentTimeGetter 
== 
null  
)  !
throw" '
new( +!
ArgumentNullException, A
(A B
nameofB H
(H I
currentTimeGetterI Z
)Z [
)[ \
;\ ]
_currentTimeGetter 
= 
currentTimeGetter )
;) *
_displayMode 
= 
displayMode 
; 

_is24Hours 
= 
	is24Hours 
; 
} 
public 
object	 
Convert 
( 
object 
value $
,$ %
Type& *

targetType+ 5
,5 6
object7 =
	parameter> G
,G H
CultureInfoI T
cultureU \
)\ ]
{ 
var 
dateTime 
= 
( 
DateTime 
) 
value "
;" #
var 
i 
=	 

( 
int 
) 
	parameter 
; 
return   
(   
_displayMode    
==  ! #
ClockDisplayMode  $ 4
.  4 5
Hours  5 :
?  ; <
MassageHour  = H
(  H I
dateTime  I Q
.  Q R
Hour  R V
,  V W

_is24Hours  X b
)  b c
:  d e
MassageMinute  f s
(  s t
dateTime  t |
.  | }
Minute	  } É
)
  É Ñ
)
  Ñ Ö
==
  Ü à
i
  â ä
;
  ä ã
}!! 
public## 
object##	 
ConvertBack## 
(## 
object## "
value### (
,##( )
Type##* .

targetType##/ 9
,##9 :
object##; A
	parameter##B K
,##K L
CultureInfo##M X
culture##Y `
)##` a
{$$ 
if%% 
(%% 
(%% 
bool%% 
)%% 
value%% 
!=%% 
true%% 
)%% 
return%% "
Binding%%# *
.%%* +
	DoNothing%%+ 4
;%%4 5
var'' 
currentTime'' 
='' 
_currentTimeGetter'' '
(''' (
)''( )
;'') *
return)) 	
new))
 
DateTime)) 
()) 
currentTime** 
.** 
Year** 
,** 
currentTime** !
.**! "
Month**" '
,**' (
currentTime**) 4
.**4 5
Day**5 8
,**8 9
(++ 
_displayMode++ 
==++ 
ClockDisplayMode++ %
.++% &
Hours++& +
)+++ ,
?++- .
ReverseMassageHour++/ A
(++A B
(++B C
int++C F
)++F G
	parameter++G P
,++P Q
currentTime++R ]
,++] ^

_is24Hours++_ i
)++i j
:++k l
currentTime++m x
.++x y
Hour++y }
,++} ~
(,, 
_displayMode,, 
==,, 
ClockDisplayMode,, %
.,,% &
Minutes,,& -
),,- .
?,,/ 0 
ReverseMassageMinute,,1 E
(,,E F
(,,F G
int,,G J
),,J K
	parameter,,K T
),,T U
:,,V W
currentTime,,X c
.,,c d
Minute,,d j
,,,j k
currentTime-- 
.-- 
Second-- 
)-- 
;-- 
}.. 
private00 	
static00
 
int00 
MassageHour00  
(00  !
int00! $
val00% (
,00( )
bool00* .
	is24Hours00/ 8
)008 9
{11 
if22 
(22	 

	is24Hours22
 
)22 
{33 
return44
 
val44 
==44 
$num44 
?44 
$num44 
:44  
val44! $
;44$ %
}55 
if77 
(77 
val77 

==77 
$num77 
)77 
return77 
$num77 
;77 
if88 
(88 
val88 

>88 
$num88 
)88 
return88 
val88 
-88 
$num88  
;88  !
return99 	
val99
 
;99 
}:: 
private<< 	
static<<
 
int<< 
MassageMinute<< "
(<<" #
int<<# &
val<<' *
)<<* +
{== 
return>> 	
val>>
 
==>> 
$num>> 
?>> 
$num>> 
:>> 
val>> 
;>> 
}?? 
privateAA 	
staticAA
 
intAA 
ReverseMassageHourAA '
(AA' (
intAA( +
valAA, /
,AA/ 0
DateTimeAA1 9
currentTimeAA: E
,AAE F
boolAAG K
	is24HoursAAL U
)AAU V
{BB 
ifCC 
(CC	 

	is24HoursCC
 
)CC 
{DD 
returnEE
 
valEE 
==EE 
$numEE 
?EE 
$numEE 
:EE  
valEE! $
;EE$ %
}FF 
returnHH 	
currentTimeHH
 
.HH 
HourHH 
<HH 
$numHH 
?II 
(II 
valII 

==II 
$numII 
?II 
$numII 
:II 
valII 
)II 
:JJ 
(JJ 
valJJ 

==JJ 
$numJJ 
?JJ 
$numJJ 
:JJ 
valJJ 
+JJ 
$numJJ  
)JJ  !
;JJ! "
}KK 
privateMM 	
staticMM
 
intMM  
ReverseMassageMinuteMM )
(MM) *
intMM* -
valMM. 1
)MM1 2
{NN 
returnOO 	
valOO
 
==OO 
$numOO 
?OO 
$numOO 
:OO 
valOO 
;OO 
}PP 
}QQ 
}RR Î
dD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\ClockLineConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 
class 
ClockLineConverter  
:! "
MarkupExtension# 2
,2 3
IValueConverter4 C
{		 
public

 
ClockDisplayMode

	 
DisplayMode

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
public 
object	 
Convert 
( 
object 
value $
,$ %
Type& *

targetType+ 5
,5 6
object7 =
	parameter> G
,G H
CultureInfoI T
cultureU \
)\ ]
{ 
var 
time 
= 
( 
DateTime 
) 
value 
; 
return 
DisplayMode 
== !
ClockDisplayMode" 2
.2 3
Hours3 8
? 
( 
( 
time 
. 
Hour 
> 
$num 
) 
? 
time 
. 
Hour #
-$ %
$num& (
:) *
time+ /
./ 0
Hour0 4
)4 5
*5 6
(6 7
$num7 :
/: ;
$num; =
)= >
: 
( 
time 
. 
Minute 
== 
$num 
? 
$num 
: 
time #
.# $
Minute$ *
)* +
*+ ,
(, -
$num- 0
/0 1
$num1 3
)3 4
;4 5
} 
public 
object	 
ConvertBack 
( 
object "
value# (
,( )
Type* .

targetType/ 9
,9 :
object; A
	parameterB K
,K L
CultureInfoM X
cultureY `
)` a
{ 
return 	
Binding
 
. 
	DoNothing 
; 
} 
public 
override 
object 
ProvideValue +
(+ ,
IServiceProvider, <
serviceProvider= L
)L M
{ 	
return 
this 
; 
} 	
} 
} ﬁ
uD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\ListViewItemContainerStyleConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class %
ListViewGridViewConverter *
:+ ,
IValueConverter- <
{ 
public 
object 
DefaultValue "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
object 
	ViewValue 
{  !
get" %
;% &
set' *
;* +
}, -
public   
object   
Convert   
(   
object   $
value  % *
,  * +
Type  , 0

targetType  1 ;
,  ; <
object  = C
	parameter  D M
,  M N
CultureInfo  O Z
culture  [ b
)  b c
{!! 	
var"" 
listView"" 
="" 
value""  
as""! #
ListView""$ ,
;"", -
if## 
(## 
listView## 
!=## 
null##  
)##  !
{$$ 
return%% 
listView%% 
.%%  
View%%  $
!=%%% '
null%%( ,
?%%- .
	ViewValue%%/ 8
:%%9 :
DefaultValue%%; G
;%%G H
}&& 
return(( 
value(( 
is(( 
ViewBase(( $
?((% &
	ViewValue((' 0
:((1 2
DefaultValue((3 ?
;((? @
})) 	
public++ 
object++ 
ConvertBack++ !
(++! "
object++" (
value++) .
,++. /
Type++0 4

targetType++5 ?
,++? @
object++A G
	parameter++H Q
,++Q R
CultureInfo++S ^
culture++_ f
)++f g
{,, 	
return-- 
Binding-- 
.-- 
	DoNothing-- $
;--$ %
}.. 	
}// 
}00 Â
bD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\NotZeroConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class 
NotZeroConverter !
:" #
IValueConverter$ 3
{ 
public		 
object		 
Convert		 
(		 
object		 $
value		% *
,		* +
Type		, 0

targetType		1 ;
,		; <
object		= C
	parameter		D M
,		M N
CultureInfo		O Z
culture		[ b
)		b c
{

 	
if 
( 
double 
. 
TryParse 
(  
(  !
value! &
??' )
$str* ,
), -
.- .
ToString. 6
(6 7
)7 8
,8 9
out: =
double> D
valE H
)H I
)I J
{ 
return 
Math 
. 
Abs 
(  
val  #
)# $
>% &
$num' *
;* +
} 
return 
null 
; 
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
} 
} ¶
fD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\RangeLengthConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class  
RangeLengthConverter %
:& ' 
IMultiValueConverter( <
{		 
public

 
object

 
Convert

 
(

 
object

 $
[

$ %
]

% &
values

' -
,

- .
Type

/ 3

targetType

4 >
,

> ?
object

@ F
	parameter

G P
,

P Q
CultureInfo

R ]
culture

^ e
)

e f
{ 	
if 
( 
values 
== 
null 
|| !
values" (
.( )
Length) /
!=0 2
$num3 4
||5 7
values8 >
.> ?
Any? B
(B C
vC D
=>E G
vH I
==J L
nullM Q
)Q R
)R S
return 
Binding 
. 
	DoNothing (
;( )
if 
( 
! 
double 
. 
TryParse  
(  !
values! '
[' (
$num( )
]) *
.* +
ToString+ 3
(3 4
)4 5
,5 6
out7 :
double; A
minB E
)E F
|| 
! 
double 
. 
TryParse #
(# $
values$ *
[* +
$num+ ,
], -
.- .
ToString. 6
(6 7
)7 8
,8 9
out: =
double> D
maxE H
)H I
|| 
! 
double 
. 
TryParse #
(# $
values$ *
[* +
$num+ ,
], -
.- .
ToString. 6
(6 7
)7 8
,8 9
out: =
double> D
valueE J
)J K
|| 
! 
double 
. 
TryParse #
(# $
values$ *
[* +
$num+ ,
], -
.- .
ToString. 6
(6 7
)7 8
,8 9
out: =
double> D
containerLengthE T
)T U
)U V
return 
Binding 
. 
	DoNothing (
;( )
var 
percent 
= 
( 
value !
-" #
min$ '
)' (
/) *
(+ ,
max, /
-0 1
min2 5
)5 6
;6 7
var 
length 
= 
percent  
*! "
containerLength# 2
;2 3
return 
length 
> 
containerLength +
?, -
containerLength. =
:> ?
length@ F
;F G
} 	
public 
object 
[ 
] 
ConvertBack #
(# $
object$ *
value+ 0
,0 1
Type2 6
[6 7
]7 8
targetTypes9 D
,D E
objectF L
	parameterM V
,V W
CultureInfoX c
cultured k
)k l
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
}   
}!! Ò
qD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\RangePositionConverterConverter.cs
	namespace		 	 
MaterialDesignThemes		
 
.		 
Wpf		 "
.		" #

Converters		# -
{

 
public 

class "
RangePositionConverter '
:( ) 
IMultiValueConverter* >
{ 
public 
object 
Convert 
( 
object $
[$ %
]% &
values' -
,- .
Type/ 3

targetType4 >
,> ?
object@ F
	parameterG P
,P Q
CultureInfoR ]
culture^ e
)e f
{ 	
if 
( 
values 
== 
null 
||  
values! '
.' (
Length( .
!=/ 1
$num2 3
||4 6
values7 =
.= >
Any> A
(A B
vB C
=>D F
vG H
==I K
nullL P
)P Q
)Q R
return 
Binding 
. 
	DoNothing (
;( )
if 
( 
! 
double 
. 
TryParse  
(  !
values! '
[' (
$num( )
]) *
.* +
ToString+ 3
(3 4
)4 5
,5 6
out7 :
double; A!
positionAsScaleFactorB W
)W X
|| 
! 
double 
. 
TryParse #
(# $
values$ *
[* +
$num+ ,
], -
.- .
ToString. 6
(6 7
)7 8
,8 9
out: =
double> D
lowerE J
)J K
|| 
! 
double 
. 
TryParse #
(# $
values$ *
[* +
$num+ ,
], -
.- .
ToString. 6
(6 7
)7 8
,8 9
out: =
double> D
upperE J
)J K
)K L
return 
Binding 
. 
	DoNothing (
;( )
var 
result 
= 
upper 
+  
(! "
lower" '
-( )
upper* /
)/ 0
*0 1!
positionAsScaleFactor1 F
;F G
return 
result 
; 
} 	
public 
object 
[ 
] 
ConvertBack #
(# $
object$ *
value+ 0
,0 1
Type2 6
[6 7
]7 8
targetTypes9 D
,D E
objectF L
	parameterM V
,V W
CultureInfoX c
cultured k
)k l
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
}   	
}!! 
}"" ï
gD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\DrawerOffsetConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class !
DrawerOffsetConverter &
:' (
IValueConverter) 8
{ 
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
var 
d 
= 
value 
as 
double #
?# $
??% '
$num( )
;) *
if 
( 
double 
. 

IsInfinity !
(! "
d" #
)# $
||% '
double( .
.. /
IsNaN/ 4
(4 5
d5 6
)6 7
)7 8
d9 :
=; <
$num= >
;> ?
var 
dock 
= 
( 
	parameter !
is" $
Dock% )
)) *
?+ ,
(- .
Dock. 2
)2 3
	parameter3 <
:= >
Dock? C
.C D
LeftD H
;H I
switch 
( 
dock 
) 
{ 
case 
Dock 
. 
Top 
: 
return 
new 
	Thickness (
(( )
$num) *
,* +
$num, -
-. /
d0 1
,1 2
$num3 4
,4 5
$num6 7
)7 8
;8 9
case 
Dock 
. 
Bottom  
:  !
return 
new 
	Thickness (
(( )
$num) *
,* +
$num, -
,- .
$num/ 0
,0 1
$num2 3
-4 5
d6 7
)7 8
;8 9
case 
Dock 
. 
Right 
:  
return 
new 
	Thickness (
(( )
$num) *
,* +
$num, -
,- .
$num/ 0
-1 2
d3 4
,4 5
$num6 7
)7 8
;8 9
case 
Dock 
. 
Left 
: 
default 
: 
return 
new 
	Thickness (
(( )
$num) *
-+ ,
d- .
,. /
$num0 1
,1 2
$num3 4
,4 5
$num6 7
)7 8
;8 9
}   
}!! 	
public## 
object## 
ConvertBack## !
(##! "
object##" (
value##) .
,##. /
Type##0 4

targetType##5 ?
,##? @
object##A G
	parameter##H Q
,##Q R
CultureInfo##S ^
culture##_ f
)##f g
{$$ 	
throw%% 
new%% #
NotImplementedException%% -
(%%- .
)%%. /
;%%/ 0
}&& 	
}'' 
}(( ›
oD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\EqualityToVisibilityConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class )
EqualityToVisibilityConverter .
:/ 0
IValueConverter1 @
{		 
public

 
object

 
Convert

 
(

 
object

 $
value

% *
,

* +
Type

, 0

targetType

1 ;
,

; <
object

= C
	parameter

D M
,

M N
CultureInfo

O Z
culture

[ b
)

b c
{ 	
if 
( 
value 
!= 
null 
&&  
value! &
.& '
Equals' -
(- .
	parameter. 7
)7 8
)8 9
return: @

VisibilityA K
.K L
VisibleL S
;S T
return 

Visibility 
. 
	Collapsed '
;' (
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
} 
} ﬁ
jD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\HintProxyFabricConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class $
HintProxyFabricConverter )
:* +
IValueConverter, ;
{ 
private 
static 
readonly 
Lazy  $
<$ %$
HintProxyFabricConverter% =
>= >
	_instance? H
=I J
newK N
LazyO S
<S T$
HintProxyFabricConverterT l
>l m
(m n
)n o
;o p
public 
static $
HintProxyFabricConverter .
Instance/ 7
=>8 :
	_instance; D
.D E
ValueE J
;J K
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
return 
HintProxyFabric "
." #
Get# &
(& '
value' ,
as- /
Control0 7
)7 8
;8 9
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
}   
}!! π
_D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\MathConverter.cs
	namespace		 	 
MaterialDesignThemes		
 
.		 
Wpf		 "
.		" #

Converters		# -
{

 
public 

enum 
MathOperation 
{ 
Add 
, 
Subtract 
, 
Multiply 
, 
Divide 
} 
public 

sealed 
class 
MathConverter %
:& '
IValueConverter( 7
{ 
public 
MathOperation 
	Operation &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
try 
{ 
double 
value1 
= 
System  &
.& '
Convert' .
.. /
ToDouble/ 7
(7 8
value8 =
,= >
CultureInfo? J
.J K
InvariantCultureK [
)[ \
;\ ]
double 
value2 
= 
System  &
.& '
Convert' .
.. /
ToDouble/ 7
(7 8
	parameter8 A
,A B
CultureInfoC N
.N O
InvariantCultureO _
)_ `
;` a
switch 
( 
	Operation !
)! "
{ 
case 
MathOperation &
.& '
Add' *
:* +
return   
value1   %
+  & '
value2  ( .
;  . /
case!! 
MathOperation!! &
.!!& '
Divide!!' -
:!!- .
return"" 
value1"" %
/""& '
value2""( .
;"". /
case## 
MathOperation## &
.##& '
Multiply##' /
:##/ 0
return$$ 
value1$$ %
*$$& '
value2$$( .
;$$. /
case%% 
MathOperation%% &
.%%& '
Subtract%%' /
:%%/ 0
return&& 
value1&& %
-&&& '
value2&&( .
;&&. /
default'' 
:'' 
return(( 
Binding(( &
.((& '
	DoNothing((' 0
;((0 1
})) 
}** 
catch++ 
(++ 
FormatException++ "
)++" #
{,, 
return-- 
Binding-- 
.-- 
	DoNothing-- (
;--( )
}.. 
}// 	
public11 
object11 
ConvertBack11 !
(11! "
object11" (
value11) .
,11. /
Type110 4

targetType115 ?
,11? @
object11A G
	parameter11H Q
,11Q R
CultureInfo11S ^
culture11_ f
)11f g
{22 	
return33 
Binding33 
.33 
	DoNothing33 $
;33$ %
}44 	
}55 
}66 Õ
gD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\MathMultipleConverter.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
.

" #

Converters

# -
{ 
public 

sealed 
class !
MathMultipleConverter -
:. / 
IMultiValueConverter0 D
{ 
public 
MathOperation 
	Operation &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
object 
Convert 
( 
object $
[$ %
]% &
value' ,
,, -
Type. 2

targetType3 =
,= >
object? E
	parameterF O
,O P
CultureInfoQ \
culture] d
)d e
{ 	
if 
( 
value 
== 
null 
||  
value! &
.& '
Length' -
<. /
$num0 1
||2 4
value5 :
[: ;
$num; <
]< =
==> @
nullA E
||F H
valueI N
[N O
$numO P
]P Q
==R T
nullU Y
)Y Z
return[ a
Bindingb i
.i j
	DoNothingj s
;s t
if 
( 
! 
double 
. 
TryParse  
(  !
value! &
[& '
$num' (
]( )
.) *
ToString* 2
(2 3
)3 4
,4 5
out6 9
double: @
value1A G
)G H
||I K
!L M
doubleM S
.S T
TryParseT \
(\ ]
value] b
[b c
$numc d
]d e
.e f
ToStringf n
(n o
)o p
,p q
outr u
doublev |
value2	} É
)
É Ñ
)
Ñ Ö
return 
$num 
; 
switch 
( 
	Operation 
) 
{ 
default 
: 
return 
value1 !
+" #
value2$ *
;* +
case 
MathOperation "
." #
Divide# )
:) *
return 
value1 !
/" #
value2$ *
;* +
case 
MathOperation "
." #
Multiply# +
:+ ,
return 
value1 !
*" #
value2$ *
;* +
case   
MathOperation   "
.  " #
Subtract  # +
:  + ,
return!! 
value1!! !
-!!" #
value2!!$ *
;!!* +
}"" 
}$$ 	
public&& 
object&& 
[&& 
]&& 
ConvertBack&& #
(&&# $
object&&$ *
value&&+ 0
,&&0 1
Type&&2 6
[&&6 7
]&&7 8
targetTypes&&9 D
,&&D E
object&&F L
	parameter&&M V
,&&V W
CultureInfo&&X c
culture&&d k
)&&k l
{'' 	
throw(( 
new(( #
NotImplementedException(( -
(((- .
)((. /
;((/ 0
})) 	
}** 
}++ ›
^D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\NotConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class 
NotConverter 
: 
IValueConverter  /
{		 
public

 
object

 
Convert

 
(

 
object

 $
value

% *
,

* +
Type

, 0

targetType

1 ;
,

; <
object

= C
	parameter

D M
,

M N
CultureInfo

O Z
culture

[ b
)

b c
{ 	
return 
! 
( 
value 
as 
bool "
?" #
)# $
??% '
!( )
bool) -
.- .
Parse. 3
(3 4
value4 9
.9 :
ToString: B
(B C
)C D
)D E
;E F
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
! 
( 
value 
as 
bool "
?" #
)# $
??% '
!( )
bool) -
.- .
Parse. 3
(3 4
value4 9
.9 :
ToString: B
(B C
)C D
)D E
;E F
} 	
} 
} ®
xD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\NullableDateTimeToCurrentDateConverter.cs
	namespace		 	 
MaterialDesignThemes		
 
.		 
Wpf		 "
.		" #

Converters		# -
{

 
public 

class 2
&NullableDateTimeToCurrentDateConverter 7
:8 9
IValueConverter: I
{ 
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
if 
( 
value 
is 
DateTime !
)! "
return 
value 
; 
return 
DateTime 
. 
Now 
.  
Date  $
;$ %
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
value 
; 
} 	
} 
} ≈
kD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\NullToVisibilityConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class )
NullableToVisibilityConverter .
:/ 0
IValueConverter1 @
{		 
public

 

Visibility

 
	NullValue

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
=

2 3

Visibility

4 >
.

> ?
	Collapsed

? H
;

H I
public 

Visibility 
NotNullValue &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6

Visibility7 A
.A B
VisibleB I
;I J
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
return 
value 
== 
null  
?! "
	NullValue# ,
:- .
NotNullValue/ ;
;; <
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
} 
} √
nD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\NotZeroToVisibilityConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class (
NotZeroToVisibilityConverter -
:. /
IValueConverter0 ?
{		 
public

 
object

 
Convert

 
(

 
object

 $
value

% *
,

* +
Type

, 0

targetType

1 ;
,

; <
object

= C
	parameter

D M
,

M N
CultureInfo

O Z
culture

[ b
)

b c
{ 	
double 
val 
; 
double 
. 
TryParse 
( 
( 
value "
??# %
$str& (
)( )
.) *
ToString* 2
(2 3
)3 4
,4 5
out6 9
val: =
)= >
;> ?
return 
Math 
. 
Abs 
( 
val 
)  
>! "
$num# &
?' (

Visibility) 3
.3 4
Visible4 ;
:< =

Visibility> H
.H I
	CollapsedI R
;R S
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
} 
}  
eD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\PointValueConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class 
PointValueConverter $
:% & 
IMultiValueConverter' ;
{		 
public

 
object

 
Convert

 
(

 
object

 $
[

$ %
]

% &
values

' -
,

- .
Type

/ 3

targetType

4 >
,

> ?
object

@ F
	parameter

G P
,

P Q
CultureInfo

R ]
culture

^ e
)

e f
{ 	
if 
( 
values 
? 
. 
Length 
== !
$num" #
&&$ &
values' -
[- .
$num. /
]/ 0
!=1 3
null4 8
&&9 ;
values< B
[B C
$numC D
]D E
!=F H
nullI M
)M N
{ 
double 
x 
, 
y 
; 
if 
( 
double 
. 
TryParse #
(# $
values$ *
[* +
$num+ ,
], -
.- .
ToString. 6
(6 7
)7 8
,8 9
out: =
x> ?
)? @
&&A C
double 
. 
TryParse #
(# $
values$ *
[* +
$num+ ,
], -
.- .
ToString. 6
(6 7
)7 8
,8 9
out: =
y> ?
)? @
)@ A
return 
new 
Point $
($ %
x% &
,& '
y( )
)) *
;* +
} 
return 
new 
Point 
( 
) 
; 
} 	
public 
object 
[ 
] 
ConvertBack #
(# $
object$ *
value+ 0
,0 1
Type2 6
[6 7
]7 8
targetTypes9 D
,D E
objectF L
	parameterM V
,V W
CultureInfoX c
cultured k
)k l
{ 	
if 
( 
value 
is 
Point 
) 
{ 
var 
point 
= 
( 
Point "
)" #
value$ )
;) *
return 
new 
object !
[! "
]" #
{$ %
point& +
.+ ,
X, -
,- .
point/ 4
.4 5
Y5 6
}7 8
;8 9
} 
return   
new   
object   
[   
$num   
]    
;    !
}!! 	
}"" 
}## î
aD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\ShadowConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 

class 
ShadowConverter  
:! "
IValueConverter# 2
{		 
public

 
static

 
readonly

 
ShadowConverter

 .
Instance

/ 7
=

8 9
new

: =
ShadowConverter

> M
(

M N
)

N O
;

O P
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
if 
( 
! 
( 
value 
is 
ShadowDepth &
)& '
)' (
return) /
null0 4
;4 5
return 
Clone 
( 

ShadowInfo #
.# $
GetDropShadow$ 1
(1 2
(2 3
ShadowDepth3 >
)> ?
value@ E
)E F
)F G
;G H
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
private 
static 
DropShadowEffect '
Clone( -
(- .
DropShadowEffect. >
dropShadowEffect? O
)O P
{ 	
if 
( 
dropShadowEffect  
==! #
null$ (
)( )
return* 0
null1 5
;5 6
return 
new 
DropShadowEffect '
(' (
)( )
{ 

BlurRadius 
= 
dropShadowEffect -
.- .

BlurRadius. 8
,8 9
Color 
= 
dropShadowEffect (
.( )
Color) .
,. /
	Direction 
= 
dropShadowEffect ,
., -
	Direction- 6
,6 7
Opacity   
=   
dropShadowEffect   *
.  * +
Opacity  + 2
,  2 3
RenderingBias!! 
=!! 
dropShadowEffect!!  0
.!!0 1
RenderingBias!!1 >
,!!> ?
ShadowDepth"" 
="" 
dropShadowEffect"" .
."". /
ShadowDepth""/ :
}## 
;## 
}$$ 	
}%% 
}&& Œ@
eD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\ShadowEdgeConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{		 
public

 

class

 
ShadowEdgeConverter

 $
:

% & 
IMultiValueConverter

' ;
{ 
public 
object 
Convert 
( 
object $
[$ %
]% &
values' -
,- .
Type/ 3

targetType4 >
,> ?
object@ F
	parameterG P
,P Q
CultureInfoR ]
culture^ e
)e f
{ 	
if 
( 
values 
? 
. 
Length 
!= !
$num" #
)# $
{ 
return 
Binding 
. 
	DoNothing (
;( )
} 
if 
( 
! 
( 
values 
[ 
$num 
] 
is 
double %
)% &
||' )
!* +
(+ ,
values, 2
[2 3
$num3 4
]4 5
is6 8
double9 ?
)? @
||A C
!D E
(E F
valuesF L
[L M
$numM N
]N O
isP R
ShadowDepthS ^
)^ _
||` b
! 
( 
values 
[ 
$num 
] 
is 
ShadowEdges *
)* +
)+ ,
{ 
return 
Binding 
. 
	DoNothing (
;( )
} 
double 
width 
= 
( 
double "
)" #
values# )
[) *
$num* +
]+ ,
;, -
double 
height 
= 
( 
double #
)# $
values$ *
[* +
$num+ ,
], -
;- .
if 
( 
double 
. 
IsNaN 
( 
width "
)" #
||$ &
double' -
.- .

IsInfinity. 8
(8 9
width9 >
)> ?
||@ B
doubleC I
.I J
IsNaNJ O
(O P
heightP V
)V W
||X Z
double[ a
.a b

IsInfinityb l
(l m
heightm s
)s t
)t u
{ 
return 
Binding 
. 
	DoNothing (
;( )
} 
DropShadowEffect 

dropShadow '
=( )

ShadowInfo* 4
.4 5
GetDropShadow5 B
(B C
(C D
ShadowDepthD O
)O P
valuesP V
[V W
$numW X
]X Y
)Y Z
;Z [
if   
(   

dropShadow   
==   
null   "
)  " #
{!! 
return"" 
Binding"" 
."" 
	DoNothing"" (
;""( )
}## 
ShadowEdges%% 
edges%% 
=%% 
(%%  !
ShadowEdges%%! ,
)%%, -
values%%- 3
[%%3 4
$num%%4 5
]%%5 6
;%%6 7
double&& 

blurRadius&& 
=&& 

dropShadow&&  *
.&&* +

BlurRadius&&+ 5
;&&5 6
var(( 
rect(( 
=(( 
new(( 
Rect(( 
(((  
$num((  !
,((! "
$num((# $
,(($ %
width((& +
,((+ ,
height((- 3
)((3 4
;((4 5
if** 
(** 
edges** 
.** 
HasFlag** 
(** 
ShadowEdges** )
.**) *
Left*** .
)**. /
)**/ 0
{++ 
rect,, 
=,, 
new,, 
Rect,, 
(,,  
rect,,  $
.,,$ %
X,,% &
-,,' (

blurRadius,,) 3
,,,3 4
rect,,5 9
.,,9 :
Y,,: ;
,,,; <
rect,,= A
.,,A B
Width,,B G
+,,H I

blurRadius,,J T
,,,T U
rect,,V Z
.,,Z [
Height,,[ a
),,a b
;,,b c
}-- 
if.. 
(.. 
edges.. 
... 
HasFlag.. 
(.. 
ShadowEdges.. )
...) *
Top..* -
)..- .
)... /
{// 
rect00 
=00 
new00 
Rect00 
(00  
rect00  $
.00$ %
X00% &
,00& '
rect00( ,
.00, -
Y00- .
-00/ 0

blurRadius001 ;
,00; <
rect00= A
.00A B
Width00B G
,00G H
rect00I M
.00M N
Height00N T
+00U V

blurRadius00W a
)00a b
;00b c
}11 
if22 
(22 
edges22 
.22 
HasFlag22 
(22 
ShadowEdges22 )
.22) *
Right22* /
)22/ 0
)220 1
{33 
rect44 
=44 
new44 
Rect44 
(44  
rect44  $
.44$ %
X44% &
,44& '
rect44( ,
.44, -
Y44- .
,44. /
rect440 4
.444 5
Width445 :
+44; <

blurRadius44= G
,44G H
rect44I M
.44M N
Height44N T
)44T U
;44U V
}55 
if66 
(66 
edges66 
.66 
HasFlag66 
(66 
ShadowEdges66 )
.66) *
Bottom66* 0
)660 1
)661 2
{77 
rect88 
=88 
new88 
Rect88 
(88  
rect88  $
.88$ %
X88% &
,88& '
rect88( ,
.88, -
Y88- .
,88. /
rect880 4
.884 5
Width885 :
,88: ;
rect88< @
.88@ A
Height88A G
+88H I

blurRadius88J T
)88T U
;88U V
}99 
var;; 
size;; 
=;; 
new;; 
GeometryDrawing;; *
(;;* +
new;;+ .
SolidColorBrush;;/ >
(;;> ?
Colors;;? E
.;;E F
White;;F K
);;K L
,;;L M
new;;N Q
Pen;;R U
(;;U V
);;V W
,;;W X
new;;Y \
RectangleGeometry;;] n
(;;n o
rect;;o s
);;s t
);;t u
;;;u v
return<< 
new<< 
DrawingBrush<< #
(<<# $
size<<$ (
)<<( )
{== 
Stretch>> 
=>> 
Stretch>> !
.>>! "
None>>" &
,>>& '
TileMode?? 
=?? 
TileMode?? #
.??# $
None??$ (
,??( )
Viewport@@ 
=@@ 
rect@@ 
,@@  
ViewportUnitsAA 
=AA 
BrushMappingModeAA  0
.AA0 1
AbsoluteAA1 9
,AA9 :
ViewboxBB 
=BB 
rectBB 
,BB 
ViewboxUnitsCC 
=CC 
BrushMappingModeCC /
.CC/ 0
AbsoluteCC0 8
}DD 
;DD 
}EE 	
publicGG 
objectGG 
[GG 
]GG 
ConvertBackGG #
(GG# $
objectGG$ *
valueGG+ 0
,GG0 1
TypeGG2 6
[GG6 7
]GG7 8
targetTypesGG9 D
,GGD E
objectGGF L
	parameterGGM V
,GGV W
CultureInfoGGX c
cultureGGd k
)GGk l
{HH 	
throwII 
newII #
NotImplementedExceptionII -
(II- .
)II. /
;II/ 0
}JJ 	
}KK 
}LL Ë
\D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\ShadowInfo.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
internal 
static 
class 

ShadowInfo $
{		 
private

 
static

 
readonly

 
IDictionary

  +
<

+ ,
ShadowDepth

, 7
,

7 8
DropShadowEffect

9 I
>

I J
ShadowsDictionary

K \
;

\ ]
static 

ShadowInfo 
( 
) 
{ 	
var 
resourceDictionary "
=# $
new% (
ResourceDictionary) ;
{< =
Source> D
=E F
newG J
UriK N
(N O
$str	O ≤
,
≤ ≥
UriKind
¥ ª
.
ª º
Absolute
º ƒ
)
ƒ ≈
}
∆ «
;
« »
ShadowsDictionary 
= 
new  #

Dictionary$ .
<. /
ShadowDepth/ :
,: ;
DropShadowEffect< L
>L M
{ 
{ 
ShadowDepth 
. 
Depth0 $
,$ %
null& *
}+ ,
,, -
{ 
ShadowDepth 
. 
Depth1 $
,$ %
(& '
DropShadowEffect' 7
)7 8
resourceDictionary8 J
[J K
$strK g
]g h
}i j
,j k
{ 
ShadowDepth 
. 
Depth2 $
,$ %
(& '
DropShadowEffect' 7
)7 8
resourceDictionary8 J
[J K
$strK g
]g h
}i j
,j k
{ 
ShadowDepth 
. 
Depth3 $
,$ %
(& '
DropShadowEffect' 7
)7 8
resourceDictionary8 J
[J K
$strK g
]g h
}i j
,j k
{ 
ShadowDepth 
. 
Depth4 $
,$ %
(& '
DropShadowEffect' 7
)7 8
resourceDictionary8 J
[J K
$strK g
]g h
}i j
,j k
{ 
ShadowDepth 
. 
Depth5 $
,$ %
(& '
DropShadowEffect' 7
)7 8
resourceDictionary8 J
[J K
$strK g
]g h
}i j
,j k
} 
; 
} 	
public 
static 
DropShadowEffect &
GetDropShadow' 4
(4 5
ShadowDepth5 @
depthA F
)F G
{ 	
return 
ShadowsDictionary $
[$ %
depth% *
]* +
;+ ,
} 	
} 
}   ß
eD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\SizeToRectConverter.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
.

" #

Converters

# -
{ 
public 

class 
CardClipConverter "
:# $ 
IMultiValueConverter% 9
{ 
public 
object 
Convert 
( 
object $
[$ %
]% &
values' -
,- .
Type/ 3

targetType4 >
,> ?
object@ F
	parameterG P
,P Q
CultureInfoR ]
culture^ e
)e f
{ 	
if 
( 
values 
. 
Length 
!=  
$num! "
||# %
!& '
(' (
values( .
[. /
$num/ 0
]0 1
is2 4
Size5 9
)9 :
||; =
!> ?
(? @
values@ F
[F G
$numG H
]H I
isJ L
	ThicknessM V
)V W
)W X
return 
Binding 
. 
	DoNothing (
;( )
var 
size 
= 
( 
Size 
) 
values #
[# $
$num$ %
]% &
;& '
var 
farPoint 
= 
new 
Point $
($ %
Math 
. 
Max 
( 
$num 
, 
size  
.  !
Width! &
)& '
,' (
Math 
. 
Max 
( 
$num 
, 
size  
.  !
Height! '
)' (
)( )
;) *
var   
padding   
=   
(   
	Thickness   $
)  $ %
values  % +
[  + ,
$num  , -
]  - .
;  . /
farPoint!! 
.!! 
Offset!! 
(!! 
padding!! #
.!!# $
Left!!$ (
+!!) *
padding!!+ 2
.!!2 3
Right!!3 8
,!!8 9
padding!!: A
.!!A B
Top!!B E
+!!F G
padding!!H O
.!!O P
Bottom!!P V
)!!V W
;!!W X
return## 
new## 
Rect## 
(## 
new$$ 
Point$$ 
($$ 
)$$ 
,$$ 
new%% 
Point%% 
(%% 
farPoint%% "
.%%" #
X%%# $
,%%$ %
farPoint%%& .
.%%. /
Y%%/ 0
)%%0 1
)%%1 2
;%%2 3
}&& 	
public(( 
object(( 
[(( 
](( 
ConvertBack(( #
(((# $
object(($ *
value((+ 0
,((0 1
Type((2 6
[((6 7
]((7 8
targetTypes((9 D
,((D E
object((F L
	parameter((M V
,((V W
CultureInfo((X c
culture((d k
)((k l
{)) 	
return** 
null** 
;** 
}++ 	
},, 
}-- à
nD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\SnackbarMessageTypeConverter.cs
	namespace		 	 
MaterialDesignThemes		
 
.		 
Wpf		 "
.		" #

Converters		# -
{

 
public 

class (
SnackbarMessageTypeConverter -
:. /
TypeConverter0 =
{ 
public 
override 
bool 
CanConvertFrom +
(+ ,"
ITypeDescriptorContext, B
contextC J
,J K
TypeL P

sourceTypeQ [
)[ \
{ 	
return 

sourceType 
==  
typeof! '
(' (
string( .
). /
||0 2
base3 7
.7 8
CanConvertFrom8 F
(F G
contextG N
,N O

sourceTypeP Z
)Z [
;[ \
} 	
public 
override 
object 
ConvertFrom *
(* +"
ITypeDescriptorContext+ A
contextB I
,I J
CultureInfoK V
cultureW ^
,^ _
object` f
valueg l
)l m
{ 	
var 
s 
= 
value 
as 
string #
;# $
if 
( 
s 
!= 
null 
) 
{ 
return 
new 
SnackbarMessage *
{ 
Content 
= 
s 
} 
; 
} 
return 
base 
. 
ConvertFrom #
(# $
context$ +
,+ ,
culture- 4
,4 5
value6 ;
); <
;< =
} 	
} 
}   ˘
kD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\TimeToVisibilityConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public		 

class		 %
TimeToVisibilityConverter		 *
:		* +
MarkupExtension		, ;
,		; <
IValueConverter		= L
{

 
public 
override 
object 
ProvideValue +
(+ ,
IServiceProvider, <
serviceProvider= L
)L M
{ 	
return 
this 
; 
} 	
public 
object 
Convert 
( 
object $
value% *
,* +
Type, 0

targetType1 ;
,; <
object= C
	parameterD M
,M N
CultureInfoO Z
culture[ b
)b c
{ 	
var 
time 
= 
( 
DateTime  
)  !
value! &
;& '
var 
isPm 
= 
( 
( 
time 
. 
Hour "
>=# %
$num& (
)( )
||* ,
(- .
time. 2
.2 3
Hour3 7
==8 :
$num; <
)< =
)= >
;> ?
return 
isPm 
? 

Visibility $
.$ %
Visible% ,
:- .

Visibility/ 9
.9 :
	Collapsed: C
;C D
} 	
public 
object 
ConvertBack !
(! "
object" (
value) .
,. /
Type0 4

targetType5 ?
,? @
objectA G
	parameterH Q
,Q R
CultureInfoS ^
culture_ f
)f g
{ 	
return 
Binding 
. 
	DoNothing $
;$ %
} 	
} 
} ¯
iD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\CustomPopupPlacementCallbackHelper.cs
	namespace		 	 
MaterialDesignThemes		
 
.		 
Wpf		 "
{

 
public 

static 
class .
"CustomPopupPlacementCallbackHelper :
{ 
public 
static 
readonly (
CustomPopupPlacementCallback ;
LargePopupCallback< N
;N O
static .
"CustomPopupPlacementCallbackHelper 1
(1 2
)2 3
{ 	
LargePopupCallback 
=  
( 
size 
, 

targetSize !
,! "
offset# )
)) *
=>+ -
new. 1
[1 2
]2 3
{4 5
new5 8 
CustomPopupPlacement9 M
(M N
newN Q
PointR W
(W X
)X Y
,Y Z
PopupPrimaryAxis[ k
.k l

Horizontall v
)v w
}w x
;x y
} 	
} 
} ¸ª
UD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DataGridAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
DataGridAssist &
{ 
private 
static 
DataGrid &
_suppressComboAutoDropDown  :
;: ;
public 
static 
readonly 
DependencyProperty 1.
"AutoGeneratedCheckBoxStyleProperty2 T
=U V
DependencyPropertyW i
. 
RegisterAttached 
( 
$str ,
,, -
typeof. 4
(5 6
Style6 ;
); <
,< =
typeof> D
(E F
DataGridAssistF T
)T U
,U V
new 
PropertyMetadata $
($ %
default% ,
(, -
Style- 2
)2 3
,3 4=
1AutoGeneratedCheckBoxStylePropertyChangedCallback5 f
)f g
)g h
;h i
private 
static 
void =
1AutoGeneratedCheckBoxStylePropertyChangedCallback M
(M N
DependencyObjectN ^
dependencyObject_ o
,o p.
"DependencyPropertyChangedEventArgs ..
"dependencyPropertyChangedEventArgs/ Q
)Q R
{ 	
( 
( 
DataGrid 
) 
dependencyObject (
)( )
.) * 
AutoGeneratingColumn* >
+=? A
(B C
senderC I
,I J
argsK O
)O P
=>Q S
{ 
var "
dataGridCheckBoxColumn *
=+ ,
args- 1
.1 2
Column2 8
as9 ;"
DataGridCheckBoxColumn< R
;R S
if 
( "
dataGridCheckBoxColumn *
==+ -
null. 2
)2 3
return4 :
;: ;"
dataGridCheckBoxColumn &
.& '
ElementStyle' 3
=4 5)
GetAutoGeneratedCheckBoxStyle6 S
(S T
dependencyObjectT d
)d e
;e f
}   
;   
}!! 	
public## 
static## 
void## )
SetAutoGeneratedCheckBoxStyle## 8
(##8 9
DependencyObject##9 I
element##J Q
,##Q R
Style##S X
value##Y ^
)##^ _
{$$ 	
element%% 
.%% 
SetValue%% 
(%% .
"AutoGeneratedCheckBoxStyleProperty%% ?
,%%? @
value%%A F
)%%F G
;%%G H
}&& 	
public(( 
static(( 
Style(( )
GetAutoGeneratedCheckBoxStyle(( 9
(((9 :
DependencyObject((: J
element((K R
)((R S
{)) 	
return** 
(** 
Style** 
)** 
element** "
.**" #
GetValue**# +
(**+ ,.
"AutoGeneratedCheckBoxStyleProperty**, N
)**N O
;**O P
}++ 	
public-- 
static-- 
readonly-- 
DependencyProperty-- 15
)AutoGeneratedEditingCheckBoxStyleProperty--2 [
=--\ ]
DependencyProperty--^ p
... 
RegisterAttached.. 
(.. 
$str// 3
,//3 4
typeof//5 ;
(//< =
Style//= B
)//B C
,//C D
typeof//E K
(//L M
DataGridAssist//M [
)//[ \
,//\ ]
new00 
PropertyMetadata00 $
(00$ %
default00% ,
(00, -
Style00- 2
)002 3
,003 4D
8AutoGeneratedEditingCheckBoxStylePropertyChangedCallback005 m
)00m n
)00n o
;00o p
private22 
static22 
void22 D
8AutoGeneratedEditingCheckBoxStylePropertyChangedCallback22 T
(22T U
DependencyObject22U e
dependencyObject22f v
,22v w.
"DependencyPropertyChangedEventArgs33 ..
"dependencyPropertyChangedEventArgs33/ Q
)33Q R
{44 	
(55 
(55 
DataGrid55 
)55 
dependencyObject55 (
)55( )
.55) * 
AutoGeneratingColumn55* >
+=55? A
(55B C
sender55C I
,55I J
args55K O
)55O P
=>55Q S
{66 
var77 "
dataGridCheckBoxColumn77 *
=77+ ,
args77- 1
.771 2
Column772 8
as779 ;"
DataGridCheckBoxColumn77< R
;77R S
if88 
(88 "
dataGridCheckBoxColumn88 *
==88+ -
null88. 2
)882 3
return884 :
;88: ;"
dataGridCheckBoxColumn:: &
.::& '
EditingElementStyle::' :
=::; <0
$GetAutoGeneratedEditingCheckBoxStyle::= a
(::a b
dependencyObject::b r
)::r s
;::s t
};; 
;;; 
}<< 	
public>> 
static>> 
void>> 0
$SetAutoGeneratedEditingCheckBoxStyle>> ?
(>>? @
DependencyObject>>@ P
element>>Q X
,>>X Y
Style>>Z _
value>>` e
)>>e f
{?? 	
element@@ 
.@@ 
SetValue@@ 
(@@ 5
)AutoGeneratedEditingCheckBoxStyleProperty@@ F
,@@F G
value@@H M
)@@M N
;@@N O
}AA 	
publicCC 
staticCC 
StyleCC 0
$GetAutoGeneratedEditingCheckBoxStyleCC @
(CC@ A
DependencyObjectCCA Q
elementCCR Y
)CCY Z
{DD 	
returnEE 
(EE 
StyleEE 
)EE 
elementEE "
.EE" #
GetValueEE# +
(EE+ ,5
)AutoGeneratedEditingCheckBoxStylePropertyEE, U
)EEU V
;EEV W
}FF 	
publicHH 
staticHH 
readonlyHH 
DependencyPropertyHH 11
%AutoGeneratedEditingTextStylePropertyHH2 W
=HHX Y
DependencyPropertyHHZ l
.II 
RegisterAttachedII 
(II 
$strJJ /
,JJ/ 0
typeofJJ1 7
(JJ8 9
StyleJJ9 >
)JJ> ?
,JJ? @
typeofJJA G
(JJH I
DataGridAssistJJI W
)JJW X
,JJX Y
newKK 
PropertyMetadataKK $
(KK$ %
defaultKK% ,
(KK, -
StyleKK- 2
)KK2 3
,KK3 4@
4AutoGeneratedEditingTextStylePropertyChangedCallbackKK5 i
)KKi j
)KKj k
;KKk l
privateMM 
staticMM 
voidMM @
4AutoGeneratedEditingTextStylePropertyChangedCallbackMM P
(MMP Q
DependencyObjectMMQ a
dependencyObjectMMb r
,MMr s.
"DependencyPropertyChangedEventArgsNN ..
"dependencyPropertyChangedEventArgsNN/ Q
)NNQ R
{OO 	
(PP 
(PP 
DataGridPP 
)PP 
dependencyObjectPP (
)PP( )
.PP) * 
AutoGeneratingColumnPP* >
+=PP? A
(PPB C
senderPPC I
,PPI J
argsPPK O
)PPO P
=>PPQ S
{QQ 
varRR 
dataGridTextColumnRR &
=RR' (
argsRR) -
.RR- .
ColumnRR. 4
asRR5 7
DataGridTextColumnRR8 J
;RRJ K
ifSS 
(SS 
dataGridTextColumnSS &
==SS' )
nullSS* .
)SS. /
returnSS0 6
;SS6 7
dataGridTextColumnUU "
.UU" #
EditingElementStyleUU# 6
=UU7 8,
 GetAutoGeneratedEditingTextStyleUU9 Y
(UUY Z
dependencyObjectUUZ j
)UUj k
;UUk l
}VV 
;VV 
}WW 	
publicYY 
staticYY 
voidYY ,
 SetAutoGeneratedEditingTextStyleYY ;
(YY; <
DependencyObjectYY< L
elementYYM T
,YYT U
StyleYYV [
valueYY\ a
)YYa b
{ZZ 	
element[[ 
.[[ 
SetValue[[ 
([[ 1
%AutoGeneratedEditingTextStyleProperty[[ B
,[[B C
value[[D I
)[[I J
;[[J K
}\\ 	
public^^ 
static^^ 
Style^^ ,
 GetAutoGeneratedEditingTextStyle^^ <
(^^< =
DependencyObject^^= M
element^^N U
)^^U V
{__ 	
return`` 
(`` 
Style`` 
)`` 
element`` "
.``" #
GetValue``# +
(``+ ,1
%AutoGeneratedEditingTextStyleProperty``, Q
)``Q R
;``R S
}aa 	
publiccc 
staticcc 
readonlycc 
DependencyPropertycc 1
CellPaddingPropertycc2 E
=ccF G
DependencyPropertyccH Z
.ccZ [
RegisterAttachedcc[ k
(cck l
$strdd 
,dd 
typeofdd !
(dd" #
	Thicknessdd# ,
)dd, -
,dd- .
typeofdd/ 5
(dd6 7
DataGridAssistdd7 E
)ddE F
,ddF G
newee %
FrameworkPropertyMetadataee )
(ee) *
newee* -
	Thicknessee. 7
(ee7 8
$numee8 :
,ee: ;
$numee< =
,ee= >
$numee? @
,ee@ A
$numeeB C
)eeC D
,eeD E,
 FrameworkPropertyMetadataOptionseeF f
.eef g
Inheritseeg o
)eeo p
)eep q
;eeq r
publicgg 
staticgg 
voidgg 
SetCellPaddinggg )
(gg) *
DependencyObjectgg* :
elementgg; B
,ggB C
	ThicknessggD M
valueggN S
)ggS T
{hh 	
elementii 
.ii 
SetValueii 
(ii 
CellPaddingPropertyii 0
,ii0 1
valueii2 7
)ii7 8
;ii8 9
}jj 	
publicll 
staticll 
	Thicknessll 
GetCellPaddingll  .
(ll. /
DependencyObjectll/ ?
elementll@ G
)llG H
{mm 	
returnnn 
(nn 
	Thicknessnn 
)nn 
elementnn &
.nn& '
GetValuenn' /
(nn/ 0
CellPaddingPropertynn0 C
)nnC D
;nnD E
}oo 	
publicqq 
staticqq 
readonlyqq 
DependencyPropertyqq 1'
ColumnHeaderPaddingPropertyqq2 M
=qqN O
DependencyPropertyqqP b
.qqb c
RegisterAttachedqqc s
(qqs t
$strrr !
,rr! "
typeofrr# )
(rr* +
	Thicknessrr+ 4
)rr4 5
,rr5 6
typeofrr7 =
(rr> ?
DataGridAssistrr? M
)rrM N
,rrN O
newss %
FrameworkPropertyMetadatass )
(ss) *
newss* -
	Thicknessss. 7
(ss7 8
$numss8 9
)ss9 :
,ss: ;,
 FrameworkPropertyMetadataOptionsss< \
.ss\ ]
Inheritsss] e
)sse f
)ssf g
;ssg h
publicuu 
staticuu 
voiduu "
SetColumnHeaderPaddinguu 1
(uu1 2
DependencyObjectuu2 B
elementuuC J
,uuJ K
	ThicknessuuL U
valueuuV [
)uu[ \
{vv 	
elementww 
.ww 
SetValueww 
(ww '
ColumnHeaderPaddingPropertyww 8
,ww8 9
valueww: ?
)ww? @
;ww@ A
}xx 	
publiczz 
staticzz 
	Thicknesszz "
GetColumnHeaderPaddingzz  6
(zz6 7
DependencyObjectzz7 G
elementzzH O
)zzO P
{{{ 	
return|| 
(|| 
	Thickness|| 
)|| 
element|| &
.||& '
GetValue||' /
(||/ 0'
ColumnHeaderPaddingProperty||0 K
)||K L
;||L M
}}} 	
public
ÄÄ 
static
ÄÄ 
readonly
ÄÄ  
DependencyProperty
ÄÄ 1)
EnableEditBoxAssistProperty
ÄÄ2 M
=
ÄÄN O 
DependencyProperty
ÄÄP b
.
ÄÄb c
RegisterAttached
ÄÄc s
(
ÄÄs t
$str
ÅÅ !
,
ÅÅ! "
typeof
ÅÅ# )
(
ÅÅ* +
bool
ÅÅ+ /
)
ÅÅ/ 0
,
ÅÅ0 1
typeof
ÅÅ2 8
(
ÅÅ9 :
DataGridAssist
ÅÅ: H
)
ÅÅH I
,
ÅÅI J
new
ÇÇ 
PropertyMetadata
ÇÇ  
(
ÇÇ  !
default
ÇÇ! (
(
ÇÇ( )
bool
ÇÇ) -
)
ÇÇ- .
,
ÇÇ. /9
+EnableCheckBoxAssistPropertyChangedCallback
ÇÇ0 [
)
ÇÇ[ \
)
ÇÇ\ ]
;
ÇÇ] ^
public
ÑÑ 
static
ÑÑ 
void
ÑÑ $
SetEnableEditBoxAssist
ÑÑ 1
(
ÑÑ1 2
DependencyObject
ÑÑ2 B
element
ÑÑC J
,
ÑÑJ K
bool
ÑÑL P
value
ÑÑQ V
)
ÑÑV W
{
ÖÖ 	
element
ÜÜ 
.
ÜÜ 
SetValue
ÜÜ 
(
ÜÜ )
EnableEditBoxAssistProperty
ÜÜ 8
,
ÜÜ8 9
value
ÜÜ: ?
)
ÜÜ? @
;
ÜÜ@ A
}
áá 	
public
ââ 
static
ââ 
bool
ââ $
GetEnableEditBoxAssist
ââ 1
(
ââ1 2
DependencyObject
ââ2 B
element
ââC J
)
ââJ K
{
ää 	
return
ãã 
(
ãã 
bool
ãã 
)
ãã 
element
ãã !
.
ãã! "
GetValue
ãã" *
(
ãã* +)
EnableEditBoxAssistProperty
ãã+ F
)
ããF G
;
ããG H
}
åå 	
private
éé 
static
éé 
void
éé 9
+EnableCheckBoxAssistPropertyChangedCallback
éé G
(
ééG H
DependencyObject
ééH X
dependencyObject
ééY i
,
ééi j0
"DependencyPropertyChangedEventArgs
èè .0
"dependencyPropertyChangedEventArgs
èè/ Q
)
èèQ R
{
êê 	
var
ëë 
dataGrid
ëë 
=
ëë 
dependencyObject
ëë +
as
ëë, .
DataGrid
ëë/ 7
;
ëë7 8
if
íí 
(
íí 
dataGrid
íí 
==
íí 
null
íí  
)
íí  !
return
íí" (
;
íí( )
if
îî 
(
îî 
(
îî 
bool
îî 
)
îî 0
"dependencyPropertyChangedEventArgs
îî 9
.
îî9 :
NewValue
îî: B
)
îîB C
dataGrid
ïï 
.
ïï (
PreviewMouseLeftButtonDown
ïï 3
+=
ïï4 62
$DataGridOnPreviewMouseLeftButtonDown
ïï7 [
;
ïï[ \
else
ññ 
dataGrid
óó 
.
óó (
PreviewMouseLeftButtonDown
óó 3
-=
óó4 62
$DataGridOnPreviewMouseLeftButtonDown
óó7 [
;
óó[ \
}
òò 	
private
öö 
static
öö 
void
öö 2
$DataGridOnPreviewMouseLeftButtonDown
öö @
(
öö@ A
object
ööA G
sender
ööH N
,
ööN O"
MouseButtonEventArgs
õõ  "
mouseButtonEventArgs
õõ! 5
)
õõ5 6
{
úú 	
var
ùù 
dataGrid
ùù 
=
ùù 
(
ùù 
DataGrid
ùù $
)
ùù$ %
sender
ùù& ,
;
ùù, -
var
üü 
inputHitTest
üü 
=
üü 
dataGrid
†† 
.
†† 
InputHitTest
†† %
(
††% &"
mouseButtonEventArgs
††& :
.
††: ;
GetPosition
††; F
(
††F G
(
††G H
DataGrid
††H P
)
††P Q
sender
††R X
)
††X Y
)
††Y Z
as
††[ ]
DependencyObject
††^ n
;
††n o
while
¢¢ 
(
¢¢ 
inputHitTest
¢¢ 
!=
¢¢  "
null
¢¢# '
)
¢¢' (
{
££ 
var
§§ 
dataGridCell
§§  
=
§§! "
inputHitTest
§§# /
as
§§0 2
DataGridCell
§§3 ?
;
§§? @
if
•• 
(
•• 
dataGridCell
••  
!=
••! #
null
••$ (
&&
••) +
dataGrid
••, 4
.
••4 5
Equals
••5 ;
(
••; <
dataGridCell
••< H
.
••H I
GetVisualAncestry
••I Z
(
••Z [
)
••[ \
.
••\ ]
OfType
••] c
<
••c d
DataGrid
••d l
>
••l m
(
••m n
)
••n o
.
••o p
FirstOrDefault
••p ~
(
••~ 
)•• Ä
)••Ä Å
)••Å Ç
{
¶¶ 
if
ßß 
(
ßß 
dataGridCell
ßß $
.
ßß$ %

IsReadOnly
ßß% /
)
ßß/ 0
return
ßß1 7
;
ßß7 8
ToggleButton
©©  
toggleButton
©©! -
;
©©- .
ComboBox
™™ 
comboBox
™™ %
;
™™% &
if
´´ 
(
´´ (
IsDirectHitOnEditComponent
´´ 2
(
´´2 3
dataGridCell
´´3 ?
,
´´? @"
mouseButtonEventArgs
´´A U
,
´´U V
out
´´W Z
toggleButton
´´[ g
)
´´g h
)
´´h i
{
¨¨ 
dataGrid
≠≠  
.
≠≠  !
CurrentCell
≠≠! ,
=
≠≠- .
new
≠≠/ 2
DataGridCellInfo
≠≠3 C
(
≠≠C D
dataGridCell
≠≠D P
)
≠≠P Q
;
≠≠Q R
dataGrid
ÆÆ  
.
ÆÆ  !
	BeginEdit
ÆÆ! *
(
ÆÆ* +
)
ÆÆ+ ,
;
ÆÆ, -
toggleButton
ØØ $
.
ØØ$ %
SetCurrentValue
ØØ% 4
(
ØØ4 5
ToggleButton
ØØ5 A
.
ØØA B
IsCheckedProperty
ØØB S
,
ØØS T
!
ØØU V
toggleButton
ØØV b
.
ØØb c
	IsChecked
ØØc l
)
ØØl m
;
ØØm n
dataGrid
∞∞  
.
∞∞  !

CommitEdit
∞∞! +
(
∞∞+ ,
)
∞∞, -
;
∞∞- ."
mouseButtonEventArgs
±± ,
.
±±, -
Handled
±±- 4
=
±±5 6
true
±±7 ;
;
±±; <
}
≤≤ 
else
≥≥ 
if
≥≥ 
(
≥≥ (
IsDirectHitOnEditComponent
≥≥ 7
(
≥≥7 8
dataGridCell
≥≥8 D
,
≥≥D E"
mouseButtonEventArgs
≥≥F Z
,
≥≥Z [
out
≥≥\ _
comboBox
≥≥` h
)
≥≥h i
)
≥≥i j
{
¥¥ 
if
µµ 
(
µµ (
_suppressComboAutoDropDown
µµ 6
!=
µµ7 9
null
µµ: >
)
µµ> ?
return
µµ@ F
;
µµF G
dataGrid
∑∑  
.
∑∑  !
CurrentCell
∑∑! ,
=
∑∑- .
new
∑∑/ 2
DataGridCellInfo
∑∑3 C
(
∑∑C D
dataGridCell
∑∑D P
)
∑∑P Q
;
∑∑Q R
dataGrid
∏∏  
.
∏∏  !
	BeginEdit
∏∏! *
(
∏∏* +
)
∏∏+ ,
;
∏∏, -
if
∫∫ 
(
∫∫ (
IsDirectHitOnEditComponent
∫∫ 6
(
∫∫6 7
dataGridCell
∫∫7 C
,
∫∫C D"
mouseButtonEventArgs
∫∫E Y
,
∫∫Y Z
out
∫∫[ ^
comboBox
∫∫_ g
)
∫∫g h
)
∫∫h i
{
ªª (
_suppressComboAutoDropDown
ºº 6
=
ºº7 8
dataGrid
ºº9 A
;
ººA B
comboBox
ΩΩ $
.
ΩΩ$ %
DropDownClosed
ΩΩ% 3
+=
ΩΩ4 6&
ComboBoxOnDropDownClosed
ΩΩ7 O
;
ΩΩO P
comboBox
ææ $
.
ææ$ %
IsDropDownOpen
ææ% 3
=
ææ4 5
true
ææ6 :
;
ææ: ;
}
øø "
mouseButtonEventArgs
¿¿ ,
.
¿¿, -
Handled
¿¿- 4
=
¿¿5 6
true
¿¿7 ;
;
¿¿; <
}
¡¡ 
return
√√ 
;
√√ 
}
ƒƒ 
inputHitTest
∆∆ 
=
∆∆ 
(
∆∆  
inputHitTest
∆∆  ,
is
∆∆- /
Visual
∆∆0 6
||
∆∆7 9
inputHitTest
∆∆: F
is
∆∆G I
Visual3D
∆∆J R
)
∆∆R S
?
«« 
VisualTreeHelper
«« &
.
««& '
	GetParent
««' 0
(
««0 1
inputHitTest
««1 =
)
««= >
:
»» 
null
»» 
;
»» 
}
…… 
}
   	
private
ÃÃ 
static
ÃÃ 
void
ÃÃ &
ComboBoxOnDropDownClosed
ÃÃ 4
(
ÃÃ4 5
object
ÃÃ5 ;
sender
ÃÃ< B
,
ÃÃB C
	EventArgs
ÃÃD M
	eventArgs
ÃÃN W
)
ÃÃW X
{
ÕÕ 	(
_suppressComboAutoDropDown
ŒŒ &
.
ŒŒ& '

CommitEdit
ŒŒ' 1
(
ŒŒ1 2
)
ŒŒ2 3
;
ŒŒ3 4(
_suppressComboAutoDropDown
œœ &
=
œœ' (
null
œœ) -
;
œœ- .
(
–– 
(
–– 
ComboBox
–– 
)
–– 
sender
–– 
)
–– 
.
–– 
DropDownClosed
–– -
-=
––. 0&
ComboBoxOnDropDownClosed
––1 I
;
––I J
}
—— 	
private
”” 
static
”” 
bool
”” (
IsDirectHitOnEditComponent
”” 6
<
””6 7
TControl
””7 ?
>
””? @
(
””@ A
ContentControl
””A O
contentControl
””P ^
,
””^ _
MouseEventArgs
””` n#
mouseButtonEventArgs””o É
,””É Ñ
out””Ö à
TControl””â ë
control””í ô
)””ô ö
where
‘‘ 
TControl
‘‘ 
:
‘‘ 
Control
‘‘ $
{
’’ 	
control
÷÷ 
=
÷÷ 
contentControl
÷÷ $
.
÷÷$ %
Content
÷÷% ,
as
÷÷- /
TControl
÷÷0 8
;
÷÷8 9
if
◊◊ 
(
◊◊ 
control
◊◊ 
==
◊◊ 
null
◊◊ 
)
◊◊  
return
◊◊! '
false
◊◊( -
;
◊◊- .
var
ŸŸ 
frameworkElement
ŸŸ  
=
ŸŸ! "
VisualTreeHelper
ŸŸ# 3
.
ŸŸ3 4
GetChild
ŸŸ4 <
(
ŸŸ< =
contentControl
ŸŸ= K
,
ŸŸK L
$num
ŸŸM N
)
ŸŸN O
as
ŸŸP R
FrameworkElement
ŸŸS c
;
ŸŸc d
if
⁄⁄ 
(
⁄⁄ 
frameworkElement
⁄⁄  
==
⁄⁄! #
null
⁄⁄$ (
)
⁄⁄( )
return
⁄⁄* 0
false
⁄⁄1 6
;
⁄⁄6 7
var
‹‹ !
transformToAncestor
‹‹ #
=
‹‹$ %
(
‹‹& '
MatrixTransform
‹‹' 6
)
‹‹6 7
control
‹‹8 ?
.
‹‹? @!
TransformToAncestor
‹‹@ S
(
‹‹S T
frameworkElement
‹‹T d
)
‹‹d e
;
‹‹e f
var
›› 
rect
›› 
=
›› 
new
›› 
Rect
›› 
(
››  
new
ﬁﬁ 
Point
ﬁﬁ 
(
ﬁﬁ !
transformToAncestor
ﬁﬁ -
.
ﬁﬁ- .
Value
ﬁﬁ. 3
.
ﬁﬁ3 4
OffsetX
ﬁﬁ4 ;
,
ﬁﬁ; <!
transformToAncestor
ﬁﬁ= P
.
ﬁﬁP Q
Value
ﬁﬁQ V
.
ﬁﬁV W
OffsetY
ﬁﬁW ^
)
ﬁﬁ^ _
,
ﬁﬁ_ `
new
ﬂﬂ 
Size
ﬂﬂ 
(
ﬂﬂ 
control
ﬂﬂ  
.
ﬂﬂ  !
ActualWidth
ﬂﬂ! ,
,
ﬂﬂ, -
control
ﬂﬂ. 5
.
ﬂﬂ5 6
ActualHeight
ﬂﬂ6 B
)
ﬂﬂB C
)
ﬂﬂC D
;
ﬂﬂD E
return
·· 
rect
·· 
.
·· 
Contains
··  
(
··  !"
mouseButtonEventArgs
··! 5
.
··5 6
GetPosition
··6 A
(
··A B
frameworkElement
··B R
)
··R S
)
··S T
;
··T U
}
‚‚ 	
}
„„ 
}‰‰ §
QD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DateTimeEx.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
internal 	
static
 
class 

DateTimeEx !
{ 
internal		 

static		 
DateTimeFormatInfo		 $
GetDateFormat		% 2
(		2 3
this		3 7
CultureInfo		8 C
culture		D K
)		K L
{

 
if 
( 
culture 
== 
null 
) 
throw 
new !!
ArgumentNullException" 7
(7 8
nameof8 >
(> ?
culture? F
)F G
)G H
;H I
if 
( 
culture 
. 
Calendar 
is 
GregorianCalendar ,
), -
{ 
return 

culture 
. 
DateTimeFormat !
;! "
} 
GregorianCalendar 
foundCal 
= 
null  $
;$ %
DateTimeFormatInfo 
dtfi 
= 
null !
;! "
foreach 

( 
var 
cal 
in 
culture 
. 
OptionalCalendars 0
.0 1
OfType1 7
<7 8
GregorianCalendar8 I
>I J
(J K
)K L
)L M
{ 
if 
( 
foundCal 
== 
null 
) 
{ 
foundCal 
= 
cal 
; 
} 
if 
( 
cal 
. 
CalendarType 
!= "
GregorianCalendarTypes 2
.2 3
	Localized3 <
)< =
continue> F
;F G
foundCal 
= 
cal 
; 
break   	
;  	 

}!! 
if$$ 
($$ 
foundCal$$ 
==$$ 
null$$ 
)$$ 
{%% 
dtfi'' 
=''	 

('' 
('' 
CultureInfo'' 
)'' 
CultureInfo'' $
.''$ %
InvariantCulture''% 5
.''5 6
Clone''6 ;
(''; <
)''< =
)''= >
.''> ?
DateTimeFormat''? M
;''M N
dtfi(( 
.(( 	
Calendar((	 
=(( 
new(( 
GregorianCalendar(( )
((() *
)((* +
;((+ ,
})) 
else** 
{++ 
dtfi,, 
=,,	 

(,, 
(,, 
CultureInfo,, 
),, 
culture,,  
.,,  !
Clone,,! &
(,,& '
),,' (
),,( )
.,,) *
DateTimeFormat,,* 8
;,,8 9
dtfi-- 
.-- 	
Calendar--	 
=-- 
foundCal-- 
;-- 
}.. 
return00 	
dtfi00
 
;00 
}11 
}22 
}33 ó
]D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DialogClosingEventArgs.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class "
DialogClosingEventArgs '
:( )
RoutedEventArgs* 9
{ 
public "
DialogClosingEventArgs %
(% &
DialogSession& 3
session4 ;
,; <
object= C
	parameterD M
)M N
{		 	
if

 
(

 
session

 
==

 
null

 
)

  
throw

! &
new

' *!
ArgumentNullException

+ @
(

@ A
nameof

A G
(

G H
session

H O
)

O P
)

P Q
;

Q R
Session 
= 
session 
; 
	Parameter 
= 
	parameter !
;! "
} 	
public "
DialogClosingEventArgs %
(% &
DialogSession& 3
session4 ;
,; <
object= C
	parameterD M
,M N
RoutedEventO Z
routedEvent[ f
)f g
:h i
basej n
(n o
routedEvento z
)z {
{ 	
if 
( 
session 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
nameofA G
(G H
sessionH O
)O P
)P Q
;Q R
Session 
= 
session 
; 
	Parameter 
= 
	parameter !
;! "
} 	
public "
DialogClosingEventArgs %
(% &
DialogSession& 3
session4 ;
,; <
object= C
	parameterD M
,M N
RoutedEventO Z
routedEvent[ f
,f g
objecth n
sourceo u
)u v
:w x
basey }
(} ~
routedEvent	~ â
,
â ä
source
ã ë
)
ë í
{ 	
if 
( 
session 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
nameofA G
(G H
sessionH O
)O P
)P Q
;Q R
Session 
= 
session 
; 
	Parameter 
= 
	parameter !
;! "
} 	
public## 
void## 
Cancel## 
(## 
)## 
{$$ 	
IsCancelled%% 
=%% 
true%% 
;%% 
}&& 	
public++ 
bool++ 
IsCancelled++ 
{++  !
get++" %
;++% &
private++' .
set++/ 2
;++2 3
}++4 5
public00 
object00 
	Parameter00 
{00  !
get00" %
;00% &
}00' (
public55 
DialogSession55 
Session55 $
{55% &
get55' *
;55* +
}55, -
[:: 	
Obsolete::	 
(:: 
$str:: *
)::* +
]::+ ,
public;; 
object;; 
Content;; 
=>;;  
Session;;! (
.;;( )
Content;;) 0
;;;0 1
}<< 
}== ’
`D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DialogClosingEventHandler.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

delegate 
void %
DialogClosingEventHandler 2
(2 3
object3 9
sender: @
,@ A"
DialogClosingEventArgsB X
	eventArgsY b
)b c
;c d
} ãF
SD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DialogHostEx.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
DialogHostEx $
{ 
public 
static 
async 
Task  
<  !
object! '
>' (

ShowDialog) 3
(3 4
this4 8
Window9 ?
window@ F
,F G
objectH N
contentO V
)V W
{ 	
return 
await 
GetFirstDialogHost +
(+ ,
window, 2
)2 3
.3 4
ShowInternal4 @
(@ A
contentA H
,H I
nullJ N
,N O
nullP T
)T U
;U V
} 	
public++ 
static++ 
async++ 
Task++  
<++  !
object++! '
>++' (

ShowDialog++) 3
(++3 4
this++4 8
Window++9 ?
window++@ F
,++F G
object++H N
content++O V
,++V W$
DialogOpenedEventHandler++X p
openedEventHandler	++q É
)
++É Ñ
{,, 	
return-- 
await-- 
GetFirstDialogHost-- +
(--+ ,
window--, 2
)--2 3
.--3 4
ShowInternal--4 @
(--@ A
content--A H
,--H I
openedEventHandler--J \
,--\ ]
null--^ b
)--b c
;--c d
}.. 	
public== 
static== 
async== 
Task==  
<==  !
object==! '
>==' (

ShowDialog==) 3
(==3 4
this==4 8
Window==9 ?
window==@ F
,==F G
object==H N
content==O V
,==V W%
DialogClosingEventHandler==X q 
closingEventHandler	==r Ö
)
==Ö Ü
{>> 	
return?? 
await?? 
GetFirstDialogHost?? +
(??+ ,
window??, 2
)??2 3
.??3 4
ShowInternal??4 @
(??@ A
content??A H
,??H I
null??J N
,??N O
closingEventHandler??P c
)??c d
;??d e
}@@ 	
publicPP 
staticPP 
asyncPP 
TaskPP  
<PP  !
objectPP! '
>PP' (

ShowDialogPP) 3
(PP3 4
thisPP4 8
WindowPP9 ?
windowPP@ F
,PPF G
objectPPH N
contentPPO V
,PPV W$
DialogOpenedEventHandlerPPX p
openedEventHandler	PPq É
,
PPÉ Ñ'
DialogClosingEventHandler
PPÖ û!
closingEventHandler
PPü ≤
)
PP≤ ≥
{QQ 	
returnRR 
awaitRR 
GetFirstDialogHostRR +
(RR+ ,
windowRR, 2
)RR2 3
.RR3 4
ShowInternalRR4 @
(RR@ A
contentRRA H
,RRH I
openedEventHandlerRRJ \
,RR\ ]
closingEventHandlerRR^ q
)RRq r
;RRr s
}SS 	
public^^ 
static^^ 
async^^ 
Task^^  
<^^  !
object^^! '
>^^' (

ShowDialog^^) 3
(^^3 4
this^^4 8
DependencyObject^^9 I!
childDependencyObject^^J _
,^^_ `
object^^a g
content^^h o
)^^o p
{__ 	
return`` 
await`` 
GetOwningDialogHost`` ,
(``, -!
childDependencyObject``- B
)``B C
.``C D
ShowInternal``D P
(``P Q
content``Q X
,``X Y
null``Z ^
,``^ _
null``` d
)``d e
;``e f
}aa 	
publicmm 
staticmm 
asyncmm 
Taskmm  
<mm  !
objectmm! '
>mm' (

ShowDialogmm) 3
(mm3 4
thismm4 8
DependencyObjectmm9 I!
childDependencyObjectmmJ _
,mm_ `
objectmma g
contentmmh o
,mmo p%
DialogOpenedEventHandler	mmq â 
openedEventHandler
mmä ú
)
mmú ù
{nn 	
returnoo 
awaitoo 
GetOwningDialogHostoo ,
(oo, -!
childDependencyObjectoo- B
)ooB C
.ooC D
ShowInternalooD P
(ooP Q
contentooQ X
,ooX Y
openedEventHandlerooZ l
,ool m
nulloon r
)oor s
;oos t
}pp 	
public|| 
static|| 
async|| 
Task||  
<||  !
object||! '
>||' (

ShowDialog||) 3
(||3 4
this||4 8
DependencyObject||9 I!
childDependencyObject||J _
,||_ `
object||a g
content||h o
,||o p&
DialogClosingEventHandler	||q ä!
closingEventHandler
||ã û
)
||û ü
{}} 	
return~~ 
await~~ 
GetOwningDialogHost~~ ,
(~~, -!
childDependencyObject~~- B
)~~B C
.~~C D
ShowInternal~~D P
(~~P Q
content~~Q X
,~~X Y
null~~Z ^
,~~^ _
closingEventHandler~~` s
)~~s t
;~~t u
} 	
public
åå 
static
åå 
async
åå 
Task
åå  
<
åå  !
object
åå! '
>
åå' (

ShowDialog
åå) 3
(
åå3 4
this
åå4 8
DependencyObject
åå9 I#
childDependencyObject
ååJ _
,
åå_ `
object
ååa g
content
ååh o
,
ååo p'
DialogOpenedEventHandlerååq â"
openedEventHandlerååä ú
,ååú ù)
DialogClosingEventHandlerååû ∑#
closingEventHandleråå∏ À
)ååÀ Ã
{
çç 	
return
éé 
await
éé !
GetOwningDialogHost
éé ,
(
éé, -#
childDependencyObject
éé- B
)
ééB C
.
ééC D
ShowInternal
ééD P
(
ééP Q
content
ééQ X
,
ééX Y 
openedEventHandler
ééZ l
,
éél m"
closingEventHandleréén Å
)ééÅ Ç
;ééÇ É
}
èè 	
private
ëë 
static
ëë 

DialogHost
ëë ! 
GetFirstDialogHost
ëë" 4
(
ëë4 5
Window
ëë5 ;
window
ëë< B
)
ëëB C
{
íí 	
if
ìì 
(
ìì 
window
ìì 
==
ìì 
null
ìì 
)
ìì 
throw
ìì  %
new
ìì& )#
ArgumentNullException
ìì* ?
(
ìì? @
nameof
ìì@ F
(
ììF G
window
ììG M
)
ììM N
)
ììN O
;
ììO P
var
ïï 

dialogHost
ïï 
=
ïï 
window
ïï #
.
ïï# $'
VisualDepthFirstTraversal
ïï$ =
(
ïï= >
)
ïï> ?
.
ïï? @
OfType
ïï@ F
<
ïïF G

DialogHost
ïïG Q
>
ïïQ R
(
ïïR S
)
ïïS T
.
ïïT U
FirstOrDefault
ïïU c
(
ïïc d
)
ïïd e
;
ïïe f
if
óó 
(
óó 

dialogHost
óó 
==
óó 
null
óó "
)
óó" #
throw
òò 
new
òò '
InvalidOperationException
òò 3
(
òò3 4
$str
òò4 `
)
òò` a
;
òòa b
return
öö 

dialogHost
öö 
;
öö 
}
õõ 	
private
ùù 
static
ùù 

DialogHost
ùù !!
GetOwningDialogHost
ùù" 5
(
ùù5 6
DependencyObject
ùù6 F#
childDependencyObject
ùùG \
)
ùù\ ]
{
ûû 	
if
üü 
(
üü #
childDependencyObject
üü %
==
üü& (
null
üü) -
)
üü- .
throw
üü/ 4
new
üü5 8#
ArgumentNullException
üü9 N
(
üüN O
nameof
üüO U
(
üüU V#
childDependencyObject
üüV k
)
üük l
)
üül m
;
üüm n
var
°° 

dialogHost
°° 
=
°° #
childDependencyObject
°° 2
.
°°2 3
GetVisualAncestry
°°3 D
(
°°D E
)
°°E F
.
°°F G
OfType
°°G M
<
°°M N

DialogHost
°°N X
>
°°X Y
(
°°Y Z
)
°°Z [
.
°°[ \
FirstOrDefault
°°\ j
(
°°j k
)
°°k l
;
°°l m
if
££ 
(
££ 

dialogHost
££ 
==
££ 
null
££ "
)
££" #
throw
§§ 
new
§§ '
InvalidOperationException
§§ 3
(
§§3 4
$str
§§4 j
)
§§j k
;
§§k l
return
¶¶ 

dialogHost
¶¶ 
;
¶¶ 
}
ßß 	
}
®® 
}©© Å	
\D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DialogOpenedEventArgs.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class !
DialogOpenedEventArgs &
:' (
RoutedEventArgs) 8
{ 
public !
DialogOpenedEventArgs $
($ %
DialogSession% 2
session3 :
,: ;
RoutedEvent< G
routedEventH S
)S T
{		 	
if

 
(

 
session

 
==

 
null

 
)

  
throw

! &
new

' *!
ArgumentNullException

+ @
(

@ A
nameof

A G
(

G H
session

H O
)

O P
)

P Q
;

Q R
Session 
= 
session 
; 
RoutedEvent 
= 
routedEvent %
;% &
} 	
public 
DialogSession 
Session $
{% &
get' *
;* +
}, -
} 
} “
_D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DialogOpenedEventHandler.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

delegate 
void $
DialogOpenedEventHandler 1
(1 2
object2 8
sender9 ?
,? @!
DialogOpenedEventArgsA V
	eventArgsW `
)` a
;a b
} í
TD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DialogSession.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public		 

class		 
DialogSession		 
{

 
private 
readonly 

DialogHost #
_owner$ *
;* +
internal 
DialogSession 
( 

DialogHost )
owner* /
)/ 0
{ 	
if 
( 
owner 
== 
null 
) 
throw $
new% (!
ArgumentNullException) >
(> ?
nameof? E
(E F
ownerF K
)K L
)L M
;M N
_owner 
= 
owner 
; 
} 	
public 
bool 
IsEnded 
{ 
get !
;! "
internal# +
set, /
;/ 0
}1 2
public 
object 
Content 
=>  
_owner! '
.' (
DialogContent( 5
;5 6
public%% 
void%% 
UpdateContent%% !
(%%! "
object%%" (
content%%) 0
)%%0 1
{&& 	
_owner'' 
.'' #
AssertTargetableContent'' *
(''* +
)''+ ,
;'', -
_owner(( 
.(( 
DialogContent((  
=((! "
content((# *
??((+ -
throw((. 3
new((4 7!
ArgumentNullException((8 M
(((M N
nameof((N T
(((T U
content((U \
)((\ ]
)((] ^
;((^ _
_owner)) 
.)) 

Dispatcher)) 
.)) 
BeginInvoke)) )
())) *
DispatcherPriority))* <
.))< =

Background))= G
,))G H
new))I L
Action))M S
())S T
())T U
)))U V
=>))W Y
{** 
_owner++ 
.++ 

FocusPopup++ !
(++! "
)++" #
;++# $
},, 
),, 
),, 
;,, 
}-- 	
public33 
void33 
Close33 
(33 
)33 
{44 	
if55 
(55 
IsEnded55 
)55 
throw55 
new55 "%
InvalidOperationException55# <
(55< =
$str55= X
)55X Y
;55Y Z
_owner77 
.77 
Close77 
(77 
null77 
)77 
;77 
}88 	
public?? 
void?? 
Close?? 
(?? 
object??  
	parameter??! *
)??* +
{@@ 	
ifAA 
(AA 
IsEndedAA 
)AA 
throwAA 
newAA "%
InvalidOperationExceptionAA# <
(AA< =
$strAA= X
)AAX Y
;AAY Z
_ownerCC 
.CC 
CloseCC 
(CC 
	parameterCC "
)CC" #
;CC# $
}DD 	
}EE 
}FF £ç
QD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DialogHost.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

enum 8
,DialogHostOpenDialogCommandDataContextSource <
{ 
SenderElement 
, 
DialogHostInstance 
, 
None"" 
}## 
[%% 
TemplatePart%% 
(%% 
Name%% 
=%% 
PopupPartName%% &
,%%& '
Type%%( ,
=%%- .
typeof%%/ 5
(%%5 6
Popup%%6 ;
)%%; <
)%%< =
]%%= >
[&& 
TemplatePart&& 
(&& 
Name&& 
=&& 
PopupPartName&& &
,&&& '
Type&&( ,
=&&- .
typeof&&/ 5
(&&5 6
ContentControl&&6 D
)&&D E
)&&E F
]&&F G
['' 
TemplatePart'' 
('' 
Name'' 
=''  
ContentCoverGridName'' -
,''- .
Type''/ 3
=''4 5
typeof''6 <
(''< =
Grid''= A
)''A B
)''B C
]''C D
[(( 
TemplateVisualState(( 
((( 
	GroupName(( "
=((# $
$str((% 2
,((2 3
Name((4 8
=((9 :
OpenStateName((; H
)((H I
]((I J
[)) 
TemplateVisualState)) 
()) 
	GroupName)) "
=))# $
$str))% 2
,))2 3
Name))4 8
=))9 :
ClosedStateName)); J
)))J K
]))K L
public** 

class** 

DialogHost** 
:** 
ContentControl** ,
{++ 
public,, 
const,, 
string,, 
PopupPartName,, )
=,,* +
$str,,, 8
;,,8 9
public-- 
const-- 
string--  
PopupContentPartName-- 0
=--1 2
$str--3 M
;--M N
public.. 
const.. 
string..  
ContentCoverGridName.. 0
=..1 2
$str..3 J
;..J K
public// 
const// 
string// 
OpenStateName// )
=//* +
$str//, 2
;//2 3
public00 
const00 
string00 
ClosedStateName00 +
=00, -
$str00. 6
;006 7
public55 
static55 
RoutedCommand55 #
OpenDialogCommand55$ 5
=556 7
new558 ;
RoutedCommand55< I
(55I J
)55J K
;55K L
public99 
static99 
RoutedCommand99 #
CloseDialogCommand99$ 6
=997 8
new999 <
RoutedCommand99= J
(99J K
)99K L
;99L M
private;; 
static;; 
readonly;; 
HashSet;;  '
<;;' (

DialogHost;;( 2
>;;2 3
LoadedInstances;;4 C
=;;D E
new;;F I
HashSet;;J Q
<;;Q R

DialogHost;;R \
>;;\ ]
(;;] ^
);;^ _
;;;_ `
private== 
readonly== 
ManualResetEvent== ) 
_asyncShowWaitHandle==* >
===? @
new==A D
ManualResetEvent==E U
(==U V
false==V [
)==[ \
;==\ ]
private>> $
DialogOpenedEventHandler>> ((
_asyncShowOpenedEventHandler>>) E
;>>E F
private?? %
DialogClosingEventHandler?? ))
_asyncShowClosingEventHandler??* G
;??G H
privateAA 
PopupAA 
_popupAA 
;AA 
privateBB 
ContentControlBB  
_popupContentControlBB 3
;BB3 4
privateCC 
GridCC 
_contentCoverGridCC &
;CC& '
privateDD 
DialogSessionDD 
_sessionDD &
;DD& '
privateEE $
DialogOpenedEventHandlerEE (-
!_attachedDialogOpenedEventHandlerEE) J
;EEJ K
privateFF %
DialogClosingEventHandlerFF ).
"_attachedDialogClosingEventHandlerFF* L
;FFL M
privateGG 
objectGG *
_closeDialogExecutionParameterGG 5
;GG5 6
privateHH 
IInputElementHH $
_restoreFocusDialogCloseHH 6
;HH6 7
privateII 
IInputElementII +
_restoreFocusWindowReactivationII =
;II= >
privateJJ 
ActionJJ 5
)_currentSnackbarMessageQueueUnPauseActionJJ @
=JJA B
nullJJC G
;JJG H
privateKK 
ActionKK 
_closeCleanUpKK $
=KK% &
(KK' (
)KK( )
=>KK* ,
{KK- .
}KK/ 0
;KK0 1
staticMM 

DialogHostMM 
(MM 
)MM 
{NN 	#
DefaultStyleKeyPropertyOO #
.OO# $
OverrideMetadataOO$ 4
(OO4 5
typeofOO5 ;
(OO; <

DialogHostOO< F
)OOF G
,OOG H
newOOI L%
FrameworkPropertyMetadataOOM f
(OOf g
typeofOOg m
(OOm n

DialogHostOOn x
)OOx y
)OOy z
)OOz {
;OO{ |
}PP 	
publicYY 
staticYY 
asyncYY 
TaskYY  
<YY  !
objectYY! '
>YY' (
ShowYY) -
(YY- .
objectYY. 4
contentYY5 <
)YY< =
{ZZ 	
return[[ 
await[[ 
Show[[ 
([[ 
content[[ %
,[[% &
null[[' +
,[[+ ,
null[[- 1
)[[1 2
;[[2 3
}\\ 	
publicdd 
staticdd 
asyncdd 
Taskdd  
<dd  !
objectdd! '
>dd' (
Showdd) -
(dd- .
objectdd. 4
contentdd5 <
,dd< =$
DialogOpenedEventHandlerdd> V
openedEventHandlerddW i
)ddi j
{ee 	
returnff 
awaitff 
Showff 
(ff 
contentff %
,ff% &
nullff' +
,ff+ ,
openedEventHandlerff- ?
,ff? @
nullffA E
)ffE F
;ffF G
}gg 	
publicoo 
staticoo 
asyncoo 
Taskoo  
<oo  !
objectoo! '
>oo' (
Showoo) -
(oo- .
objectoo. 4
contentoo5 <
,oo< =%
DialogClosingEventHandleroo> W
closingEventHandlerooX k
)ook l
{pp 	
returnqq 
awaitqq 
Showqq 
(qq 
contentqq %
,qq% &
nullqq' +
,qq+ ,
nullqq- 1
,qq1 2
closingEventHandlerqq3 F
)qqF G
;qqG H
}rr 	
public{{ 
static{{ 
async{{ 
Task{{  
<{{  !
object{{! '
>{{' (
Show{{) -
({{- .
object{{. 4
content{{5 <
,{{< =$
DialogOpenedEventHandler{{> V
openedEventHandler{{W i
,{{i j&
DialogClosingEventHandler	{{k Ñ!
closingEventHandler
{{Ö ò
)
{{ò ô
{|| 	
return}} 
await}} 
Show}} 
(}} 
content}} %
,}}% &
null}}' +
,}}+ ,
openedEventHandler}}- ?
,}}? @
closingEventHandler}}A T
)}}T U
;}}U V
}~~ 	
public
ÜÜ 
static
ÜÜ 
async
ÜÜ 
Task
ÜÜ  
<
ÜÜ  !
object
ÜÜ! '
>
ÜÜ' (
Show
ÜÜ) -
(
ÜÜ- .
object
ÜÜ. 4
content
ÜÜ5 <
,
ÜÜ< =
object
ÜÜ> D
dialogIdentifier
ÜÜE U
)
ÜÜU V
{
áá 	
return
àà 
await
àà 
Show
àà 
(
àà 
content
àà %
,
àà% &
dialogIdentifier
àà' 7
,
àà7 8
null
àà9 =
,
àà= >
null
àà? C
)
ààC D
;
ààD E
}
ââ 	
public
íí 
static
íí 
Task
íí 
<
íí 
object
íí !
>
íí! "
Show
íí# '
(
íí' (
object
íí( .
content
íí/ 6
,
íí6 7
object
íí8 >
dialogIdentifier
íí? O
,
ííO P&
DialogOpenedEventHandler
ííQ i 
openedEventHandler
ííj |
)
íí| }
{
ìì 	
return
îî 
Show
îî 
(
îî 
content
îî 
,
îî  
dialogIdentifier
îî! 1
,
îî1 2 
openedEventHandler
îî3 E
,
îîE F
null
îîG K
)
îîK L
;
îîL M
}
ïï 	
public
ûû 
static
ûû 
Task
ûû 
<
ûû 
object
ûû !
>
ûû! "
Show
ûû# '
(
ûû' (
object
ûû( .
content
ûû/ 6
,
ûû6 7
object
ûû8 >
dialogIdentifier
ûû? O
,
ûûO P'
DialogClosingEventHandler
ûûQ j!
closingEventHandler
ûûk ~
)
ûû~ 
{
üü 	
return
†† 
Show
†† 
(
†† 
content
†† 
,
††  
dialogIdentifier
††! 1
,
††1 2
null
††3 7
,
††7 8!
closingEventHandler
††9 L
)
††L M
;
††M N
}
°° 	
public
´´ 
static
´´ 
async
´´ 
Task
´´  
<
´´  !
object
´´! '
>
´´' (
Show
´´) -
(
´´- .
object
´´. 4
content
´´5 <
,
´´< =
object
´´> D
dialogIdentifier
´´E U
,
´´U V&
DialogOpenedEventHandler
´´W o!
openedEventHandler´´p Ç
,´´Ç É)
DialogClosingEventHandler´´Ñ ù#
closingEventHandler´´û ±
)´´± ≤
{
¨¨ 	
if
≠≠ 
(
≠≠ 
content
≠≠ 
==
≠≠ 
null
≠≠ 
)
≠≠  
throw
≠≠! &
new
≠≠' *#
ArgumentNullException
≠≠+ @
(
≠≠@ A
nameof
≠≠A G
(
≠≠G H
content
≠≠H O
)
≠≠O P
)
≠≠P Q
;
≠≠Q R
if
ØØ 
(
ØØ 
LoadedInstances
ØØ 
.
ØØ  
Count
ØØ  %
==
ØØ& (
$num
ØØ) *
)
ØØ* +
throw
∞∞ 
new
∞∞ '
InvalidOperationException
∞∞ 3
(
∞∞3 4
$str
∞∞4 U
)
∞∞U V
;
∞∞V W
LoadedInstances
±± 
.
±± 
First
±± !
(
±±! "
)
±±" #
.
±±# $

Dispatcher
±±$ .
.
±±. /
VerifyAccess
±±/ ;
(
±±; <
)
±±< =
;
±±= >
var
≥≥ 
targets
≥≥ 
=
≥≥ 
LoadedInstances
≥≥ )
.
≥≥) *
Where
≥≥* /
(
≥≥/ 0
dh
≥≥0 2
=>
≥≥3 5
dialogIdentifier
≥≥6 F
==
≥≥G I
null
≥≥J N
||
≥≥O Q
Equals
≥≥R X
(
≥≥X Y
dh
≥≥Y [
.
≥≥[ \

Identifier
≥≥\ f
,
≥≥f g
dialogIdentifier
≥≥h x
)
≥≥x y
)
≥≥y z
.
≥≥z {
ToList≥≥{ Å
(≥≥Å Ç
)≥≥Ç É
;≥≥É Ñ
if
¥¥ 
(
¥¥ 
targets
¥¥ 
.
¥¥ 
Count
¥¥ 
==
¥¥  
$num
¥¥! "
)
¥¥" #
throw
µµ 
new
µµ '
InvalidOperationException
µµ 3
(
µµ3 4
$strµµ4 ä
)µµä ã
;µµã å
if
∂∂ 
(
∂∂ 
targets
∂∂ 
.
∂∂ 
Count
∂∂ 
>
∂∂ 
$num
∂∂  !
)
∂∂! "
throw
∑∑ 
new
∑∑ '
InvalidOperationException
∑∑ 3
(
∑∑3 4
$str∑∑4 ¥
)∑∑¥ µ
;∑∑µ ∂
return
ππ 
await
ππ 
targets
ππ  
[
ππ  !
$num
ππ! "
]
ππ" #
.
ππ# $
ShowInternal
ππ$ 0
(
ππ0 1
content
ππ1 8
,
ππ8 9 
openedEventHandler
ππ: L
,
ππL M!
closingEventHandler
ππN a
)
ππa b
;
ππb c
}
∫∫ 	
internal
ºº 
async
ºº 
Task
ºº 
<
ºº 
object
ºº "
>
ºº" #
ShowInternal
ºº$ 0
(
ºº0 1
object
ºº1 7
content
ºº8 ?
,
ºº? @&
DialogOpenedEventHandler
ººA Y 
openedEventHandler
ººZ l
,
ººl m(
DialogClosingEventHandlerººn á#
closingEventHandlerººà õ
)ººõ ú
{
ΩΩ 	
if
ææ 
(
ææ 
IsOpen
ææ 
)
ææ 
throw
øø 
new
øø '
InvalidOperationException
øø 3
(
øø3 4
$str
øø4 Q
)
øøQ R
;
øøR S%
AssertTargetableContent
¡¡ #
(
¡¡# $
)
¡¡$ %
;
¡¡% &
DialogContent
¬¬ 
=
¬¬ 
content
¬¬ #
;
¬¬# $*
_asyncShowOpenedEventHandler
√√ (
=
√√) * 
openedEventHandler
√√+ =
;
√√= >+
_asyncShowClosingEventHandler
ƒƒ )
=
ƒƒ* +!
closingEventHandler
ƒƒ, ?
;
ƒƒ? @
SetCurrentValue
≈≈ 
(
≈≈ 
IsOpenProperty
≈≈ *
,
≈≈* +
true
≈≈, 0
)
≈≈0 1
;
≈≈1 2
var
«« 
task
«« 
=
«« 
new
«« 
Task
«« 
(
««  
(
««  !
)
««! "
=>
««# %
{
»» "
_asyncShowWaitHandle
…… $
.
……$ %
WaitOne
……% ,
(
……, -
)
……- .
;
……. /
}
   
)
   
;
   
task
ÀÀ 
.
ÀÀ 
Start
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
await
ÕÕ 
task
ÕÕ 
;
ÕÕ *
_asyncShowOpenedEventHandler
œœ (
=
œœ) *
null
œœ+ /
;
œœ/ 0+
_asyncShowClosingEventHandler
–– )
=
––* +
null
––, 0
;
––0 1
return
““ ,
_closeDialogExecutionParameter
““ 1
;
““1 2
}
”” 	
public
◊◊ 

DialogHost
◊◊ 
(
◊◊ 
)
◊◊ 
{
ÿÿ 	
Loaded
ŸŸ 
+=
ŸŸ 
OnLoaded
ŸŸ 
;
ŸŸ 
Unloaded
⁄⁄ 
+=
⁄⁄ 

OnUnloaded
⁄⁄ "
;
⁄⁄" #
CommandBindings
‹‹ 
.
‹‹ 
Add
‹‹ 
(
‹‹  
new
‹‹  #
CommandBinding
‹‹$ 2
(
‹‹2 3 
CloseDialogCommand
‹‹3 E
,
‹‹E F 
CloseDialogHandler
‹‹G Y
,
‹‹Y Z#
CloseDialogCanExecute
‹‹[ p
)
‹‹p q
)
‹‹q r
;
‹‹r s
CommandBindings
›› 
.
›› 
Add
›› 
(
››  
new
››  #
CommandBinding
››$ 2
(
››2 3
OpenDialogCommand
››3 D
,
››D E
OpenDialogHandler
››F W
)
››W X
)
››X Y
;
››Y Z
}
ﬁﬁ 	
public
‡‡ 
static
‡‡ 
readonly
‡‡  
DependencyProperty
‡‡ 1 
IdentifierProperty
‡‡2 D
=
‡‡E F 
DependencyProperty
‡‡G Y
.
‡‡Y Z
Register
‡‡Z b
(
‡‡b c
nameof
·· 
(
·· 

Identifier
·· 
)
·· 
,
·· 
typeof
··  &
(
··& '
object
··' -
)
··- .
,
··. /
typeof
··0 6
(
··6 7

DialogHost
··7 A
)
··A B
,
··B C
new
··D G
PropertyMetadata
··H X
(
··X Y
default
··Y `
(
··` a
object
··a g
)
··g h
)
··h i
)
··i j
;
··j k
public
ÊÊ 
object
ÊÊ 

Identifier
ÊÊ  
{
ÁÁ 	
get
ËË 
{
ËË 
return
ËË 
GetValue
ËË !
(
ËË! " 
IdentifierProperty
ËË" 4
)
ËË4 5
;
ËË5 6
}
ËË7 8
set
ÈÈ 
{
ÈÈ 
SetValue
ÈÈ 
(
ÈÈ  
IdentifierProperty
ÈÈ -
,
ÈÈ- .
value
ÈÈ/ 4
)
ÈÈ4 5
;
ÈÈ5 6
}
ÈÈ7 8
}
ÍÍ 	
public
ÏÏ 
static
ÏÏ 
readonly
ÏÏ  
DependencyProperty
ÏÏ 1
IsOpenProperty
ÏÏ2 @
=
ÏÏA B 
DependencyProperty
ÏÏC U
.
ÏÏU V
Register
ÏÏV ^
(
ÏÏ^ _
nameof
ÌÌ 
(
ÌÌ 
IsOpen
ÌÌ 
)
ÌÌ 
,
ÌÌ 
typeof
ÌÌ "
(
ÌÌ" #
bool
ÌÌ# '
)
ÌÌ' (
,
ÌÌ( )
typeof
ÌÌ* 0
(
ÌÌ0 1

DialogHost
ÌÌ1 ;
)
ÌÌ; <
,
ÌÌ< =
new
ÌÌ> A'
FrameworkPropertyMetadata
ÌÌB [
(
ÌÌ[ \
default
ÌÌ\ c
(
ÌÌc d
bool
ÌÌd h
)
ÌÌh i
,
ÌÌi j/
 FrameworkPropertyMetadataOptionsÌÌk ã
.ÌÌã å$
BindsTwoWayByDefaultÌÌå †
,ÌÌ† °-
IsOpenPropertyChangedCallbackÌÌ¢ ø
)ÌÌø ¿
)ÌÌ¿ ¡
;ÌÌ¡ ¬
private
ÔÔ 
static
ÔÔ 
void
ÔÔ +
IsOpenPropertyChangedCallback
ÔÔ 9
(
ÔÔ9 :
DependencyObject
ÔÔ: J
dependencyObject
ÔÔK [
,
ÔÔ[ \0
"DependencyPropertyChangedEventArgs
ÔÔ] 2
"dependencyPropertyChangedEventArgsÔÔÄ ¢
)ÔÔ¢ £
{
 	
var
ÒÒ 

dialogHost
ÒÒ 
=
ÒÒ 
(
ÒÒ 

DialogHost
ÒÒ (
)
ÒÒ( )
dependencyObject
ÒÒ) 9
;
ÒÒ9 :
if
ÛÛ 
(
ÛÛ 

dialogHost
ÛÛ 
.
ÛÛ "
_popupContentControl
ÛÛ /
!=
ÛÛ0 2
null
ÛÛ3 7
)
ÛÛ7 8
ValidationAssist
ÙÙ  
.
ÙÙ  !
SetSuppress
ÙÙ! ,
(
ÙÙ, -

dialogHost
ÙÙ- 7
.
ÙÙ7 8"
_popupContentControl
ÙÙ8 L
,
ÙÙL M
!
ÙÙN O

dialogHost
ÙÙO Y
.
ÙÙY Z
IsOpen
ÙÙZ `
)
ÙÙ` a
;
ÙÙa b 
VisualStateManager
ıı 
.
ıı 
	GoToState
ıı (
(
ıı( )

dialogHost
ıı) 3
,
ıı3 4

dialogHost
ıı5 ?
.
ıı? @
SelectState
ıı@ K
(
ııK L
)
ııL M
,
ııM N
!
ııO P
TransitionAssist
ııP `
.
ıı` a#
GetDisableTransitions
ııa v
(
ııv w

dialogHostııw Å
)ııÅ Ç
)ııÇ É
;ııÉ Ñ
if
˜˜ 
(
˜˜ 

dialogHost
˜˜ 
.
˜˜ 
IsOpen
˜˜ !
)
˜˜! "
{
¯¯ #
WatchWindowActivation
˘˘ %
(
˘˘% &

dialogHost
˘˘& 0
)
˘˘0 1
;
˘˘1 2

dialogHost
˙˙ 
.
˙˙ 7
)_currentSnackbarMessageQueueUnPauseAction
˙˙ D
=
˙˙E F

dialogHost
˙˙G Q
.
˙˙Q R"
SnackbarMessageQueue
˙˙R f
?
˙˙f g
.
˙˙g h
Pause
˙˙h m
(
˙˙m n
)
˙˙n o
;
˙˙o p
}
˚˚ 
else
¸¸ 
{
˝˝ 

dialogHost
˛˛ 
.
˛˛ "
_asyncShowWaitHandle
˛˛ /
.
˛˛/ 0
Set
˛˛0 3
(
˛˛3 4
)
˛˛4 5
;
˛˛5 6

dialogHost
ˇˇ 
.
ˇˇ 0
"_attachedDialogClosingEventHandler
ˇˇ =
=
ˇˇ> ?
null
ˇˇ@ D
;
ˇˇD E
if
ÄÄ 
(
ÄÄ 

dialogHost
ÄÄ 
.
ÄÄ 7
)_currentSnackbarMessageQueueUnPauseAction
ÄÄ H
!=
ÄÄI K
null
ÄÄL P
)
ÄÄP Q
{
ÅÅ 

dialogHost
ÇÇ 
.
ÇÇ 7
)_currentSnackbarMessageQueueUnPauseAction
ÇÇ H
(
ÇÇH I
)
ÇÇI J
;
ÇÇJ K

dialogHost
ÉÉ 
.
ÉÉ 7
)_currentSnackbarMessageQueueUnPauseAction
ÉÉ H
=
ÉÉI J
null
ÉÉK O
;
ÉÉO P
}
ÑÑ 

dialogHost
ÖÖ 
.
ÖÖ 
_session
ÖÖ #
.
ÖÖ# $
IsEnded
ÖÖ$ +
=
ÖÖ, -
true
ÖÖ. 2
;
ÖÖ2 3

dialogHost
ÜÜ 
.
ÜÜ 
_session
ÜÜ #
=
ÜÜ$ %
null
ÜÜ& *
;
ÜÜ* +

dialogHost
áá 
.
áá 
_closeCleanUp
áá (
(
áá( )
)
áá) *
;
áá* +

dialogHost
åå 
.
åå 

Dispatcher
åå %
.
åå% &
InvokeAsync
åå& 1
(
åå1 2
(
åå2 3
)
åå3 4
=>
åå5 7

dialogHost
åå8 B
.
ååB C&
_restoreFocusDialogClose
ååC [
?
åå[ \
.
åå\ ]
Focus
åå] b
(
ååb c
)
ååc d
,
ååd e 
DispatcherPriority
ååf x
.
ååx y
Input
ååy ~
)
åå~ 
;åå Ä
return
éé 
;
éé 
}
èè 

dialogHost
ëë 
.
ëë "
_asyncShowWaitHandle
ëë +
.
ëë+ ,
Reset
ëë, 1
(
ëë1 2
)
ëë2 3
;
ëë3 4

dialogHost
íí 
.
íí 
_session
íí 
=
íí  !
new
íí" %
DialogSession
íí& 3
(
íí3 4

dialogHost
íí4 >
)
íí> ?
;
íí? @
var
ìì 
window
ìì 
=
ìì 
Window
ìì 
.
ìì  
	GetWindow
ìì  )
(
ìì) *

dialogHost
ìì* 4
)
ìì4 5
;
ìì5 6

dialogHost
îî 
.
îî &
_restoreFocusDialogClose
îî /
=
îî0 1
window
îî2 8
!=
îî9 ;
null
îî< @
?
îîA B
FocusManager
îîC O
.
îîO P
GetFocusedElement
îîP a
(
îîa b
window
îîb h
)
îîh i
:
îîj k
null
îîl p
;
îîp q
var
õõ #
dialogOpenedEventArgs
õõ %
=
õõ& '
new
õõ( +#
DialogOpenedEventArgs
õõ, A
(
õõA B

dialogHost
õõB L
.
õõL M
_session
õõM U
,
õõU V
DialogOpenedEvent
õõW h
)
õõh i
;
õõi j

dialogHost
úú 
.
úú 
OnDialogOpened
úú %
(
úú% &#
dialogOpenedEventArgs
úú& ;
)
úú; <
;
úú< =

dialogHost
ùù 
.
ùù /
!_attachedDialogOpenedEventHandler
ùù 8
?
ùù8 9
.
ùù9 :
Invoke
ùù: @
(
ùù@ A

dialogHost
ùùA K
,
ùùK L#
dialogOpenedEventArgs
ùùM b
)
ùùb c
;
ùùc d

dialogHost
ûû 
.
ûû "
DialogOpenedCallback
ûû +
?
ûû+ ,
.
ûû, -
Invoke
ûû- 3
(
ûû3 4

dialogHost
ûû4 >
,
ûû> ?#
dialogOpenedEventArgs
ûû@ U
)
ûûU V
;
ûûV W

dialogHost
üü 
.
üü *
_asyncShowOpenedEventHandler
üü 3
?
üü3 4
.
üü4 5
Invoke
üü5 ;
(
üü; <

dialogHost
üü< F
,
üüF G#
dialogOpenedEventArgs
üüH ]
)
üü] ^
;
üü^ _

dialogHost
°° 
.
°° 

Dispatcher
°° !
.
°°! "
BeginInvoke
°°" -
(
°°- . 
DispatcherPriority
°°. @
.
°°@ A

Background
°°A K
,
°°K L
new
°°M P
Action
°°Q W
(
°°W X
(
°°X Y
)
°°Y Z
=>
°°[ ]
{
¢¢ 
CommandManager
££ 
.
££ (
InvalidateRequerySuggested
££ 9
(
££9 :
)
££: ;
;
££; <
	UIElement
§§ 
child
§§ 
=
§§  !

dialogHost
§§" ,
.
§§, -

FocusPopup
§§- 7
(
§§7 8
)
§§8 9
;
§§9 :
if
¶¶ 
(
¶¶ 
child
¶¶ 
!=
¶¶ 
null
¶¶ !
)
¶¶! "
{
ßß 
Task
™™ 
.
™™ 
Delay
™™ 
(
™™ 
$num
™™ "
)
™™" #
.
™™# $
ContinueWith
™™$ 0
(
™™0 1
t
™™1 2
=>
™™3 5
child
™™6 ;
.
™™; <

Dispatcher
™™< F
.
™™F G
BeginInvoke
™™G R
(
™™R S
new
™™S V
Action
™™W ]
(
™™] ^
(
™™^ _
)
™™_ `
=>
™™a c
child
™™d i
.
™™i j
InvalidateVisual
™™j z
(
™™z {
)
™™{ |
)
™™| }
)
™™} ~
)
™™~ 
;™™ Ä
}
´´ 
}
¨¨ 
)
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 	
public
ØØ 
bool
ØØ 
IsOpen
ØØ 
{
∞∞ 	
get
±± 
{
±± 
return
±± 
(
±± 
bool
±± 
)
±± 
GetValue
±± '
(
±±' (
IsOpenProperty
±±( 6
)
±±6 7
;
±±7 8
}
±±9 :
set
≤≤ 
{
≤≤ 
SetValue
≤≤ 
(
≤≤ 
IsOpenProperty
≤≤ )
,
≤≤) *
value
≤≤+ 0
)
≤≤0 1
;
≤≤1 2
}
≤≤3 4
}
≥≥ 	
public
µµ 
static
µµ 
readonly
µµ  
DependencyProperty
µµ 1#
DialogContentProperty
µµ2 G
=
µµH I 
DependencyProperty
µµJ \
.
µµ\ ]
Register
µµ] e
(
µµe f
nameof
∂∂ 
(
∂∂ 
DialogContent
∂∂  
)
∂∂  !
,
∂∂! "
typeof
∂∂# )
(
∂∂) *
object
∂∂* 0
)
∂∂0 1
,
∂∂1 2
typeof
∂∂3 9
(
∂∂9 :

DialogHost
∂∂: D
)
∂∂D E
,
∂∂E F
new
∂∂G J
PropertyMetadata
∂∂K [
(
∂∂[ \
default
∂∂\ c
(
∂∂c d
object
∂∂d j
)
∂∂j k
)
∂∂k l
)
∂∂l m
;
∂∂m n
public
∏∏ 
object
∏∏ 
DialogContent
∏∏ #
{
ππ 	
get
∫∫ 
{
∫∫ 
return
∫∫ 
(
∫∫ 
object
∫∫  
)
∫∫  !
GetValue
∫∫! )
(
∫∫) *#
DialogContentProperty
∫∫* ?
)
∫∫? @
;
∫∫@ A
}
∫∫B C
set
ªª 
{
ªª 
SetValue
ªª 
(
ªª #
DialogContentProperty
ªª 0
,
ªª0 1
value
ªª2 7
)
ªª7 8
;
ªª8 9
}
ªª: ;
}
ºº 	
public
ææ 
static
ææ 
readonly
ææ  
DependencyProperty
ææ 1+
DialogContentTemplateProperty
ææ2 O
=
ææP Q 
DependencyProperty
ææR d
.
ææd e
Register
ææe m
(
ææm n
nameof
øø 
(
øø #
DialogContentTemplate
øø (
)
øø( )
,
øø) *
typeof
øø+ 1
(
øø1 2
DataTemplate
øø2 >
)
øø> ?
,
øø? @
typeof
øøA G
(
øøG H

DialogHost
øøH R
)
øøR S
,
øøS T
new
øøU X
PropertyMetadata
øøY i
(
øøi j
default
øøj q
(
øøq r
DataTemplate
øør ~
)
øø~ 
)øø Ä
)øøÄ Å
;øøÅ Ç
public
¡¡ 
DataTemplate
¡¡ #
DialogContentTemplate
¡¡ 1
{
¬¬ 	
get
√√ 
{
√√ 
return
√√ 
(
√√ 
DataTemplate
√√ &
)
√√& '
GetValue
√√' /
(
√√/ 0+
DialogContentTemplateProperty
√√0 M
)
√√M N
;
√√N O
}
√√P Q
set
ƒƒ 
{
ƒƒ 
SetValue
ƒƒ 
(
ƒƒ +
DialogContentTemplateProperty
ƒƒ 8
,
ƒƒ8 9
value
ƒƒ: ?
)
ƒƒ? @
;
ƒƒ@ A
}
ƒƒB C
}
≈≈ 	
public
«« 
static
«« 
readonly
««  
DependencyProperty
«« 13
%DialogContentTemplateSelectorProperty
««2 W
=
««X Y 
DependencyProperty
««Z l
.
««l m
Register
««m u
(
««u v
nameof
»» 
(
»» +
DialogContentTemplateSelector
»» 0
)
»»0 1
,
»»1 2
typeof
»»3 9
(
»»9 :"
DataTemplateSelector
»»: N
)
»»N O
,
»»O P
typeof
»»Q W
(
»»W X

DialogHost
»»X b
)
»»b c
,
»»c d
new
»»e h
PropertyMetadata
»»i y
(
»»y z
default»»z Å
(»»Å Ç$
DataTemplateSelector»»Ç ñ
)»»ñ ó
)»»ó ò
)»»ò ô
;»»ô ö
public
   "
DataTemplateSelector
   #+
DialogContentTemplateSelector
  $ A
{
ÀÀ 	
get
ÃÃ 
{
ÃÃ 
return
ÃÃ 
(
ÃÃ "
DataTemplateSelector
ÃÃ .
)
ÃÃ. /
GetValue
ÃÃ/ 7
(
ÃÃ7 83
%DialogContentTemplateSelectorProperty
ÃÃ8 ]
)
ÃÃ] ^
;
ÃÃ^ _
}
ÃÃ` a
set
ÕÕ 
{
ÕÕ 
SetValue
ÕÕ 
(
ÕÕ 3
%DialogContentTemplateSelectorProperty
ÕÕ @
,
ÕÕ@ A
value
ÕÕB G
)
ÕÕG H
;
ÕÕH I
}
ÕÕJ K
}
ŒŒ 	
public
–– 
static
–– 
readonly
––  
DependencyProperty
–– 1/
!DialogContentStringFormatProperty
––2 S
=
––T U 
DependencyProperty
––V h
.
––h i
Register
––i q
(
––q r
nameof
—— 
(
—— '
DialogContentStringFormat
—— ,
)
——, -
,
——- .
typeof
——/ 5
(
——5 6
string
——6 <
)
——< =
,
——= >
typeof
——? E
(
——E F

DialogHost
——F P
)
——P Q
,
——Q R
new
——S V
PropertyMetadata
——W g
(
——g h
default
——h o
(
——o p
string
——p v
)
——v w
)
——w x
)
——x y
;
——y z
public
”” 
string
”” '
DialogContentStringFormat
”” /
{
‘‘ 	
get
’’ 
{
’’ 
return
’’ 
(
’’ 
string
’’  
)
’’  !
GetValue
’’! )
(
’’) */
!DialogContentStringFormatProperty
’’* K
)
’’K L
;
’’L M
}
’’N O
set
÷÷ 
{
÷÷ 
SetValue
÷÷ 
(
÷÷ /
!DialogContentStringFormatProperty
÷÷ <
,
÷÷< =
value
÷÷> C
)
÷÷C D
;
÷÷D E
}
÷÷F G
}
◊◊ 	
public
ŸŸ 
static
ŸŸ 
readonly
ŸŸ  
DependencyProperty
ŸŸ 1"
DialogMarginProperty
ŸŸ2 F
=
ŸŸG H 
DependencyProperty
ŸŸI [
.
ŸŸ[ \
Register
ŸŸ\ d
(
ŸŸd e
$str
⁄⁄ 
,
⁄⁄ 
typeof
⁄⁄ "
(
⁄⁄" #
	Thickness
⁄⁄# ,
)
⁄⁄, -
,
⁄⁄- .
typeof
⁄⁄/ 5
(
⁄⁄5 6

DialogHost
⁄⁄6 @
)
⁄⁄@ A
,
⁄⁄A B
new
⁄⁄C F
PropertyMetadata
⁄⁄G W
(
⁄⁄W X
default
⁄⁄X _
(
⁄⁄_ `
	Thickness
⁄⁄` i
)
⁄⁄i j
)
⁄⁄j k
)
⁄⁄k l
;
⁄⁄l m
public
‹‹ 
	Thickness
‹‹ 
DialogMargin
‹‹ %
{
›› 	
get
ﬁﬁ 
{
ﬁﬁ 
return
ﬁﬁ 
(
ﬁﬁ 
	Thickness
ﬁﬁ #
)
ﬁﬁ# $
GetValue
ﬁﬁ$ ,
(
ﬁﬁ, -"
DialogMarginProperty
ﬁﬁ- A
)
ﬁﬁA B
;
ﬁﬁB C
}
ﬁﬁD E
set
ﬂﬂ 
{
ﬂﬂ 
SetValue
ﬂﬂ 
(
ﬂﬂ "
DialogMarginProperty
ﬂﬂ /
,
ﬂﬂ/ 0
value
ﬂﬂ1 6
)
ﬂﬂ6 7
;
ﬂﬂ7 8
}
ﬂﬂ9 :
}
‡‡ 	
public
‚‚ 
static
‚‚ 
readonly
‚‚  
DependencyProperty
‚‚ 18
*OpenDialogCommandDataContextSourceProperty
‚‚2 \
=
‚‚] ^ 
DependencyProperty
‚‚_ q
.
‚‚q r
Register
‚‚r z
(
‚‚z {
nameof
„„ 
(
„„ 0
"OpenDialogCommandDataContextSource
„„ 5
)
„„5 6
,
„„6 7
typeof
„„8 >
(
„„> ?:
,DialogHostOpenDialogCommandDataContextSource
„„? k
)
„„k l
,
„„l m
typeof
„„n t
(
„„t u

DialogHost
„„u 
)„„ Ä
,„„Ä Å
new„„Ç Ö 
PropertyMetadata„„Ü ñ
(„„ñ ó
default„„ó û
(„„û ü<
,DialogHostOpenDialogCommandDataContextSource„„ü À
)„„À Ã
)„„Ã Õ
)„„Õ Œ
;„„Œ œ
public
ÈÈ :
,DialogHostOpenDialogCommandDataContextSource
ÈÈ ;0
"OpenDialogCommandDataContextSource
ÈÈ< ^
{
ÍÍ 	
get
ÎÎ 
{
ÎÎ 
return
ÎÎ 
(
ÎÎ :
,DialogHostOpenDialogCommandDataContextSource
ÎÎ F
)
ÎÎF G
GetValue
ÎÎG O
(
ÎÎO P8
*OpenDialogCommandDataContextSourceProperty
ÎÎP z
)
ÎÎz {
;
ÎÎ{ |
}
ÎÎ} ~
set
ÏÏ 
{
ÏÏ 
SetValue
ÏÏ 
(
ÏÏ 8
*OpenDialogCommandDataContextSourceProperty
ÏÏ E
,
ÏÏE F
value
ÏÏG L
)
ÏÏL M
;
ÏÏM N
}
ÏÏO P
}
ÌÌ 	
public
ÔÔ 
static
ÔÔ 
readonly
ÔÔ  
DependencyProperty
ÔÔ 1&
CloseOnClickAwayProperty
ÔÔ2 J
=
ÔÔK L 
DependencyProperty
ÔÔM _
.
ÔÔ_ `
Register
ÔÔ` h
(
ÔÔh i
$str
 
,
 
typeof
  &
(
& '
bool
' +
)
+ ,
,
, -
typeof
. 4
(
4 5

DialogHost
5 ?
)
? @
,
@ A
new
B E
PropertyMetadata
F V
(
V W
default
W ^
(
^ _
bool
_ c
)
c d
)
d e
)
e f
;
f g
public
ıı 
bool
ıı 
CloseOnClickAway
ıı $
{
ˆˆ 	
get
˜˜ 
{
˜˜ 
return
˜˜ 
(
˜˜ 
bool
˜˜ 
)
˜˜ 
GetValue
˜˜ '
(
˜˜' (&
CloseOnClickAwayProperty
˜˜( @
)
˜˜@ A
;
˜˜A B
}
˜˜C D
set
¯¯ 
{
¯¯ 
SetValue
¯¯ 
(
¯¯ &
CloseOnClickAwayProperty
¯¯ 3
,
¯¯3 4
value
¯¯5 :
)
¯¯: ;
;
¯¯; <
}
¯¯= >
}
˘˘ 	
public
˚˚ 
static
˚˚ 
readonly
˚˚  
DependencyProperty
˚˚ 1/
!CloseOnClickAwayParameterProperty
˚˚2 S
=
˚˚T U 
DependencyProperty
˚˚V h
.
˚˚h i
Register
˚˚i q
(
˚˚q r
$str
¸¸ '
,
¸¸' (
typeof
¸¸) /
(
¸¸/ 0
object
¸¸0 6
)
¸¸6 7
,
¸¸7 8
typeof
¸¸9 ?
(
¸¸? @

DialogHost
¸¸@ J
)
¸¸J K
,
¸¸K L
new
¸¸M P
PropertyMetadata
¸¸Q a
(
¸¸a b
default
¸¸b i
(
¸¸i j
object
¸¸j p
)
¸¸p q
)
¸¸q r
)
¸¸r s
;
¸¸s t
public
ÅÅ 
object
ÅÅ '
CloseOnClickAwayParameter
ÅÅ /
{
ÇÇ 	
get
ÉÉ 
{
ÉÉ 
return
ÉÉ 
(
ÉÉ 
object
ÉÉ  
)
ÉÉ  !
GetValue
ÉÉ! )
(
ÉÉ) */
!CloseOnClickAwayParameterProperty
ÉÉ* K
)
ÉÉK L
;
ÉÉL M
}
ÉÉN O
set
ÑÑ 
{
ÑÑ 
SetValue
ÑÑ 
(
ÑÑ /
!CloseOnClickAwayParameterProperty
ÑÑ <
,
ÑÑ< =
value
ÑÑ> C
)
ÑÑC D
;
ÑÑD E
}
ÑÑF G
}
ÖÖ 	
public
áá 
static
áá 
readonly
áá  
DependencyProperty
áá 1*
SnackbarMessageQueueProperty
áá2 N
=
ááO P 
DependencyProperty
ááQ c
.
áác d
Register
áád l
(
áál m
$str
àà "
,
àà" #
typeof
àà$ *
(
àà* +"
SnackbarMessageQueue
àà+ ?
)
àà? @
,
àà@ A
typeof
ààB H
(
ààH I

DialogHost
ààI S
)
ààS T
,
ààT U
new
ààV Y
PropertyMetadata
ààZ j
(
ààj k
default
ààk r
(
ààr s#
SnackbarMessageQueueààs á
)ààá à
,ààà â;
+SnackbarMessageQueuePropertyChangedCallbackààä µ
)ààµ ∂
)àà∂ ∑
;àà∑ ∏
private
ää 
static
ää 
void
ää 9
+SnackbarMessageQueuePropertyChangedCallback
ää G
(
ääG H
DependencyObject
ääH X
dependencyObject
ääY i
,
ääi j1
"DependencyPropertyChangedEventArgsääk ç2
"dependencyPropertyChangedEventArgsääé ∞
)ää∞ ±
{
ãã 	
var
åå 

dialogHost
åå 
=
åå 
(
åå 

DialogHost
åå (
)
åå( )
dependencyObject
åå) 9
;
åå9 :
if
çç 
(
çç 

dialogHost
çç 
.
çç 7
)_currentSnackbarMessageQueueUnPauseAction
çç D
!=
ççE G
null
ççH L
)
ççL M
{
éé 

dialogHost
èè 
.
èè 7
)_currentSnackbarMessageQueueUnPauseAction
èè D
(
èèD E
)
èèE F
;
èèF G

dialogHost
êê 
.
êê 7
)_currentSnackbarMessageQueueUnPauseAction
êê D
=
êêE F
null
êêG K
;
êêK L
}
ëë 
if
ìì 
(
ìì 
!
ìì 

dialogHost
ìì 
.
ìì 
IsOpen
ìì "
)
ìì" #
return
ìì$ *
;
ìì* +
var
îî "
snackbarMessageQueue
îî $
=
îî% &0
"dependencyPropertyChangedEventArgs
îî' I
.
îîI J
NewValue
îîJ R
as
îîS U"
SnackbarMessageQueue
îîV j
;
îîj k

dialogHost
ïï 
.
ïï 7
)_currentSnackbarMessageQueueUnPauseAction
ïï @
=
ïïA B"
snackbarMessageQueue
ïïC W
?
ïïW X
.
ïïX Y
Pause
ïïY ^
(
ïï^ _
)
ïï_ `
;
ïï` a
}
ññ 	
public
õõ "
SnackbarMessageQueue
õõ #"
SnackbarMessageQueue
õõ$ 8
{
úú 	
get
ùù 
{
ùù 
return
ùù 
(
ùù "
SnackbarMessageQueue
ùù .
)
ùù. /
GetValue
ùù/ 7
(
ùù7 8*
SnackbarMessageQueueProperty
ùù8 T
)
ùùT U
;
ùùU V
}
ùùW X
set
ûû 
{
ûû 
SetValue
ûû 
(
ûû *
SnackbarMessageQueueProperty
ûû 7
,
ûû7 8
value
ûû9 >
)
ûû> ?
;
ûû? @
}
ûûA B
}
üü 	
public
°° 
static
°° 
readonly
°°  
DependencyProperty
°° 1 
PopupStyleProperty
°°2 D
=
°°E F 
DependencyProperty
°°G Y
.
°°Y Z
Register
°°Z b
(
°°b c
nameof
¢¢ 
(
¢¢ 

PopupStyle
¢¢ 
)
¢¢ 
,
¢¢ 
typeof
¢¢  &
(
¢¢& '
Style
¢¢' ,
)
¢¢, -
,
¢¢- .
typeof
¢¢/ 5
(
¢¢5 6

DialogHost
¢¢6 @
)
¢¢@ A
,
¢¢A B
new
¢¢C F
PropertyMetadata
¢¢G W
(
¢¢W X
default
¢¢X _
(
¢¢_ `
Style
¢¢` e
)
¢¢e f
)
¢¢f g
)
¢¢g h
;
¢¢h i
public
§§ 
Style
§§ 

PopupStyle
§§ 
{
•• 	
get
¶¶ 
{
¶¶ 
return
¶¶ 
(
¶¶ 
Style
¶¶ 
)
¶¶  
GetValue
¶¶  (
(
¶¶( ) 
PopupStyleProperty
¶¶) ;
)
¶¶; <
;
¶¶< =
}
¶¶> ?
set
ßß 
{
ßß 
SetValue
ßß 
(
ßß  
PopupStyleProperty
ßß -
,
ßß- .
value
ßß/ 4
)
ßß4 5
;
ßß5 6
}
ßß7 8
}
®® 	
public
™™ 
override
™™ 
void
™™ 
OnApplyTemplate
™™ ,
(
™™, -
)
™™- .
{
´´ 	
if
¨¨ 
(
¨¨ 
_contentCoverGrid
¨¨ !
!=
¨¨" $
null
¨¨% )
)
¨¨) *
_contentCoverGrid
≠≠ !
.
≠≠! "
MouseLeftButtonUp
≠≠" 3
-=
≠≠4 61
#ContentCoverGridOnMouseLeftButtonUp
≠≠7 Z
;
≠≠Z [
_popup
ØØ 
=
ØØ 
GetTemplateChild
ØØ %
(
ØØ% &
PopupPartName
ØØ& 3
)
ØØ3 4
as
ØØ5 7
Popup
ØØ8 =
;
ØØ= >"
_popupContentControl
∞∞  
=
∞∞! "
GetTemplateChild
∞∞# 3
(
∞∞3 4"
PopupContentPartName
∞∞4 H
)
∞∞H I
as
∞∞J L
ContentControl
∞∞M [
;
∞∞[ \
_contentCoverGrid
±± 
=
±± 
GetTemplateChild
±±  0
(
±±0 1"
ContentCoverGridName
±±1 E
)
±±E F
as
±±G I
Grid
±±J N
;
±±N O
if
≥≥ 
(
≥≥ 
_contentCoverGrid
≥≥ !
!=
≥≥" $
null
≥≥% )
)
≥≥) *
_contentCoverGrid
¥¥ !
.
¥¥! "
MouseLeftButtonUp
¥¥" 3
+=
¥¥4 61
#ContentCoverGridOnMouseLeftButtonUp
¥¥7 Z
;
¥¥Z [ 
VisualStateManager
∂∂ 
.
∂∂ 
	GoToState
∂∂ (
(
∂∂( )
this
∂∂) -
,
∂∂- .
SelectState
∂∂/ :
(
∂∂: ;
)
∂∂; <
,
∂∂< =
false
∂∂> C
)
∂∂C D
;
∂∂D E
base
∏∏ 
.
∏∏ 
OnApplyTemplate
∏∏  
(
∏∏  !
)
∏∏! "
;
∏∏" #
}
ππ 	
public
ΩΩ 
static
ΩΩ 
readonly
ΩΩ 
RoutedEvent
ΩΩ *
DialogOpenedEvent
ΩΩ+ <
=
ΩΩ= >
EventManager
ææ 
.
ææ !
RegisterRoutedEvent
ææ ,
(
ææ, -
$str
øø 
,
øø 
RoutingStrategy
¿¿ 
.
¿¿  
Bubble
¿¿  &
,
¿¿& '
typeof
¡¡ 
(
¡¡ &
DialogOpenedEventHandler
¡¡ /
)
¡¡/ 0
,
¡¡0 1
typeof
¬¬ 
(
¬¬ 

DialogHost
¬¬ !
)
¬¬! "
)
¬¬" #
;
¬¬# $
public
«« 
event
«« &
DialogOpenedEventHandler
«« -
DialogOpened
««. :
{
»» 	
add
…… 
{
…… 

AddHandler
…… 
(
…… 
DialogOpenedEvent
…… .
,
……. /
value
……0 5
)
……5 6
;
……6 7
}
……8 9
remove
   
{
   
RemoveHandler
   "
(
  " #
DialogOpenedEvent
  # 4
,
  4 5
value
  6 ;
)
  ; <
;
  < =
}
  > ?
}
ÀÀ 	
public
–– 
static
–– 
readonly
––  
DependencyProperty
–– 1*
DialogOpenedAttachedProperty
––2 N
=
––O P 
DependencyProperty
––Q c
.
––c d
RegisterAttached
––d t
(
––t u
$str
—— "
,
——" #
typeof
——$ *
(
——* +&
DialogOpenedEventHandler
——+ C
)
——C D
,
——D E
typeof
——F L
(
——L M

DialogHost
——M W
)
——W X
,
——X Y
new
——Z ]
PropertyMetadata
——^ n
(
——n o
default
——o v
(
——v w'
DialogOpenedEventHandler——w è
)——è ê
)——ê ë
)——ë í
;——í ì
public
”” 
static
”” 
void
”” %
SetDialogOpenedAttached
”” 2
(
””2 3
DependencyObject
””3 C
element
””D K
,
””K L&
DialogOpenedEventHandler
””M e
value
””f k
)
””k l
{
‘‘ 	
element
’’ 
.
’’ 
SetValue
’’ 
(
’’ *
DialogOpenedAttachedProperty
’’ 9
,
’’9 :
value
’’; @
)
’’@ A
;
’’A B
}
÷÷ 	
public
ÿÿ 
static
ÿÿ &
DialogOpenedEventHandler
ÿÿ .%
GetDialogOpenedAttached
ÿÿ/ F
(
ÿÿF G
DependencyObject
ÿÿG W
element
ÿÿX _
)
ÿÿ_ `
{
ŸŸ 	
return
⁄⁄ 
(
⁄⁄ &
DialogOpenedEventHandler
⁄⁄ ,
)
⁄⁄, -
element
⁄⁄- 4
.
⁄⁄4 5
GetValue
⁄⁄5 =
(
⁄⁄= >*
DialogOpenedAttachedProperty
⁄⁄> Z
)
⁄⁄Z [
;
⁄⁄[ \
}
€€ 	
public
›› 
static
›› 
readonly
››  
DependencyProperty
›› 1*
DialogOpenedCallbackProperty
››2 N
=
››O P 
DependencyProperty
››Q c
.
››c d
Register
››d l
(
››l m
nameof
ﬁﬁ 
(
ﬁﬁ "
DialogOpenedCallback
ﬁﬁ '
)
ﬁﬁ' (
,
ﬁﬁ( )
typeof
ﬁﬁ* 0
(
ﬁﬁ0 1&
DialogOpenedEventHandler
ﬁﬁ1 I
)
ﬁﬁI J
,
ﬁﬁJ K
typeof
ﬁﬁL R
(
ﬁﬁR S

DialogHost
ﬁﬁS ]
)
ﬁﬁ] ^
,
ﬁﬁ^ _
new
ﬁﬁ` c
PropertyMetadata
ﬁﬁd t
(
ﬁﬁt u
default
ﬁﬁu |
(
ﬁﬁ| }'
DialogOpenedEventHandlerﬁﬁ} ï
)ﬁﬁï ñ
)ﬁﬁñ ó
)ﬁﬁó ò
;ﬁﬁò ô
public
„„ &
DialogOpenedEventHandler
„„ '"
DialogOpenedCallback
„„( <
{
‰‰ 	
get
ÂÂ 
{
ÂÂ 
return
ÂÂ 
(
ÂÂ &
DialogOpenedEventHandler
ÂÂ 2
)
ÂÂ2 3
GetValue
ÂÂ3 ;
(
ÂÂ; <*
DialogOpenedCallbackProperty
ÂÂ< X
)
ÂÂX Y
;
ÂÂY Z
}
ÂÂ[ \
set
ÊÊ 
{
ÊÊ 
SetValue
ÊÊ 
(
ÊÊ *
DialogOpenedCallbackProperty
ÊÊ 7
,
ÊÊ7 8
value
ÊÊ9 >
)
ÊÊ> ?
;
ÊÊ? @
}
ÊÊA B
}
ÁÁ 	
	protected
ÈÈ 
void
ÈÈ 
OnDialogOpened
ÈÈ %
(
ÈÈ% &#
DialogOpenedEventArgs
ÈÈ& ;
	eventArgs
ÈÈ< E
)
ÈÈE F
{
ÍÍ 	

RaiseEvent
ÎÎ 
(
ÎÎ 
	eventArgs
ÎÎ  
)
ÎÎ  !
;
ÎÎ! "
}
ÏÏ 	
public
ÚÚ 
static
ÚÚ 
readonly
ÚÚ 
RoutedEvent
ÚÚ * 
DialogClosingEvent
ÚÚ+ =
=
ÚÚ> ?
EventManager
ÛÛ 
.
ÛÛ !
RegisterRoutedEvent
ÛÛ ,
(
ÛÛ, -
$str
ÙÙ 
,
ÙÙ  
RoutingStrategy
ıı 
.
ıı  
Bubble
ıı  &
,
ıı& '
typeof
ˆˆ 
(
ˆˆ '
DialogClosingEventHandler
ˆˆ 0
)
ˆˆ0 1
,
ˆˆ1 2
typeof
˜˜ 
(
˜˜ 

DialogHost
˜˜ !
)
˜˜! "
)
˜˜" #
;
˜˜# $
public
¸¸ 
event
¸¸ '
DialogClosingEventHandler
¸¸ .
DialogClosing
¸¸/ <
{
˝˝ 	
add
˛˛ 
{
˛˛ 

AddHandler
˛˛ 
(
˛˛  
DialogClosingEvent
˛˛ /
,
˛˛/ 0
value
˛˛1 6
)
˛˛6 7
;
˛˛7 8
}
˛˛9 :
remove
ˇˇ 
{
ˇˇ 
RemoveHandler
ˇˇ "
(
ˇˇ" # 
DialogClosingEvent
ˇˇ# 5
,
ˇˇ5 6
value
ˇˇ7 <
)
ˇˇ< =
;
ˇˇ= >
}
ˇˇ? @
}
ÄÄ 	
public
ÖÖ 
static
ÖÖ 
readonly
ÖÖ  
DependencyProperty
ÖÖ 1+
DialogClosingAttachedProperty
ÖÖ2 O
=
ÖÖP Q 
DependencyProperty
ÖÖR d
.
ÖÖd e
RegisterAttached
ÖÖe u
(
ÖÖu v
$str
ÜÜ #
,
ÜÜ# $
typeof
ÜÜ% +
(
ÜÜ+ ,'
DialogClosingEventHandler
ÜÜ, E
)
ÜÜE F
,
ÜÜF G
typeof
ÜÜH N
(
ÜÜN O

DialogHost
ÜÜO Y
)
ÜÜY Z
,
ÜÜZ [
new
ÜÜ\ _
PropertyMetadata
ÜÜ` p
(
ÜÜp q
default
ÜÜq x
(
ÜÜx y(
DialogClosingEventHandlerÜÜy í
)ÜÜí ì
)ÜÜì î
)ÜÜî ï
;ÜÜï ñ
public
àà 
static
àà 
void
àà &
SetDialogClosingAttached
àà 3
(
àà3 4
DependencyObject
àà4 D
element
ààE L
,
ààL M'
DialogClosingEventHandler
ààN g
value
ààh m
)
ààm n
{
ââ 	
element
ää 
.
ää 
SetValue
ää 
(
ää +
DialogClosingAttachedProperty
ää :
,
ää: ;
value
ää< A
)
ääA B
;
ääB C
}
ãã 	
public
çç 
static
çç '
DialogClosingEventHandler
çç /&
GetDialogClosingAttached
çç0 H
(
ççH I
DependencyObject
ççI Y
element
ççZ a
)
çça b
{
éé 	
return
èè 
(
èè '
DialogClosingEventHandler
èè -
)
èè- .
element
èè. 5
.
èè5 6
GetValue
èè6 >
(
èè> ?+
DialogClosingAttachedProperty
èè? \
)
èè\ ]
;
èè] ^
}
êê 	
public
íí 
static
íí 
readonly
íí  
DependencyProperty
íí 1+
DialogClosingCallbackProperty
íí2 O
=
ííP Q 
DependencyProperty
ííR d
.
ííd e
Register
ííe m
(
íím n
nameof
ìì 
(
ìì #
DialogClosingCallback
ìì (
)
ìì( )
,
ìì) *
typeof
ìì+ 1
(
ìì1 2'
DialogClosingEventHandler
ìì2 K
)
ììK L
,
ììL M
typeof
ììN T
(
ììT U

DialogHost
ììU _
)
ìì_ `
,
ìì` a
new
ììb e
PropertyMetadata
ììf v
(
ììv w
default
ììw ~
(
ìì~ (
DialogClosingEventHandlerìì ò
)ììò ô
)ììô ö
)ììö õ
;ììõ ú
public
òò '
DialogClosingEventHandler
òò (#
DialogClosingCallback
òò) >
{
ôô 	
get
öö 
{
öö 
return
öö 
(
öö '
DialogClosingEventHandler
öö 3
)
öö3 4
GetValue
öö4 <
(
öö< =+
DialogClosingCallbackProperty
öö= Z
)
ööZ [
;
öö[ \
}
öö] ^
set
õõ 
{
õõ 
SetValue
õõ 
(
õõ +
DialogClosingCallbackProperty
õõ 8
,
õõ8 9
value
õõ: ?
)
õõ? @
;
õõ@ A
}
õõB C
}
úú 	
	protected
ûû 
void
ûû 
OnDialogClosing
ûû &
(
ûû& '$
DialogClosingEventArgs
ûû' =
	eventArgs
ûû> G
)
ûûG H
{
üü 	

RaiseEvent
†† 
(
†† 
	eventArgs
††  
)
††  !
;
††! "
}
°° 	
internal
•• 
void
•• %
AssertTargetableContent
•• -
(
••- .
)
••. /
{
¶¶ 	
var
ßß 
existindBinding
ßß 
=
ßß  !
BindingOperations
ßß" 3
.
ßß3 4"
GetBindingExpression
ßß4 H
(
ßßH I
this
ßßI M
,
ßßM N#
DialogContentProperty
ßßO d
)
ßßd e
;
ßße f
if
®® 
(
®® 
existindBinding
®® 
!=
®®  "
null
®®# '
)
®®' (
throw
©© 
new
©© '
InvalidOperationException
©© 3
(
©©3 4
$str
™™ u
)
™™u v
;
™™v w
}
´´ 	
internal
≠≠ 
void
≠≠ 
Close
≠≠ 
(
≠≠ 
object
≠≠ "
	parameter
≠≠# ,
)
≠≠, -
{
ÆÆ 	
var
ØØ $
dialogClosingEventArgs
ØØ &
=
ØØ' (
new
ØØ) ,$
DialogClosingEventArgs
ØØ- C
(
ØØC D
_session
ØØD L
,
ØØL M
	parameter
ØØN W
,
ØØW X 
DialogClosingEvent
ØØY k
)
ØØk l
;
ØØl m
_session
±± 
.
±± 
IsEnded
±± 
=
±± 
true
±± #
;
±±# $
OnDialogClosing
∏∏ 
(
∏∏ $
dialogClosingEventArgs
∏∏ 2
)
∏∏2 3
;
∏∏3 40
"_attachedDialogClosingEventHandler
ππ .
?
ππ. /
.
ππ/ 0
Invoke
ππ0 6
(
ππ6 7
this
ππ7 ;
,
ππ; <$
dialogClosingEventArgs
ππ= S
)
ππS T
;
ππT U#
DialogClosingCallback
∫∫ !
?
∫∫! "
.
∫∫" #
Invoke
∫∫# )
(
∫∫) *
this
∫∫* .
,
∫∫. /$
dialogClosingEventArgs
∫∫0 F
)
∫∫F G
;
∫∫G H+
_asyncShowClosingEventHandler
ªª )
?
ªª) *
.
ªª* +
Invoke
ªª+ 1
(
ªª1 2
this
ªª2 6
,
ªª6 7$
dialogClosingEventArgs
ªª8 N
)
ªªN O
;
ªªO P
if
ΩΩ 
(
ΩΩ 
!
ΩΩ $
dialogClosingEventArgs
ΩΩ '
.
ΩΩ' (
IsCancelled
ΩΩ( 3
)
ΩΩ3 4
SetCurrentValue
ææ 
(
ææ  
IsOpenProperty
ææ  .
,
ææ. /
false
ææ0 5
)
ææ5 6
;
ææ6 7
else
øø 
_session
¿¿ 
.
¿¿ 
IsEnded
¿¿  
=
¿¿! "
false
¿¿# (
;
¿¿( ),
_closeDialogExecutionParameter
¬¬ *
=
¬¬+ ,
	parameter
¬¬- 6
;
¬¬6 7
}
√√ 	
internal
…… 
	UIElement
…… 

FocusPopup
…… %
(
……% &
)
……& '
{
   	
var
ÀÀ 
child
ÀÀ 
=
ÀÀ 
_popup
ÀÀ 
?
ÀÀ 
.
ÀÀ  
Child
ÀÀ  %
;
ÀÀ% &
if
ÃÃ 
(
ÃÃ 
child
ÃÃ 
==
ÃÃ 
null
ÃÃ 
)
ÃÃ 
return
ÃÃ %
null
ÃÃ& *
;
ÃÃ* +
CommandManager
ŒŒ 
.
ŒŒ (
InvalidateRequerySuggested
ŒŒ 5
(
ŒŒ5 6
)
ŒŒ6 7
;
ŒŒ7 8
var
œœ 
	focusable
œœ 
=
œœ 
child
œœ !
.
œœ! "'
VisualDepthFirstTraversal
œœ" ;
(
œœ; <
)
œœ< =
.
œœ= >
OfType
œœ> D
<
œœD E
	UIElement
œœE N
>
œœN O
(
œœO P
)
œœP Q
.
œœQ R
FirstOrDefault
œœR `
(
œœ` a
ui
œœa c
=>
œœd f
ui
œœg i
.
œœi j
	Focusable
œœj s
&&
œœt v
ui
œœw y
.
œœy z
	IsVisibleœœz É
)œœÉ Ñ
;œœÑ Ö
	focusable
–– 
?
–– 
.
–– 

Dispatcher
–– !
.
––! "
InvokeAsync
––" -
(
––- .
(
––. /
)
––/ 0
=>
––1 3
{
—— 
if
““ 
(
““ 
!
““ 
	focusable
““ 
.
““ 
Focus
““ $
(
““$ %
)
““% &
)
““& '
return
““( .
;
““. /
	focusable
”” 
.
”” 
	MoveFocus
”” #
(
””# $
new
””$ '
TraversalRequest
””( 8
(
””8 9&
FocusNavigationDirection
””9 Q
.
””Q R
First
””R W
)
””W X
)
””X Y
;
””Y Z
}
‘‘ 
,
‘‘  
DispatcherPriority
‘‘ !
.
‘‘! "

Background
‘‘" ,
)
‘‘, -
;
‘‘- .
return
÷÷ 
child
÷÷ 
;
÷÷ 
}
◊◊ 	
	protected
ŸŸ 
override
ŸŸ 
void
ŸŸ  
OnPreviewMouseDown
ŸŸ  2
(
ŸŸ2 3"
MouseButtonEventArgs
ŸŸ3 G
e
ŸŸH I
)
ŸŸI J
{
⁄⁄ 	
var
€€ 
window
€€ 
=
€€ 
Window
€€ 
.
€€  
	GetWindow
€€  )
(
€€) *
this
€€* .
)
€€. /
;
€€/ 0
if
‹‹ 
(
‹‹ 
window
‹‹ 
!=
‹‹ 
null
‹‹ 
&&
‹‹ !
!
‹‹" #
window
‹‹# )
.
‹‹) *
IsActive
‹‹* 2
)
‹‹2 3
window
›› 
.
›› 
Activate
›› 
(
››  
)
››  !
;
››! "
base
ﬁﬁ 
.
ﬁﬁ  
OnPreviewMouseDown
ﬁﬁ #
(
ﬁﬁ# $
e
ﬁﬁ$ %
)
ﬁﬁ% &
;
ﬁﬁ& '
}
ﬂﬂ 	
private
·· 
void
·· 1
#ContentCoverGridOnMouseLeftButtonUp
·· 8
(
··8 9
object
··9 ?
sender
··@ F
,
··F G"
MouseButtonEventArgs
··H \"
mouseButtonEventArgs
··] q
)
··q r
{
‚‚ 	
if
„„ 
(
„„ 
CloseOnClickAway
„„  
)
„„  !
Close
‰‰ 
(
‰‰ '
CloseOnClickAwayParameter
‰‰ /
)
‰‰/ 0
;
‰‰0 1
}
ÂÂ 	
private
ÁÁ 
void
ÁÁ 
OpenDialogHandler
ÁÁ &
(
ÁÁ& '
object
ÁÁ' -
sender
ÁÁ. 4
,
ÁÁ4 5%
ExecutedRoutedEventArgs
ÁÁ6 M%
executedRoutedEventArgs
ÁÁN e
)
ÁÁe f
{
ËË 	
if
ÈÈ 
(
ÈÈ %
executedRoutedEventArgs
ÈÈ '
.
ÈÈ' (
Handled
ÈÈ( /
)
ÈÈ/ 0
return
ÈÈ1 7
;
ÈÈ7 8
var
ÎÎ 
dependencyObject
ÎÎ  
=
ÎÎ! "%
executedRoutedEventArgs
ÎÎ# :
.
ÎÎ: ;
OriginalSource
ÎÎ; I
as
ÎÎJ L
DependencyObject
ÎÎM ]
;
ÎÎ] ^
if
ÏÏ 
(
ÏÏ 
dependencyObject
ÏÏ  
!=
ÏÏ! #
null
ÏÏ$ (
)
ÏÏ( )
{
ÌÌ /
!_attachedDialogOpenedEventHandler
ÓÓ 1
=
ÓÓ2 3%
GetDialogOpenedAttached
ÓÓ4 K
(
ÓÓK L
dependencyObject
ÓÓL \
)
ÓÓ\ ]
;
ÓÓ] ^0
"_attachedDialogClosingEventHandler
ÔÔ 2
=
ÔÔ3 4&
GetDialogClosingAttached
ÔÔ5 M
(
ÔÔM N
dependencyObject
ÔÔN ^
)
ÔÔ^ _
;
ÔÔ_ `
}
 
if
ÚÚ 
(
ÚÚ %
executedRoutedEventArgs
ÚÚ '
.
ÚÚ' (
	Parameter
ÚÚ( 1
!=
ÚÚ2 4
null
ÚÚ5 9
)
ÚÚ9 :
{
ÛÛ %
AssertTargetableContent
ÙÙ '
(
ÙÙ' (
)
ÙÙ( )
;
ÙÙ) *
if
ˆˆ 
(
ˆˆ "
_popupContentControl
ˆˆ (
!=
ˆˆ) +
null
ˆˆ, 0
)
ˆˆ0 1
{
˜˜ 
switch
¯¯ 
(
¯¯ 0
"OpenDialogCommandDataContextSource
¯¯ >
)
¯¯> ?
{
˘˘ 
case
˙˙ :
,DialogHostOpenDialogCommandDataContextSource
˙˙ I
.
˙˙I J
SenderElement
˙˙J W
:
˙˙W X"
_popupContentControl
˚˚ 0
.
˚˚0 1
DataContext
˚˚1 <
=
˚˚= >
(
¸¸  !%
executedRoutedEventArgs
¸¸! 8
.
¸¸8 9
OriginalSource
¸¸9 G
as
¸¸H J
FrameworkElement
¸¸K [
)
¸¸[ \
?
¸¸\ ]
.
¸¸] ^
DataContext
¸¸^ i
;
¸¸i j
break
˝˝ !
;
˝˝! "
case
˛˛ :
,DialogHostOpenDialogCommandDataContextSource
˛˛ I
.
˛˛I J 
DialogHostInstance
˛˛J \
:
˛˛\ ]"
_popupContentControl
ˇˇ 0
.
ˇˇ0 1
DataContext
ˇˇ1 <
=
ˇˇ= >
DataContext
ˇˇ? J
;
ˇˇJ K
break
ÄÄ !
;
ÄÄ! "
case
ÅÅ :
,DialogHostOpenDialogCommandDataContextSource
ÅÅ I
.
ÅÅI J
None
ÅÅJ N
:
ÅÅN O"
_popupContentControl
ÇÇ 0
.
ÇÇ0 1
DataContext
ÇÇ1 <
=
ÇÇ= >
null
ÇÇ? C
;
ÇÇC D
break
ÉÉ !
;
ÉÉ! "
default
ÑÑ 
:
ÑÑ  
throw
ÖÖ !
new
ÖÖ" %)
ArgumentOutOfRangeException
ÖÖ& A
(
ÖÖA B
)
ÖÖB C
;
ÖÖC D
}
ÜÜ 
}
áá 
DialogContent
ââ 
=
ââ %
executedRoutedEventArgs
ââ  7
.
ââ7 8
	Parameter
ââ8 A
;
ââA B
}
ää 
SetCurrentValue
åå 
(
åå 
IsOpenProperty
åå *
,
åå* +
true
åå, 0
)
åå0 1
;
åå1 2%
executedRoutedEventArgs
éé #
.
éé# $
Handled
éé$ +
=
éé, -
true
éé. 2
;
éé2 3
}
èè 	
private
ëë 
void
ëë #
CloseDialogCanExecute
ëë *
(
ëë* +
object
ëë+ 1
sender
ëë2 8
,
ëë8 9'
CanExecuteRoutedEventArgs
ëë: S'
canExecuteRoutedEventArgs
ëëT m
)
ëëm n
{
íí 	'
canExecuteRoutedEventArgs
ìì %
.
ìì% &

CanExecute
ìì& 0
=
ìì1 2
_session
ìì3 ;
!=
ìì< >
null
ìì? C
;
ììC D
}
îî 	
private
ññ 
void
ññ  
CloseDialogHandler
ññ '
(
ññ' (
object
ññ( .
sender
ññ/ 5
,
ññ5 6%
ExecutedRoutedEventArgs
ññ7 N%
executedRoutedEventArgs
ññO f
)
ññf g
{
óó 	
if
òò 
(
òò %
executedRoutedEventArgs
òò '
.
òò' (
Handled
òò( /
)
òò/ 0
return
òò1 7
;
òò7 8
Close
öö 
(
öö %
executedRoutedEventArgs
öö )
.
öö) *
	Parameter
öö* 3
)
öö3 4
;
öö4 5%
executedRoutedEventArgs
úú #
.
úú# $
Handled
úú$ +
=
úú, -
true
úú. 2
;
úú2 3
}
ùù 	
private
üü 
string
üü 
SelectState
üü "
(
üü" #
)
üü# $
{
†† 	
return
°° 
IsOpen
°° 
?
°° 
OpenStateName
°° )
:
°°* +
ClosedStateName
°°, ;
;
°°; <
}
¢¢ 	
private
§§ 
void
§§ 

OnUnloaded
§§ 
(
§§  
object
§§  &
sender
§§' -
,
§§- .
RoutedEventArgs
§§/ >
routedEventArgs
§§? N
)
§§N O
{
•• 	
LoadedInstances
¶¶ 
.
¶¶ 
Remove
¶¶ "
(
¶¶" #
this
¶¶# '
)
¶¶' (
;
¶¶( )
SetCurrentValue
ßß 
(
ßß 
IsOpenProperty
ßß *
,
ßß* +
false
ßß, 1
)
ßß1 2
;
ßß2 3
}
®® 	
private
™™ 
void
™™ 
OnLoaded
™™ 
(
™™ 
object
™™ $
sender
™™% +
,
™™+ ,
RoutedEventArgs
™™- <
routedEventArgs
™™= L
)
™™L M
{
´´ 	
LoadedInstances
¨¨ 
.
¨¨ 
Add
¨¨ 
(
¨¨  
this
¨¨  $
)
¨¨$ %
;
¨¨% &
}
≠≠ 	
private
ØØ 
static
ØØ 
void
ØØ #
WatchWindowActivation
ØØ 1
(
ØØ1 2

DialogHost
ØØ2 <

dialogHost
ØØ= G
)
ØØG H
{
∞∞ 	
var
±± 
window
±± 
=
±± 
Window
±± 
.
±±  
	GetWindow
±±  )
(
±±) *

dialogHost
±±* 4
)
±±4 5
;
±±5 6
if
≤≤ 
(
≤≤ 
window
≤≤ 
!=
≤≤ 
null
≤≤ 
)
≤≤ 
{
≥≥ 
window
¥¥ 
.
¥¥ 
	Activated
¥¥  
+=
¥¥! #

dialogHost
¥¥$ .
.
¥¥. /
WindowOnActivated
¥¥/ @
;
¥¥@ A
window
µµ 
.
µµ 
Deactivated
µµ "
+=
µµ# %

dialogHost
µµ& 0
.
µµ0 1!
WindowOnDeactivated
µµ1 D
;
µµD E

dialogHost
∂∂ 
.
∂∂ 
_closeCleanUp
∂∂ (
=
∂∂) *
(
∂∂+ ,
)
∂∂, -
=>
∂∂. 0
{
∑∑ 
window
∏∏ 
.
∏∏ 
	Activated
∏∏ $
-=
∏∏% '

dialogHost
∏∏( 2
.
∏∏2 3
WindowOnActivated
∏∏3 D
;
∏∏D E
window
ππ 
.
ππ 
Deactivated
ππ &
-=
ππ' )

dialogHost
ππ* 4
.
ππ4 5!
WindowOnDeactivated
ππ5 H
;
ππH I
}
∫∫ 
;
∫∫ 
}
ªª 
else
ºº 
{
ΩΩ 

dialogHost
ææ 
.
ææ 
_closeCleanUp
ææ (
=
ææ) *
(
ææ+ ,
)
ææ, -
=>
ææ. 0
{
ææ1 2
}
ææ3 4
;
ææ4 5
}
øø 
}
¿¿ 	
private
¬¬ 
void
¬¬ !
WindowOnDeactivated
¬¬ (
(
¬¬( )
object
¬¬) /
sender
¬¬0 6
,
¬¬6 7
	EventArgs
¬¬8 A
	eventArgs
¬¬B K
)
¬¬K L
{
√√ 	-
_restoreFocusWindowReactivation
ƒƒ +
=
ƒƒ, -
_popup
ƒƒ. 4
!=
ƒƒ5 7
null
ƒƒ8 <
?
ƒƒ= >
FocusManager
ƒƒ? K
.
ƒƒK L
GetFocusedElement
ƒƒL ]
(
ƒƒ] ^
(
ƒƒ^ _
Window
ƒƒ_ e
)
ƒƒe f
sender
ƒƒf l
)
ƒƒl m
:
ƒƒn o
null
ƒƒp t
;
ƒƒt u
}
≈≈ 	
private
«« 
void
«« 
WindowOnActivated
«« &
(
««& '
object
««' -
sender
««. 4
,
««4 5
	EventArgs
««6 ?
	eventArgs
««@ I
)
««I J
{
»» 	
if
…… 
(
…… -
_restoreFocusWindowReactivation
…… /
!=
……0 2
null
……3 7
)
……7 8
{
   

Dispatcher
ÀÀ 
.
ÀÀ 
BeginInvoke
ÀÀ &
(
ÀÀ& '
new
ÀÀ' *
Action
ÀÀ+ 1
(
ÀÀ1 2
(
ÀÀ2 3
)
ÀÀ3 4
=>
ÀÀ5 7
{
ÃÃ 
Keyboard
ÕÕ 
.
ÕÕ 
Focus
ÕÕ "
(
ÕÕ" #-
_restoreFocusWindowReactivation
ÕÕ# B
)
ÕÕB C
;
ÕÕC D
}
ŒŒ 
)
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}
–– 	
}
—— 
}““ é$
PD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DpiHelper.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
internal 
static 
class 
	DpiHelper #
{ 
private		 
static		 
readonly		 
int		  #
DpiX		$ (
;		( )
private

 
static

 
readonly

 
int

  #
DpiY

$ (
;

( )
private 
const 
double 
StandardDpiX )
=* +
$num, 0
;0 1
private 
const 
double 
StandardDpiY )
=* +
$num, 0
;0 1
static 
	DpiHelper 
( 
) 
{ 	
var 
dpiXProperty 
= 
typeof %
(% &
SystemParameters& 6
)6 7
.7 8
GetProperty8 C
(C D
$strD J
,J K
BindingFlagsL X
.X Y
	NonPublicY b
|c d
BindingFlagse q
.q r
Staticr x
)x y
;y z
var 
dpiYProperty 
= 
typeof %
(% &
SystemParameters& 6
)6 7
.7 8
GetProperty8 C
(C D
$strD I
,I J
BindingFlagsK W
.W X
	NonPublicX a
|b c
BindingFlagsd p
.p q
Staticq w
)w x
;x y
DpiX 
= 
( 
int 
) 
dpiXProperty $
.$ %
GetValue% -
(- .
null. 2
,2 3
null4 8
)8 9
;9 :
DpiY 
= 
( 
int 
) 
dpiYProperty $
.$ %
GetValue% -
(- .
null. 2
,2 3
null4 8
)8 9
;9 :
} 	
public 
static 
double 
TransformToDeviceY /
(/ 0
Visual0 6
visual7 =
,= >
double? E
yF G
)G H
{ 	
var 
source 
= 
PresentationSource +
.+ ,

FromVisual, 6
(6 7
visual7 =
)= >
;> ?
if 
( 
source 
? 
. 
CompositionTarget )
!=* ,
null- 1
)1 2
return3 9
y: ;
*< =
source> D
.D E
CompositionTargetE V
.V W
TransformToDeviceW h
.h i
M22i l
;l m
return 
TransformToDeviceY %
(% &
y& '
)' (
;( )
} 	
public   
static   
double   
TransformToDeviceX   /
(  / 0
Visual  0 6
visual  7 =
,  = >
double  ? E
x  F G
)  G H
{!! 	
var"" 
source"" 
="" 
PresentationSource"" +
.""+ ,

FromVisual"", 6
(""6 7
visual""7 =
)""= >
;""> ?
if## 
(## 
source## 
?## 
.## 
CompositionTarget## )
!=##* ,
null##- 1
)##1 2
return##3 9
x##: ;
*##< =
source##> D
.##D E
CompositionTarget##E V
.##V W
TransformToDevice##W h
.##h i
M11##i l
;##l m
return%% 
TransformToDeviceX%% %
(%%% &
x%%& '
)%%' (
;%%( )
}&& 	
public(( 
static(( 
double(( 
TransformToDeviceY(( /
(((/ 0
double((0 6
y((7 8
)((8 9
{)) 	
return** 
y** 
*** 
DpiY** 
/** 
StandardDpiY** *
;*** +
}++ 	
public-- 
static-- 
double-- 
TransformToDeviceX-- /
(--/ 0
double--0 6
x--7 8
)--8 9
{.. 	
return// 
x// 
*// 
DpiX// 
/// 
StandardDpiX// *
;//* +
}00 	
}11 
}22 ·ï
QD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\DrawerHost.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
{ 
[ 
TemplateVisualState 
( 
	GroupName "
=# $'
TemplateAllDrawersGroupName% @
,@ A
NameB F
=G H0
$TemplateAllDrawersAllClosedStateNameI m
)m n
]n o
[ 
TemplateVisualState 
( 
	GroupName "
=# $'
TemplateAllDrawersGroupName% @
,@ A
NameB F
=G H.
"TemplateAllDrawersAnyOpenStateNameI k
)k l
]l m
[ 
TemplateVisualState 
( 
	GroupName "
=# $'
TemplateLeftDrawerGroupName% @
,@ A
NameB F
=G H'
TemplateLeftClosedStateNameI d
)d e
]e f
[ 
TemplateVisualState 
( 
	GroupName "
=# $'
TemplateLeftDrawerGroupName% @
,@ A
NameB F
=G H%
TemplateLeftOpenStateNameI b
)b c
]c d
[ 
TemplateVisualState 
( 
	GroupName "
=# $&
TemplateTopDrawerGroupName% ?
,? @
NameA E
=F G&
TemplateTopClosedStateNameH b
)b c
]c d
[ 
TemplateVisualState 
( 
	GroupName "
=# $&
TemplateTopDrawerGroupName% ?
,? @
NameA E
=F G$
TemplateTopOpenStateNameH `
)` a
]a b
[ 
TemplateVisualState 
( 
	GroupName "
=# $(
TemplateRightDrawerGroupName% A
,A B
NameC G
=H I(
TemplateRightClosedStateNameJ f
)f g
]g h
[ 
TemplateVisualState 
( 
	GroupName "
=# $(
TemplateRightDrawerGroupName% A
,A B
NameC G
=H I&
TemplateRightOpenStateNameJ d
)d e
]e f
[ 
TemplateVisualState 
( 
	GroupName "
=# $)
TemplateBottomDrawerGroupName% B
,B C
NameD H
=I J)
TemplateBottomClosedStateNameK h
)h i
]i j
[ 
TemplateVisualState 
( 
	GroupName "
=# $)
TemplateBottomDrawerGroupName% B
,B C
NameD H
=I J'
TemplateBottomOpenStateNameK f
)f g
]g h
[ 
TemplatePart 
( 
Name 
= (
TemplateContentCoverPartName 5
,5 6
Type7 ;
=< =
typeof> D
(D E
FrameworkElementE U
)U V
)V W
]W X
[ 
TemplatePart 
( 
Name 
= &
TemplateLeftDrawerPartName 3
,3 4
Type5 9
=: ;
typeof< B
(B C
FrameworkElementC S
)S T
)T U
]U V
[ 
TemplatePart 
( 
Name 
= %
TemplateTopDrawerPartName 2
,2 3
Type4 8
=9 :
typeof; A
(A B
FrameworkElementB R
)R S
)S T
]T U
[ 
TemplatePart 
( 
Name 
= '
TemplateRightDrawerPartName 4
,4 5
Type6 :
=; <
typeof= C
(C D
FrameworkElementD T
)T U
)U V
]V W
[ 
TemplatePart 
( 
Name 
= (
TemplateBottomDrawerPartName 5
,5 6
Type7 ;
=< =
typeof> D
(D E
FrameworkElementE U
)U V
)V W
]W X
public 

class 

DrawerHost 
: 
ContentControl ,
{ 
public 
const 
string '
TemplateAllDrawersGroupName 7
=8 9
$str: F
;F G
public 
const 
string 0
$TemplateAllDrawersAllClosedStateName @
=A B
$strC N
;N O
public 
const 
string .
"TemplateAllDrawersAnyOpenStateName >
=? @
$strA J
;J K
public   
const   
string   '
TemplateLeftDrawerGroupName   7
=  8 9
$str  : F
;  F G
public!! 
const!! 
string!! '
TemplateLeftClosedStateName!! 7
=!!8 9
$str!!: L
;!!L M
public"" 
const"" 
string"" %
TemplateLeftOpenStateName"" 5
=""6 7
$str""8 H
;""H I
public## 
const## 
string## &
TemplateTopDrawerGroupName## 6
=##7 8
$str##9 D
;##D E
public$$ 
const$$ 
string$$ &
TemplateTopClosedStateName$$ 6
=$$7 8
$str$$9 J
;$$J K
public%% 
const%% 
string%% $
TemplateTopOpenStateName%% 4
=%%5 6
$str%%7 F
;%%F G
public&& 
const&& 
string&& (
TemplateRightDrawerGroupName&& 8
=&&9 :
$str&&; H
;&&H I
public'' 
const'' 
string'' (
TemplateRightClosedStateName'' 8
=''9 :
$str''; N
;''N O
public(( 
const(( 
string(( &
TemplateRightOpenStateName(( 6
=((7 8
$str((9 J
;((J K
public)) 
const)) 
string)) )
TemplateBottomDrawerGroupName)) 9
=)): ;
$str))< J
;))J K
public** 
const** 
string** )
TemplateBottomClosedStateName** 9
=**: ;
$str**< P
;**P Q
public++ 
const++ 
string++ '
TemplateBottomOpenStateName++ 7
=++8 9
$str++: L
;++L M
public-- 
const-- 
string-- (
TemplateContentCoverPartName-- 8
=--9 :
$str--; N
;--N O
public.. 
const.. 
string.. &
TemplateLeftDrawerPartName.. 6
=..7 8
$str..9 J
;..J K
public// 
const// 
string// %
TemplateTopDrawerPartName// 5
=//6 7
$str//8 H
;//H I
public00 
const00 
string00 '
TemplateRightDrawerPartName00 7
=008 9
$str00: L
;00L M
public11 
const11 
string11 (
TemplateBottomDrawerPartName11 8
=119 :
$str11; N
;11N O
public33 
static33 
RoutedCommand33 #
OpenDrawerCommand33$ 5
=336 7
new338 ;
RoutedCommand33< I
(33I J
)33J K
;33K L
public44 
static44 
RoutedCommand44 #
CloseDrawerCommand44$ 6
=447 8
new449 <
RoutedCommand44= J
(44J K
)44K L
;44L M
private66 
FrameworkElement66  (
_templateContentCoverElement66! =
;66= >
private77 
FrameworkElement77  
_leftDrawerElement77! 3
;773 4
private88 
FrameworkElement88  
_topDrawerElement88! 2
;882 3
private99 
FrameworkElement99  
_rightDrawerElement99! 4
;994 5
private:: 
FrameworkElement::   
_bottomDrawerElement::! 5
;::5 6
private<< 
bool<< 
_lockZIndexes<< "
;<<" #
private>> 
readonly>> 
IDictionary>> $
<>>$ %
DependencyProperty>>% 7
,>>7 8!
DependencyPropertyKey>>9 N
>>>N O!
_zIndexPropertyLookup>>P e
=>>f g
new>>h k

Dictionary>>l v
<>>v w
DependencyProperty	>>w â
,
>>â ä#
DependencyPropertyKey
>>ã †
>
>>† °
{?? 	
{@@ $
IsLeftDrawerOpenProperty@@ &
,@@& ''
LeftDrawerZIndexPropertyKey@@( C
}@@D E
,@@E F
{AA #
IsTopDrawerOpenPropertyAA %
,AA% &&
TopDrawerZIndexPropertyKeyAA' A
}AAB C
,AAC D
{BB %
IsRightDrawerOpenPropertyBB '
,BB' ((
RightDrawerZIndexPropertyKeyBB) E
}BBF G
,BBG H
{CC &
IsBottomDrawerOpenPropertyCC (
,CC( ))
BottomDrawerZIndexPropertyKeyCC* G
}CCH I
}DD 	
;DD	 

staticFF 

DrawerHostFF 
(FF 
)FF 
{GG 	#
DefaultStyleKeyPropertyHH #
.HH# $
OverrideMetadataHH$ 4
(HH4 5
typeofHH5 ;
(HH; <

DrawerHostHH< F
)HHF G
,HHG H
newHHI L%
FrameworkPropertyMetadataHHM f
(HHf g
typeofHHg m
(HHm n

DrawerHostHHn x
)HHx y
)HHy z
)HHz {
;HH{ |
}II 	
publicKK 

DrawerHostKK 
(KK 
)KK 
{LL 	
CommandBindingsMM 
.MM 
AddMM 
(MM  
newMM  #
CommandBindingMM$ 2
(MM2 3
OpenDrawerCommandMM3 D
,MMD E
OpenDrawerHandlerMMF W
)MMW X
)MMX Y
;MMY Z
CommandBindingsNN 
.NN 
AddNN 
(NN  
newNN  #
CommandBindingNN$ 2
(NN2 3
CloseDrawerCommandNN3 E
,NNE F
CloseDrawerHandlerNNG Y
)NNY Z
)NNZ [
;NN[ \
}OO 	
publicSS 
staticSS 
readonlySS 
DependencyPropertySS 1$
TopDrawerContentPropertySS2 J
=SSK L
DependencyPropertySSM _
.SS_ `
RegisterSS` h
(SSh i
nameofTT 
(TT 
TopDrawerContentTT #
)TT# $
,TT$ %
typeofTT& ,
(TT, -
objectTT- 3
)TT3 4
,TT4 5
typeofTT6 <
(TT< =

DrawerHostTT= G
)TTG H
,TTH I
newTTJ M
PropertyMetadataTTN ^
(TT^ _
defaultTT_ f
(TTf g
objectTTg m
)TTm n
)TTn o
)TTo p
;TTp q
publicVV 
objectVV 
TopDrawerContentVV &
{WW 	
getXX 
{XX 
returnXX 
(XX 
objectXX  
)XX  !
GetValueXX! )
(XX) *$
TopDrawerContentPropertyXX* B
)XXB C
;XXC D
}XXE F
setYY 
{YY 
SetValueYY 
(YY $
TopDrawerContentPropertyYY 3
,YY3 4
valueYY5 :
)YY: ;
;YY; <
}YY= >
}ZZ 	
public\\ 
static\\ 
readonly\\ 
DependencyProperty\\ 1,
 TopDrawerContentTemplateProperty\\2 R
=\\S T
DependencyProperty\\U g
.\\g h
Register\\h p
(\\p q
nameof]] 
(]] $
TopDrawerContentTemplate]] +
)]]+ ,
,]], -
typeof]]. 4
(]]4 5
DataTemplate]]5 A
)]]A B
,]]B C
typeof]]D J
(]]J K

DrawerHost]]K U
)]]U V
,]]V W
new]]X [
PropertyMetadata]]\ l
(]]l m
default]]m t
(]]t u
DataTemplate	]]u Å
)
]]Å Ç
)
]]Ç É
)
]]É Ñ
;
]]Ñ Ö
public__ 
DataTemplate__ $
TopDrawerContentTemplate__ 4
{`` 	
getaa 
{aa 
returnaa 
(aa 
DataTemplateaa &
)aa& '
GetValueaa' /
(aa/ 0,
 TopDrawerContentTemplatePropertyaa0 P
)aaP Q
;aaQ R
}aaS T
setbb 
{bb 
SetValuebb 
(bb ,
 TopDrawerContentTemplatePropertybb ;
,bb; <
valuebb= B
)bbB C
;bbC D
}bbE F
}cc 	
publicee 
staticee 
readonlyee 
DependencyPropertyee 14
(TopDrawerContentTemplateSelectorPropertyee2 Z
=ee[ \
DependencyPropertyee] o
.eeo p
Registereep x
(eex y
nameofff 
(ff ,
 TopDrawerContentTemplateSelectorff 3
)ff3 4
,ff4 5
typeofff6 <
(ff< = 
DataTemplateSelectorff= Q
)ffQ R
,ffR S
typeofffT Z
(ffZ [

DrawerHostff[ e
)ffe f
,fff g
newffh k
PropertyMetadataffl |
(ff| }
default	ff} Ñ
(
ffÑ Ö"
DataTemplateSelector
ffÖ ô
)
ffô ö
)
ffö õ
)
ffõ ú
;
ffú ù
publichh  
DataTemplateSelectorhh #,
 TopDrawerContentTemplateSelectorhh$ D
{ii 	
getjj 
{jj 
returnjj 
(jj  
DataTemplateSelectorjj .
)jj. /
GetValuejj/ 7
(jj7 84
(TopDrawerContentTemplateSelectorPropertyjj8 `
)jj` a
;jja b
}jjc d
setkk 
{kk 
SetValuekk 
(kk 4
(TopDrawerContentTemplateSelectorPropertykk C
,kkC D
valuekkE J
)kkJ K
;kkK L
}kkM N
}ll 	
publicnn 
staticnn 
readonlynn 
DependencyPropertynn 10
$TopDrawerContentStringFormatPropertynn2 V
=nnW X
DependencyPropertynnY k
.nnk l
Registernnl t
(nnt u
nameofoo 
(oo (
TopDrawerContentStringFormatoo /
)oo/ 0
,oo0 1
typeofoo2 8
(oo8 9
stringoo9 ?
)oo? @
,oo@ A
typeofooB H
(ooH I

DrawerHostooI S
)ooS T
,ooT U
newooV Y
PropertyMetadataooZ j
(ooj k
defaultook r
(oor s
stringoos y
)ooy z
)ooz {
)oo{ |
;oo| }
publicqq 
stringqq (
TopDrawerContentStringFormatqq 2
{rr 	
getss 
{ss 
returnss 
(ss 
stringss  
)ss  !
GetValuess! )
(ss) *0
$TopDrawerContentStringFormatPropertyss* N
)ssN O
;ssO P
}ssQ R
settt 
{tt 
SetValuett 
(tt 0
$TopDrawerContentStringFormatPropertytt ?
,tt? @
valuettA F
)ttF G
;ttG H
}ttI J
}uu 	
publicww 
staticww 
readonlyww 
DependencyPropertyww 1'
TopDrawerBackgroundPropertyww2 M
=wwN O
DependencyPropertywwP b
.wwb c
Registerwwc k
(wwk l
nameofxx 
(xx 
TopDrawerBackgroundxx &
)xx& '
,xx' (
typeofxx) /
(xx/ 0
Brushxx0 5
)xx5 6
,xx6 7
typeofxx8 >
(xx> ?

DrawerHostxx? I
)xxI J
,xxJ K
newxxL O
PropertyMetadataxxP `
(xx` a
defaultxxa h
(xxh i
Brushxxi n
)xxn o
)xxo p
)xxp q
;xxq r
publiczz 
Brushzz 
TopDrawerBackgroundzz (
{{{ 	
get|| 
{|| 
return|| 
(|| 
Brush|| 
)||  
GetValue||  (
(||( )'
TopDrawerBackgroundProperty||) D
)||D E
;||E F
}||G H
set}} 
{}} 
SetValue}} 
(}} '
TopDrawerBackgroundProperty}} 6
,}}6 7
value}}8 =
)}}= >
;}}> ?
}}}@ A
}~~ 	
public
ÄÄ 
static
ÄÄ 
readonly
ÄÄ  
DependencyProperty
ÄÄ 1%
IsTopDrawerOpenProperty
ÄÄ2 I
=
ÄÄJ K 
DependencyProperty
ÄÄL ^
.
ÄÄ^ _
Register
ÄÄ_ g
(
ÄÄg h
nameof
ÅÅ 
(
ÅÅ 
IsTopDrawerOpen
ÅÅ "
)
ÅÅ" #
,
ÅÅ# $
typeof
ÅÅ% +
(
ÅÅ+ ,
bool
ÅÅ, 0
)
ÅÅ0 1
,
ÅÅ1 2
typeof
ÅÅ3 9
(
ÅÅ9 :

DrawerHost
ÅÅ: D
)
ÅÅD E
,
ÅÅE F
new
ÅÅG J'
FrameworkPropertyMetadata
ÅÅK d
(
ÅÅd e
default
ÅÅe l
(
ÅÅl m
bool
ÅÅm q
)
ÅÅq r
,
ÅÅr s/
 FrameworkPropertyMetadataOptionsÅÅt î
.ÅÅî ï$
BindsTwoWayByDefaultÅÅï ©
,ÅÅ© ™3
#IsDrawerOpenPropertyChangedCallbackÅÅ´ Œ
)ÅÅŒ œ
)ÅÅœ –
;ÅÅ– —
public
ÉÉ 
bool
ÉÉ 
IsTopDrawerOpen
ÉÉ #
{
ÑÑ 	
get
ÖÖ 
{
ÖÖ 
return
ÖÖ 
(
ÖÖ 
bool
ÖÖ 
)
ÖÖ 
GetValue
ÖÖ '
(
ÖÖ' (%
IsTopDrawerOpenProperty
ÖÖ( ?
)
ÖÖ? @
;
ÖÖ@ A
}
ÖÖB C
set
ÜÜ 
{
ÜÜ 
SetValue
ÜÜ 
(
ÜÜ %
IsTopDrawerOpenProperty
ÜÜ 2
,
ÜÜ2 3
value
ÜÜ4 9
)
ÜÜ9 :
;
ÜÜ: ;
}
ÜÜ< =
}
áá 	
private
ââ 
static
ââ 
readonly
ââ #
DependencyPropertyKey
ââ  5(
TopDrawerZIndexPropertyKey
ââ6 P
=
ââQ R 
DependencyProperty
ää$ 6
.
ää6 7
RegisterReadOnly
ää7 G
(
ääG H
$str
ãã$ 5
,
ãã5 6
typeof
ãã7 =
(
ãã= >
int
ãã> A
)
ããA B
,
ããB C
typeof
ããD J
(
ããJ K

DrawerHost
ããK U
)
ããU V
,
ããV W
new
åå$ '
PropertyMetadata
åå( 8
(
åå8 9
$num
åå9 :
)
åå: ;
)
åå; <
;
åå< =
public
éé 
static
éé 
readonly
éé  
DependencyProperty
éé 1%
TopDrawerZIndexProperty
éé2 I
=
ééJ K(
TopDrawerZIndexPropertyKey
ééL f
.
ééf g 
DependencyProperty
éég y
;
ééy z
public
êê 
int
êê 
TopDrawerZIndex
êê "
{
ëë 	
get
íí 
{
íí 
return
íí 
(
íí 
int
íí 
)
íí 
GetValue
íí &
(
íí& '%
TopDrawerZIndexProperty
íí' >
)
íí> ?
;
íí? @
}
ííA B
private
ìì 
set
ìì 
{
ìì 
SetValue
ìì "
(
ìì" #(
TopDrawerZIndexPropertyKey
ìì# =
,
ìì= >
value
ìì? D
)
ììD E
;
ììE F
}
ììG H
}
îî 	
public
öö 
static
öö 
readonly
öö  
DependencyProperty
öö 1'
LeftDrawerContentProperty
öö2 K
=
ööL M 
DependencyProperty
ööN `
.
öö` a
Register
ööa i
(
ööi j
nameof
õõ 
(
õõ 
LeftDrawerContent
õõ $
)
õõ$ %
,
õõ% &
typeof
õõ' -
(
õõ. /
object
õõ/ 5
)
õõ5 6
,
õõ6 7
typeof
õõ8 >
(
õõ? @

DrawerHost
õõ@ J
)
õõJ K
,
õõK L
new
õõM P
PropertyMetadata
õõQ a
(
õõa b
default
õõb i
(
õõi j
object
õõj p
)
õõp q
)
õõq r
)
õõr s
;
õõs t
public
ùù 
object
ùù 
LeftDrawerContent
ùù '
{
ûû 	
get
üü 
{
üü 
return
üü 
(
üü 
object
üü  
)
üü  !
GetValue
üü" *
(
üü* +'
LeftDrawerContentProperty
üü+ D
)
üüD E
;
üüE F
}
üüG H
set
†† 
{
†† 
SetValue
†† 
(
†† '
LeftDrawerContentProperty
†† 4
,
††4 5
value
††6 ;
)
††; <
;
††< =
}
††> ?
}
°° 	
public
££ 
static
££ 
readonly
££  
DependencyProperty
££ 1/
!LeftDrawerContentTemplateProperty
££2 S
=
££T U 
DependencyProperty
££V h
.
££h i
Register
££i q
(
££q r
nameof
§§ 
(
§§ '
LeftDrawerContentTemplate
§§ ,
)
§§, -
,
§§- .
typeof
§§/ 5
(
§§6 7
DataTemplate
§§7 C
)
§§C D
,
§§D E
typeof
§§F L
(
§§M N

DrawerHost
§§N X
)
§§X Y
,
§§Y Z
new
§§[ ^
PropertyMetadata
§§_ o
(
§§o p
default
§§p w
(
§§w x
DataTemplate§§x Ñ
)§§Ñ Ö
)§§Ö Ü
)§§Ü á
;§§á à
public
¶¶ 
DataTemplate
¶¶ '
LeftDrawerContentTemplate
¶¶ 5
{
ßß 	
get
®® 
{
®® 
return
®® 
(
®® 
DataTemplate
®® &
)
®®& '
GetValue
®®( 0
(
®®0 1/
!LeftDrawerContentTemplateProperty
®®1 R
)
®®R S
;
®®S T
}
®®U V
set
©© 
{
©© 
SetValue
©© 
(
©© /
!LeftDrawerContentTemplateProperty
©© <
,
©©< =
value
©©> C
)
©©C D
;
©©D E
}
©©F G
}
™™ 	
public
¨¨ 
static
¨¨ 
readonly
¨¨  
DependencyProperty
¨¨ 17
)LeftDrawerContentTemplateSelectorProperty
¨¨2 [
=
¨¨\ ] 
DependencyProperty
¨¨^ p
.
¨¨p q
Register
¨¨q y
(
¨¨y z
nameof
≠≠ 
(
≠≠ /
!LeftDrawerContentTemplateSelector
≠≠ 4
)
≠≠4 5
,
≠≠5 6
typeof
≠≠7 =
(
≠≠> ?"
DataTemplateSelector
≠≠? S
)
≠≠S T
,
≠≠T U
typeof
≠≠V \
(
≠≠] ^

DrawerHost
≠≠^ h
)
≠≠h i
,
≠≠i j
new
≠≠k n
PropertyMetadata
≠≠o 
(≠≠ Ä
default≠≠Ä á
(≠≠á à$
DataTemplateSelector≠≠à ú
)≠≠ú ù
)≠≠ù û
)≠≠û ü
;≠≠ü †
public
ØØ "
DataTemplateSelector
ØØ #/
!LeftDrawerContentTemplateSelector
ØØ$ E
{
∞∞ 	
get
±± 
{
±± 
return
±± 
(
±± "
DataTemplateSelector
±± .
)
±±. /
GetValue
±±0 8
(
±±8 97
)LeftDrawerContentTemplateSelectorProperty
±±9 b
)
±±b c
;
±±c d
}
±±e f
set
≤≤ 
{
≤≤ 
SetValue
≤≤ 
(
≤≤ 7
)LeftDrawerContentTemplateSelectorProperty
≤≤ D
,
≤≤D E
value
≤≤F K
)
≤≤K L
;
≤≤L M
}
≤≤N O
}
≥≥ 	
public
µµ 
static
µµ 
readonly
µµ  
DependencyProperty
µµ 13
%LeftDrawerContentStringFormatProperty
µµ2 W
=
µµX Y 
DependencyProperty
µµZ l
.
µµl m
Register
µµm u
(
µµu v
nameof
∂∂ 
(
∂∂ +
LeftDrawerContentStringFormat
∂∂ 0
)
∂∂0 1
,
∂∂1 2
typeof
∂∂3 9
(
∂∂: ;
string
∂∂; A
)
∂∂A B
,
∂∂B C
typeof
∂∂D J
(
∂∂K L

DrawerHost
∂∂L V
)
∂∂V W
,
∂∂W X
new
∂∂Y \
PropertyMetadata
∂∂] m
(
∂∂m n
default
∂∂n u
(
∂∂u v
string
∂∂v |
)
∂∂| }
)
∂∂} ~
)
∂∂~ 
;∂∂ Ä
public
∏∏ 
string
∏∏ +
LeftDrawerContentStringFormat
∏∏ 3
{
ππ 	
get
∫∫ 
{
∫∫ 
return
∫∫ 
(
∫∫ 
string
∫∫  
)
∫∫  !
GetValue
∫∫" *
(
∫∫* +3
%LeftDrawerContentStringFormatProperty
∫∫+ P
)
∫∫P Q
;
∫∫Q R
}
∫∫S T
set
ªª 
{
ªª 
SetValue
ªª 
(
ªª 3
%LeftDrawerContentStringFormatProperty
ªª @
,
ªª@ A
value
ªªB G
)
ªªG H
;
ªªH I
}
ªªJ K
}
ºº 	
public
ææ 
static
ææ 
readonly
ææ  
DependencyProperty
ææ 1*
LeftDrawerBackgroundProperty
ææ2 N
=
ææO P 
DependencyProperty
ææQ c
.
ææc d
Register
ææd l
(
ææl m
nameof
øø 
(
øø "
LeftDrawerBackground
øø '
)
øø' (
,
øø( )
typeof
øø* 0
(
øø1 2
Brush
øø2 7
)
øø7 8
,
øø8 9
typeof
øø: @
(
øøA B

DrawerHost
øøB L
)
øøL M
,
øøM N
new
øøO R
PropertyMetadata
øøS c
(
øøc d
default
øød k
(
øøk l
Brush
øøl q
)
øøq r
)
øør s
)
øøs t
;
øøt u
public
¡¡ 
Brush
¡¡ "
LeftDrawerBackground
¡¡ )
{
¬¬ 	
get
√√ 
{
√√ 
return
√√ 
(
√√ 
Brush
√√ 
)
√√  
GetValue
√√! )
(
√√) **
LeftDrawerBackgroundProperty
√√* F
)
√√F G
;
√√G H
}
√√I J
set
ƒƒ 
{
ƒƒ 
SetValue
ƒƒ 
(
ƒƒ *
LeftDrawerBackgroundProperty
ƒƒ 7
,
ƒƒ7 8
value
ƒƒ9 >
)
ƒƒ> ?
;
ƒƒ? @
}
ƒƒA B
}
≈≈ 	
public
«« 
static
«« 
readonly
««  
DependencyProperty
«« 1&
IsLeftDrawerOpenProperty
««2 J
=
««K L 
DependencyProperty
««M _
.
««_ `
Register
««` h
(
««h i
nameof
»» 
(
»» 
IsLeftDrawerOpen
»» #
)
»»# $
,
»»$ %
typeof
»»& ,
(
»»- .
bool
»». 2
)
»»2 3
,
»»3 4
typeof
»»5 ;
(
»»< =

DrawerHost
»»= G
)
»»G H
,
»»H I
new
»»J M'
FrameworkPropertyMetadata
»»N g
(
»»g h
default
»»h o
(
»»o p
bool
»»p t
)
»»t u
,
»»u v/
 FrameworkPropertyMetadataOptions»»w ó
.»»ó ò$
BindsTwoWayByDefault»»ò ¨
,»»¨ ≠3
#IsDrawerOpenPropertyChangedCallback»»Æ —
)»»— “
)»»“ ”
;»»” ‘
public
   
bool
   
IsLeftDrawerOpen
   $
{
ÀÀ 	
get
ÃÃ 
{
ÃÃ 
return
ÃÃ 
(
ÃÃ 
bool
ÃÃ 
)
ÃÃ 
GetValue
ÃÃ  (
(
ÃÃ( )&
IsLeftDrawerOpenProperty
ÃÃ) A
)
ÃÃA B
;
ÃÃB C
}
ÃÃD E
set
ÕÕ 
{
ÕÕ 
SetValue
ÕÕ 
(
ÕÕ &
IsLeftDrawerOpenProperty
ÕÕ 3
,
ÕÕ3 4
value
ÕÕ5 :
)
ÕÕ: ;
;
ÕÕ; <
}
ÕÕ= >
}
ŒŒ 	
private
–– 
static
–– 
readonly
–– #
DependencyPropertyKey
––  5)
LeftDrawerZIndexPropertyKey
––6 Q
=
––R S 
DependencyProperty
——, >
.
——> ?
RegisterReadOnly
——? O
(
——O P
$str
““, >
,
““> ?
typeof
““@ F
(
““F G
int
““G J
)
““J K
,
““K L
typeof
““M S
(
““S T

DrawerHost
““T ^
)
““^ _
,
““_ `
new
””, /
PropertyMetadata
””0 @
(
””@ A
$num
””A B
)
””B C
)
””C D
;
””D E
public
’’ 
static
’’ 
readonly
’’  
DependencyProperty
’’ 1&
LeftDrawerZIndexProperty
’’2 J
=
’’K L)
LeftDrawerZIndexPropertyKey
’’M h
.
’’h i 
DependencyProperty
’’i {
;
’’{ |
public
◊◊ 
int
◊◊ 
LeftDrawerZIndex
◊◊ #
{
ÿÿ 	
get
ŸŸ 
{
ŸŸ 
return
ŸŸ 
(
ŸŸ 
int
ŸŸ 
)
ŸŸ 
GetValue
ŸŸ &
(
ŸŸ& '&
LeftDrawerZIndexProperty
ŸŸ' ?
)
ŸŸ? @
;
ŸŸ@ A
}
ŸŸB C
private
⁄⁄ 
set
⁄⁄ 
{
⁄⁄ 
SetValue
⁄⁄ "
(
⁄⁄" #)
LeftDrawerZIndexPropertyKey
⁄⁄# >
,
⁄⁄> ?
value
⁄⁄@ E
)
⁄⁄E F
;
⁄⁄F G
}
⁄⁄H I
}
€€ 	
public
·· 
static
·· 
readonly
··  
DependencyProperty
·· 1(
RightDrawerContentProperty
··2 L
=
··M N 
DependencyProperty
··O a
.
··a b
Register
··b j
(
··j k
nameof
‚‚ 
(
‚‚  
RightDrawerContent
‚‚ %
)
‚‚% &
,
‚‚& '
typeof
‚‚( .
(
‚‚. /
object
‚‚/ 5
)
‚‚5 6
,
‚‚6 7
typeof
‚‚8 >
(
‚‚> ?

DrawerHost
‚‚? I
)
‚‚I J
,
‚‚J K
new
‚‚L O
PropertyMetadata
‚‚P `
(
‚‚` a
default
‚‚a h
(
‚‚h i
object
‚‚i o
)
‚‚o p
)
‚‚p q
)
‚‚q r
;
‚‚r s
public
‰‰ 
object
‰‰  
RightDrawerContent
‰‰ (
{
ÂÂ 	
get
ÊÊ 
{
ÊÊ 
return
ÊÊ 
(
ÊÊ 
object
ÊÊ  
)
ÊÊ  !
GetValue
ÊÊ! )
(
ÊÊ) *(
RightDrawerContentProperty
ÊÊ* D
)
ÊÊD E
;
ÊÊE F
}
ÊÊG H
set
ÁÁ 
{
ÁÁ 
SetValue
ÁÁ 
(
ÁÁ (
RightDrawerContentProperty
ÁÁ 5
,
ÁÁ5 6
value
ÁÁ7 <
)
ÁÁ< =
;
ÁÁ= >
}
ÁÁ? @
}
ËË 	
public
ÍÍ 
static
ÍÍ 
readonly
ÍÍ  
DependencyProperty
ÍÍ 10
"RightDrawerContentTemplateProperty
ÍÍ2 T
=
ÍÍU V 
DependencyProperty
ÍÍW i
.
ÍÍi j
Register
ÍÍj r
(
ÍÍr s
nameof
ÎÎ 
(
ÎÎ (
RightDrawerContentTemplate
ÎÎ -
)
ÎÎ- .
,
ÎÎ. /
typeof
ÎÎ0 6
(
ÎÎ6 7
DataTemplate
ÎÎ7 C
)
ÎÎC D
,
ÎÎD E
typeof
ÎÎF L
(
ÎÎL M

DrawerHost
ÎÎM W
)
ÎÎW X
,
ÎÎX Y
new
ÎÎZ ]
PropertyMetadata
ÎÎ^ n
(
ÎÎn o
default
ÎÎo v
(
ÎÎv w
DataTemplateÎÎw É
)ÎÎÉ Ñ
)ÎÎÑ Ö
)ÎÎÖ Ü
;ÎÎÜ á
public
ÌÌ 
DataTemplate
ÌÌ (
RightDrawerContentTemplate
ÌÌ 6
{
ÓÓ 	
get
ÔÔ 
{
ÔÔ 
return
ÔÔ 
(
ÔÔ 
DataTemplate
ÔÔ &
)
ÔÔ& '
GetValue
ÔÔ' /
(
ÔÔ/ 00
"RightDrawerContentTemplateProperty
ÔÔ0 R
)
ÔÔR S
;
ÔÔS T
}
ÔÔU V
set
 
{
 
SetValue
 
(
 0
"RightDrawerContentTemplateProperty
 =
,
= >
value
? D
)
D E
;
E F
}
G H
}
ÒÒ 	
public
ÛÛ 
static
ÛÛ 
readonly
ÛÛ  
DependencyProperty
ÛÛ 18
*RightDrawerContentTemplateSelectorProperty
ÛÛ2 \
=
ÛÛ] ^ 
DependencyProperty
ÛÛ_ q
.
ÛÛq r
Register
ÛÛr z
(
ÛÛz {
nameof
ÙÙ 
(
ÙÙ 0
"RightDrawerContentTemplateSelector
ÙÙ 5
)
ÙÙ5 6
,
ÙÙ6 7
typeof
ÙÙ8 >
(
ÙÙ> ?"
DataTemplateSelector
ÙÙ? S
)
ÙÙS T
,
ÙÙT U
typeof
ÙÙV \
(
ÙÙ\ ]

DrawerHost
ÙÙ] g
)
ÙÙg h
,
ÙÙh i
new
ÙÙj m
PropertyMetadata
ÙÙn ~
(
ÙÙ~ 
defaultÙÙ Ü
(ÙÙÜ á$
DataTemplateSelectorÙÙá õ
)ÙÙõ ú
)ÙÙú ù
)ÙÙù û
;ÙÙû ü
public
ˆˆ "
DataTemplateSelector
ˆˆ #0
"RightDrawerContentTemplateSelector
ˆˆ$ F
{
˜˜ 	
get
¯¯ 
{
¯¯ 
return
¯¯ 
(
¯¯ "
DataTemplateSelector
¯¯ .
)
¯¯. /
GetValue
¯¯/ 7
(
¯¯7 88
*RightDrawerContentTemplateSelectorProperty
¯¯8 b
)
¯¯b c
;
¯¯c d
}
¯¯e f
set
˘˘ 
{
˘˘ 
SetValue
˘˘ 
(
˘˘ 8
*RightDrawerContentTemplateSelectorProperty
˘˘ E
,
˘˘E F
value
˘˘G L
)
˘˘L M
;
˘˘M N
}
˘˘O P
}
˙˙ 	
public
¸¸ 
static
¸¸ 
readonly
¸¸  
DependencyProperty
¸¸ 14
&RightDrawerContentStringFormatProperty
¸¸2 X
=
¸¸Y Z 
DependencyProperty
¸¸[ m
.
¸¸m n
Register
¸¸n v
(
¸¸v w
nameof
˝˝ 
(
˝˝ ,
RightDrawerContentStringFormat
˝˝ 1
)
˝˝1 2
,
˝˝2 3
typeof
˝˝4 :
(
˝˝: ;
string
˝˝; A
)
˝˝A B
,
˝˝B C
typeof
˝˝D J
(
˝˝J K

DrawerHost
˝˝K U
)
˝˝U V
,
˝˝V W
new
˝˝X [
PropertyMetadata
˝˝\ l
(
˝˝l m
default
˝˝m t
(
˝˝t u
string
˝˝u {
)
˝˝{ |
)
˝˝| }
)
˝˝} ~
;
˝˝~ 
public
ˇˇ 
string
ˇˇ ,
RightDrawerContentStringFormat
ˇˇ 4
{
ÄÄ 	
get
ÅÅ 
{
ÅÅ 
return
ÅÅ 
(
ÅÅ 
string
ÅÅ  
)
ÅÅ  !
GetValue
ÅÅ! )
(
ÅÅ) *4
&RightDrawerContentStringFormatProperty
ÅÅ* P
)
ÅÅP Q
;
ÅÅQ R
}
ÅÅS T
set
ÇÇ 
{
ÇÇ 
SetValue
ÇÇ 
(
ÇÇ 4
&RightDrawerContentStringFormatProperty
ÇÇ A
,
ÇÇA B
value
ÇÇC H
)
ÇÇH I
;
ÇÇI J
}
ÇÇK L
}
ÉÉ 	
public
ÖÖ 
static
ÖÖ 
readonly
ÖÖ  
DependencyProperty
ÖÖ 1+
RightDrawerBackgroundProperty
ÖÖ2 O
=
ÖÖP Q 
DependencyProperty
ÖÖR d
.
ÖÖd e
Register
ÖÖe m
(
ÖÖm n
nameof
ÜÜ 
(
ÜÜ #
RightDrawerBackground
ÜÜ (
)
ÜÜ( )
,
ÜÜ) *
typeof
ÜÜ+ 1
(
ÜÜ1 2
Brush
ÜÜ2 7
)
ÜÜ7 8
,
ÜÜ8 9
typeof
ÜÜ: @
(
ÜÜ@ A

DrawerHost
ÜÜA K
)
ÜÜK L
,
ÜÜL M
new
ÜÜN Q
PropertyMetadata
ÜÜR b
(
ÜÜb c
default
ÜÜc j
(
ÜÜj k
Brush
ÜÜk p
)
ÜÜp q
)
ÜÜq r
)
ÜÜr s
;
ÜÜs t
public
àà 
Brush
àà #
RightDrawerBackground
àà *
{
ââ 	
get
ää 
{
ää 
return
ää 
(
ää 
Brush
ää 
)
ää  
GetValue
ää  (
(
ää( )+
RightDrawerBackgroundProperty
ää) F
)
ääF G
;
ääG H
}
ääI J
set
ãã 
{
ãã 
SetValue
ãã 
(
ãã +
RightDrawerBackgroundProperty
ãã 8
,
ãã8 9
value
ãã: ?
)
ãã? @
;
ãã@ A
}
ããB C
}
åå 	
public
éé 
static
éé 
readonly
éé  
DependencyProperty
éé 1'
IsRightDrawerOpenProperty
éé2 K
=
ééL M 
DependencyProperty
ééN `
.
éé` a
Register
ééa i
(
ééi j
nameof
èè 
(
èè 
IsRightDrawerOpen
èè $
)
èè$ %
,
èè% &
typeof
èè' -
(
èè- .
bool
èè. 2
)
èè2 3
,
èè3 4
typeof
èè5 ;
(
èè; <

DrawerHost
èè< F
)
èèF G
,
èèG H
new
èèI L'
FrameworkPropertyMetadata
èèM f
(
èèf g
default
èèg n
(
èèn o
bool
èèo s
)
èès t
,
èèt u/
 FrameworkPropertyMetadataOptionsèèv ñ
.èèñ ó$
BindsTwoWayByDefaultèèó ´
,èè´ ¨3
#IsDrawerOpenPropertyChangedCallbackèè≠ –
)èè– —
)èè— “
;èè“ ”
public
ëë 
bool
ëë 
IsRightDrawerOpen
ëë %
{
íí 	
get
ìì 
{
ìì 
return
ìì 
(
ìì 
bool
ìì 
)
ìì 
GetValue
ìì '
(
ìì' ('
IsRightDrawerOpenProperty
ìì( A
)
ììA B
;
ììB C
}
ììD E
set
îî 
{
îî 
SetValue
îî 
(
îî '
IsRightDrawerOpenProperty
îî 4
,
îî4 5
value
îî6 ;
)
îî; <
;
îî< =
}
îî> ?
}
ïï 	
private
óó 
static
óó 
readonly
óó #
DependencyPropertyKey
óó  5*
RightDrawerZIndexPropertyKey
óó6 R
=
óóS T 
DependencyProperty
òò$ 6
.
òò6 7
RegisterReadOnly
òò7 G
(
òòG H
$str
ôô$ 7
,
ôô7 8
typeof
ôô9 ?
(
ôô? @
int
ôô@ C
)
ôôC D
,
ôôD E
typeof
ôôF L
(
ôôL M

DrawerHost
ôôM W
)
ôôW X
,
ôôX Y
new
öö$ '
PropertyMetadata
öö( 8
(
öö8 9
$num
öö9 :
)
öö: ;
)
öö; <
;
öö< =
public
úú 
static
úú 
readonly
úú  
DependencyProperty
úú 1'
RightDrawerZIndexProperty
úú2 K
=
úúL M*
RightDrawerZIndexPropertyKey
úúN j
.
úúj k 
DependencyProperty
úúk }
;
úú} ~
public
ûû 
int
ûû 
RightDrawerZIndex
ûû $
{
üü 	
get
†† 
{
†† 
return
†† 
(
†† 
int
†† 
)
†† 
GetValue
†† &
(
††& ''
RightDrawerZIndexProperty
††' @
)
††@ A
;
††A B
}
††C D
private
°° 
set
°° 
{
°° 
SetValue
°° "
(
°°" #*
RightDrawerZIndexPropertyKey
°°# ?
,
°°? @
value
°°A F
)
°°F G
;
°°G H
}
°°I J
}
¢¢ 	
public
®® 
static
®® 
readonly
®®  
DependencyProperty
®® 1)
BottomDrawerContentProperty
®®2 M
=
®®N O 
DependencyProperty
®®P b
.
®®b c
Register
®®c k
(
®®k l
nameof
©© 
(
©© !
BottomDrawerContent
©© &
)
©©& '
,
©©' (
typeof
©©) /
(
©©/ 0
object
©©0 6
)
©©6 7
,
©©7 8
typeof
©©9 ?
(
©©? @

DrawerHost
©©@ J
)
©©J K
,
©©K L
new
©©M P
PropertyMetadata
©©Q a
(
©©a b
default
©©b i
(
©©i j
object
©©j p
)
©©p q
)
©©q r
)
©©r s
;
©©s t
public
´´ 
object
´´ !
BottomDrawerContent
´´ )
{
¨¨ 	
get
≠≠ 
{
≠≠ 
return
≠≠ 
(
≠≠ 
object
≠≠  
)
≠≠  !
GetValue
≠≠! )
(
≠≠) *)
BottomDrawerContentProperty
≠≠* E
)
≠≠E F
;
≠≠F G
}
≠≠H I
set
ÆÆ 
{
ÆÆ 
SetValue
ÆÆ 
(
ÆÆ )
BottomDrawerContentProperty
ÆÆ 6
,
ÆÆ6 7
value
ÆÆ8 =
)
ÆÆ= >
;
ÆÆ> ?
}
ÆÆ@ A
}
ØØ 	
public
±± 
static
±± 
readonly
±±  
DependencyProperty
±± 11
#BottomDrawerContentTemplateProperty
±±2 U
=
±±V W 
DependencyProperty
±±X j
.
±±j k
Register
±±k s
(
±±s t
nameof
≤≤ 
(
≤≤ )
BottomDrawerContentTemplate
≤≤ .
)
≤≤. /
,
≤≤/ 0
typeof
≤≤1 7
(
≤≤7 8
DataTemplate
≤≤8 D
)
≤≤D E
,
≤≤E F
typeof
≤≤G M
(
≤≤M N

DrawerHost
≤≤N X
)
≤≤X Y
,
≤≤Y Z
new
≤≤[ ^
PropertyMetadata
≤≤_ o
(
≤≤o p
default
≤≤p w
(
≤≤w x
DataTemplate≤≤x Ñ
)≤≤Ñ Ö
)≤≤Ö Ü
)≤≤Ü á
;≤≤á à
public
¥¥ 
DataTemplate
¥¥ )
BottomDrawerContentTemplate
¥¥ 7
{
µµ 	
get
∂∂ 
{
∂∂ 
return
∂∂ 
(
∂∂ 
DataTemplate
∂∂ &
)
∂∂& '
GetValue
∂∂' /
(
∂∂/ 01
#BottomDrawerContentTemplateProperty
∂∂0 S
)
∂∂S T
;
∂∂T U
}
∂∂V W
set
∑∑ 
{
∑∑ 
SetValue
∑∑ 
(
∑∑ 1
#BottomDrawerContentTemplateProperty
∑∑ >
,
∑∑> ?
value
∑∑@ E
)
∑∑E F
;
∑∑F G
}
∑∑H I
}
∏∏ 	
public
∫∫ 
static
∫∫ 
readonly
∫∫  
DependencyProperty
∫∫ 19
+BottomDrawerContentTemplateSelectorProperty
∫∫2 ]
=
∫∫^ _ 
DependencyProperty
∫∫` r
.
∫∫r s
Register
∫∫s {
(
∫∫{ |
nameof
ªª 
(
ªª 1
#BottomDrawerContentTemplateSelector
ªª 6
)
ªª6 7
,
ªª7 8
typeof
ªª9 ?
(
ªª? @"
DataTemplateSelector
ªª@ T
)
ªªT U
,
ªªU V
typeof
ªªW ]
(
ªª] ^

DrawerHost
ªª^ h
)
ªªh i
,
ªªi j
new
ªªk n
PropertyMetadata
ªªo 
(ªª Ä
defaultªªÄ á
(ªªá à$
DataTemplateSelectorªªà ú
)ªªú ù
)ªªù û
)ªªû ü
;ªªü †
public
ΩΩ "
DataTemplateSelector
ΩΩ #1
#BottomDrawerContentTemplateSelector
ΩΩ$ G
{
ææ 	
get
øø 
{
øø 
return
øø 
(
øø "
DataTemplateSelector
øø .
)
øø. /
GetValue
øø/ 7
(
øø7 89
+BottomDrawerContentTemplateSelectorProperty
øø8 c
)
øøc d
;
øød e
}
øøf g
set
¿¿ 
{
¿¿ 
SetValue
¿¿ 
(
¿¿ 9
+BottomDrawerContentTemplateSelectorProperty
¿¿ F
,
¿¿F G
value
¿¿H M
)
¿¿M N
;
¿¿N O
}
¿¿P Q
}
¡¡ 	
public
√√ 
static
√√ 
readonly
√√  
DependencyProperty
√√ 15
'BottomDrawerContentStringFormatProperty
√√2 Y
=
√√Z [ 
DependencyProperty
√√\ n
.
√√n o
Register
√√o w
(
√√w x
nameof
ƒƒ 
(
ƒƒ -
BottomDrawerContentStringFormat
ƒƒ 2
)
ƒƒ2 3
,
ƒƒ3 4
typeof
ƒƒ5 ;
(
ƒƒ; <
string
ƒƒ< B
)
ƒƒB C
,
ƒƒC D
typeof
ƒƒE K
(
ƒƒK L

DrawerHost
ƒƒL V
)
ƒƒV W
,
ƒƒW X
new
ƒƒY \
PropertyMetadata
ƒƒ] m
(
ƒƒm n
default
ƒƒn u
(
ƒƒu v
string
ƒƒv |
)
ƒƒ| }
)
ƒƒ} ~
)
ƒƒ~ 
;ƒƒ Ä
public
∆∆ 
string
∆∆ -
BottomDrawerContentStringFormat
∆∆ 5
{
«« 	
get
»» 
{
»» 
return
»» 
(
»» 
string
»»  
)
»»  !
GetValue
»»! )
(
»») *5
'BottomDrawerContentStringFormatProperty
»»* Q
)
»»Q R
;
»»R S
}
»»T U
set
…… 
{
…… 
SetValue
…… 
(
…… 5
'BottomDrawerContentStringFormatProperty
…… B
,
……B C
value
……D I
)
……I J
;
……J K
}
……L M
}
   	
public
ÃÃ 
static
ÃÃ 
readonly
ÃÃ  
DependencyProperty
ÃÃ 1,
BottomDrawerBackgroundProperty
ÃÃ2 P
=
ÃÃQ R 
DependencyProperty
ÃÃS e
.
ÃÃe f
Register
ÃÃf n
(
ÃÃn o
nameof
ÕÕ 
(
ÕÕ $
BottomDrawerBackground
ÕÕ )
)
ÕÕ) *
,
ÕÕ* +
typeof
ÕÕ, 2
(
ÕÕ2 3
Brush
ÕÕ3 8
)
ÕÕ8 9
,
ÕÕ9 :
typeof
ÕÕ; A
(
ÕÕA B

DrawerHost
ÕÕB L
)
ÕÕL M
,
ÕÕM N
new
ÕÕO R
PropertyMetadata
ÕÕS c
(
ÕÕc d
default
ÕÕd k
(
ÕÕk l
Brush
ÕÕl q
)
ÕÕq r
)
ÕÕr s
)
ÕÕs t
;
ÕÕt u
public
œœ 
Brush
œœ $
BottomDrawerBackground
œœ +
{
–– 	
get
—— 
{
—— 
return
—— 
(
—— 
Brush
—— 
)
——  
GetValue
——  (
(
——( ),
BottomDrawerBackgroundProperty
——) G
)
——G H
;
——H I
}
——J K
set
““ 
{
““ 
SetValue
““ 
(
““ ,
BottomDrawerBackgroundProperty
““ 9
,
““9 :
value
““; @
)
““@ A
;
““A B
}
““C D
}
”” 	
public
’’ 
static
’’ 
readonly
’’  
DependencyProperty
’’ 1(
IsBottomDrawerOpenProperty
’’2 L
=
’’M N 
DependencyProperty
’’O a
.
’’a b
Register
’’b j
(
’’j k
nameof
÷÷ 
(
÷÷  
IsBottomDrawerOpen
÷÷ %
)
÷÷% &
,
÷÷& '
typeof
÷÷( .
(
÷÷. /
bool
÷÷/ 3
)
÷÷3 4
,
÷÷4 5
typeof
÷÷6 <
(
÷÷< =

DrawerHost
÷÷= G
)
÷÷G H
,
÷÷H I
new
÷÷J M'
FrameworkPropertyMetadata
÷÷N g
(
÷÷g h
default
÷÷h o
(
÷÷o p
bool
÷÷p t
)
÷÷t u
,
÷÷u v/
 FrameworkPropertyMetadataOptions÷÷w ó
.÷÷ó ò$
BindsTwoWayByDefault÷÷ò ¨
,÷÷¨ ≠3
#IsDrawerOpenPropertyChangedCallback÷÷Æ —
)÷÷— “
)÷÷“ ”
;÷÷” ‘
public
ÿÿ 
bool
ÿÿ  
IsBottomDrawerOpen
ÿÿ &
{
ŸŸ 	
get
⁄⁄ 
{
⁄⁄ 
return
⁄⁄ 
(
⁄⁄ 
bool
⁄⁄ 
)
⁄⁄ 
GetValue
⁄⁄ '
(
⁄⁄' ((
IsBottomDrawerOpenProperty
⁄⁄( B
)
⁄⁄B C
;
⁄⁄C D
}
⁄⁄E F
set
€€ 
{
€€ 
SetValue
€€ 
(
€€ (
IsBottomDrawerOpenProperty
€€ 5
,
€€5 6
value
€€7 <
)
€€< =
;
€€= >
}
€€? @
}
‹‹ 	
private
ﬁﬁ 
static
ﬁﬁ 
readonly
ﬁﬁ #
DependencyPropertyKey
ﬁﬁ  5+
BottomDrawerZIndexPropertyKey
ﬁﬁ6 S
=
ﬁﬁT U 
DependencyProperty
ﬂﬂ$ 6
.
ﬂﬂ6 7
RegisterReadOnly
ﬂﬂ7 G
(
ﬂﬂG H
$str
‡‡$ 8
,
‡‡8 9
typeof
‡‡: @
(
‡‡@ A
int
‡‡A D
)
‡‡D E
,
‡‡E F
typeof
‡‡G M
(
‡‡M N

DrawerHost
‡‡N X
)
‡‡X Y
,
‡‡Y Z
new
··$ '
PropertyMetadata
··( 8
(
··8 9
$num
··9 :
)
··: ;
)
··; <
;
··< =
public
„„ 
static
„„ 
readonly
„„  
DependencyProperty
„„ 1(
BottomDrawerZIndexProperty
„„2 L
=
„„M N+
BottomDrawerZIndexPropertyKey
„„O l
.
„„l m 
DependencyProperty
„„m 
;„„ Ä
public
ÂÂ 
int
ÂÂ  
BottomDrawerZIndex
ÂÂ %
{
ÊÊ 	
get
ÁÁ 
{
ÁÁ 
return
ÁÁ 
(
ÁÁ 
int
ÁÁ 
)
ÁÁ 
GetValue
ÁÁ &
(
ÁÁ& '(
BottomDrawerZIndexProperty
ÁÁ' A
)
ÁÁA B
;
ÁÁB C
}
ÁÁD E
private
ËË 
set
ËË 
{
ËË 
SetValue
ËË "
(
ËË" #+
BottomDrawerZIndexPropertyKey
ËË# @
,
ËË@ A
value
ËËB G
)
ËËG H
;
ËËH I
}
ËËJ K
}
ÈÈ 	
public
ÌÌ 
override
ÌÌ 
void
ÌÌ 
OnApplyTemplate
ÌÌ ,
(
ÌÌ, -
)
ÌÌ- .
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ *
_templateContentCoverElement
ÔÔ ,
!=
ÔÔ- /
null
ÔÔ0 4
)
ÔÔ4 5*
_templateContentCoverElement
 ,
.
, -&
PreviewMouseLeftButtonUp
- E
+=
F HC
5TemplateContentCoverElementOnPreviewMouseLeftButtonUp
I ~
;
~ 

WireDrawer
ÒÒ 
(
ÒÒ  
_leftDrawerElement
ÒÒ )
,
ÒÒ) *
true
ÒÒ+ /
)
ÒÒ/ 0
;
ÒÒ0 1

WireDrawer
ÚÚ 
(
ÚÚ 
_topDrawerElement
ÚÚ (
,
ÚÚ( )
true
ÚÚ* .
)
ÚÚ. /
;
ÚÚ/ 0

WireDrawer
ÛÛ 
(
ÛÛ !
_rightDrawerElement
ÛÛ *
,
ÛÛ* +
true
ÛÛ, 0
)
ÛÛ0 1
;
ÛÛ1 2

WireDrawer
ÙÙ 
(
ÙÙ "
_bottomDrawerElement
ÙÙ +
,
ÙÙ+ ,
true
ÙÙ- 1
)
ÙÙ1 2
;
ÙÙ2 3
base
ˆˆ 
.
ˆˆ 
OnApplyTemplate
ˆˆ  
(
ˆˆ  !
)
ˆˆ! "
;
ˆˆ" #*
_templateContentCoverElement
¯¯ (
=
¯¯) *
GetTemplateChild
¯¯+ ;
(
¯¯; <*
TemplateContentCoverPartName
¯¯< X
)
¯¯X Y
as
¯¯Z \
FrameworkElement
¯¯] m
;
¯¯m n
if
˘˘ 
(
˘˘ *
_templateContentCoverElement
˘˘ ,
!=
˘˘- /
null
˘˘0 4
)
˘˘4 5*
_templateContentCoverElement
˙˙ ,
.
˙˙, -&
PreviewMouseLeftButtonUp
˙˙- E
+=
˙˙F HC
5TemplateContentCoverElementOnPreviewMouseLeftButtonUp
˙˙I ~
;
˙˙~  
_leftDrawerElement
˚˚ 
=
˚˚  

WireDrawer
˚˚! +
(
˚˚+ ,
GetTemplateChild
˚˚, <
(
˚˚< =(
TemplateLeftDrawerPartName
˚˚= W
)
˚˚W X
as
˚˚Y [
FrameworkElement
˚˚\ l
,
˚˚l m
false
˚˚n s
)
˚˚s t
;
˚˚t u
_topDrawerElement
¸¸ 
=
¸¸ 

WireDrawer
¸¸  *
(
¸¸* +
GetTemplateChild
¸¸+ ;
(
¸¸; <'
TemplateTopDrawerPartName
¸¸< U
)
¸¸U V
as
¸¸W Y
FrameworkElement
¸¸Z j
,
¸¸j k
false
¸¸l q
)
¸¸q r
;
¸¸r s!
_rightDrawerElement
˝˝ 
=
˝˝  !

WireDrawer
˝˝" ,
(
˝˝, -
GetTemplateChild
˝˝- =
(
˝˝= >)
TemplateRightDrawerPartName
˝˝> Y
)
˝˝Y Z
as
˝˝[ ]
FrameworkElement
˝˝^ n
,
˝˝n o
false
˝˝p u
)
˝˝u v
;
˝˝v w"
_bottomDrawerElement
˛˛  
=
˛˛! "

WireDrawer
˛˛# -
(
˛˛- .
GetTemplateChild
˛˛. >
(
˛˛> ?*
TemplateBottomDrawerPartName
˛˛? [
)
˛˛[ \
as
˛˛] _
FrameworkElement
˛˛` p
,
˛˛p q
false
˛˛r w
)
˛˛w x
;
˛˛x y 
UpdateVisualStates
ÄÄ 
(
ÄÄ 
false
ÄÄ $
)
ÄÄ$ %
;
ÄÄ% &
}
ÅÅ 	
private
ÉÉ 
FrameworkElement
ÉÉ  

WireDrawer
ÉÉ! +
(
ÉÉ+ ,
FrameworkElement
ÉÉ, <
drawerElement
ÉÉ= J
,
ÉÉJ K
bool
ÉÉL P
unwire
ÉÉQ W
)
ÉÉW X
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ 
drawerElement
ÖÖ 
==
ÖÖ  
null
ÖÖ! %
)
ÖÖ% &
return
ÖÖ' -
null
ÖÖ. 2
;
ÖÖ2 3
if
áá 
(
áá 
unwire
áá 
)
áá 
{
àà 
drawerElement
ââ 
.
ââ 
GotFocus
ââ &
-=
ââ' )$
DrawerElement_GotFocus
ââ* @
;
ââ@ A
drawerElement
ää 
.
ää 
	MouseDown
ää '
-=
ää( *%
DrawerElement_MouseDown
ää+ B
;
ääB C
return
åå 
drawerElement
åå $
;
åå$ %
}
çç 
drawerElement
èè 
.
èè 
GotFocus
èè "
+=
èè# %$
DrawerElement_GotFocus
èè& <
;
èè< =
drawerElement
êê 
.
êê 
	MouseDown
êê #
+=
êê$ &%
DrawerElement_MouseDown
êê' >
;
êê> ?
return
íí 
drawerElement
íí  
;
íí  !
}
ìì 	
private
ïï 
void
ïï %
DrawerElement_MouseDown
ïï ,
(
ïï, -
object
ïï- 3
sender
ïï4 :
,
ïï: ;"
MouseButtonEventArgs
ïï< P
e
ïïQ R
)
ïïR S
{
ññ 	
ReactToFocus
óó 
(
óó 
sender
óó 
)
óó  
;
óó  !
}
òò 	
private
öö 
void
öö $
DrawerElement_GotFocus
öö +
(
öö+ ,
object
öö, 2
sender
öö3 9
,
öö9 :
RoutedEventArgs
öö; J
e
ööK L
)
ööL M
{
õõ 	
ReactToFocus
úú 
(
úú 
sender
úú 
)
úú  
;
úú  !
}
ùù 	
private
üü 
void
üü 
ReactToFocus
üü !
(
üü! "
object
üü" (
sender
üü) /
)
üü/ 0
{
†† 	
if
°° 
(
°° 
sender
°° 
==
°°  
_leftDrawerElement
°° ,
)
°°, -
PrepareZIndexes
¢¢ 
(
¢¢  )
LeftDrawerZIndexPropertyKey
¢¢  ;
)
¢¢; <
;
¢¢< =
else
££ 
if
££ 
(
££ 
sender
££ 
==
££ 
_topDrawerElement
££ 0
)
££0 1
PrepareZIndexes
§§ 
(
§§  (
TopDrawerZIndexPropertyKey
§§  :
)
§§: ;
;
§§; <
else
•• 
if
•• 
(
•• 
sender
•• 
==
•• !
_rightDrawerElement
•• 2
)
••2 3
PrepareZIndexes
¶¶ 
(
¶¶  *
RightDrawerZIndexPropertyKey
¶¶  <
)
¶¶< =
;
¶¶= >
else
ßß 
if
ßß 
(
ßß 
sender
ßß 
==
ßß "
_bottomDrawerElement
ßß 3
)
ßß3 4
PrepareZIndexes
®® 
(
®®  +
BottomDrawerZIndexPropertyKey
®®  =
)
®®= >
;
®®> ?
}
©© 	
private
´´ 
void
´´ C
5TemplateContentCoverElementOnPreviewMouseLeftButtonUp
´´ J
(
´´J K
object
´´K Q
sender
´´R X
,
´´X Y"
MouseButtonEventArgs
´´Z n#
mouseButtonEventArgs´´o É
)´´É Ñ
{
¨¨ 	
SetCurrentValue
≠≠ 
(
≠≠ &
IsLeftDrawerOpenProperty
≠≠ 4
,
≠≠4 5
false
≠≠6 ;
)
≠≠; <
;
≠≠< =
SetCurrentValue
ÆÆ 
(
ÆÆ '
IsRightDrawerOpenProperty
ÆÆ 5
,
ÆÆ5 6
false
ÆÆ7 <
)
ÆÆ< =
;
ÆÆ= >
SetCurrentValue
ØØ 
(
ØØ %
IsTopDrawerOpenProperty
ØØ 3
,
ØØ3 4
false
ØØ5 :
)
ØØ: ;
;
ØØ; <
SetCurrentValue
∞∞ 
(
∞∞ (
IsBottomDrawerOpenProperty
∞∞ 6
,
∞∞6 7
false
∞∞8 =
)
∞∞= >
;
∞∞> ?
}
±± 	
private
≥≥ 
void
≥≥  
UpdateVisualStates
≥≥ '
(
≥≥' (
bool
≥≥( ,
?
≥≥, -
useTransitions
≥≥. <
=
≥≥= >
null
≥≥? C
)
≥≥C D
{
¥¥ 	
var
µµ 
anyOpen
µµ 
=
µµ 
IsTopDrawerOpen
µµ )
||
µµ* ,
IsLeftDrawerOpen
µµ- =
||
µµ> @ 
IsBottomDrawerOpen
µµA S
||
µµT V
IsRightDrawerOpen
µµW h
;
µµh i 
VisualStateManager
∑∑ 
.
∑∑ 
	GoToState
∑∑ (
(
∑∑( )
this
∑∑) -
,
∑∑- .
!
∏∏ 
anyOpen
∏∏ 
?
∏∏ 2
$TemplateAllDrawersAllClosedStateName
∏∏ ?
:
∏∏@ A0
"TemplateAllDrawersAnyOpenStateName
∏∏B d
,
∏∏d e
useTransitions
∏∏f t
.
∏∏t u
HasValue
∏∏u }
?
∏∏~ 
useTransitions∏∏Ä é
.∏∏é è
Value∏∏è î
:∏∏ï ñ
!∏∏ó ò 
TransitionAssist∏∏ò ®
.∏∏® ©%
GetDisableTransitions∏∏© æ
(∏∏æ ø
this∏∏ø √
)∏∏√ ƒ
)∏∏ƒ ≈
;∏∏≈ ∆ 
VisualStateManager
∫∫ 
.
∫∫ 
	GoToState
∫∫ (
(
∫∫( )
this
∫∫) -
,
∫∫- .
IsLeftDrawerOpen
ªª  
?
ªª! "'
TemplateLeftOpenStateName
ªª# <
:
ªª= >)
TemplateLeftClosedStateName
ªª? Z
,
ªªZ [
useTransitions
ªª\ j
.
ªªj k
HasValue
ªªk s
?
ªªt u
useTransitionsªªv Ñ
.ªªÑ Ö
ValueªªÖ ä
:ªªã å
!ªªç é 
TransitionAssistªªé û
.ªªû ü%
GetDisableTransitionsªªü ¥
(ªª¥ µ
thisªªµ π
)ªªπ ∫
)ªª∫ ª
;ªªª º 
VisualStateManager
ΩΩ 
.
ΩΩ 
	GoToState
ΩΩ (
(
ΩΩ( )
this
ΩΩ) -
,
ΩΩ- .
IsTopDrawerOpen
ææ 
?
ææ  !&
TemplateTopOpenStateName
ææ" :
:
ææ; <(
TemplateTopClosedStateName
ææ= W
,
ææW X
useTransitions
ææY g
.
ææg h
HasValue
ææh p
?
ææq r
useTransitionsææs Å
.ææÅ Ç
ValueææÇ á
:ææà â
!ææä ã 
TransitionAssistææã õ
.ææõ ú%
GetDisableTransitionsææú ±
(ææ± ≤
thisææ≤ ∂
)ææ∂ ∑
)ææ∑ ∏
;ææ∏ π 
VisualStateManager
¿¿ 
.
¿¿ 
	GoToState
¿¿ (
(
¿¿( )
this
¿¿) -
,
¿¿- .
IsRightDrawerOpen
¡¡ !
?
¡¡" #(
TemplateRightOpenStateName
¡¡$ >
:
¡¡? @*
TemplateRightClosedStateName
¡¡A ]
,
¡¡] ^
useTransitions
¡¡_ m
.
¡¡m n
HasValue
¡¡n v
?
¡¡w x
useTransitions¡¡y á
.¡¡á à
Value¡¡à ç
:¡¡é è
!¡¡ê ë 
TransitionAssist¡¡ë °
.¡¡° ¢%
GetDisableTransitions¡¡¢ ∑
(¡¡∑ ∏
this¡¡∏ º
)¡¡º Ω
)¡¡Ω æ
;¡¡æ ø 
VisualStateManager
√√ 
.
√√ 
	GoToState
√√ (
(
√√( )
this
√√) -
,
√√- . 
IsBottomDrawerOpen
ƒƒ "
?
ƒƒ# $)
TemplateBottomOpenStateName
ƒƒ% @
:
ƒƒA B+
TemplateBottomClosedStateName
ƒƒC `
,
ƒƒ` a
useTransitions
ƒƒb p
.
ƒƒp q
HasValue
ƒƒq y
?
ƒƒz {
useTransitionsƒƒ| ä
.ƒƒä ã
Valueƒƒã ê
:ƒƒë í
!ƒƒì î 
TransitionAssistƒƒî §
.ƒƒ§ •%
GetDisableTransitionsƒƒ• ∫
(ƒƒ∫ ª
thisƒƒª ø
)ƒƒø ¿
)ƒƒ¿ ¡
;ƒƒ¡ ¬
}
≈≈ 	
private
«« 
static
«« 
void
«« 1
#IsDrawerOpenPropertyChangedCallback
«« ?
(
««? @
DependencyObject
««@ P
dependencyObject
««Q a
,
««a b1
"DependencyPropertyChangedEventArgs««c Ö2
"dependencyPropertyChangedEventArgs««Ü ®
)««® ©
{
»» 	
var
…… 

drawerHost
…… 
=
…… 
(
…… 

DrawerHost
…… (
)
……( )
dependencyObject
……) 9
;
……9 :
if
   
(
   
!
   

drawerHost
   
.
   
_lockZIndexes
   )
&&
  * ,
(
  - .
bool
  . 2
)
  2 30
"dependencyPropertyChangedEventArgs
  3 U
.
  U V
NewValue
  V ^
)
  ^ _

drawerHost
ÀÀ 
.
ÀÀ 
PrepareZIndexes
ÀÀ *
(
ÀÀ* +

drawerHost
ÀÀ+ 5
.
ÀÀ5 6#
_zIndexPropertyLookup
ÀÀ6 K
[
ÀÀK L0
"dependencyPropertyChangedEventArgs
ÀÀL n
.
ÀÀn o
Property
ÀÀo w
]
ÀÀw x
)
ÀÀx y
;
ÀÀy z

drawerHost
ÃÃ 
.
ÃÃ  
UpdateVisualStates
ÃÃ )
(
ÃÃ) *
)
ÃÃ* +
;
ÃÃ+ ,
}
ÕÕ 	
private
œœ 
void
œœ 
PrepareZIndexes
œœ $
(
œœ$ %#
DependencyPropertyKey
œœ% :)
zIndexDependencyPropertyKey
œœ; V
)
œœV W
{
–– 	
var
—— 
newOrder
—— 
=
—— 
new
—— 
[
—— 
]
——  
{
——! ")
zIndexDependencyPropertyKey
——# >
}
——? @
.
““ 
Concat
““ 
(
““ #
_zIndexPropertyLookup
““ -
.
““- .
Values
““. 4
.
““4 5
Except
““5 ;
(
““; <
new
““< ?
[
““? @
]
““@ A
{
““B C)
zIndexDependencyPropertyKey
““D _
}
““` a
)
““a b
.
”” 
OrderByDescending
”” "
(
””" #
dpk
””# &
=>
””' )
(
””* +
int
””+ .
)
””. /
GetValue
””/ 7
(
””7 8
dpk
””8 ;
.
””; < 
DependencyProperty
””< N
)
””N O
)
””O P
)
””P Q
.
‘‘ 
Reverse
‘‘ 
(
‘‘ 
)
‘‘ 
.
’’ 
Select
’’ 
(
’’ 
(
’’ 
dpk
’’ 
,
’’ 
idx
’’ !
)
’’! "
=>
’’# %
new
’’& )
{
’’* +
dpk
’’, /
,
’’/ 0
idx
’’1 4
}
’’5 6
)
’’6 7
;
’’7 8
foreach
◊◊ 
(
◊◊ 
var
◊◊ 
a
◊◊ 
in
◊◊ 
newOrder
◊◊ &
)
◊◊& '
SetValue
ÿÿ 
(
ÿÿ 
a
ÿÿ 
.
ÿÿ 
dpk
ÿÿ 
,
ÿÿ 
a
ÿÿ  !
.
ÿÿ! "
idx
ÿÿ" %
)
ÿÿ% &
;
ÿÿ& '
}
ŸŸ 	
private
€€ 
void
€€  
CloseDrawerHandler
€€ '
(
€€' (
object
€€( .
sender
€€/ 5
,
€€5 6%
ExecutedRoutedEventArgs
€€7 N%
executedRoutedEventArgs
€€O f
)
€€f g
{
‹‹ 	
if
›› 
(
›› %
executedRoutedEventArgs
›› '
.
››' (
Handled
››( /
)
››/ 0
return
››1 7
;
››7 8
SetOpenFlag
ﬂﬂ 
(
ﬂﬂ %
executedRoutedEventArgs
ﬂﬂ /
,
ﬂﬂ/ 0
false
ﬂﬂ1 6
)
ﬂﬂ6 7
;
ﬂﬂ7 8%
executedRoutedEventArgs
·· #
.
··# $
Handled
··$ +
=
··, -
true
··. 2
;
··2 3
}
‚‚ 	
private
‰‰ 
void
‰‰ 
OpenDrawerHandler
‰‰ &
(
‰‰& '
object
‰‰' -
sender
‰‰. 4
,
‰‰4 5%
ExecutedRoutedEventArgs
‰‰6 M%
executedRoutedEventArgs
‰‰N e
)
‰‰e f
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ %
executedRoutedEventArgs
ÊÊ '
.
ÊÊ' (
Handled
ÊÊ( /
)
ÊÊ/ 0
return
ÊÊ1 7
;
ÊÊ7 8
SetOpenFlag
ËË 
(
ËË %
executedRoutedEventArgs
ËË /
,
ËË/ 0
true
ËË1 5
)
ËË5 6
;
ËË6 7%
executedRoutedEventArgs
ÍÍ #
.
ÍÍ# $
Handled
ÍÍ$ +
=
ÍÍ, -
true
ÍÍ. 2
;
ÍÍ2 3
}
ÎÎ 	
private
ÌÌ 
void
ÌÌ 
SetOpenFlag
ÌÌ  
(
ÌÌ  !%
ExecutedRoutedEventArgs
ÌÌ! 8%
executedRoutedEventArgs
ÌÌ9 P
,
ÌÌP Q
bool
ÌÌR V
value
ÌÌW \
)
ÌÌ\ ]
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ %
executedRoutedEventArgs
ÔÔ '
.
ÔÔ' (
	Parameter
ÔÔ( 1
is
ÔÔ2 4
Dock
ÔÔ5 9
)
ÔÔ9 :
{
 
switch
ÒÒ 
(
ÒÒ 
(
ÒÒ 
Dock
ÒÒ 
)
ÒÒ %
executedRoutedEventArgs
ÒÒ 5
.
ÒÒ5 6
	Parameter
ÒÒ6 ?
)
ÒÒ? @
{
ÚÚ 
case
ÛÛ 
Dock
ÛÛ 
.
ÛÛ 
Left
ÛÛ "
:
ÛÛ" #
SetCurrentValue
ÙÙ '
(
ÙÙ' (&
IsLeftDrawerOpenProperty
ÙÙ( @
,
ÙÙ@ A
value
ÙÙB G
)
ÙÙG H
;
ÙÙH I
break
ıı 
;
ıı 
case
ˆˆ 
Dock
ˆˆ 
.
ˆˆ 
Top
ˆˆ !
:
ˆˆ! "
SetCurrentValue
˜˜ '
(
˜˜' (%
IsTopDrawerOpenProperty
˜˜( ?
,
˜˜? @
value
˜˜A F
)
˜˜F G
;
˜˜G H
break
¯¯ 
;
¯¯ 
case
˘˘ 
Dock
˘˘ 
.
˘˘ 
Right
˘˘ #
:
˘˘# $
SetCurrentValue
˙˙ '
(
˙˙' ('
IsRightDrawerOpenProperty
˙˙( A
,
˙˙A B
value
˙˙C H
)
˙˙H I
;
˙˙I J
break
˚˚ 
;
˚˚ 
case
¸¸ 
Dock
¸¸ 
.
¸¸ 
Bottom
¸¸ $
:
¸¸$ %
SetCurrentValue
˝˝ '
(
˝˝' ((
IsBottomDrawerOpenProperty
˝˝( B
,
˝˝B C
value
˝˝D I
)
˝˝I J
;
˝˝J K
break
˛˛ 
;
˛˛ 
default
ˇˇ 
:
ˇˇ 
throw
ÄÄ 
new
ÄÄ !)
ArgumentOutOfRangeException
ÄÄ" =
(
ÄÄ= >
)
ÄÄ> ?
;
ÄÄ? @
}
ÅÅ 
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 
try
ÖÖ 
{
ÜÜ 
_lockZIndexes
áá !
=
áá" #
true
áá$ (
;
áá( )
SetCurrentValue
àà #
(
àà# $&
IsLeftDrawerOpenProperty
àà$ <
,
àà< =
value
àà> C
)
ààC D
;
ààD E
SetCurrentValue
ââ #
(
ââ# $%
IsTopDrawerOpenProperty
ââ$ ;
,
ââ; <
value
ââ= B
)
ââB C
;
ââC D
SetCurrentValue
ää #
(
ää# $'
IsRightDrawerOpenProperty
ää$ =
,
ää= >
value
ää? D
)
ääD E
;
ääE F
SetCurrentValue
ãã #
(
ãã# $(
IsBottomDrawerOpenProperty
ãã$ >
,
ãã> ?
value
ãã@ E
)
ããE F
;
ããF G
}
åå 
finally
çç 
{
éé 
_lockZIndexes
èè !
=
èè" #
false
èè$ )
;
èè) *
}
êê 
}
ëë 
}
íí 	
}
ìì 
}îî ¯5
QD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Extensions.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
internal		 
static		 
class		 

Extensions		 $
{

 
public 
static 
IEnumerable !
<! "
DependencyObject" 2
>2 3%
VisualDepthFirstTraversal4 M
(M N
thisN R
DependencyObjectS c
noded h
)h i
{ 	
if 
( 
node 
== 
null 
) 
throw #
new$ '!
ArgumentNullException( =
(= >
nameof> D
(D E
nodeE I
)I J
)J K
;K L
yield 
return 
node 
; 
for 
( 
var 
i 
= 
$num 
; 
i 
< 
VisualTreeHelper  0
.0 1
GetChildrenCount1 A
(A B
nodeB F
)F G
;G H
iI J
++J L
)L M
{ 
var 
child 
= 
VisualTreeHelper ,
., -
GetChild- 5
(5 6
node6 :
,: ;
i< =
)= >
;> ?
foreach 
( 
var 

descendant '
in( *
child+ 0
.0 1%
VisualDepthFirstTraversal1 J
(J K
)K L
)L M
{ 
yield 
return  

descendant! +
;+ ,
} 
} 
} 	
public 
static 
IEnumerable !
<! "
DependencyObject" 2
>2 3'
VisualBreadthFirstTraversal4 O
(O P
thisP T
DependencyObjectU e
nodef j
)j k
{ 	
if 
( 
node 
== 
null 
) 
throw #
new$ '!
ArgumentNullException( =
(= >
nameof> D
(D E
nodeE I
)I J
)J K
;K L
for 
( 
var 
i 
= 
$num 
; 
i 
< 
VisualTreeHelper  0
.0 1
GetChildrenCount1 A
(A B
nodeB F
)F G
;G H
iI J
++J L
)L M
{   
var!! 
child!! 
=!! 
VisualTreeHelper!! ,
.!!, -
GetChild!!- 5
(!!5 6
node!!6 :
,!!: ;
i!!< =
)!!= >
;!!> ?
yield"" 
return"" 
child"" "
;""" #
}## 
for%% 
(%% 
var%% 
i%% 
=%% 
$num%% 
;%% 
i%% 
<%% 
VisualTreeHelper%%  0
.%%0 1
GetChildrenCount%%1 A
(%%A B
node%%B F
)%%F G
;%%G H
i%%I J
++%%J L
)%%L M
{&& 
var'' 
child'' 
='' 
VisualTreeHelper'' ,
.'', -
GetChild''- 5
(''5 6
node''6 :
,'': ;
i''< =
)''= >
;''> ?
foreach)) 
()) 
var)) 

descendant)) '
in))( *
child))+ 0
.))0 1%
VisualDepthFirstTraversal))1 J
())J K
)))K L
)))L M
{** 
yield++ 
return++  

descendant++! +
;+++ ,
},, 
}-- 
}.. 	
public00 
static00 
bool00 
IsAncestorOf00 '
(00' (
this00( ,
DependencyObject00- =
parent00> D
,00D E
DependencyObject00F V
node00W [
)00[ \
{11 	
return22 
node22 
!=22 
null22 
&&22  "
parent22# )
.22) *%
VisualDepthFirstTraversal22* C
(22C D
)22D E
.22E F
Contains22F N
(22N O
node22O S
)22S T
;22T U
}33 	
public:: 
static:: 
IEnumerable:: !
<::! "
DependencyObject::" 2
>::2 3
GetVisualAncestry::4 E
(::E F
this::F J
DependencyObject::K [
leaf::\ `
)::` a
{;; 	
while<< 
(<< 
leaf<< 
!=<< 
null<< 
)<<  
{== 
yield>> 
return>> 
leaf>> !
;>>! "
leaf?? 
=?? 
VisualTreeHelper?? '
.??' (
	GetParent??( 1
(??1 2
leaf??2 6
)??6 7
;??7 8
}@@ 
}AA 	
publicCC 
staticCC 
IEnumerableCC !
<CC! "
DependencyObjectCC" 2
>CC2 3
GetLogicalAncestryCC4 F
(CCF G
thisCCG K
DependencyObjectCCL \
leafCC] a
)CCa b
{DD 	
whileEE 
(EE 
leafEE 
!=EE 
nullEE 
)EE  
{FF 
yieldGG 
returnGG 
leafGG !
;GG! "
leafHH 
=HH 
LogicalTreeHelperHH (
.HH( )
	GetParentHH) 2
(HH2 3
leafHH3 7
)HH7 8
;HH8 9
}II 
}JJ 	
publicLL 
staticLL 
boolLL 
IsDescendantOfLL )
(LL) *
thisLL* .
DependencyObjectLL/ ?
leafLL@ D
,LLD E
DependencyObjectLLF V
ancestorLLW _
)LL_ `
{MM 	
DependencyObjectNN 
parentNN #
=NN$ %
nullNN& *
;NN* +
foreachOO 
(OO 
varOO 
nodeOO 
inOO  
leafOO! %
.OO% &
GetVisualAncestryOO& 7
(OO7 8
)OO8 9
)OO9 :
{PP 
ifQQ 
(QQ 
EqualsQQ 
(QQ 
nodeQQ 
,QQ  
ancestorQQ! )
)QQ) *
)QQ* +
returnRR 
trueRR 
;RR  
parentTT 
=TT 
nodeTT 
;TT 
}UU 
returnWW 
parentWW 
.WW 
GetLogicalAncestryWW ,
(WW, -
)WW- .
.WW. /
ContainsWW/ 7
(WW7 8
ancestorWW8 @
)WW@ A
;WWA B
}XX 	
}YY 
}ZZ úü
ND:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Flipper.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[		 
TemplatePart		 
(		 
Name		 
=		 
Plane3DPartName		 (
,		( )
Type		* .
=		/ 0
typeof		1 7
(		7 8
Plane3D		8 ?
)		? @
)		@ A
]		A B
[

 
TemplateVisualState

 
(

 
	GroupName

 "
=

# $!
TemplateFlipGroupName

% :
,

: ;
Name

< @
=

A B$
TemplateFlippedStateName

C [
)

[ \
]

\ ]
[ 
TemplateVisualState 
( 
	GroupName "
=# $!
TemplateFlipGroupName% :
,: ;
Name< @
=A B&
TemplateUnflippedStateNameC ]
)] ^
]^ _
public 

class 
Flipper 
: 
Control "
{ 
public 
static 
RoutedCommand #
FlipCommand$ /
=0 1
new2 5
RoutedCommand6 C
(C D
)D E
;E F
public 
const 
string 
Plane3DPartName +
=, -
$str. <
;< =
public 
const 
string !
TemplateFlipGroupName 1
=2 3
$str4 @
;@ A
public 
const 
string $
TemplateFlippedStateName 4
=5 6
$str7 @
;@ A
public 
const 
string &
TemplateUnflippedStateName 6
=7 8
$str9 D
;D E
private 
Plane3D 
_plane3D  
;  !
static 
Flipper 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
Flipper< C
)C D
,D E
newF I%
FrameworkPropertyMetadataJ c
(c d
typeofd j
(j k
Flipperk r
)r s
)s t
)t u
;u v
} 	
public 
Flipper 
( 
) 
{ 	
CommandBindings 
. 
Add 
(  
new  #
CommandBinding$ 2
(2 3
FlipCommand3 >
,> ?
FlipHandler@ K
)K L
)L M
;M N
} 	
public!! 
static!! 
readonly!! 
DependencyProperty!! 1 
FrontContentProperty!!2 F
=!!G H
DependencyProperty!!I [
.!![ \
Register!!\ d
(!!d e
nameof"" 
("" 
FrontContent"" 
)""  
,""  !
typeof""" (
(""( )
object"") /
)""/ 0
,""0 1
typeof""2 8
(""8 9
Flipper""9 @
)""@ A
,""A B
new""C F
PropertyMetadata""G W
(""W X
default""X _
(""_ `
object""` f
)""f g
)""g h
)""h i
;""i j
public$$ 
object$$ 
FrontContent$$ "
{%% 	
get&& 
=>&& 
GetValue&& 
(&&  
FrontContentProperty&& 0
)&&0 1
;&&1 2
set'' 
=>'' 
SetValue'' 
(''  
FrontContentProperty'' 0
,''0 1
value''2 7
)''7 8
;''8 9
}(( 	
public** 
static** 
readonly** 
DependencyProperty** 1(
FrontContentTemplateProperty**2 N
=**O P
DependencyProperty**Q c
.**c d
Register**d l
(**l m
nameof++ 
(++  
FrontContentTemplate++ '
)++' (
,++( )
typeof++* 0
(++0 1
DataTemplate++1 =
)++= >
,++> ?
typeof++@ F
(++F G
Flipper++G N
)++N O
,++O P
new++Q T
PropertyMetadata++U e
(++e f
default++f m
(++m n
DataTemplate++n z
)++z {
)++{ |
)++| }
;++} ~
public-- 
DataTemplate--  
FrontContentTemplate-- 0
{.. 	
get// 
=>// 
(// 
DataTemplate//  
)//  !
GetValue//" *
(//* +(
FrontContentTemplateProperty//+ G
)//G H
;//H I
set00 
=>00 
SetValue00 
(00 (
FrontContentTemplateProperty00 8
,008 9
value00: ?
)00? @
;00@ A
}11 	
public33 
static33 
readonly33 
DependencyProperty33 10
$FrontContentTemplateSelectorProperty332 V
=33W X
DependencyProperty33Y k
.33k l
Register33l t
(33t u
nameof44 
(44 (
FrontContentTemplateSelector44 /
)44/ 0
,440 1
typeof442 8
(448 9 
DataTemplateSelector449 M
)44M N
,44N O
typeof44P V
(44V W
Flipper44W ^
)44^ _
,44_ `
new44a d
PropertyMetadata44e u
(44u v
default44v }
(44} ~!
DataTemplateSelector	44~ í
)
44í ì
)
44ì î
)
44î ï
;
44ï ñ
public66  
DataTemplateSelector66 #(
FrontContentTemplateSelector66$ @
{77 	
get88 
=>88 
(88  
DataTemplateSelector88 (
)88( )
GetValue88* 2
(882 30
$FrontContentTemplateSelectorProperty883 W
)88W X
;88X Y
set99 
=>99 
SetValue99 
(99 0
$FrontContentTemplateSelectorProperty99 @
,99@ A
value99B G
)99G H
;99H I
}:: 	
public<< 
static<< 
readonly<< 
DependencyProperty<< 1,
 FrontContentStringFormatProperty<<2 R
=<<S T
DependencyProperty<<U g
.<<g h
Register<<h p
(<<p q
nameof== 
(== $
FrontContentStringFormat== +
)==+ ,
,==, -
typeof==. 4
(==4 5
string==5 ;
)==; <
,==< =
typeof==> D
(==D E
Flipper==E L
)==L M
,==M N
new==O R
PropertyMetadata==S c
(==c d
default==d k
(==k l
string==l r
)==r s
)==s t
)==t u
;==u v
public?? 
string?? $
FrontContentStringFormat?? .
{@@ 	
getAA 
=>AA 
(AA 
stringAA 
)AA 
GetValueAA $
(AA$ %,
 FrontContentStringFormatPropertyAA% E
)AAE F
;AAF G
setBB 
=>BB 
SetValueBB 
(BB ,
 FrontContentStringFormatPropertyBB <
,BB< =
valueBB> C
)BBC D
;BBD E
}CC 	
publicEE 
staticEE 
readonlyEE 
DependencyPropertyEE 1
BackContentPropertyEE2 E
=EEF G
DependencyPropertyEEH Z
.EEZ [
RegisterEE[ c
(EEc d
nameofFF 
(FF 
BackContentFF 
)FF 
,FF  
typeofFF! '
(FF' (
objectFF( .
)FF. /
,FF/ 0
typeofFF1 7
(FF7 8
FlipperFF8 ?
)FF? @
,FF@ A
newFFB E
PropertyMetadataFFF V
(FFV W
defaultFFW ^
(FF^ _
objectFF_ e
)FFe f
)FFf g
)FFg h
;FFh i
publicHH 
objectHH 
BackContentHH !
{II 	
getJJ 
=>JJ 
(JJ 
objectJJ 
)JJ 
GetValueJJ $
(JJ$ %
BackContentPropertyJJ% 8
)JJ8 9
;JJ9 :
setKK 
=>KK 
SetValueKK 
(KK 
BackContentPropertyKK /
,KK/ 0
valueKK1 6
)KK6 7
;KK7 8
}LL 	
publicNN 
staticNN 
readonlyNN 
DependencyPropertyNN 1'
BackContentTemplatePropertyNN2 M
=NNN O
DependencyPropertyNNP b
.NNb c
RegisterNNc k
(NNk l
nameofOO 
(OO 
BackContentTemplateOO &
)OO& '
,OO' (
typeofOO) /
(OO/ 0
DataTemplateOO0 <
)OO< =
,OO= >
typeofOO? E
(OOE F
FlipperOOF M
)OOM N
,OON O
newOOP S
PropertyMetadataOOT d
(OOd e
defaultOOe l
(OOl m
DataTemplateOOm y
)OOy z
)OOz {
)OO{ |
;OO| }
publicQQ 
DataTemplateQQ 
BackContentTemplateQQ /
{RR 	
getSS 
=>SS 
(SS 
DataTemplateSS  
)SS  !
GetValueSS! )
(SS) *'
BackContentTemplatePropertySS* E
)SSE F
;SSF G
setTT 
=>TT 
SetValueTT 
(TT '
BackContentTemplatePropertyTT 7
,TT7 8
valueTT9 >
)TT> ?
;TT? @
}UU 	
publicWW 
staticWW 
readonlyWW 
DependencyPropertyWW 1/
#BackContentTemplateSelectorPropertyWW2 U
=WWV W
DependencyPropertyWWX j
.WWj k
RegisterWWk s
(WWs t
nameofXX 
(XX '
BackContentTemplateSelectorXX .
)XX. /
,XX/ 0
typeofXX1 7
(XX7 8 
DataTemplateSelectorXX8 L
)XXL M
,XXM N
typeofXXO U
(XXU V
FlipperXXV ]
)XX] ^
,XX^ _
newXX` c
PropertyMetadataXXd t
(XXt u
defaultXXu |
(XX| }!
DataTemplateSelector	XX} ë
)
XXë í
)
XXí ì
)
XXì î
;
XXî ï
publicZZ  
DataTemplateSelectorZZ #'
BackContentTemplateSelectorZZ$ ?
{[[ 	
get\\ 
=>\\ 
(\\  
DataTemplateSelector\\ (
)\\( )
GetValue\\) 1
(\\1 2/
#BackContentTemplateSelectorProperty\\2 U
)\\U V
;\\V W
set]] 
=>]] 
SetValue]] 
(]] /
#BackContentTemplateSelectorProperty]] ?
,]]? @
value]]A F
)]]F G
;]]G H
}^^ 	
public`` 
static`` 
readonly`` 
DependencyProperty`` 1+
BackContentStringFormatProperty``2 Q
=``R S
DependencyProperty``T f
.``f g
Register``g o
(``o p
nameofaa 
(aa #
BackContentStringFormataa *
)aa* +
,aa+ ,
typeofaa- 3
(aa3 4
stringaa4 :
)aa: ;
,aa; <
typeofaa= C
(aaC D
FlipperaaD K
)aaK L
,aaL M
newaaN Q
PropertyMetadataaaR b
(aab c
defaultaac j
(aaj k
stringaak q
)aaq r
)aar s
)aas t
;aat u
publiccc 
stringcc #
BackContentStringFormatcc -
{dd 	
getee 
=>ee 
(ee 
stringee 
)ee 
GetValueee #
(ee# $+
BackContentStringFormatPropertyee$ C
)eeC D
;eeD E
setff 
=>ff 
SetValueff 
(ff +
BackContentStringFormatPropertyff ;
,ff; <
valueff= B
)ffB C
;ffC D
}gg 	
publicii 
staticii 
readonlyii 
DependencyPropertyii 1
IsFlippedPropertyii2 C
=iiD E
DependencyPropertyiiF X
.iiX Y
RegisteriiY a
(iia b
nameofjj 
(jj 
	IsFlippedjj 
)jj 
,jj 
typeofjj %
(jj% &
booljj& *
)jj* +
,jj+ ,
typeofjj- 3
(jj3 4
Flipperjj4 ;
)jj; <
,jj< =
newjj> A
PropertyMetadatajjB R
(jjR S
defaultjjS Z
(jjZ [
booljj[ _
)jj_ `
,jj` a-
 IsFlippedPropertyChangedCallback	jjb Ç
)
jjÇ É
)
jjÉ Ñ
;
jjÑ Ö
privatell 
staticll 
voidll ,
 IsFlippedPropertyChangedCallbackll <
(ll< =
DependencyObjectll= M
dependencyObjectllN ^
,ll^ _/
"DependencyPropertyChangedEventArgs	ll` Ç0
"dependencyPropertyChangedEventArgs
llÉ •
)
ll• ¶
{mm 	
varnn 
flippernn 
=nn 
(nn 
Flippernn "
)nn" #
dependencyObjectnn# 3
;nn3 4
flipperoo 
.oo 
UpdateVisualStatesoo &
(oo& '
trueoo' +
)oo+ ,
;oo, -
flipperpp 
.pp 
RemeasureDuringFlippp '
(pp' (
)pp( )
;pp) *
OnIsFlippedChangedqq 
(qq 
flipperqq &
,qq& '.
"dependencyPropertyChangedEventArgsqq( J
)qqJ K
;qqK L
}rr 	
publictt 
booltt 
	IsFlippedtt 
{uu 	
getvv 
=>vv 
(vv 
boolvv 
)vv 
GetValuevv "
(vv" #
IsFlippedPropertyvv# 4
)vv4 5
;vv5 6
setww 
=>ww 
SetValueww 
(ww 
IsFlippedPropertyww -
,ww- .
valueww/ 4
)ww4 5
;ww5 6
}xx 	
publiczz 
staticzz 
readonlyzz 
RoutedEventzz *!
IsFlippedChangedEventzz+ @
=zzA B
EventManager{{ 
.{{ 
RegisterRoutedEvent{{ ,
({{, -
nameof|| 
(|| 
	IsFlipped||  
)||  !
,||! "
RoutingStrategy}} 
.}}  
Bubble}}  &
,}}& '
typeof~~ 
(~~ -
!RoutedPropertyChangedEventHandler~~ 8
<~~8 9
bool~~9 =
>~~= >
)~~> ?
,~~? @
typeof 
( 
Flipper 
) 
)  
;  !
public
ÅÅ 
event
ÅÅ /
!RoutedPropertyChangedEventHandler
ÅÅ 6
<
ÅÅ6 7
bool
ÅÅ7 ;
>
ÅÅ; <
IsFlippedChanged
ÅÅ= M
{
ÇÇ 	
add
ÉÉ 
=>
ÉÉ 

AddHandler
ÉÉ 
(
ÉÉ #
IsFlippedChangedEvent
ÉÉ 3
,
ÉÉ3 4
value
ÉÉ5 :
)
ÉÉ: ;
;
ÉÉ; <
remove
ÑÑ 
=>
ÑÑ 
RemoveHandler
ÑÑ #
(
ÑÑ# $#
IsFlippedChangedEvent
ÑÑ$ 9
,
ÑÑ9 :
value
ÑÑ; @
)
ÑÑ@ A
;
ÑÑA B
}
ÖÖ 	
private
áá 
static
áá 
void
áá  
OnIsFlippedChanged
áá .
(
áá. /
DependencyObject
àà 
d
àà 
,
àà 0
"DependencyPropertyChangedEventArgs
àà  B
e
ààC D
)
ààD E
{
ââ 	
var
ää 
instance
ää 
=
ää 
(
ää 
Flipper
ää #
)
ää# $
d
ää$ %
;
ää% &
var
ãã 
args
ãã 
=
ãã 
new
ãã ,
RoutedPropertyChangedEventArgs
ãã 9
<
ãã9 :
bool
ãã: >
>
ãã> ?
(
ãã? @
(
åå 
bool
åå 
)
åå 
e
åå 
.
åå 
OldValue
åå $
,
åå$ %
(
çç 
bool
çç 
)
çç 
e
çç 
.
çç 
NewValue
çç $
)
çç$ %
{
éé 
RoutedEvent
éé 
=
éé #
IsFlippedChangedEvent
éé  5
}
éé6 7
;
éé7 8
instance
èè 
.
èè 

RaiseEvent
èè 
(
èè  
args
èè  $
)
èè$ %
;
èè% &
}
êê 	
public
íí 
override
íí 
void
íí 
OnApplyTemplate
íí ,
(
íí, -
)
íí- .
{
ìì 	
base
îî 
.
îî 
OnApplyTemplate
îî  
(
îî  !
)
îî! "
;
îî" # 
UpdateVisualStates
ññ 
(
ññ 
false
ññ $
)
ññ$ %
;
ññ% &
_plane3D
òò 
=
òò 
GetTemplateChild
òò '
(
òò' (
Plane3DPartName
òò( 7
)
òò7 8
as
òò9 ;
Plane3D
òò< C
;
òòC D
}
ôô 	
private
õõ 
void
õõ !
RemeasureDuringFlip
õõ (
(
õõ( )
)
õõ) *
{
úú 	
const
ûû 
int
ûû 
storyboardMs
ûû "
=
ûû# $
$num
ûû% (
;
ûû( )
const
üü 
int
üü 
granularity
üü !
=
üü" #
$num
üü$ %
;
üü% &
var
°° 
remeasureInterval
°° !
=
°°" #
new
°°$ '
TimeSpan
°°( 0
(
°°0 1
$num
°°1 2
,
°°2 3
$num
°°4 5
,
°°5 6
$num
°°7 8
,
°°8 9
$num
°°: ;
,
°°; <
storyboardMs
°°= I
/
°°I J
granularity
°°J U
)
°°U V
;
°°V W
var
¢¢ 
refreshCount
¢¢ 
=
¢¢ 
$num
¢¢  
;
¢¢  !
var
££ 
plane3D
££ 
=
££ 
_plane3D
££ "
;
££" #
if
§§ 
(
§§ 
plane3D
§§ 
==
§§ 
null
§§ 
)
§§  
return
§§! '
;
§§' (
DispatcherTimer
¶¶ 
dt
¶¶ 
=
¶¶  
null
¶¶! %
;
¶¶% &
dt
ßß 
=
ßß 
new
ßß 
DispatcherTimer
ßß $
(
ßß$ %
remeasureInterval
ßß% 6
,
ßß6 7 
DispatcherPriority
ßß8 J
.
ßßJ K
Normal
ßßK Q
,
ßßQ R
(
®® 
sender
®® 
,
®® 
args
®® 
)
®® 
=>
®® !
{
©© 
plane3D
™™ 
.
™™ 
InvalidateMeasure
™™ -
(
™™- .
)
™™. /
;
™™/ 0
if
´´ 
(
´´ 
refreshCount
´´ $
++
´´$ &
==
´´' )
granularity
´´* 5
)
´´5 6
dt
¨¨ 
.
¨¨ 
Stop
¨¨ 
(
¨¨  
)
¨¨  !
;
¨¨! "
}
≠≠ 
,
≠≠ 

Dispatcher
≠≠ 
)
≠≠ 
;
≠≠ 
dt
ÆÆ 
.
ÆÆ 
Start
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 	
private
±± 
void
±±  
UpdateVisualStates
±± '
(
±±' (
bool
±±( ,
useTransitions
±±- ;
)
±±; <
{
≤≤ 	 
VisualStateManager
≥≥ 
.
≥≥ 
	GoToState
≥≥ (
(
≥≥( )
this
≥≥) -
,
≥≥- .
	IsFlipped
≥≥/ 8
?
≥≥9 :&
TemplateFlippedStateName
≥≥; S
:
≥≥T U(
TemplateUnflippedStateName
≥≥V p
,
≥≥p q
useTransitions
¥¥ 
)
¥¥ 
;
¥¥  
}
µµ 	
private
∑∑ 
void
∑∑ 
FlipHandler
∑∑  
(
∑∑  !
object
∑∑! '
sender
∑∑( .
,
∑∑. /%
ExecutedRoutedEventArgs
∑∑0 G%
executedRoutedEventArgs
∑∑H _
)
∑∑_ `
{
∏∏ 	
SetCurrentValue
ππ 
(
ππ 
IsFlippedProperty
ππ -
,
ππ- .
!
ππ/ 0
	IsFlipped
ππ0 9
)
ππ9 :
;
ππ: ;
}
∫∫ 	
}
ªª 
}ºº ¨=
QD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\HintAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 

HintAssist "
{ 
public		 
static		 
readonly		 
DependencyProperty		 1
IsFloatingProperty		2 D
=		E F
DependencyProperty		G Y
.		Y Z
RegisterAttached		Z j
(		j k
$str

 
,

 
typeof 
( 
bool 
) 
, 
typeof 
( 

HintAssist 
) 
, 
new %
FrameworkPropertyMetadata )
() *
default* 1
(1 2
bool2 6
)6 7
,7 8,
 FrameworkPropertyMetadataOptions9 Y
.Y Z
InheritsZ b
)b c
)c d
;d e
public 
static 
bool 
GetIsFloating (
(( )
DependencyObject) 9
element: A
)A B
{ 	
return 
( 
bool 
) 
element !
.! "
GetValue" *
(* +
IsFloatingProperty+ =
)= >
;> ?
} 	
public 
static 
void 
SetIsFloating (
(( )
DependencyObject) 9
element: A
,A B
boolC G
valueH M
)M N
{ 	
element 
. 
SetValue 
( 
IsFloatingProperty /
,/ 0
value1 6
)6 7
;7 8
} 	
public 
static 
readonly 
DependencyProperty 1!
FloatingScaleProperty2 G
=H I
DependencyPropertyJ \
.\ ]
RegisterAttached] m
(m n
$str 
, 
typeof 
( 
double 
) 
, 
typeof   
(   

HintAssist   
)   
,   
new!! %
FrameworkPropertyMetadata!! )
(!!) *
$num!!* /
,!!/ 0,
 FrameworkPropertyMetadataOptions!!1 Q
.!!Q R
Inherits!!R Z
)!!Z [
)!![ \
;!!\ ]
public## 
static## 
double## 
GetFloatingScale## -
(##- .
DependencyObject##. >
element##? F
)##F G
{$$ 	
return%% 
(%% 
double%% 
)%% 
element%% "
.%%" #
GetValue%%# +
(%%+ ,!
FloatingScaleProperty%%, A
)%%A B
;%%B C
}&& 	
public(( 
static(( 
void(( 
SetFloatingScale(( +
(((+ ,
DependencyObject((, <
element((= D
,((D E
double((F L
value((M R
)((R S
{)) 	
element** 
.** 
SetValue** 
(** !
FloatingScaleProperty** 2
,**2 3
value**4 9
)**9 :
;**: ;
}++ 	
public-- 
static-- 
readonly-- 
DependencyProperty-- 1"
FloatingOffsetProperty--2 H
=--I J
DependencyProperty--K ]
.--] ^
RegisterAttached--^ n
(--n o
$str.. 
,.. 
typeof// 
(// 
Point// 
)// 
,// 
typeof00 
(00 

HintAssist00 
)00 
,00 
new11 %
FrameworkPropertyMetadata11 )
(11) *
new11* -
Point11. 3
(113 4
$num114 5
,115 6
-117 8
$num118 :
)11: ;
,11; <,
 FrameworkPropertyMetadataOptions11= ]
.11] ^
Inherits11^ f
)11f g
)11g h
;11h i
public33 
static33 
Point33 
GetFloatingOffset33 -
(33- .
DependencyObject33. >
element33? F
)33F G
{44 	
return55 
(55 
Point55 
)55 
element55 !
.55! "
GetValue55" *
(55* +"
FloatingOffsetProperty55+ A
)55A B
;55B C
}66 	
public88 
static88 
void88 
SetFloatingOffset88 ,
(88, -
DependencyObject88- =
element88> E
,88E F
Point88G L
value88M R
)88R S
{99 	
element:: 
.:: 
SetValue:: 
(:: "
FloatingOffsetProperty:: 3
,::3 4
value::5 :
)::: ;
;::; <
};; 	
publicCC 
staticCC 
readonlyCC 
DependencyPropertyCC 1
HintPropertyCC2 >
=CC? @
DependencyPropertyCCA S
.CCS T
RegisterAttachedCCT d
(CCd e
$strDD 
,DD 
typeofEE 
(EE 
objectEE 
)EE 
,EE 
typeofFF 
(FF 

HintAssistFF 
)FF 
,FF 
newGG %
FrameworkPropertyMetadataGG )
(GG) *
defaultGG* 1
(GG1 2
stringGG2 8
)GG8 9
,GG9 :,
 FrameworkPropertyMetadataOptionsGG; [
.GG[ \
InheritsGG\ d
)GGd e
)GGe f
;GGf g
publicNN 
staticNN 
voidNN 
SetHintNN "
(NN" #
DependencyObjectNN# 3
elementNN4 ;
,NN; <
objectNN= C
valueNND I
)NNI J
{OO 	
elementPP 
.PP 
SetValuePP 
(PP 
HintPropertyPP )
,PP) *
valuePP+ 0
)PP0 1
;PP1 2
}QQ 	
publicZZ 
staticZZ 
objectZZ 
GetHintZZ $
(ZZ$ %
DependencyObjectZZ% 5
elementZZ6 =
)ZZ= >
{[[ 	
return\\ 
element\\ 
.\\ 
GetValue\\ #
(\\# $
HintProperty\\$ 0
)\\0 1
;\\1 2
}]] 	
publicff 
staticff 
readonlyff 
DependencyPropertyff 1
HintOpacityPropertyff2 E
=ffF G
DependencyPropertyffH Z
.ffZ [
RegisterAttachedff[ k
(ffk l
$strgg 
,gg 
typeofhh 
(hh 
doublehh 
)hh 
,hh 
typeofii 
(ii 

HintAssistii 
)ii 
,ii 
newjj 
PropertyMetadatajj  
(jj  !
$numjj! $
)jj$ %
)jj% &
;jj& '
publicss 
staticss 
doubless "
GetHintOpacityPropertyss 3
(ss3 4
DependencyObjectss4 D
elementssE L
)ssL M
{tt 	
returnuu 
(uu 
doubleuu 
)uu 
elementuu "
.uu" #
GetValueuu# +
(uu+ ,
HintOpacityPropertyuu, ?
)uu? @
;uu@ A
}vv 	
public}} 
static}} 
void}} 
SetHintOpacity}} )
(}}) *
DependencyObject}}* :
element}}; B
,}}B C
double}}D J
value}}K P
)}}P Q
{~~ 	
element 
. 
SetValue 
( 
HintOpacityProperty 0
,0 1
value2 7
)7 8
;8 9
}
ÄÄ 	
}
ÉÉ 
}ÑÑ ä.
bD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\HintProxyFabric.PasswordBox.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
partial 
class 
HintProxyFabric  /
{ 
private 
sealed 
class  
PasswordBoxHintProxy 1
:2 3

IHintProxy4 >
{		 	
private

 
readonly

 
PasswordBox

 (
_passwordBox

) 5
;

5 6
public 
bool 
IsEmpty 
(  
)  !
=>" $
string% +
.+ ,
IsNullOrEmpty, 9
(9 :
_passwordBox: F
.F G
PasswordG O
)O P
;P Q
public 
object 
Content !
=>" $
_passwordBox% 1
.1 2
Password2 :
;: ;
public 
bool 
IsLoaded  
=>! #
_passwordBox$ 0
.0 1
IsLoaded1 9
;9 :
public 
bool 
	IsVisible !
=>" $
_passwordBox% 1
.1 2
	IsVisible2 ;
;; <
public 
bool 
	IsFocused !
(! "
)" #
=>$ &
_passwordBox' 3
.3 4
IsKeyboardFocused4 E
;E F
public 
event 
EventHandler %
ContentChanged& 4
;4 5
public 
event 
EventHandler %
IsVisibleChanged& 6
;6 7
public 
event 
EventHandler %
Loaded& ,
;, -
public 
event 
EventHandler %
FocusedChanged& 4
;4 5
public  
PasswordBoxHintProxy '
(' (
PasswordBox( 3
passwordBox4 ?
)? @
{ 
if 
( 
passwordBox 
==  "
null# '
)' (
throw) .
new/ 2!
ArgumentNullException3 H
(H I
nameofI O
(O P
passwordBoxP [
)[ \
)\ ]
;] ^
_passwordBox 
= 
passwordBox *
;* +
_passwordBox   
.   
PasswordChanged   ,
+=  - /&
PasswordBoxPasswordChanged  0 J
;  J K
_passwordBox!! 
.!! 
Loaded!! #
+=!!$ &
PasswordBoxLoaded!!' 8
;!!8 9
_passwordBox"" 
."" 
IsVisibleChanged"" -
+="". 0'
PasswordBoxIsVisibleChanged""1 L
;""L M
_passwordBox## 
.## $
IsKeyboardFocusedChanged## 5
+=##6 8/
#PasswordBoxIsKeyboardFocusedChanged##9 \
;##\ ]
}$$ 
private&& 
void&& /
#PasswordBoxIsKeyboardFocusedChanged&& <
(&&< =
object&&= C
sender&&D J
,&&J K
System&&L R
.&&R S
Windows&&S Z
.&&Z [.
"DependencyPropertyChangedEventArgs&&[ }
e&&~ 
)	&& Ä
{'' 
FocusedChanged(( 
?(( 
.((  
Invoke((  &
(((& '
this((' +
,((+ ,
	EventArgs((- 6
.((6 7
Empty((7 <
)((< =
;((= >
})) 
private++ 
void++ '
PasswordBoxIsVisibleChanged++ 4
(++4 5
object++5 ;
sender++< B
,++B C
System++D J
.++J K
Windows++K R
.++R S.
"DependencyPropertyChangedEventArgs++S u
e++v w
)++w x
{,, 
IsVisibleChanged--  
?--  !
.--! "
Invoke--" (
(--( )
this--) -
,--- .
	EventArgs--/ 8
.--8 9
Empty--9 >
)--> ?
;--? @
}.. 
private00 
void00 
PasswordBoxLoaded00 *
(00* +
object00+ 1
sender002 8
,008 9
System00: @
.00@ A
Windows00A H
.00H I
RoutedEventArgs00I X
e00Y Z
)00Z [
{11 
Loaded22 
?22 
.22 
Invoke22 
(22 
this22 #
,22# $
	EventArgs22% .
.22. /
Empty22/ 4
)224 5
;225 6
}33 
private55 
void55 &
PasswordBoxPasswordChanged55 3
(553 4
object554 :
sender55; A
,55A B
System55C I
.55I J
Windows55J Q
.55Q R
RoutedEventArgs55R a
e55b c
)55c d
{66 
ContentChanged77 
?77 
.77  
Invoke77  &
(77& '
this77' +
,77+ ,
	EventArgs77- 6
.776 7
Empty777 <
)77< =
;77= >
}88 
public:: 
void:: 
Dispose:: 
(::  
)::  !
{;; 
_passwordBox<< 
.<< 
PasswordChanged<< ,
-=<<- /&
PasswordBoxPasswordChanged<<0 J
;<<J K
_passwordBox== 
.== 
Loaded== #
-===$ &
PasswordBoxLoaded==' 8
;==8 9
_passwordBox>> 
.>> 
IsVisibleChanged>> -
-=>>. 0'
PasswordBoxIsVisibleChanged>>1 L
;>>L M
_passwordBox?? 
.?? $
IsKeyboardFocusedChanged?? 5
-=??6 8/
#PasswordBoxIsKeyboardFocusedChanged??9 \
;??\ ]
}@@ 
}BB 	
}CC 
}DD Œ*
^D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\HintProxyFabric.TextBox.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
partial 
class 
HintProxyFabric  /
{ 
private		 
sealed		 
class		 
TextBoxHintProxy		 -
:		. /

IHintProxy		0 :
{

 	
private 
readonly 
TextBox $
_textBox% -
;- .
public 
object 
Content !
=>" $
_textBox% -
.- .
Text. 2
;2 3
public 
bool 
IsLoaded  
=>! #
_textBox$ ,
., -
IsLoaded- 5
;5 6
public 
bool 
	IsVisible !
=>" $
_textBox% -
.- .
	IsVisible. 7
;7 8
public 
bool 
IsEmpty 
(  
)  !
=>" $
string% +
.+ ,
IsNullOrEmpty, 9
(9 :
_textBox: B
.B C
TextC G
)G H
;H I
public 
bool 
	IsFocused !
(! "
)" #
=>$ &
_textBox' /
./ 0
IsKeyboardFocused0 A
;A B
public 
event 
EventHandler %
ContentChanged& 4
;4 5
public 
event 
EventHandler %
IsVisibleChanged& 6
;6 7
public 
event 
EventHandler %
Loaded& ,
;, -
public 
event 
EventHandler %
FocusedChanged& 4
;4 5
public 
TextBoxHintProxy #
(# $
TextBox$ +
textBox, 3
)3 4
{ 
if 
( 
textBox 
== 
null #
)# $
throw% *
new+ .!
ArgumentNullException/ D
(D E
nameofE K
(K L
textBoxL S
)S T
)T U
;U V
_textBox   
=   
textBox   "
;  " #
_textBox!! 
.!! 
TextChanged!! $
+=!!% '
TextBoxTextChanged!!( :
;!!: ;
_textBox"" 
."" 
Loaded"" 
+=""  "
TextBoxLoaded""# 0
;""0 1
_textBox## 
.## 
IsVisibleChanged## )
+=##* ,#
TextBoxIsVisibleChanged##- D
;##D E
_textBox$$ 
.$$ $
IsKeyboardFocusedChanged$$ 1
+=$$2 4+
TextBoxIsKeyboardFocusedChanged$$5 T
;$$T U
}%% 
private'' 
void'' +
TextBoxIsKeyboardFocusedChanged'' 8
(''8 9
object''9 ?
sender''@ F
,''F G.
"DependencyPropertyChangedEventArgs''H j
e''k l
)''l m
{(( 
FocusedChanged)) 
?)) 
.))  
Invoke))  &
())& '
sender))' -
,))- .
	EventArgs))/ 8
.))8 9
Empty))9 >
)))> ?
;))? @
}** 
private,, 
void,, #
TextBoxIsVisibleChanged,, 0
(,,0 1
object,,1 7
sender,,8 >
,,,> ?.
"DependencyPropertyChangedEventArgs,,@ b
e,,c d
),,d e
{-- 
IsVisibleChanged..  
?..  !
...! "
Invoke.." (
(..( )
sender..) /
,../ 0
	EventArgs..1 :
...: ;
Empty..; @
)..@ A
;..A B
}// 
private11 
void11 
TextBoxLoaded11 &
(11& '
object11' -
sender11. 4
,114 5
RoutedEventArgs116 E
e11F G
)11G H
{22 
Loaded33 
?33 
.33 
Invoke33 
(33 
sender33 %
,33% &
	EventArgs33' 0
.330 1
Empty331 6
)336 7
;337 8
}44 
private66 
void66 
TextBoxTextChanged66 +
(66+ ,
object66, 2
sender663 9
,669 : 
TextChangedEventArgs66; O
e66P Q
)66Q R
{77 
ContentChanged88 
?88 
.88  
Invoke88  &
(88& '
sender88' -
,88- .
	EventArgs88/ 8
.888 9
Empty889 >
)88> ?
;88? @
}99 
public;; 
void;; 
Dispose;; 
(;;  
);;  !
{<< 
_textBox== 
.== 
TextChanged== $
-===% '
TextBoxTextChanged==( :
;==: ;
_textBox>> 
.>> 
Loaded>> 
-=>>  "
TextBoxLoaded>># 0
;>>0 1
_textBox?? 
.?? 
IsVisibleChanged?? )
-=??* ,#
TextBoxIsVisibleChanged??- D
;??D E
_textBox@@ 
.@@ $
IsKeyboardFocusedChanged@@ 1
-=@@2 4+
TextBoxIsKeyboardFocusedChanged@@5 T
;@@T U
}AA 
}BB 	
}CC 
}DD Õ;
_D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\HintProxyFabric.ComboBox.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
{ 
public 

static 
partial 
class 
HintProxyFabric  /
{ 
private 
sealed 
class 
ComboBoxHintProxy .
:/ 0

IHintProxy1 ;
{ 	
private 
readonly 
ComboBox %
	_comboBox& /
;/ 0
private 
readonly #
TextChangedEventHandler 4,
 _comboBoxTextChangedEventHandler5 U
;U V
public 
ComboBoxHintProxy $
($ %
ComboBox% -
comboBox. 6
)6 7
{ 
if 
( 
comboBox 
== 
null  $
)$ %
throw& +
new, /!
ArgumentNullException0 E
(E F
nameofF L
(L M
comboBoxM U
)U V
)V W
;W X
	_comboBox 
= 
comboBox $
;$ %,
 _comboBoxTextChangedEventHandler 0
=1 2
ComboBoxTextChanged3 F
;F G
	_comboBox 
. 

AddHandler $
($ %
TextBoxBase% 0
.0 1
TextChangedEvent1 A
,A B,
 _comboBoxTextChangedEventHandlerC c
)c d
;d e
	_comboBox 
. 
SelectionChanged *
+=+ -$
ComboBoxSelectionChanged. F
;F G
	_comboBox 
. 
Loaded  
+=! #
ComboBoxLoaded$ 2
;2 3
	_comboBox 
. 
IsVisibleChanged *
+=+ -$
ComboBoxIsVisibleChanged. F
;F G
	_comboBox 
. (
IsKeyboardFocusWithinChanged 6
+=7 90
$ComboBoxIsKeyboardFocusWithinChanged: ^
;^ _
} 
public   
object   
Content   !
{!! 
get"" 
{## 
if$$ 
($$ 
	_comboBox$$ !
.$$! "

IsEditable$$" ,
)$$, -
{%% 
return&& 
	_comboBox&& (
.&&( )
Text&&) -
;&&- .
}'' 
var)) 
comboBoxItem)) $
=))% &
	_comboBox))' 0
.))0 1
SelectedItem))1 =
as))> @
ComboBoxItem))A M
;))M N
return** 
comboBoxItem** '
!=**( *
null**+ /
?++ 
comboBoxItem++ &
.++& '
Content++' .
:,, 
	_comboBox,, #
.,,# $
SelectedItem,,$ 0
;,,0 1
}-- 
}.. 
public00 
bool00 
IsLoaded00  
=>00! #
	_comboBox00$ -
.00- .
IsLoaded00. 6
;006 7
public22 
bool22 
	IsVisible22 !
=>22" $
	_comboBox22% .
.22. /
	IsVisible22/ 8
;228 9
public44 
bool44 
IsEmpty44 
(44  
)44  !
=>44" $
string44% +
.44+ ,
IsNullOrEmpty44, 9
(449 :
	_comboBox44: C
.44C D
Text44D H
)44H I
;44I J
public66 
bool66 
	IsFocused66 !
(66! "
)66" #
=>66$ &
	_comboBox66' 0
.660 1

IsEditable661 ;
&&66< >
	_comboBox66? H
.66H I!
IsKeyboardFocusWithin66I ^
;66^ _
public88 
event88 
EventHandler88 %
ContentChanged88& 4
;884 5
public:: 
event:: 
EventHandler:: %
IsVisibleChanged::& 6
;::6 7
public<< 
event<< 
EventHandler<< %
Loaded<<& ,
;<<, -
public== 
event== 
EventHandler== %
FocusedChanged==& 4
;==4 5
private?? 
void?? $
ComboBoxSelectionChanged?? 1
(??1 2
object??2 8
sender??9 ?
,??? @%
SelectionChangedEventArgs??A Z
e??[ \
)??\ ]
{@@ 
	_comboBoxAA 
.AA 

DispatcherAA $
.AA$ %
InvokeAsyncAA% 0
(AA0 1
(AA1 2
)AA2 3
=>AA4 6
ContentChangedAA7 E
?AAE F
.AAF G
InvokeAAG M
(AAM N
senderAAN T
,AAT U
	EventArgsAAV _
.AA_ `
EmptyAA` e
)AAe f
)AAf g
;AAg h
}BB 
privateDD 
voidDD $
ComboBoxIsVisibleChangedDD 1
(DD1 2
objectDD2 8
senderDD9 ?
,DD? @.
"DependencyPropertyChangedEventArgsDDA c
eDDd e
)DDe f
{EE 
IsVisibleChangedFF  
?FF  !
.FF! "
InvokeFF" (
(FF( )
senderFF) /
,FF/ 0
	EventArgsFF1 :
.FF: ;
EmptyFF; @
)FF@ A
;FFA B
}GG 
privateII 
voidII 
ComboBoxLoadedII '
(II' (
objectII( .
senderII/ 5
,II5 6
RoutedEventArgsII7 F
eIIG H
)IIH I
{JJ 
LoadedKK 
?KK 
.KK 
InvokeKK 
(KK 
senderKK %
,KK% &
	EventArgsKK' 0
.KK0 1
EmptyKK1 6
)KK6 7
;KK7 8
}LL 
privateNN 
voidNN 
ComboBoxTextChangedNN ,
(NN, -
objectNN- 3
senderNN4 :
,NN: ; 
TextChangedEventArgsNN< P
eNNQ R
)NNR S
{OO 
ContentChangedPP 
?PP 
.PP  
InvokePP  &
(PP& '
senderPP' -
,PP- .
	EventArgsPP/ 8
.PP8 9
EmptyPP9 >
)PP> ?
;PP? @
}QQ 
privateSS 
voidSS 0
$ComboBoxIsKeyboardFocusWithinChangedSS =
(SS= >
objectSS> D
senderSSE K
,SSK L.
"DependencyPropertyChangedEventArgsSSM o
eSSp q
)SSq r
{TT 
FocusedChangedUU 
?UU 
.UU  
InvokeUU  &
(UU& '
senderUU' -
,UU- .
	EventArgsUU/ 8
.UU8 9
EmptyUU9 >
)UU> ?
;UU? @
}VV 
publicXX 
voidXX 
DisposeXX 
(XX  
)XX  !
{YY 
	_comboBoxZZ 
.ZZ 
RemoveHandlerZZ '
(ZZ' (
TextBoxBaseZZ( 3
.ZZ3 4
TextChangedEventZZ4 D
,ZZD E,
 _comboBoxTextChangedEventHandlerZZF f
)ZZf g
;ZZg h
	_comboBox[[ 
.[[ 
Loaded[[  
-=[[! #
ComboBoxLoaded[[$ 2
;[[2 3
	_comboBox\\ 
.\\ 
IsVisibleChanged\\ *
-=\\+ -$
ComboBoxIsVisibleChanged\\. F
;\\F G
	_comboBox]] 
.]] 
SelectionChanged]] *
-=]]+ -$
ComboBoxSelectionChanged]]. F
;]]F G
	_comboBox^^ 
.^^ (
IsKeyboardFocusWithinChanged^^ 6
-=^^7 90
$ComboBoxIsKeyboardFocusWithinChanged^^: ^
;^^^ _
}__ 
}`` 	
}aa 
}bb §,
VD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\HintProxyFabric.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{		 
public

 

static

 
partial

 
class

 
HintProxyFabric

  /
{ 
private 
sealed 
class 
HintProxyBuilder -
{ 	
private 
readonly 
Func !
<! "
Control" )
,) *
bool+ /
>/ 0
	_canBuild1 :
;: ;
private 
readonly 
Func !
<! "
Control" )
,) *

IHintProxy+ 5
>5 6
_build7 =
;= >
public 
HintProxyBuilder #
(# $
Func$ (
<( )
Control) 0
,0 1
bool2 6
>6 7
canBuild8 @
,@ A
FuncB F
<F G
ControlG N
,N O

IHintProxyP Z
>Z [
build\ a
)a b
{ 
if 
( 
canBuild 
== 
null  $
)$ %
throw& +
new, /!
ArgumentNullException0 E
(E F
nameofF L
(L M
canBuildM U
)U V
)V W
;W X
if 
( 
build 
== 
null !
)! "
throw# (
new) ,!
ArgumentNullException- B
(B C
nameofC I
(I J
buildJ O
)O P
)P Q
;Q R
	_canBuild 
= 
canBuild $
;$ %
_build 
= 
build 
; 
} 
public 
bool 
CanBuild  
(  !
Control! (
control) 0
)0 1
=>2 4
	_canBuild5 >
(> ?
control? F
)F G
;G H
public 

IHintProxy 
Build #
(# $
Control$ +
control, 3
)3 4
=>5 7
_build8 >
(> ?
control? F
)F G
;G H
} 	
private 
static 
readonly 
List  $
<$ %
HintProxyBuilder% 5
>5 6
Builders7 ?
=@ A
newB E
ListF J
<J K
HintProxyBuilderK [
>[ \
(\ ]
)] ^
;^ _
static   
HintProxyFabric   
(   
)    
{!! 	
Builders"" 
."" 
Add"" 
("" 
new"" 
HintProxyBuilder"" -
(""- .
c"". /
=>""0 2
c""3 4
is""5 7
ComboBox""8 @
,""@ A
c""B C
=>""D F
new""G J
ComboBoxHintProxy""K \
(""\ ]
(""] ^
ComboBox""^ f
)""f g
c""h i
)""i j
)""j k
)""k l
;""l m
Builders## 
.## 
Add## 
(## 
new## 
HintProxyBuilder## -
(##- .
c##. /
=>##0 2
c##3 4
is##5 7
TextBox##8 ?
,##? @
c##A B
=>##C E
new##F I
TextBoxHintProxy##J Z
(##Z [
(##[ \
TextBox##\ c
)##c d
c##d e
)##e f
)##f g
)##g h
;##h i
Builders$$ 
.$$ 
Add$$ 
($$ 
new$$ 
HintProxyBuilder$$ -
($$- .
c$$. /
=>$$0 2
c$$3 4
is$$5 7
PasswordBox$$8 C
,$$C D
c$$E F
=>$$G I
new$$J M 
PasswordBoxHintProxy$$N b
($$b c
($$c d
PasswordBox$$d o
)$$o p
c$$p q
)$$q r
)$$r s
)$$s t
;$$t u
}%% 	
public'' 
static'' 
void'' 
RegisterBuilder'' *
(''* +
Func''+ /
<''/ 0
Control''0 7
,''7 8
bool''9 =
>''= >
canBuild''? G
,''G H
Func''I M
<''M N
Control''N U
,''U V

IHintProxy''W a
>''a b
build''c h
)''h i
{(( 	
Builders)) 
.)) 
Add)) 
()) 
new)) 
HintProxyBuilder)) -
())- .
canBuild)). 6
,))6 7
build))8 =
)))= >
)))> ?
;))? @
}** 	
public,, 
static,, 

IHintProxy,,  
Get,,! $
(,,$ %
Control,,% ,
control,,- 4
),,4 5
{-- 	
var.. 
builder.. 
=.. 
Builders.. "
..." #
FirstOrDefault..# 1
(..1 2
v..2 3
=>..4 6
v..7 8
...8 9
CanBuild..9 A
(..A B
control..B I
)..I J
)..J K
;..K L
if00 
(00 
builder00 
==00 
null00 
)00  
throw00! &
new00' *#
NotImplementedException00+ B
(00B C
)00C D
;00D E
return22 
builder22 
.22 
Build22  
(22  !
control22! (
)22( )
;22) *
}33 	
}44 
}55 °
KD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Icon.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class 
Icon 
: 
Control 
{ 
public 
static 
readonly 
DependencyProperty 1
TypeProperty2 >
=? @
DependencyPropertyA S
.S T
RegisterT \
(\ ]
nameof 
( 
Type 
) 
, 
typeof  
(! "
IconType" *
)* +
,+ ,
typeof- 3
(4 5
Icon5 9
)9 :
,: ;
new< ?
PropertyMetadata@ P
(P Q
defaultQ X
(X Y
IconTypeY a
)a b
)b c
)c d
;d e
public 
IconType 
Type 
{ 	
get 
{ 
return 
( 
IconType "
)" #
GetValue$ ,
(, -
TypeProperty- 9
)9 :
;: ;
}< =
set 
{ 
SetValue 
( 
TypeProperty '
,' (
value) .
). /
;/ 0
}1 2
} 	
} 
} ¡
OD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\IconType.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public

 

enum

 
IconType

 
{ #
AutoGeneratedDoNotAmend 
} 
} ø
\D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ISnackbarMessageQueue.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

	interface !
ISnackbarMessageQueue *
{ 
void 
Enqueue 
( 
object 
content #
)# $
;$ %
void 
Enqueue 
( 
object 
content #
,# $
object% +
actionContent, 9
,9 :
Action; A
actionHandlerB O
)O P
;P Q
void 
Enqueue 
< 
	TArgument 
> 
(  
object  &
content' .
,. /
object0 6
actionContent7 D
,D E
ActionF L
<L M
	TArgumentM V
>V W
actionHandlerX e
,e f
	TArgumentg p
actionArgumentq 
)	 Ä
;
Ä Å
void$$ 
Enqueue$$ 
($$ 
object$$ 
content$$ #
,$$# $
bool$$% )&
neverConsiderToBeDuplicate$$* D
)$$D E
;$$E F
void-- 
Enqueue-- 
(-- 
object-- 
content-- #
,--# $
object--% +
actionContent--, 9
,--9 :
Action--; A
actionHandler--B O
,--O P
bool--Q U
promote--V ]
)--] ^
;--^ _
void77 
Enqueue77 
<77 
	TArgument77 
>77 
(77  
object77  &
content77' .
,77. /
object770 6
actionContent777 D
,77D E
Action77F L
<77L M
	TArgument77M V
>77V W
actionHandler77X e
,77e f
	TArgument77g p
actionArgument77q 
,	77 Ä
bool
77Å Ö
promote
77Ü ç
)
77ç é
;
77é è
voidBB 
EnqueueBB 
<BB 
	TArgumentBB 
>BB 
(BB  
objectBB  &
contentBB' .
,BB. /
objectBB0 6
actionContentBB7 D
,BBD E
ActionBBF L
<BBL M
	TArgumentBBM V
>BBV W
actionHandlerBBX e
,BBe f
	TArgumentCC 
actionArgumentCC $
,CC$ %
boolCC& *
promoteCC+ 2
,CC2 3
boolCC4 8&
neverConsiderToBeDuplicateCC9 S
)CCS T
;CCT U
voidNN 
EnqueueNN 
(NN 
objectNN 
contentNN #
,NN# $
objectNN% +
actionContentNN, 9
,NN9 :
ActionNN; A
<NNA B
objectNNB H
>NNH I
actionHandlerNNJ W
,NNW X
objectNNY _
actionArgumentNN` n
,NNn o
boolOO 
promoteOO 
,OO 
boolOO &
neverConsiderToBeDuplicateOO 9
)OO9 :
;OO: ;
}PP 
}QQ ∏-
TD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ListBoxAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
ListBoxAssist %
{ 
static 
ListBoxAssist 
( 
) 
{ 	
EventManager 
.  
RegisterClassHandler -
(- .
typeof. 4
(5 6
ListBox6 =
)= >
,> ?
	UIElement@ I
.I J+
PreviewMouseLeftButtonDownEventJ i
,i j
new #
MouseButtonEventHandler +
(+ ,#
ListBoxMouseButtonEvent, C
)C D
)D E
;E F
} 	
private 
static 
void #
ListBoxMouseButtonEvent 3
(3 4
object4 :
sender; A
,A B 
MouseButtonEventArgsC W 
mouseButtonEventArgsX l
)l m
{ 	
var 
senderElement 
= 
(  !
	UIElement! *
)* +
sender, 2
;2 3
if 
( 
! 
GetIsToggle 
( 
senderElement *
)* +
)+ ,
return- 3
;3 4
var 
point 
=  
mouseButtonEventArgs ,
., -
GetPosition- 8
(8 9
senderElement9 F
)F G
;G H
var 
result 
= 
VisualTreeHelper )
.) *
HitTest* 1
(1 2
senderElement2 ?
,? @
pointA F
)F G
;G H
if 
( 
result 
== 
null 
) 
return  &
;& '
ListBoxItem   
listBoxItem   #
=  $ %
null  & *
;  * +
Ripple!! 
ripple!! 
=!! 
null!!  
;!!  !
foreach"" 
("" 
var"" 
dependencyObject"" )
in""* ,
result""- 3
.""3 4
	VisualHit""4 =
.""= >
GetVisualAncestry""> O
(""O P
)""P Q
.""Q R
	TakeWhile""R [
(""[ \
_""\ ]
=>""^ `
listBoxItem""a l
==""m o
null""p t
)""t u
)""u v
{## 
listBoxItem$$ 
=$$ 
dependencyObject$$ .
as$$/ 1
ListBoxItem$$2 =
;$$= >
if%% 
(%% 
ripple%% 
==%% 
null%% "
)%%" #
ripple&& 
=&& 
dependencyObject&& -
as&&. 0
Ripple&&1 7
;&&7 8
}'' 
if)) 
()) 
listBoxItem)) 
==)) 
null)) #
)))# $
return))% +
;))+ ,
listBoxItem++ 
.++ 
SetCurrentValue++ '
(++' (
ListBoxItem++( 3
.++3 4
IsSelectedProperty++4 F
,++F G
!++H I
listBoxItem++I T
.++T U

IsSelected++U _
)++_ `
;++` a 
mouseButtonEventArgs,,  
.,,  !
Handled,,! (
=,,) *
true,,+ /
;,,/ 0
if.. 
(.. 
ripple.. 
!=.. 
null.. 
&&.. !
listBoxItem.." -
...- .

IsSelected... 8
)..8 9
{// 
ripple00 
.00 

RaiseEvent00 !
(00! "
new00" % 
MouseButtonEventArgs00& :
(00: ; 
mouseButtonEventArgs00; O
.00O P
MouseDevice00P [
,00[ \ 
mouseButtonEventArgs00] q
.00q r
	Timestamp00r {
,00{ |!
mouseButtonEventArgs	00} ë
.
00ë í
ChangedButton
00í ü
)
00ü †
{11 
RoutedEvent11 
=11 
Control11  '
.11' (+
PreviewMouseLeftButtonDownEvent11( G
,11G H
Source11I O
=11P Q
ripple11R X
}11Y Z
)22 
;22 
}33 
}44 	
public66 
static66 
readonly66 
DependencyProperty66 1
IsToggleProperty662 B
=66C D
DependencyProperty66E W
.66W X
RegisterAttached66X h
(66h i
$str77 
,77 
typeof77 
(77 
bool77 #
)77# $
,77$ %
typeof77& ,
(77, -
ListBoxAssist77- :
)77: ;
,77; <
new77= @%
FrameworkPropertyMetadata77A Z
(77Z [
default77[ b
(77b c
bool77c g
)77g h
)77h i
)77i j
;77j k
public99 
static99 
void99 
SetIsToggle99 &
(99& '
DependencyObject99' 7
element998 ?
,99? @
bool99A E
value99F K
)99K L
{:: 	
element;; 
.;; 
SetValue;; 
(;; 
IsToggleProperty;; -
,;;- .
value;;/ 4
);;4 5
;;;5 6
}<< 	
public>> 
static>> 
bool>> 
GetIsToggle>> &
(>>& '
DependencyObject>>' 7
element>>8 ?
)>>? @
{?? 	
return@@ 
(@@ 
bool@@ 
)@@ 
element@@  
.@@  !
GetValue@@! )
(@@) *
IsToggleProperty@@* :
)@@: ;
;@@; <
}AA 	
}BB 
}CC ˘
UD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ListViewAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
ListViewAssist &
{ 
public 
static 
readonly 
DependencyProperty 1'
ListViewItemPaddingProperty2 M
=N O
DependencyPropertyP b
.b c
RegisterAttachedc s
(s t
$str		 !
,		! "
typeof

 
(

 
	Thickness

 
)

 
,

 
typeof 
( 
ListViewAssist !
)! "
," #
new %
FrameworkPropertyMetadata )
() *
new* -
	Thickness. 7
(7 8
$num8 9
,9 :
$num; <
,< =
$num> ?
,? @
$numA B
)B C
,C D,
 FrameworkPropertyMetadataOptionsE e
.e f
Inheritsf n
)n o
)o p
;p q
public 
static 
void "
SetListViewItemPadding 1
(1 2
DependencyObject2 B
elementC J
,J K
	ThicknessL U
valueV [
)[ \
{ 	
element 
. 
SetValue 
( '
ListViewItemPaddingProperty 8
,8 9
value: ?
)? @
;@ A
} 	
public 
static 
	Thickness "
GetListViewItemPadding  6
(6 7
DependencyObject7 G
elementH O
)O P
{ 	
return 
( 
	Thickness 
) 
element %
.% &
GetValue& .
(. /'
ListViewItemPaddingProperty/ J
)J K
;K L
} 	
} 
} ›
\D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\MessageQueueExtension.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[		 %
MarkupExtensionReturnType		 
(		 
typeof		 %
(		% & 
SnackbarMessageQueue		& :
)		: ;
)		; <
]		< =
public

 

class

 !
MessageQueueExtension

 &
:

' (
MarkupExtension

) 8
{ 
public 
override 
object 
ProvideValue +
(+ ,
IServiceProvider, <
serviceProvider= L
)L M
{ 	
return 
new  
SnackbarMessageQueue +
(+ ,
), -
;- .
} 	
} 
} û
XD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\PackIconExtension.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[ %
MarkupExtensionReturnType 
( 
typeof %
(% &
PackIcon& .
). /
)/ 0
]0 1
public 

class 
PackIconExtension "
:# $
MarkupExtension% 4
{ 
public		 
PackIconExtension		  
(		  !
)		! "
{

 	
}


 
public 
PackIconExtension  
(  !
PackIconKind! -
kind. 2
)2 3
{ 	
Kind 
= 
kind 
; 
} 	
public 
PackIconExtension  
(  !
PackIconKind! -
kind. 2
,2 3
double4 :
size; ?
)? @
{ 	
Kind 
= 
kind 
; 
Size 
= 
size 
; 
} 	
[ 	
ConstructorArgument	 
( 
$str #
)# $
]$ %
public 
PackIconKind 
Kind  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
ConstructorArgument	 
( 
$str #
)# $
]$ %
public 
double 
? 
Size 
{ 
get !
;! "
set# &
;& '
}( )
public 
override 
object 
ProvideValue +
(+ ,
IServiceProvider, <
serviceProvider= L
)L M
{ 	
var 
result 
= 
new 
PackIcon %
{& '
Kind' +
=, -
Kind. 2
}2 3
;3 4
if!! 
(!! 
Size!! 
.!! 
HasValue!! 
)!! 
{"" 
result## 
.## 
Height## 
=## 
Size##  $
.##$ %
Value##% *
;##* +
result$$ 
.$$ 
Width$$ 
=$$ 
Size$$ #
.$$# $
Value$$$ )
;$$) *
}%% 
return'' 
result'' 
;'' 
}(( 	
})) 
}** ú
ND:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Palette.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class 
Palette 
{		 
public

 
Palette

 
(

 
Swatch

 
primarySwatch

 +
,

+ ,
Swatch

- 3
accentSwatch

4 @
,

@ A
int

B E 
primaryLightHueIndex

F Z
,

Z [
int

\ _
primaryMidHueIndex

` r
,

r s
int

t w 
primaryDarkHueIndex	

x ã
,


ã å
int


ç ê
accentHueIndex


ë ü
)


ü †
{ 	
PrimarySwatch 
= 
primarySwatch )
;) *
AccentSwatch 
= 
accentSwatch '
;' ( 
PrimaryLightHueIndex  
=! " 
primaryLightHueIndex# 7
;7 8
PrimaryMidHueIndex 
=  
primaryMidHueIndex! 3
;3 4
PrimaryDarkHueIndex 
=  !
primaryDarkHueIndex" 5
;5 6
AccentHueIndex 
= 
accentHueIndex +
;+ ,
} 	
public 
Swatch 
PrimarySwatch #
{$ %
get& )
;) *
}+ ,
public 
Swatch 
AccentSwatch "
{# $
get% (
;( )
}* +
public 
int  
PrimaryLightHueIndex '
{( )
get* -
;- .
}/ 0
public 
int 
PrimaryMidHueIndex %
{& '
get( +
;+ ,
}- .
public 
int 
PrimaryDarkHueIndex &
{' (
get) ,
;, -
}. /
public 
int 
AccentHueIndex !
{" #
get$ '
;' (
}) *
} 
}   ËÕ
ND:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Plane3D.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{		 
[ 
ContentProperty 
( 
$str 
) 
] 
public 

class 
Plane3D 
: 
FrameworkElement +
{ 
private 
FrameworkElement  
_logicalChild! .
;. /
private 
FrameworkElement  
_visualChild! -
;- .
private 
FrameworkElement  
_originalChild! /
;/ 0
private 
readonly  
QuaternionRotation3D -
_quaternionRotation. A
=B C
newD G 
QuaternionRotation3DH \
(\ ]
)] ^
;^ _
private 
readonly 
RotateTransform3D *
_rotationTransform+ =
=> ?
new@ C
RotateTransform3DD U
(U V
)V W
;W X
private 

Viewport3D 
_viewport3D &
;& '
private 
readonly 
ScaleTransform3D )
_scaleTransform* 9
=: ;
new< ?
ScaleTransform3D@ P
(P Q
)Q R
;R S
private 
static 
readonly 
Point3D  '
[' (
]( )
Mesh* .
=/ 0
{1 2
new3 6
Point3D7 >
(> ?
$num? @
,@ A
$numB C
,C D
$numE F
)F G
,G H
newI L
Point3DM T
(T U
$numU V
,V W
$numX Y
,Y Z
$num[ \
)\ ]
,] ^
new_ b
Point3Dc j
(j k
$numk l
,l m
$numn o
,o p
$numq r
)r s
,s t
newu x
Point3D	y Ä
(
Ä Å
$num
Å Ç
,
Ç É
$num
Ñ Ö
,
Ö Ü
$num
á à
)
à â
}
ä ã
;
ã å
private 
static 
readonly 
Point  %
[% &
]& '
	TexCoords( 1
=2 3
{4 5
new6 9
Point: ?
(? @
$num@ A
,A B
$numC D
)D E
,E F
newG J
PointK P
(P Q
$numQ R
,R S
$numT U
)U V
,V W
newX [
Point\ a
(a b
$numb c
,c d
$nume f
)f g
,g h
newi l
Pointm r
(r s
$nums t
,t u
$numv w
)w x
}y z
;z {
private 
static 
readonly 
int  #
[# $
]$ %
Indices& -
=. /
{0 1
$num2 3
,3 4
$num5 6
,6 7
$num8 9
,9 :
$num; <
,< =
$num> ?
,? @
$numA B
}C D
;D E
private 
static 
readonly 
Vector3D  (
XAxis) .
=/ 0
new1 4
Vector3D5 =
(= >
$num> ?
,? @
$numA B
,B C
$numD E
)E F
;F G
private   
static   
readonly   
Vector3D    (
YAxis  ) .
=  / 0
new  1 4
Vector3D  5 =
(  = >
$num  > ?
,  ? @
$num  A B
,  B C
$num  D E
)  E F
;  F G
private!! 
static!! 
readonly!! 
Vector3D!!  (
ZAxis!!) .
=!!/ 0
new!!1 4
Vector3D!!5 =
(!!= >
$num!!> ?
,!!? @
$num!!A B
,!!B C
$num!!D E
)!!E F
;!!F G
public$$ 
static$$ 
readonly$$ 
DependencyProperty$$ 1
RotationXProperty$$2 C
=$$D E
DependencyProperty%% 
.%% 
Register%% '
(%%' (
$str%%( 3
,%%3 4
typeof%%5 ;
(%%; <
double%%< B
)%%B C
,%%C D
typeof%%E K
(%%K L
Plane3D%%L S
)%%S T
,%%T U
new%%V Y
UIPropertyMetadata%%Z l
(%%l m
$num%%m p
,%%p q
(%%r s
d%%s t
,%%t u
args%%v z
)%%z {
=>%%| ~
(	%% Ä
(
%%Ä Å
Plane3D
%%Å à
)
%%à â
d
%%â ä
)
%%ä ã
.
%%ã å
UpdateRotation
%%å ö
(
%%ö õ
)
%%õ ú
)
%%ú ù
)
%%ù û
;
%%û ü
public'' 
double'' 
	RotationX'' 
{(( 	
get)) 
{)) 
return)) 
()) 
double))  
)))  !
GetValue))! )
())) *
RotationXProperty))* ;
))); <
;))< =
}))> ?
set** 
{** 
SetValue** 
(** 
RotationXProperty** ,
,**, -
value**. 3
)**3 4
;**4 5
}**6 7
}++ 	
public-- 
static-- 
readonly-- 
DependencyProperty-- 1
RotationYProperty--2 C
=--D E
DependencyProperty.. 
... 
Register.. '
(..' (
$str..( 3
,..3 4
typeof..5 ;
(..; <
double..< B
)..B C
,..C D
typeof..E K
(..K L
Plane3D..L S
)..S T
,..T U
new..V Y
UIPropertyMetadata..Z l
(..l m
$num..m p
,..p q
(..r s
d..s t
,..t u
args..v z
)..z {
=>..| ~
(	.. Ä
(
..Ä Å
Plane3D
..Å à
)
..à â
d
..â ä
)
..ä ã
.
..ã å
UpdateRotation
..å ö
(
..ö õ
)
..õ ú
)
..ú ù
)
..ù û
;
..û ü
public00 
double00 
	RotationY00 
{11 	
get22 
{22 
return22 
(22 
double22  
)22  !
GetValue22! )
(22) *
RotationYProperty22* ;
)22; <
;22< =
}22> ?
set33 
{33 
SetValue33 
(33 
RotationYProperty33 ,
,33, -
value33. 3
)333 4
;334 5
}336 7
}44 	
public66 
static66 
readonly66 
DependencyProperty66 1
RotationZProperty662 C
=66D E
DependencyProperty77 
.77 
Register77 '
(77' (
$str77( 3
,773 4
typeof775 ;
(77; <
double77< B
)77B C
,77C D
typeof77E K
(77K L
Plane3D77L S
)77S T
,77T U
new77V Y
UIPropertyMetadata77Z l
(77l m
$num77m p
,77p q
(77r s
d77s t
,77t u
args77v z
)77z {
=>77| ~
(	77 Ä
(
77Ä Å
Plane3D
77Å à
)
77à â
d
77â ä
)
77ä ã
.
77ã å
UpdateRotation
77å ö
(
77ö õ
)
77õ ú
)
77ú ù
)
77ù û
;
77û ü
public99 
double99 
	RotationZ99 
{:: 	
get;; 
{;; 
return;; 
(;; 
double;;  
);;  !
GetValue;;! )
(;;) *
RotationZProperty;;* ;
);;; <
;;;< =
};;> ?
set<< 
{<< 
SetValue<< 
(<< 
RotationZProperty<< ,
,<<, -
value<<. 3
)<<3 4
;<<4 5
}<<6 7
}== 	
public?? 
static?? 
readonly?? 
DependencyProperty?? 1
FieldOfViewProperty??2 E
=??F G
DependencyProperty@@ 
.@@ 
Register@@ '
(@@' (
$str@@( 5
,@@5 6
typeof@@7 =
(@@= >
double@@> D
)@@D E
,@@E F
typeof@@G M
(@@M N
Plane3D@@N U
)@@U V
,@@V W
new@@X [
UIPropertyMetadata@@\ n
(@@n o
$num@@o s
,@@s t
(@@u v
d@@v w
,@@w x
args@@y }
)@@} ~
=>	@@ Å
(
@@Ç É
(
@@É Ñ
Plane3D
@@Ñ ã
)
@@ã å
d
@@å ç
)
@@ç é
.
@@é è
Update3D
@@è ó
(
@@ó ò
)
@@ò ô
,
@@ô ö
(AA 
dAA 
,AA 
valAA 
)AA 
=>AA 
MathAA  
.AA  !
MinAA! $
(AA$ %
MathAA% )
.AA) *
MaxAA* -
(AA- .
(AA. /
doubleAA/ 5
)AA5 6
valAA6 9
,AA9 :
$numAA; >
)AA> ?
,AA? @
$numAAA F
)AAF G
)AAG H
)AAH I
;AAI J
publicCC 
doubleCC 
FieldOfViewCC !
{DD 	
getEE 
{EE 
returnEE 
(EE 
doubleEE  
)EE  !
GetValueEE! )
(EE) *
FieldOfViewPropertyEE* =
)EE= >
;EE> ?
}EE@ A
setFF 
{FF 
SetValueFF 
(FF 
FieldOfViewPropertyFF .
,FF. /
valueFF0 5
)FF5 6
;FF6 7
}FF8 9
}GG 	
publicII 
staticII 
readonlyII 
DependencyPropertyII 1
ZFactorPropertyII2 A
=IIB C
DependencyPropertyIID V
.IIV W
RegisterIIW _
(II_ `
$strJJ 
,JJ 
typeofJJ 
(JJ 
doubleJJ $
)JJ$ %
,JJ% &
typeofJJ' -
(JJ- .
Plane3DJJ. 5
)JJ5 6
,JJ6 7
newJJ8 ;
UIPropertyMetadataJJ< N
(JJN O
$numJJO R
,JJR S
(JJT U
dJJU V
,JJV W
argsJJX \
)JJ\ ]
=>JJ^ `
(JJa b
(JJb c
Plane3DJJc j
)JJj k
dJJk l
)JJl m
.JJm n
UpdateRotationJJn |
(JJ| }
)JJ} ~
)JJ~ 
)	JJ Ä
;
JJÄ Å
publicLL 
doubleLL 
ZFactorLL 
{MM 	
getNN 
{NN 
returnNN 
(NN 
doubleNN  
)NN  !
GetValueNN" *
(NN* +
ZFactorPropertyNN+ :
)NN: ;
;NN; <
}NN= >
setOO 
{OO 
SetValueOO 
(OO 
ZFactorPropertyOO *
,OO* +
valueOO, 1
)OO1 2
;OO2 3
}OO4 5
}PP 	
publicRR 
FrameworkElementRR 
ChildRR  %
{SS 	
getTT 
{UU 
returnVV 
_originalChildVV %
;VV% &
}WW 
setXX 
{YY 
ifZZ 
(ZZ 
EqualsZZ 
(ZZ 
_originalChildZZ )
,ZZ) *
valueZZ+ 0
)ZZ0 1
)ZZ1 2
returnZZ3 9
;ZZ9 :
RemoveVisualChild[[ !
([[! "
_visualChild[[" .
)[[. /
;[[/ 0
RemoveLogicalChild\\ "
(\\" #
_logicalChild\\# 0
)\\0 1
;\\1 2
_originalChild__ 
=__  
value__! &
;__& '
_logicalChild`` 
=`` 
new``  #%
LayoutInvalidationCatcher``$ =
(``= >
)``> ?
{``@ A
Child``B G
=``H I
_originalChild``J X
}``Y Z
;``Z [
_visualChildaa 
=aa 
CreateVisualChildaa 0
(aa0 1
)aa1 2
;aa2 3
AddVisualChildcc 
(cc 
_visualChildcc +
)cc+ ,
;cc, -
AddLogicalChildhh 
(hh  
_logicalChildhh  -
)hh- .
;hh. /
InvalidateMeasureii !
(ii! "
)ii" #
;ii# $
}jj 
}kk 	
	protectedmm 
overridemm 
Sizemm 
MeasureOverridemm  /
(mm/ 0
Sizemm0 4
availableSizemm5 B
)mmB C
{nn 	
Sizeoo 
resultoo 
;oo 
ifpp 
(pp 
_logicalChildpp 
!=pp  
nullpp! %
)pp% &
{qq 
_logicalChildss 
.ss 
Measuress %
(ss% &
availableSizess& 3
)ss3 4
;ss4 5
resulttt 
=tt 
_logicalChildtt &
.tt& '
DesiredSizett' 2
;tt2 3
_visualChilduu 
.uu 
Measureuu $
(uu$ %
resultuu% +
)uu+ ,
;uu, -
}vv 
elseww 
{xx 
resultyy 
=yy 
newyy 
Sizeyy !
(yy! "
$numyy" #
,yy# $
$numyy% &
)yy& '
;yy' (
}zz 
return{{ 
result{{ 
;{{ 
}|| 	
	protected~~ 
override~~ 
Size~~ 
ArrangeOverride~~  /
(~~/ 0
Size~~0 4
	finalSize~~5 >
)~~> ?
{ 	
if
ÄÄ 
(
ÄÄ 
_logicalChild
ÄÄ 
==
ÄÄ  
null
ÄÄ! %
)
ÄÄ% &
return
ÄÄ' -
base
ÄÄ. 2
.
ÄÄ2 3
ArrangeOverride
ÄÄ3 B
(
ÄÄB C
	finalSize
ÄÄC L
)
ÄÄL M
;
ÄÄM N
_logicalChild
ÅÅ 
.
ÅÅ 
Arrange
ÅÅ !
(
ÅÅ! "
new
ÅÅ" %
Rect
ÅÅ& *
(
ÅÅ* +
	finalSize
ÅÅ+ 4
)
ÅÅ4 5
)
ÅÅ5 6
;
ÅÅ6 7
_visualChild
ÇÇ 
.
ÇÇ 
Arrange
ÇÇ  
(
ÇÇ  !
new
ÇÇ! $
Rect
ÇÇ% )
(
ÇÇ) *
	finalSize
ÇÇ* 3
)
ÇÇ3 4
)
ÇÇ4 5
;
ÇÇ5 6
Update3D
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
return
ÑÑ 
base
ÑÑ 
.
ÑÑ 
ArrangeOverride
ÑÑ '
(
ÑÑ' (
	finalSize
ÑÑ( 1
)
ÑÑ1 2
;
ÑÑ2 3
}
ÖÖ 	
	protected
áá 
override
áá 
Visual
áá !
GetVisualChild
áá" 0
(
áá0 1
int
áá1 4
index
áá5 :
)
áá: ;
{
àà 	
return
ââ 
_visualChild
ââ 
;
ââ  
}
ãã 	
	protected
çç 
override
çç 
int
çç !
VisualChildrenCount
çç 2
=>
çç3 5
_visualChild
çç6 B
==
ççC E
null
ççF J
?
ççK L
$num
ççM N
:
ççO P
$num
ççQ R
;
ççR S
private
èè 
FrameworkElement
èè  
CreateVisualChild
èè! 2
(
èè2 3
)
èè3 4
{
êê 	
var
ëë 

simpleQuad
ëë 
=
ëë 
new
ëë  
MeshGeometry3D
ëë! /
{
íí 
	Positions
ìì 
=
ìì 
new
ìì 
Point3DCollection
ìì  1
(
ìì1 2
Mesh
ìì2 6
)
ìì6 7
,
ìì7 8 
TextureCoordinates
îî "
=
îî# $
new
îî% (
PointCollection
îî) 8
(
îî8 9
	TexCoords
îî9 B
)
îîB C
,
îîC D
TriangleIndices
ïï 
=
ïï  !
new
ïï" %
Int32Collection
ïï& 5
(
ïï5 6
Indices
ïï6 =
)
ïï= >
}
ññ 
;
ññ 
Material
ôô 
frontMaterial
ôô "
=
ôô# $
new
ôô% (
DiffuseMaterial
ôô) 8
(
ôô8 9
Brushes
ôô9 @
.
ôô@ A
White
ôôA F
)
ôôF G
;
ôôG H
frontMaterial
öö 
.
öö 
SetValue
öö "
(
öö" # 
Viewport2DVisual3D
öö# 5
.
öö5 6*
IsVisualHostMaterialProperty
öö6 R
,
ööR S
true
ööT X
)
ööX Y
;
ööY Z
var
úú 
vb
úú 
=
úú 
new
úú 
VisualBrush
úú $
(
úú$ %
_logicalChild
úú% 2
)
úú2 3
;
úú3 4!
SetCachingForObject
ùù 
(
ùù  
vb
ùù  "
)
ùù" #
;
ùù# $
Material
ûû 
backMaterial
ûû !
=
ûû" #
new
ûû$ '
DiffuseMaterial
ûû( 7
(
ûû7 8
vb
ûû8 :
)
ûû: ;
;
ûû; < 
_rotationTransform
†† 
.
†† 
Rotation
†† '
=
††( )!
_quaternionRotation
††* =
;
††= >
var
°° 
xfGroup
°° 
=
°° 
new
°° 
Transform3DGroup
°° .
{
°°/ 0
Children
°°1 9
=
°°: ;
{
°°< =
_scaleTransform
°°> M
,
°°M N 
_rotationTransform
°°O a
}
°°b c
}
°°d e
;
°°e f
var
££ 
	backModel
££ 
=
££ 
new
££ 
GeometryModel3D
££  /
{
££0 1
Geometry
££2 :
=
££; <

simpleQuad
££= G
,
££G H
	Transform
££I R
=
££S T
xfGroup
££U \
,
££\ ]
BackMaterial
££^ j
=
££k l
backMaterial
££m y
}
££z {
;
££{ |
var
§§ 
m3DGroup
§§ 
=
§§ 
new
§§ 
Model3DGroup
§§ +
{
•• 
Children
¶¶ 
=
¶¶ 
{
¶¶ 
new
¶¶  
DirectionalLight
¶¶! 1
(
¶¶1 2
Colors
¶¶2 8
.
¶¶8 9
White
¶¶9 >
,
¶¶> ?
new
¶¶@ C
Vector3D
¶¶D L
(
¶¶L M
$num
¶¶M N
,
¶¶N O
$num
¶¶P Q
,
¶¶Q R
-
¶¶S T
$num
¶¶T U
)
¶¶U V
)
¶¶V W
,
¶¶W X
new
ßß! $
DirectionalLight
ßß% 5
(
ßß5 6
Colors
ßß6 <
.
ßß< =
White
ßß= B
,
ßßB C
new
ßßD G
Vector3D
ßßH P
(
ßßP Q
$num
ßßQ T
,
ßßT U
-
ßßV W
$num
ßßW Z
,
ßßZ [
$num
ßß\ ]
)
ßß] ^
)
ßß^ _
,
ßß_ `
	backModel
®®! *
}
®®+ ,
}
©© 
;
©© 
var
¨¨ 
mv3D
¨¨ 
=
¨¨ 
new
¨¨ 
ModelVisual3D
¨¨ (
{
¨¨) *
Content
¨¨+ 2
=
¨¨3 4
m3DGroup
¨¨5 =
}
¨¨> ?
;
¨¨? @
var
ØØ 

frontModel
ØØ 
=
ØØ 
new
ØØ   
Viewport2DVisual3D
ØØ! 3
{
ØØ4 5
Geometry
ØØ6 >
=
ØØ? @

simpleQuad
ØØA K
,
ØØK L
Visual
ØØM S
=
ØØT U
_logicalChild
ØØV c
,
ØØc d
Material
ØØe m
=
ØØn o
frontMaterial
ØØp }
,
ØØ} ~
	TransformØØ à
=ØØâ ä
xfGroupØØã í
}ØØì î
;ØØî ï!
SetCachingForObject
≤≤ 
(
≤≤  

frontModel
≤≤  *
)
≤≤* +
;
≤≤+ ,
_viewport3D
µµ 
=
µµ 
new
µµ 

Viewport3D
µµ (
{
µµ) *
ClipToBounds
µµ+ 7
=
µµ8 9
false
µµ: ?
,
µµ? @
Children
µµA I
=
µµJ K
{
µµL M
mv3D
µµN R
,
µµR S

frontModel
µµT ^
}
µµ_ `
}
µµa b
;
µµb c
UpdateRotation
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ 
return
ππ 
_viewport3D
ππ 
;
ππ 
}
∫∫ 	
private
ºº 
void
ºº !
SetCachingForObject
ºº (
(
ºº( )
DependencyObject
ºº) 9
d
ºº: ;
)
ºº; <
{
ΩΩ 	
RenderOptions
ææ 
.
ææ 
SetCachingHint
ææ (
(
ææ( )
d
ææ) *
,
ææ* +
CachingHint
ææ, 7
.
ææ7 8
Cache
ææ8 =
)
ææ= >
;
ææ> ?
RenderOptions
øø 
.
øø 2
$SetCacheInvalidationThresholdMinimum
øø >
(
øø> ?
d
øø? @
,
øø@ A
$num
øøB E
)
øøE F
;
øøF G
RenderOptions
¿¿ 
.
¿¿ 2
$SetCacheInvalidationThresholdMaximum
¿¿ >
(
¿¿> ?
d
¿¿? @
,
¿¿@ A
$num
¿¿B E
)
¿¿E F
;
¿¿F G
}
¡¡ 	
private
√√ 
void
√√ 
UpdateRotation
√√ #
(
√√# $
)
√√$ %
{
ƒƒ 	
var
≈≈ 
qx
≈≈ 
=
≈≈ 
new
≈≈ 

Quaternion
≈≈ #
(
≈≈# $
XAxis
≈≈$ )
,
≈≈) *
	RotationX
≈≈+ 4
)
≈≈4 5
;
≈≈5 6
var
∆∆ 
qy
∆∆ 
=
∆∆ 
new
∆∆ 

Quaternion
∆∆ #
(
∆∆# $
YAxis
∆∆$ )
,
∆∆) *
	RotationY
∆∆+ 4
)
∆∆4 5
;
∆∆5 6
var
«« 
qz
«« 
=
«« 
new
«« 

Quaternion
«« #
(
««# $
ZAxis
««$ )
,
««) *
	RotationZ
««+ 4
)
««4 5
;
««5 6!
_quaternionRotation
…… 
.
……  

Quaternion
……  *
=
……+ ,
qx
……- /
*
……0 1
qy
……2 4
*
……5 6
qz
……7 9
;
……9 :
}
   	
private
ÃÃ 
void
ÃÃ 
Update3D
ÃÃ 
(
ÃÃ 
)
ÃÃ 
{
ÕÕ 	
var
–– 
logicalBounds
–– 
=
–– 
VisualTreeHelper
––  0
.
––0 1!
GetDescendantBounds
––1 D
(
––D E
_logicalChild
––E R
)
––R S
;
––S T
var
—— 
w
—— 
=
—— 
logicalBounds
—— !
.
——! "
Width
——" '
;
——' (
var
““ 
h
““ 
=
““ 
logicalBounds
““ !
.
““! "
Height
““" (
;
““( )
var
ÿÿ 
fovInRadians
ÿÿ 
=
ÿÿ 
FieldOfView
ÿÿ *
*
ÿÿ+ ,
(
ÿÿ- .
Math
ÿÿ. 2
.
ÿÿ2 3
PI
ÿÿ3 5
/
ÿÿ6 7
$num
ÿÿ8 ;
)
ÿÿ; <
;
ÿÿ< =
var
ŸŸ 
zValue
ŸŸ 
=
ŸŸ 
w
ŸŸ 
/
ŸŸ 
Math
ŸŸ !
.
ŸŸ! "
Tan
ŸŸ" %
(
ŸŸ% &
fovInRadians
ŸŸ& 2
/
ŸŸ3 4
$num
ŸŸ5 6
)
ŸŸ6 7
/
ŸŸ8 9
ZFactor
ŸŸ: A
;
ŸŸA B
_viewport3D
⁄⁄ 
.
⁄⁄ 
Camera
⁄⁄ 
=
⁄⁄  
new
⁄⁄! $
PerspectiveCamera
⁄⁄% 6
(
⁄⁄6 7
new
⁄⁄7 :
Point3D
⁄⁄; B
(
⁄⁄B C
w
⁄⁄C D
/
⁄⁄E F
$num
⁄⁄G H
,
⁄⁄H I
h
⁄⁄J K
/
⁄⁄L M
$num
⁄⁄N O
,
⁄⁄O P
zValue
⁄⁄Q W
)
⁄⁄W X
,
⁄⁄X Y
-
€€7 8
ZAxis
€€8 =
,
€€= >
YAxis
‹‹7 <
,
‹‹< =
FieldOfView
››7 B
)
››B C
;
››C D
_scaleTransform
ﬂﬂ 
.
ﬂﬂ 
ScaleX
ﬂﬂ "
=
ﬂﬂ# $
w
ﬂﬂ% &
;
ﬂﬂ& '
_scaleTransform
‡‡ 
.
‡‡ 
ScaleY
‡‡ "
=
‡‡# $
h
‡‡% &
;
‡‡& ' 
_rotationTransform
·· 
.
·· 
CenterX
·· &
=
··' (
w
··) *
/
··+ ,
$num
··- .
;
··. / 
_rotationTransform
‚‚ 
.
‚‚ 
CenterY
‚‚ &
=
‚‚' (
h
‚‚) *
/
‚‚+ ,
$num
‚‚- .
;
‚‚. /
}
„„ 	
private
ÌÌ 
class
ÌÌ '
LayoutInvalidationCatcher
ÌÌ /
:
ÌÌ0 1
	Decorator
ÌÌ2 ;
{
ÓÓ 	
	protected
ÔÔ 
override
ÔÔ 
Size
ÔÔ #
MeasureOverride
ÔÔ$ 3
(
ÔÔ3 4
Size
ÔÔ4 8

constraint
ÔÔ9 C
)
ÔÔC D
{
 
Plane3D
ÒÒ 
pl
ÒÒ 
=
ÒÒ 
this
ÒÒ !
.
ÒÒ! "
Parent
ÒÒ" (
as
ÒÒ) +
Plane3D
ÒÒ, 3
;
ÒÒ3 4
if
ÚÚ 
(
ÚÚ 
pl
ÚÚ 
!=
ÚÚ 
null
ÚÚ 
)
ÚÚ 
{
ÛÛ 
pl
ÙÙ 
.
ÙÙ 
InvalidateMeasure
ÙÙ (
(
ÙÙ( )
)
ÙÙ) *
;
ÙÙ* +
}
ıı 
return
ˆˆ 
base
ˆˆ 
.
ˆˆ 
MeasureOverride
ˆˆ +
(
ˆˆ+ ,

constraint
ˆˆ, 6
)
ˆˆ6 7
;
ˆˆ7 8
}
˜˜ 
	protected
˘˘ 
override
˘˘ 
Size
˘˘ #
ArrangeOverride
˘˘$ 3
(
˘˘3 4
Size
˘˘4 8
arrangeSize
˘˘9 D
)
˘˘D E
{
˙˙ 
Plane3D
˚˚ 
pl
˚˚ 
=
˚˚ 
this
˚˚ !
.
˚˚! "
Parent
˚˚" (
as
˚˚) +
Plane3D
˚˚, 3
;
˚˚3 4
if
¸¸ 
(
¸¸ 
pl
¸¸ 
!=
¸¸ 
null
¸¸ 
)
¸¸ 
{
˝˝ 
pl
˛˛ 
.
˛˛ 
InvalidateArrange
˛˛ (
(
˛˛( )
)
˛˛) *
;
˛˛* +
}
ˇˇ 
return
ÄÄ 
base
ÄÄ 
.
ÄÄ 
ArrangeOverride
ÄÄ +
(
ÄÄ+ ,
arrangeSize
ÄÄ, 7
)
ÄÄ7 8
;
ÄÄ8 9
}
ÅÅ 
}
ÇÇ 	
}
ÜÜ 
}áá Œ

PD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ScaleHost.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class 
	ScaleHost 
: 
FrameworkElement -
{		 
public

 
static

 
readonly

 
DependencyProperty

 1
ScaleProperty

2 ?
=

@ A
DependencyProperty

B T
.

T U
Register

U ]
(

] ^
$str 
, 
typeof 
( 
double "
)" #
,# $
typeof% +
(+ ,
	ScaleHost, 5
)5 6
,6 7
new8 ;
PropertyMetadata< L
(L M
$numM P
)P Q
)Q R
;R S
public 
double 
Scale 
{ 	
get 
{ 
return 
( 
double  
)  !
GetValue" *
(* +
ScaleProperty+ 8
)8 9
;9 :
}; <
set 
{ 
SetValue 
( 
ScaleProperty (
,( )
value* /
)/ 0
;0 1
}2 3
} 	
} 
} Ê
YD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ScrollViewerAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
internal 
static 
class 
ScrollViewerAssist ,
{ 
public		 
static		 
readonly		 
DependencyProperty		 1$
HorizontalOffsetProperty		2 J
=		K L
DependencyProperty		M _
.		_ `
RegisterAttached		` p
(		p q
$str

 "
,

" #
typeof

$ *
(

* +
double

+ 1
)

1 2
,

2 3
typeof

4 :
(

: ;
ScrollViewerAssist

; M
)

M N
,

N O
new

P S
PropertyMetadata

T d
(

d e
default

e l
(

l m
double

m s
)

s t
,

t u*
OnSyncHorizontalOffsetChanged	

v ì
)


ì î
)


î ï
;


ï ñ
private 
static 
void )
OnSyncHorizontalOffsetChanged 9
(9 :
DependencyObject: J
dK L
,L M.
"DependencyPropertyChangedEventArgsN p
eq r
)r s
{ 	
var 
scrollViewer 
= 
d  
as! #
ScrollViewer$ 0
;0 1
scrollViewer 
? 
. $
ScrollToHorizontalOffset 2
(2 3
(3 4
double4 :
): ;
e; <
.< =
NewValue= E
)E F
;F G
} 	
public 
static 
void #
SetSyncHorizontalOffset 2
(2 3
DependencyObject3 C
elementD K
,K L
doubleM S
valueT Y
)Y Z
{ 	
element 
. 
SetValue 
( $
HorizontalOffsetProperty 5
,5 6
value7 <
)< =
;= >
} 	
public 
static 
double #
GetSyncHorizontalOffset 4
(4 5
DependencyObject5 E
elementF M
)M N
{ 	
return 
( 
double 
) 
element #
.# $
GetValue$ ,
(, -$
HorizontalOffsetProperty- E
)E F
;F G
} 	
} 
} ›ﬂ
MD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Screen.cs
	namespace		 	 
MaterialDesignThemes		
 
.		 
Wpf		 "
{

 
internal 
class 
Screen 
{ 
private 
static 
class 
NativeMethods *
{ 	
private 
const 
string  
User32! '
=( )
$str* 6
;6 7
[ 
	DllImport 
( 
User32 
, 
ExactSpelling ,
=- .
true/ 3
,3 4
CharSet5 <
== >
CharSet? F
.F G
AutoG K
)K L
]L M
[ 
ResourceExposure 
( 
ResourceScope +
.+ ,
None, 0
)0 1
]1 2
public 
static 
extern  
int! $
GetSystemMetrics% 5
(5 6
int6 9
nIndex: @
)@ A
;A B
[ 
	DllImport 
( 
User32 
, 
CharSet &
=' (
CharSet) 0
.0 1
Auto1 5
)5 6
]6 7
[ 
ResourceExposure 
( 
ResourceScope +
.+ ,
None, 0
)0 1
]1 2
public 
static 
extern  
bool! %
GetMonitorInfo& 4
(4 5
	HandleRef5 >
hmonitor? G
,G H
[I J
InJ L
,L M
OutN Q
]Q R
MONITORINFOEXR _
info` d
)d e
;e f
[ 
	DllImport 
( 
User32 
, 
ExactSpelling ,
=- .
true/ 3
)3 4
]4 5
[ 
ResourceExposure 
( 
ResourceScope +
.+ ,
None, 0
)0 1
]1 2
public 
static 
extern  
bool! %
EnumDisplayMonitors& 9
(9 :
	HandleRef: C
hdcD G
,G H
COMRECTI P
rcClipQ W
,W X
MonitorEnumProcY h
lpfnEnumi q
,q r
IntPtrs y
dwData	z Ä
)
Ä Å
;
Å Ç
[!! 
	DllImport!! 
(!! 
User32!! 
,!! 
ExactSpelling!! ,
=!!- .
true!!/ 3
)!!3 4
]!!4 5
["" 
ResourceExposure"" 
("" 
ResourceScope"" +
.""+ ,
None"", 0
)""0 1
]""1 2
public## 
static## 
extern##  
IntPtr##! '
MonitorFromPoint##( 8
(##8 9
POINTSTRUCT##9 D
pt##E G
,##G H
int##I L
flags##M R
)##R S
;##S T
[%% 
	DllImport%% 
(%% 
User32%% 
,%% 
ExactSpelling%% ,
=%%- .
true%%/ 3
)%%3 4
]%%4 5
[&& 
ResourceExposure&& 
(&& 
ResourceScope&& +
.&&+ ,
None&&, 0
)&&0 1
]&&1 2
public'' 
static'' 
extern''  
IntPtr''! '
MonitorFromRect''( 7
(''7 8
ref''8 ;
RECT''< @
rect''A E
,''E F
int''G J
flags''K P
)''P Q
;''Q R
public)) 
delegate)) 
bool))  
MonitorEnumProc))! 0
())0 1
IntPtr))1 7
monitor))8 ?
,))? @
IntPtr))A G
hdc))H K
,))K L
IntPtr))M S
lprcMonitor))T _
,))_ `
IntPtr))a g
lParam))h n
)))n o
;))o p
[++ 
StructLayout++ 
(++ 

LayoutKind++ $
.++$ %

Sequential++% /
,++/ 0
CharSet++1 8
=++9 :
CharSet++; B
.++B C
Auto++C G
,++G H
Pack++I M
=++N O
$num++P Q
)++Q R
]++R S
public,, 
class,, 
MONITORINFOEX,, &
{-- 
internal.. 
int.. 
cbSize.. #
=..$ %
Marshal..& -
...- .
SizeOf... 4
(..4 5
typeof..5 ;
(..; <
MONITORINFOEX..< I
)..I J
)..J K
;..K L
internal// 
RECT// 
	rcMonitor// '
=//( )
new//* -
RECT//. 2
(//2 3
)//3 4
;//4 5
internal00 
RECT00 
rcWork00 $
=00% &
new00' *
RECT00+ /
(00/ 0
)000 1
;001 2
internal11 
int11 
dwFlags11 $
=11% &
$num11' (
;11( )
[22 
	MarshalAs22 
(22 
UnmanagedType22 (
.22( )

ByValArray22) 3
,223 4
	SizeConst225 >
=22? @
$num22A C
)22C D
]22D E
internal33 
char33 
[33 
]33 
szDevice33  (
=33) *
new33+ .
char33/ 3
[333 4
$num334 6
]336 7
;337 8
}44 
[66 
StructLayout66 
(66 

LayoutKind66 $
.66$ %

Sequential66% /
)66/ 0
]660 1
public77 
struct77 
RECT77 
{88 
public99 
int99 
left99 
;99  
public:: 
int:: 
top:: 
;:: 
public;; 
int;; 
right;;  
;;;  !
public<< 
int<< 
bottom<< !
;<<! "
public>> 
RECT>> 
(>> 
Rect>>  
r>>! "
)>>" #
{?? 
left@@ 
=@@ 
(@@ 
int@@ 
)@@  
r@@  !
.@@! "
Left@@" &
;@@& '
topAA 
=AA 
(AA 
intAA 
)AA 
rAA  
.AA  !
TopAA! $
;AA$ %
rightBB 
=BB 
(BB 
intBB  
)BB  !
rBB! "
.BB" #
RightBB# (
;BB( )
bottomCC 
=CC 
(CC 
intCC !
)CC! "
rCC" #
.CC# $
BottomCC$ *
;CC* +
}DD 
}EE 
[GG 
StructLayoutGG 
(GG 

LayoutKindGG $
.GG$ %

SequentialGG% /
)GG/ 0
]GG0 1
publicHH 
classHH 
COMRECTHH  
{II 
publicJJ 
intJJ 
leftJJ 
;JJ  
publicKK 
intKK 
topKK 
;KK 
publicLL 
intLL 
rightLL  
;LL  !
publicMM 
intMM 
bottomMM !
;MM! "
}NN 
[PP 
StructLayoutPP 
(PP 

LayoutKindPP $
.PP$ %

SequentialPP% /
)PP/ 0
]PP0 1
publicQQ 
structQQ 
POINTSTRUCTQQ %
{RR 
publicSS 
intSS 
xSS 
;SS 
publicTT 
intTT 
yTT 
;TT 
publicUU 
POINTSTRUCTUU "
(UU" #
intUU# &
xUU' (
,UU( )
intUU* -
yUU. /
)UU/ 0
{VV 
thisWW 
.WW 
xWW 
=WW 
xWW 
;WW 
thisXX 
.XX 
yXX 
=XX 
yXX 
;XX 
}YY 
}ZZ 
public\\ 
static\\ 
readonly\\ "
	HandleRef\\# ,
NullHandleRef\\- :
=\\; <
new\\= @
	HandleRef\\A J
(\\J K
null\\K O
,\\O P
IntPtr\\Q W
.\\W X
Zero\\X \
)\\\ ]
;\\] ^
public^^ 
const^^ 
int^^ 
SM_CMONITORS^^ )
=^^* +
$num^^, .
;^^. /
}__ 	
privateaa 
readonlyaa 
IntPtraa 
	_hmonitoraa  )
;aa) *
privategg 
Rectgg 
_workingAreagg !
=gg" #
Rectgg$ (
.gg( )
Emptygg) .
;gg. /
privateii 
staticii 
readonlyii 
objectii  &
	_syncLockii' 0
=ii1 2
newii3 6
objectii7 =
(ii= >
)ii> ?
;ii? @
privatekk 
statickk 
intkk  
_desktopChangedCountkk /
=kk0 1
-kk2 3
$numkk3 4
;kk4 5
privatemm 
intmm '
_currentDesktopChangedCountmm /
=mm0 1
-mm2 3
$nummm3 4
;mm4 5
privaterr 
constrr 
intrr 
PRIMARY_MONITORrr )
=rr* +
	uncheckedrr, 5
(rr5 6
(rr6 7
intrr7 :
)rr: ;
$numrr; E
)rrE F
;rrF G
privatett 
consttt 
inttt $
MONITOR_DEFAULTTONEARESTtt 2
=tt3 4
$numtt5 ?
;tt? @
privateuu 
constuu 
intuu  
MONITORINFOF_PRIMARYuu .
=uu/ 0
$numuu1 ;
;uu; <
privateww 
staticww 
readonlyww 
boolww  $ 
_multiMonitorSupportww% 9
=ww: ;
NativeMethodsww< I
.wwI J
GetSystemMetricswwJ Z
(wwZ [
NativeMethodsww[ h
.wwh i
SM_CMONITORSwwi u
)wwu v
!=www y
$numwwz {
;ww{ |
privatexx 
staticxx 
Screenxx 
[xx 
]xx 
_screensxx  (
;xx( )
privatezz 
Screenzz 
(zz 
IntPtrzz 
monitorzz %
)zz% &
{{{ 	
if|| 
(|| 
!||  
_multiMonitorSupport|| %
||||& (
monitor||) 0
==||1 3
(||4 5
IntPtr||5 ;
)||; <
PRIMARY_MONITOR||< K
)||K L
{}} 
Bounds 
= 
new 
Rect !
(! "
SystemParameters" 2
.2 3
VirtualScreenLeft3 D
,D E
SystemParametersF V
.V W
VirtualScreenTopW g
,g h
SystemParameters
ÄÄ $
.
ÄÄ$ % 
VirtualScreenWidth
ÄÄ% 7
,
ÄÄ7 8
SystemParameters
ÄÄ9 I
.
ÄÄI J!
VirtualScreenHeight
ÄÄJ ]
)
ÄÄ] ^
;
ÄÄ^ _
Primary
ÅÅ 
=
ÅÅ 
true
ÅÅ 
;
ÅÅ 

DeviceName
ÇÇ 
=
ÇÇ 
$str
ÇÇ &
;
ÇÇ& '
}
ÉÉ 
else
ÑÑ 
{
ÖÖ 
NativeMethods
ââ 
.
ââ 
MONITORINFOEX
ââ +
info
ââ, 0
=
ââ1 2
new
ââ3 6
NativeMethods
ââ7 D
.
ââD E
MONITORINFOEX
ââE R
(
ââR S
)
ââS T
;
ââT U
NativeMethods
ää 
.
ää 
GetMonitorInfo
ää ,
(
ää, -
new
ää- 0
	HandleRef
ää1 :
(
ää: ;
null
ää; ?
,
ää? @
monitor
ääA H
)
ääH I
,
ääI J
info
ääK O
)
ääO P
;
ääP Q
Bounds
ãã 
=
ãã 
new
ãã 
Rect
ãã !
(
ãã! "
info
ãã" &
.
ãã& '
	rcMonitor
ãã' 0
.
ãã0 1
left
ãã1 5
,
ãã5 6
info
ãã7 ;
.
ãã; <
	rcMonitor
ãã< E
.
ããE F
top
ããF I
,
ããI J
info
ããK O
.
ããO P
	rcMonitor
ããP Y
.
ããY Z
right
ããZ _
-
ãã` a
info
ããb f
.
ããf g
	rcMonitor
ããg p
.
ããp q
left
ããq u
,
ããu v
info
ããw {
.
ãã{ |
	rcMonitorãã| Ö
.ããÖ Ü
bottomããÜ å
-ããç é
infoããè ì
.ããì î
	rcMonitorããî ù
.ããù û
topããû °
)ãã° ¢
;ãã¢ £
Primary
åå 
=
åå 
(
åå 
info
åå 
.
åå  
dwFlags
åå  '
&
åå( )"
MONITORINFOF_PRIMARY
åå* >
)
åå> ?
!=
åå@ B
$num
ååC D
;
ååD E

DeviceName
éé 
=
éé 
new
éé  
string
éé! '
(
éé' (
info
éé( ,
.
éé, -
szDevice
éé- 5
)
éé5 6
;
éé6 7

DeviceName
èè 
=
èè 

DeviceName
èè '
.
èè' (
TrimEnd
èè( /
(
èè/ 0
(
èè0 1
char
èè1 5
)
èè5 6
$num
èè6 7
)
èè7 8
;
èè8 9
}
ëë 
	_hmonitor
íí 
=
íí 
monitor
íí 
;
íí  
}
ìì 	
public
òò 
static
òò 
Screen
òò 
[
òò 
]
òò 

AllScreens
òò )
{
ôô 	
get
öö 
{
õõ 
if
úú 
(
úú 
_screens
úú 
==
úú 
null
úú  $
)
úú$ %
{
ùù 
if
ûû 
(
ûû "
_multiMonitorSupport
ûû ,
)
ûû, -
{
üü !
MonitorEnumCallback
†† +
closure
††, 3
=
††4 5
new
††6 9!
MonitorEnumCallback
††: M
(
††M N
)
††N O
;
††O P
NativeMethods
°° %
.
°°% &
MonitorEnumProc
°°& 5
proc
°°6 :
=
°°; <
closure
°°= D
.
°°D E
Callback
°°E M
;
°°M N
NativeMethods
¢¢ %
.
¢¢% &!
EnumDisplayMonitors
¢¢& 9
(
¢¢9 :
NativeMethods
¢¢: G
.
¢¢G H
NullHandleRef
¢¢H U
,
¢¢U V
null
¢¢W [
,
¢¢[ \
proc
¢¢] a
,
¢¢a b
IntPtr
¢¢c i
.
¢¢i j
Zero
¢¢j n
)
¢¢n o
;
¢¢o p
if
§§ 
(
§§ 
closure
§§ #
.
§§# $
Screens
§§$ +
.
§§+ ,
Count
§§, 1
>
§§2 3
$num
§§4 5
)
§§5 6
{
•• 
Screen
¶¶ "
[
¶¶" #
]
¶¶# $
temp
¶¶% )
=
¶¶* +
new
¶¶, /
Screen
¶¶0 6
[
¶¶6 7
closure
¶¶7 >
.
¶¶> ?
Screens
¶¶? F
.
¶¶F G
Count
¶¶G L
]
¶¶L M
;
¶¶M N
closure
ßß #
.
ßß# $
Screens
ßß$ +
.
ßß+ ,
CopyTo
ßß, 2
(
ßß2 3
temp
ßß3 7
,
ßß7 8
$num
ßß9 :
)
ßß: ;
;
ßß; <
_screens
®® $
=
®®% &
temp
®®' +
;
®®+ ,
}
©© 
else
™™ 
{
´´ 
_screens
¨¨ $
=
¨¨% &
new
¨¨' *
[
¨¨* +
]
¨¨+ ,
{
¨¨- .
new
¨¨/ 2
Screen
¨¨3 9
(
¨¨9 :
(
¨¨: ;
IntPtr
¨¨; A
)
¨¨A B
PRIMARY_MONITOR
¨¨B Q
)
¨¨Q R
}
¨¨S T
;
¨¨T U
}
≠≠ 
}
ÆÆ 
else
ØØ 
{
∞∞ 
_screens
±±  
=
±±! "
new
±±# &
[
±±& '
]
±±' (
{
±±) *
PrimaryScreen
±±+ 8
}
±±9 :
;
±±: ;
}
≤≤ 
SystemEvents
∂∂  
.
∂∂  !%
DisplaySettingsChanging
∂∂! 8
+=
∂∂9 ;'
OnDisplaySettingsChanging
∂∂< U
;
∂∂U V
}
∑∑ 
return
ππ 
_screens
ππ 
;
ππ  
}
∫∫ 
}
ªª 	
public
¿¿ 
Rect
¿¿ 
Bounds
¿¿ 
{
¿¿ 
get
¿¿  
;
¿¿  !
}
¿¿" #
public
≈≈ 
string
≈≈ 

DeviceName
≈≈  
{
≈≈! "
get
≈≈# &
;
≈≈& '
}
≈≈( )
public
   
bool
   
Primary
   
{
   
get
   !
;
  ! "
}
  # $
public
œœ 
static
œœ 
Screen
œœ 
PrimaryScreen
œœ *
{
–– 	
get
—— 
{
““ 
if
”” 
(
”” "
_multiMonitorSupport
”” (
)
””( )
{
‘‘ 
foreach
’’ 
(
’’ 
Screen
’’ #
screen
’’$ *
in
’’+ -

AllScreens
’’. 8
)
’’8 9
{
÷÷ 
if
◊◊ 
(
◊◊ 
screen
◊◊ "
.
◊◊" #
Primary
◊◊# *
)
◊◊* +
{
ÿÿ 
return
ŸŸ "
screen
ŸŸ# )
;
ŸŸ) *
}
⁄⁄ 
}
€€ 
return
‹‹ 
null
‹‹ 
;
‹‹  
}
›› 
return
ﬁﬁ 
new
ﬁﬁ 
Screen
ﬁﬁ !
(
ﬁﬁ! "
(
ﬁﬁ" #
IntPtr
ﬁﬁ# )
)
ﬁﬁ) *
PRIMARY_MONITOR
ﬁﬁ* 9
)
ﬁﬁ9 :
;
ﬁﬁ: ;
}
ﬂﬂ 
}
‡‡ 	
public
ÂÂ 
Rect
ÂÂ 
WorkingArea
ÂÂ 
{
ÊÊ 	
get
ÁÁ 
{
ËË 
if
ÏÏ 
(
ÏÏ )
_currentDesktopChangedCount
ÏÏ /
!=
ÏÏ0 2!
DesktopChangedCount
ÏÏ3 F
)
ÏÏF G
{
ÌÌ 
Interlocked
ÓÓ 
.
ÓÓ  
Exchange
ÓÓ  (
(
ÓÓ( )
ref
ÓÓ) ,)
_currentDesktopChangedCount
ÓÓ- H
,
ÓÓH I!
DesktopChangedCount
ÓÓJ ]
)
ÓÓ] ^
;
ÓÓ^ _
if
 
(
 
!
 "
_multiMonitorSupport
 -
||
. 0
	_hmonitor
1 :
==
; =
(
> ?
IntPtr
? E
)
E F
PRIMARY_MONITOR
F U
)
U V
{
ÒÒ 
_workingArea
ÛÛ $
=
ÛÛ% &
SystemParameters
ÛÛ' 7
.
ÛÛ7 8
WorkArea
ÛÛ8 @
;
ÛÛ@ A
}
ÙÙ 
else
ıı 
{
ˆˆ 
NativeMethods
˙˙ %
.
˙˙% &
MONITORINFOEX
˙˙& 3
info
˙˙4 8
=
˙˙9 :
new
˙˙; >
NativeMethods
˙˙? L
.
˙˙L M
MONITORINFOEX
˙˙M Z
(
˙˙Z [
)
˙˙[ \
;
˙˙\ ]
NativeMethods
˚˚ %
.
˚˚% &
GetMonitorInfo
˚˚& 4
(
˚˚4 5
new
˚˚5 8
	HandleRef
˚˚9 B
(
˚˚B C
null
˚˚C G
,
˚˚G H
	_hmonitor
˚˚I R
)
˚˚R S
,
˚˚S T
info
˚˚U Y
)
˚˚Y Z
;
˚˚Z [
_workingArea
¸¸ $
=
¸¸% &
new
¸¸' *
Rect
¸¸+ /
(
¸¸/ 0
info
¸¸0 4
.
¸¸4 5
rcWork
¸¸5 ;
.
¸¸; <
left
¸¸< @
,
¸¸@ A
info
¸¸B F
.
¸¸F G
rcWork
¸¸G M
.
¸¸M N
top
¸¸N Q
,
¸¸Q R
info
¸¸S W
.
¸¸W X
rcWork
¸¸X ^
.
¸¸^ _
right
¸¸_ d
-
¸¸e f
info
¸¸g k
.
¸¸k l
rcWork
¸¸l r
.
¸¸r s
left
¸¸s w
,
¸¸w x
info
¸¸y }
.
¸¸} ~
rcWork¸¸~ Ñ
.¸¸Ñ Ö
bottom¸¸Ö ã
-¸¸å ç
info¸¸é í
.¸¸í ì
rcWork¸¸ì ô
.¸¸ô ö
top¸¸ö ù
)¸¸ù û
;¸¸û ü
}
˝˝ 
}
˛˛ 
return
ˇˇ 
_workingArea
ˇˇ #
;
ˇˇ# $
}
ÄÄ 
}
ÅÅ 	
private
áá 
static
áá 
int
áá !
DesktopChangedCount
áá .
{
àà 	
get
ââ 
{
ää 
if
ãã 
(
ãã "
_desktopChangedCount
ãã (
==
ãã) +
-
ãã, -
$num
ãã- .
)
ãã. /
{
åå 
lock
éé 
(
éé 
	_syncLock
éé #
)
éé# $
{
èè 
if
íí 
(
íí "
_desktopChangedCount
íí 0
==
íí1 3
-
íí4 5
$num
íí5 6
)
íí6 7
{
ìì 
SystemEvents
óó (
.
óó( )#
UserPreferenceChanged
óó) >
+=
óó? A%
OnUserPreferenceChanged
óóB Y
;
óóY Z"
_desktopChangedCount
ôô 0
=
ôô1 2
$num
ôô3 4
;
ôô4 5
}
öö 
}
õõ 
}
úú 
return
ùù "
_desktopChangedCount
ùù +
;
ùù+ ,
}
ûû 
}
üü 	
public
§§ 
override
§§ 
bool
§§ 
Equals
§§ #
(
§§# $
object
§§$ *
obj
§§+ .
)
§§. /
{
•• 	
return
¶¶ 
obj
¶¶ 
is
¶¶ 
Screen
¶¶  
comp
¶¶! %
&&
¶¶& (
	_hmonitor
¶¶) 2
==
¶¶3 5
comp
¶¶6 :
.
¶¶: ;
	_hmonitor
¶¶; D
;
¶¶D E
}
ßß 	
public
¨¨ 
static
¨¨ 
Screen
¨¨ 
	FromPoint
¨¨ &
(
¨¨& '
Point
¨¨' ,
point
¨¨- 2
)
¨¨2 3
{
≠≠ 	
if
ÆÆ 
(
ÆÆ "
_multiMonitorSupport
ÆÆ $
)
ÆÆ$ %
{
ØØ 
NativeMethods
∞∞ 
.
∞∞ 
POINTSTRUCT
∞∞ )
pt
∞∞* ,
=
∞∞- .
new
∞∞/ 2
NativeMethods
∞∞3 @
.
∞∞@ A
POINTSTRUCT
∞∞A L
(
∞∞L M
(
∞∞M N
int
∞∞N Q
)
∞∞Q R
point
∞∞R W
.
∞∞W X
X
∞∞X Y
,
∞∞Y Z
(
∞∞[ \
int
∞∞\ _
)
∞∞_ `
point
∞∞` e
.
∞∞e f
Y
∞∞f g
)
∞∞g h
;
∞∞h i
return
±± 
new
±± 
Screen
±± !
(
±±! "
NativeMethods
±±" /
.
±±/ 0
MonitorFromPoint
±±0 @
(
±±@ A
pt
±±A C
,
±±C D&
MONITOR_DEFAULTTONEAREST
±±E ]
)
±±] ^
)
±±^ _
;
±±_ `
}
≤≤ 
return
≥≥ 
new
≥≥ 
Screen
≥≥ 
(
≥≥ 
(
≥≥ 
IntPtr
≥≥ %
)
≥≥% &
PRIMARY_MONITOR
≥≥& 5
)
≥≥5 6
;
≥≥6 7
}
¥¥ 	
public
ππ 
static
ππ 
Screen
ππ 
FromRect
ππ %
(
ππ% &
Rect
ππ& *
rect
ππ+ /
)
ππ/ 0
{
∫∫ 	
if
ªª 
(
ªª "
_multiMonitorSupport
ªª $
)
ªª$ %
{
ºº 
NativeMethods
ΩΩ 
.
ΩΩ 
RECT
ΩΩ "
rc
ΩΩ# %
=
ΩΩ& '
new
ΩΩ( +
NativeMethods
ΩΩ, 9
.
ΩΩ9 :
RECT
ΩΩ: >
(
ΩΩ> ?
rect
ΩΩ? C
)
ΩΩC D
;
ΩΩD E
return
ææ 
new
ææ 
Screen
ææ !
(
ææ! "
NativeMethods
ææ" /
.
ææ/ 0
MonitorFromRect
ææ0 ?
(
ææ? @
ref
ææ@ C
rc
ææD F
,
ææF G&
MONITOR_DEFAULTTONEAREST
ææH `
)
ææ` a
)
ææa b
;
ææb c
}
øø 
return
¿¿ 
new
¿¿ 
Screen
¿¿ 
(
¿¿ 
(
¿¿ 
IntPtr
¿¿ %
)
¿¿% &
PRIMARY_MONITOR
¿¿& 5
)
¿¿5 6
;
¿¿6 7
}
¡¡ 	
public
∆∆ 
static
∆∆ 
Rect
∆∆ 
GetWorkingArea
∆∆ )
(
∆∆) *
Point
∆∆* /
pt
∆∆0 2
)
∆∆2 3
{
«« 	
return
»» 
	FromPoint
»» 
(
»» 
pt
»» 
)
»»  
.
»»  !
WorkingArea
»»! ,
;
»», -
}
…… 	
public
ŒŒ 
static
ŒŒ 
Rect
ŒŒ 
GetWorkingArea
ŒŒ )
(
ŒŒ) *
Rect
ŒŒ* .
rect
ŒŒ/ 3
)
ŒŒ3 4
{
œœ 	
return
–– 
FromRect
–– 
(
–– 
rect
––  
)
––  !
.
––! "
WorkingArea
––" -
;
––- .
}
—— 	
public
÷÷ 
static
÷÷ 
Rect
÷÷ 
	GetBounds
÷÷ $
(
÷÷$ %
Point
÷÷% *
pt
÷÷+ -
)
÷÷- .
{
◊◊ 	
return
ÿÿ 
	FromPoint
ÿÿ 
(
ÿÿ 
pt
ÿÿ 
)
ÿÿ  
.
ÿÿ  !
Bounds
ÿÿ! '
;
ÿÿ' (
}
ŸŸ 	
public
ﬁﬁ 
static
ﬁﬁ 
Rect
ﬁﬁ 
	GetBounds
ﬁﬁ $
(
ﬁﬁ$ %
Rect
ﬁﬁ% )
rect
ﬁﬁ* .
)
ﬁﬁ. /
{
ﬂﬂ 	
return
‡‡ 
FromRect
‡‡ 
(
‡‡ 
rect
‡‡  
)
‡‡  !
.
‡‡! "
Bounds
‡‡" (
;
‡‡( )
}
·· 	
public
ÊÊ 
override
ÊÊ 
int
ÊÊ 
GetHashCode
ÊÊ '
(
ÊÊ' (
)
ÊÊ( )
{
ÁÁ 	
return
ËË 
(
ËË 
int
ËË 
)
ËË 
	_hmonitor
ËË !
;
ËË! "
}
ÈÈ 	
private
 
static
 
void
 '
OnDisplaySettingsChanging
 5
(
5 6
object
6 <
sender
= C
,
C D
	EventArgs
E N
e
O P
)
P Q
{
ÒÒ 	
SystemEvents
ÙÙ 
.
ÙÙ %
DisplaySettingsChanging
ÙÙ 0
-=
ÙÙ1 3'
OnDisplaySettingsChanging
ÙÙ4 M
;
ÙÙM N
_screens
˜˜ 
=
˜˜ 
null
˜˜ 
;
˜˜ 
}
¯¯ 	
private
ˇˇ 
static
ˇˇ 
void
ˇˇ %
OnUserPreferenceChanged
ˇˇ 3
(
ˇˇ3 4
object
ˇˇ4 :
sender
ˇˇ; A
,
ˇˇA B,
UserPreferenceChangedEventArgs
ˇˇC a
e
ˇˇb c
)
ˇˇc d
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
e
ÅÅ 
.
ÅÅ 
Category
ÅÅ 
==
ÅÅ $
UserPreferenceCategory
ÅÅ 4
.
ÅÅ4 5
Desktop
ÅÅ5 <
)
ÅÅ< =
{
ÇÇ 
Interlocked
ÉÉ 
.
ÉÉ 
	Increment
ÉÉ %
(
ÉÉ% &
ref
ÉÉ& )"
_desktopChangedCount
ÉÉ* >
)
ÉÉ> ?
;
ÉÉ? @
}
ÑÑ 
}
ÖÖ 	
public
ää 
override
ää 
string
ää 
ToString
ää '
(
ää' (
)
ää( )
{
ãã 	
return
åå 
GetType
åå 
(
åå 
)
åå 
.
åå 
Name
åå !
+
åå" #
$str
åå$ .
+
åå/ 0
Bounds
åå1 7
+
åå8 9
$str
åå: I
+
ååJ K
WorkingArea
ååL W
+
ååX Y
$str
ååZ e
+
ååf g
Primary
ååh o
+
ååp q
$stråår Ä
+ååÅ Ç

DeviceNameååÉ ç
;ååç é
}
çç 	
private
èè 
class
èè !
MonitorEnumCallback
èè )
{
êê 	
public
ëë 
List
ëë 
<
ëë 
Screen
ëë 
>
ëë 
Screens
ëë  '
{
ëë( )
get
ëë* -
;
ëë- .
}
ëë/ 0
=
ëë1 2
new
ëë3 6
List
ëë7 ;
<
ëë; <
Screen
ëë< B
>
ëëB C
(
ëëC D
)
ëëD E
;
ëëE F
public
ìì 
virtual
ìì 
bool
ìì 
Callback
ìì  (
(
ìì( )
IntPtr
ìì) /
monitor
ìì0 7
,
ìì7 8
IntPtr
ìì9 ?
hdc
ìì@ C
,
ììC D
IntPtr
ììE K
lprcMonitor
ììL W
,
ììW X
IntPtr
ììY _
lparam
ìì` f
)
ììf g
{
îî 
Screens
ïï 
.
ïï 
Add
ïï 
(
ïï 
new
ïï 
Screen
ïï  &
(
ïï& '
monitor
ïï' .
)
ïï. /
)
ïï/ 0
;
ïï0 1
return
ññ 
true
ññ 
;
ññ 
}
óó 
}
òò 	
}
ôô 
}öö ∫ã
OD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Snackbar.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[ 
ContentProperty 
( 
nameof 
( 
Message #
)# $
)$ %
]% &
public 

class 
Snackbar 
: 
Control #
{ 
private 
const 
string "
ActivateStoryboardName 3
=4 5
$str6 J
;J K
private 
const 
string $
DeactivateStoryboardName 5
=6 7
$str8 N
;N O
private 
Action ,
 _messageQueueRegistrationCleanUp 7
=8 9
null: >
;> ?
static 
Snackbar 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
Snackbar< D
)D E
,E F
newG J%
FrameworkPropertyMetadataK d
(d e
typeofe k
(k l
Snackbarl t
)t u
)u v
)v w
;w x
} 	
public!! 
static!! 
readonly!! 
DependencyProperty!! 1
MessageProperty!!2 A
=!!B C
DependencyProperty!!D V
.!!V W
Register!!W _
(!!_ `
nameof"" 
("" 
Message"" 
)"" 
,"" 
typeof"" #
(""# $
SnackbarMessage""$ 3
)""3 4
,""4 5
typeof""6 <
(""< =
Snackbar""= E
)""E F
,""F G
new""H K
PropertyMetadata""L \
(""\ ]
default""] d
(""d e
SnackbarMessage""e t
)""t u
)""u v
)""v w
;""w x
public$$ 
SnackbarMessage$$ 
Message$$ &
{%% 	
get&& 
{&& 
return&& 
(&& 
SnackbarMessage&& )
)&&) *
GetValue&&+ 3
(&&3 4
MessageProperty&&4 C
)&&C D
;&&D E
}&&F G
set'' 
{'' 
SetValue'' 
('' 
MessageProperty'' *
,''* +
value'', 1
)''1 2
;''2 3
}''4 5
}(( 	
public** 
static** 
readonly** 
DependencyProperty** 1 
MessageQueueProperty**2 F
=**G H
DependencyProperty**I [
.**[ \
Register**\ d
(**d e
nameof++ 
(++ 
MessageQueue++ 
)++  
,++  !
typeof++" (
(++( ) 
SnackbarMessageQueue++) =
)++= >
,++> ?
typeof++@ F
(++F G
Snackbar++G O
)++O P
,++P Q
new++R U
PropertyMetadata++V f
(++f g
default++g n
(++n o!
SnackbarMessageQueue	++o É
)
++É Ñ
,
++Ñ Ö1
#MessageQueuePropertyChangedCallback
++Ü ©
)
++© ™
)
++™ ´
;
++´ ¨
private-- 
static-- 
void-- /
#MessageQueuePropertyChangedCallback-- ?
(--? @
DependencyObject--@ P
dependencyObject--Q a
,--a b/
"DependencyPropertyChangedEventArgs	--c Ö0
"dependencyPropertyChangedEventArgs
--Ü ®
)
--® ©
{.. 	
var// 
snackbar// 
=// 
(// 
Snackbar// $
)//$ %
dependencyObject//& 6
;//6 7
(00 
snackbar00 
.00 ,
 _messageQueueRegistrationCleanUp00 6
??007 9
(00: ;
(00; <
)00< =
=>00> @
{00A B
}00C D
)00D E
)00E F
(00F G
)00G H
;00H I
var11 
messageQueue11 
=11 .
"dependencyPropertyChangedEventArgs11 A
.11A B
NewValue11B J
as11K M 
SnackbarMessageQueue11N b
;11b c
snackbar22 
.22 ,
 _messageQueueRegistrationCleanUp22 5
=226 7
messageQueue228 D
?22D E
.22E F
Pair22F J
(22J K
snackbar22K S
)22S T
;22T U
}33 	
public55  
SnackbarMessageQueue55 #
MessageQueue55$ 0
{66 	
get77 
{77 
return77 
(77  
SnackbarMessageQueue77 .
)77. /
GetValue770 8
(778 9 
MessageQueueProperty779 M
)77M N
;77N O
}77P Q
set88 
{88 
SetValue88 
(88  
MessageQueueProperty88 /
,88/ 0
value881 6
)886 7
;887 8
}889 :
}99 	
public;; 
static;; 
readonly;; 
DependencyProperty;; 1
IsActiveProperty;;2 B
=;;C D
DependencyProperty;;E W
.;;W X
Register;;X `
(;;` a
nameof<< 
(<< 
IsActive<< 
)<< 
,<< 
typeof<< $
(<<$ %
bool<<% )
)<<) *
,<<* +
typeof<<, 2
(<<2 3
Snackbar<<3 ;
)<<; <
,<<< =
new<<> A
PropertyMetadata<<B R
(<<R S
default<<S Z
(<<Z [
bool<<[ _
)<<_ `
,<<` a,
IsActivePropertyChangedCallback	<<b Å
)
<<Å Ç
)
<<Ç É
;
<<É Ñ
public>> 
bool>> 
IsActive>> 
{?? 	
get@@ 
{@@ 
return@@ 
(@@ 
bool@@ 
)@@ 
GetValue@@  (
(@@( )
IsActiveProperty@@) 9
)@@9 :
;@@: ;
}@@< =
setAA 
{AA 
SetValueAA 
(AA 
IsActivePropertyAA +
,AA+ ,
valueAA- 2
)AA2 3
;AA3 4
}AA5 6
}BB 	
publicDD 
eventDD -
!RoutedPropertyChangedEventHandlerDD 6
<DD6 7
boolDD7 ;
>DD; <
IsActiveChangedDD= L
{EE 	
addFF 
{FF 

AddHandlerFF 
(FF  
IsActiveChangedEventFF 1
,FF1 2
valueFF3 8
)FF8 9
;FF9 :
}FF; <
removeGG 
{GG 
RemoveHandlerGG "
(GG" # 
IsActiveChangedEventGG# 7
,GG7 8
valueGG9 >
)GG> ?
;GG? @
}GGA B
}HH 	
publicJJ 
staticJJ 
readonlyJJ 
RoutedEventJJ * 
IsActiveChangedEventJJ+ ?
=JJ@ A
EventManagerKK 
.KK 
RegisterRoutedEventKK ,
(KK, -
nameofLL 
(LL 
IsActiveChangedLL &
)LL& '
,LL' (
RoutingStrategyMM 
.MM  
BubbleMM  &
,MM& '
typeofNN 
(NN -
!RoutedPropertyChangedEventHandlerNN 8
<NN8 9
boolNN9 =
>NN= >
)NN> ?
,NN? @
typeofOO 
(OO 
SnackbarOO 
)OO  
)OO  !
;OO! "
privateQQ 
staticQQ 
voidQQ 
OnIsActiveChangedQQ -
(QQ- .
DependencyObjectRR 
dRR 
,RR .
"DependencyPropertyChangedEventArgsRR  B
eRRC D
)RRD E
{SS 	
varTT 
instanceTT 
=TT 
dTT 
asTT 
SnackbarTT  (
;TT( )
varUU 
argsUU 
=UU 
newUU *
RoutedPropertyChangedEventArgsUU 9
<UU9 :
boolUU: >
>UU> ?
(UU? @
(VV 
boolVV 
)VV 
eVV 
.VV 
OldValueVV !
,VV! "
(WW 
boolWW 
)WW 
eWW 
.WW 
NewValueWW !
)WW! "
{WW# $
RoutedEventWW$ /
=WW0 1 
IsActiveChangedEventWW2 F
}WWG H
;WWH I
instanceXX 
?XX 
.XX 

RaiseEventXX  
(XX  !
argsXX! %
)XX% &
;XX& '
}YY 	
public[[ 
static[[ 
readonly[[ 
RoutedEvent[[ *.
"DeactivateStoryboardCompletedEvent[[+ M
=[[N O
EventManager\\ 
.\\ 
RegisterRoutedEvent\\ ,
(\\, -
nameof]] 
(]] )
DeactivateStoryboardCompleted]] 4
)]]4 5
,]]5 6
RoutingStrategy^^ 
.^^  
Bubble^^  &
,^^& '
typeof__ 
(__ $
SnackbarMessageEventArgs__ /
)__/ 0
,__0 1
typeof`` 
(`` 
Snackbar`` 
)``  
)``  !
;``! "
publicbb 
eventbb -
!RoutedPropertyChangedEventHandlerbb 6
<bb6 7
SnackbarMessagebb7 F
>bbF G)
DeactivateStoryboardCompletedbbH e
{cc 	
adddd 
{dd 

AddHandlerdd 
(dd .
"DeactivateStoryboardCompletedEventdd ?
,dd? @
valueddA F
)ddF G
;ddG H
}ddI J
removeee 
{ee 
RemoveHandleree "
(ee" #.
"DeactivateStoryboardCompletedEventee# E
,eeE F
valueeeG L
)eeL M
;eeM N
}eeO P
}ff 	
privatehh 
statichh 
voidhh +
OnDeactivateStoryboardCompletedhh ;
(hh; <
IInputElementii 
snackbarii "
,ii" #
SnackbarMessageii$ 3
messageii4 ;
)ii; <
{jj 	
varkk 
argskk 
=kk 
newkk $
SnackbarMessageEventArgskk 3
(kk3 4.
"DeactivateStoryboardCompletedEventkk4 V
,kkV W
messagekkX _
)kk_ `
;kk` a
snackbarll 
.ll 

RaiseEventll 
(ll  
argsll  $
)ll$ %
;ll% &
}mm 	
publicoo 
TimeSpanoo &
ActivateStoryboardDurationoo 2
{oo3 4
getoo5 8
;oo8 9
privateoo: A
setooB E
;ooE F
}ooG H
publicqq 
TimeSpanqq (
DeactivateStoryboardDurationqq 4
{qq5 6
getqq7 :
;qq: ;
privateqq< C
setqqD G
;qqG H
}qqI J
publicss 
staticss 
readonlyss 
DependencyPropertyss 1%
ActionButtonStylePropertyss2 K
=ssL M
DependencyPropertyssN `
.ss` a
Registerssa i
(ssi j
nameoftt 
(tt 
ActionButtonStylett $
)tt$ %
,tt% &
typeoftt' -
(tt- .
Stylett. 3
)tt3 4
,tt4 5
typeoftt6 <
(tt< =
Snackbartt= E
)ttE F
,ttF G
newttH K
PropertyMetadatattL \
(tt\ ]
defaulttt] d
(ttd e
Stylette j
)ttj k
)ttk l
)ttl m
;ttm n
publicvv 
Stylevv 
ActionButtonStylevv &
{ww 	
getxx 
{xx 
returnxx 
(xx 
Stylexx 
)xx  
GetValuexx! )
(xx) *%
ActionButtonStylePropertyxx* C
)xxC D
;xxD E
}xxF G
setyy 
{yy 
SetValueyy 
(yy %
ActionButtonStylePropertyyy 4
,yy4 5
valueyy6 ;
)yy; <
;yy< =
}yy> ?
}zz 	
public|| 
override|| 
void|| 
OnApplyTemplate|| ,
(||, -
)||- .
{}} 	(
ActivateStoryboardDuration
áá &
=
áá' (+
GetStoryboardResourceDuration
áá) F
(
ááF G$
ActivateStoryboardName
ááG ]
)
áá] ^
;
áá^ _*
DeactivateStoryboardDuration
àà (
=
àà) *+
GetStoryboardResourceDuration
àà+ H
(
ààH I&
DeactivateStoryboardName
ààI a
)
ààa b
;
ààb c
base
ää 
.
ää 
OnApplyTemplate
ää  
(
ää  !
)
ää! "
;
ää" #
}
ãã 	
private
çç 
TimeSpan
çç +
GetStoryboardResourceDuration
çç 6
(
çç6 7
string
çç7 =
resourceName
çç> J
)
ççJ K
{
éé 	
var
èè 

storyboard
èè 
=
èè 
Template
èè %
.
èè% &
	Resources
èè& /
.
èè/ 0
Contains
èè0 8
(
èè8 9
resourceName
èè9 E
)
èèE F
?
êê 
(
êê 

Storyboard
êê 
)
êê 
Template
êê &
.
êê& '
	Resources
êê' 0
[
êê0 1
resourceName
êê1 =
]
êê= >
:
ëë 
null
ëë 
;
ëë 
return
ìì 

storyboard
ìì 
!=
ìì  
null
ìì! %
&&
ìì& (

storyboard
ìì) 3
.
ìì3 4
Duration
ìì4 <
.
ìì< =
HasTimeSpan
ìì= H
?
îî 

storyboard
îî 
.
îî 
Duration
îî %
.
îî% &
TimeSpan
îî& .
:
ïï 
new
ïï 
Func
ïï 
<
ïï 
TimeSpan
ïï #
>
ïï# $
(
ïï$ %
(
ïï% &
)
ïï& '
=>
ïï( *
{
ññ 
System
óó 
.
óó 
Diagnostics
óó &
.
óó& '
Debug
óó' ,
.
óó, -
	WriteLine
óó- 6
(
óó6 7
$"
òò H
:Warning, no Duration was specified at root of storyboard '
òò T
{
òòT U
resourceName
òòU a
}
òòa b
'.
òòb d
"
òòd e
)
òòe f
;
òòf g
return
ôô 
TimeSpan
ôô #
.
ôô# $
Zero
ôô$ (
;
ôô( )
}
öö 
)
öö 
(
öö 
)
öö 
;
öö 
}
õõ 	
private
ùù 
static
ùù 
void
ùù -
IsActivePropertyChangedCallback
ùù ;
(
ùù; <
DependencyObject
ùù< L
dependencyObject
ùùM ]
,
ùù] ^1
"DependencyPropertyChangedEventArgsùù_ Å2
"dependencyPropertyChangedEventArgsùùÇ §
)ùù§ •
{
ûû 	
OnIsActiveChanged
üü 
(
üü 
dependencyObject
üü .
,
üü. /0
"dependencyPropertyChangedEventArgs
üü0 R
)
üüR S
;
üüS T
if
°° 
(
°° 
(
°° 
bool
°° 
)
°° 0
"dependencyPropertyChangedEventArgs
°° 8
.
°°8 9
NewValue
°°9 A
)
°°A B
return
°°C I
;
°°I J
var
££ 
snackbar
££ 
=
££ 
(
££ 
Snackbar
££ $
)
££$ %
dependencyObject
££% 5
;
££5 6
if
§§ 
(
§§ 
snackbar
§§ 
.
§§ 
Message
§§  
==
§§! #
null
§§$ (
)
§§( )
return
§§* 0
;
§§0 1
var
¶¶ 
dispatcherTimer
¶¶ 
=
¶¶  !
new
¶¶" %
DispatcherTimer
¶¶& 5
{
ßß 
Tag
®® 
=
®® 
new
®® 
Tuple
®® 
<
®®  
Snackbar
®®  (
,
®®( )
SnackbarMessage
®®* 9
>
®®9 :
(
®®: ;
snackbar
®®; C
,
®®C D
snackbar
®®E M
.
®®M N
Message
®®N U
)
®®U V
,
®®V W
Interval
©© 
=
©© 
snackbar
©© #
.
©©# $*
DeactivateStoryboardDuration
©©$ @
}
™™ 
;
™™ 
dispatcherTimer
´´ 
.
´´ 
Tick
´´  
+=
´´! #7
)DeactivateStoryboardDispatcherTimerOnTick
´´$ M
;
´´M N
dispatcherTimer
¨¨ 
.
¨¨ 
Start
¨¨ !
(
¨¨! "
)
¨¨" #
;
¨¨# $
}
≠≠ 	
private
ØØ 
static
ØØ 
void
ØØ 7
)DeactivateStoryboardDispatcherTimerOnTick
ØØ E
(
ØØE F
object
ØØF L
sender
ØØM S
,
ØØS T
	EventArgs
ØØU ^
	eventArgs
ØØ_ h
)
ØØh i
{
∞∞ 	
var
±± 
dispatcherTimer
±± 
=
±±  !
(
±±" #
DispatcherTimer
±±# 2
)
±±2 3
sender
±±3 9
;
±±9 :
dispatcherTimer
≤≤ 
.
≤≤ 
Stop
≤≤  
(
≤≤  !
)
≤≤! "
;
≤≤" #
dispatcherTimer
≥≥ 
.
≥≥ 
Tick
≥≥  
-=
≥≥! #7
)DeactivateStoryboardDispatcherTimerOnTick
≥≥$ M
;
≥≥M N
var
¥¥ 
source
¥¥ 
=
¥¥ 
(
¥¥ 
Tuple
¥¥ 
<
¥¥  
Snackbar
¥¥  (
,
¥¥( )
SnackbarMessage
¥¥* 9
>
¥¥9 :
)
¥¥: ;
dispatcherTimer
¥¥; J
.
¥¥J K
Tag
¥¥K N
;
¥¥N O-
OnDeactivateStoryboardCompleted
µµ +
(
µµ+ ,
source
µµ, 2
.
µµ2 3
Item1
µµ3 8
,
µµ8 9
source
µµ: @
.
µµ@ A
Item2
µµA F
)
µµF G
;
µµG H
}
∂∂ 	
}
∑∑ 
}∏∏ ™[
VD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\SnackbarMessage.cs
	namespace		 	 
MaterialDesignThemes		
 
.		 
Wpf		 "
{

 
[ 
TypeConverter 
( 
typeof 
( (
SnackbarMessageTypeConverter 6
)6 7
)7 8
]8 9
[ 
TemplatePart 
( 
Name 
=  
ActionButtonPartName -
,- .
Type/ 3
=4 5
typeof6 <
(< =

ButtonBase= G
)G H
)H I
]I J
public 

class 
SnackbarMessage  
:! "
ContentControl# 1
{ 
public 
const 
string  
ActionButtonPartName 0
=1 2
$str3 F
;F G
private 
Action "
_templateCleanupAction -
=. /
(0 1
)1 2
=>3 5
{6 7
}7 8
;8 9
static 
SnackbarMessage 
( 
)  
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
SnackbarMessage< K
)K L
,L M
newN Q%
FrameworkPropertyMetadataR k
(k l
typeofl r
(r s
SnackbarMessage	s Ç
)
Ç É
)
É Ñ
)
Ñ Ö
;
Ö Ü
} 	
public 
static 
readonly 
DependencyProperty 1!
ActionCommandProperty2 G
=H I
DependencyPropertyJ \
.\ ]
Register] e
(e f
$str 
, 
typeof #
(# $
ICommand$ ,
), -
,- .
typeof/ 5
(5 6
SnackbarMessage6 E
)E F
,F G
newH K
PropertyMetadataL \
(\ ]
default] d
(d e
ICommande m
)m n
)n o
)o p
;p q
public   
ICommand   
ActionCommand   %
{!! 	
get"" 
{"" 
return"" 
("" 
ICommand"" "
)""" #
GetValue""$ ,
("", -!
ActionCommandProperty""- B
)""B C
;""C D
}""E F
set## 
{## 
SetValue## 
(## !
ActionCommandProperty## 0
,##0 1
value##2 7
)##7 8
;##8 9
}##: ;
}$$ 	
public&& 
static&& 
readonly&& 
DependencyProperty&& 1*
ActionCommandParameterProperty&&2 P
=&&Q R
DependencyProperty&&S e
.&&e f
Register&&f n
(&&n o
$str'' $
,''$ %
typeof''& ,
('', -
object''- 3
)''3 4
,''4 5
typeof''6 <
(''< =
SnackbarMessage''= L
)''L M
,''M N
new''O R
PropertyMetadata''S c
(''c d
default''d k
(''k l
object''l r
)''r s
)''s t
)''t u
;''u v
public)) 
object)) "
ActionCommandParameter)) ,
{** 	
get++ 
{++ 
return++ 
(++ 
object++  
)++  !
GetValue++" *
(++* +*
ActionCommandParameterProperty+++ I
)++I J
;++J K
}++L M
set,, 
{,, 
SetValue,, 
(,, *
ActionCommandParameterProperty,, 9
,,,9 :
value,,; @
),,@ A
;,,A B
},,C D
}-- 	
public// 
static// 
readonly// 
DependencyProperty// 1!
ActionContentProperty//2 G
=//H I
DependencyProperty//J \
.//\ ]
Register//] e
(//e f
$str00 
,00 
typeof00 #
(00# $
object00$ *
)00* +
,00+ ,
typeof00- 3
(003 4
SnackbarMessage004 C
)00C D
,00D E
new00F I
PropertyMetadata00J Z
(00Z [
default00[ b
(00b c
object00c i
)00i j
)00j k
)00k l
;00l m
public22 
object22 
ActionContent22 #
{33 	
get44 
{44 
return44 
(44 
object44  
)44  !
GetValue44" *
(44* +!
ActionContentProperty44+ @
)44@ A
;44A B
}44C D
set55 
{55 
SetValue55 
(55 !
ActionContentProperty55 0
,550 1
value552 7
)557 8
;558 9
}55: ;
}66 	
public88 
static88 
readonly88 
DependencyProperty88 1)
ActionContentTemplateProperty882 O
=88P Q
DependencyProperty88R d
.88d e
Register88e m
(88m n
$str99 #
,99# $
typeof99% +
(99+ ,
DataTemplate99, 8
)998 9
,999 :
typeof99; A
(99A B
SnackbarMessage99B Q
)99Q R
,99R S
new99T W
PropertyMetadata99X h
(99h i
default99i p
(99p q
DataTemplate99q }
)99} ~
)99~ 
)	99 Ä
;
99Ä Å
public;; 
DataTemplate;; !
ActionContentTemplate;; 1
{<< 	
get== 
{== 
return== 
(== 
DataTemplate== &
)==& '
GetValue==( 0
(==0 1)
ActionContentTemplateProperty==1 N
)==N O
;==O P
}==Q R
set>> 
{>> 
SetValue>> 
(>> )
ActionContentTemplateProperty>> 8
,>>8 9
value>>: ?
)>>? @
;>>@ A
}>>B C
}?? 	
publicAA 
staticAA 
readonlyAA 
DependencyPropertyAA 1-
!ActionContentStringFormatPropertyAA2 S
=AAT U
DependencyPropertyAAV h
.AAh i
RegisterAAi q
(AAq r
$strBB '
,BB' (
typeofBB) /
(BB/ 0
stringBB0 6
)BB7 8
,BB8 9
typeofBB: @
(BB@ A
SnackbarMessageBBA P
)BBP Q
,BBQ R
newBBS V
PropertyMetadataBBW g
(BBg h
defaultBBh o
(BBo p
stringBBp v
)BBw x
)BBx y
)BBy z
;BBz {
publicDD 
stringDD %
ActionContentStringFormatDD /
{EE 	
getFF 
{FF 
returnFF 
(FF 
stringFF  
)FF! "
GetValueFF# +
(FF+ ,-
!ActionContentStringFormatPropertyFF, M
)FFM N
;FFN O
}FFP Q
setGG 
{GG 
SetValueGG 
(GG -
!ActionContentStringFormatPropertyGG <
,GG< =
valueGG> C
)GGC D
;GGD E
}GGF G
}HH 	
publicJJ 
staticJJ 
readonlyJJ 
DependencyPropertyJJ 11
%ActionContentTemplateSelectorPropertyJJ2 W
=JJX Y
DependencyPropertyJJZ l
.JJl m
RegisterJJm u
(JJu v
$strKK +
,KK+ ,
typeofKK- 3
(KK3 4 
DataTemplateSelectorKK4 H
)KKH I
,KKI J
typeofKKK Q
(KKQ R
SnackbarMessageKKR a
)KKa b
,KKb c
newKKd g
PropertyMetadataKKh x
(KKx y
default	KKy Ä
(
KKÄ Å"
DataTemplateSelector
KKÅ ï
)
KKï ñ
)
KKñ ó
)
KKó ò
;
KKò ô
publicMM  
DataTemplateSelectorMM #)
ActionContentTemplateSelectorMM$ A
{NN 	
getOO 
{OO 
returnOO 
(OO  
DataTemplateSelectorOO .
)OO. /
GetValueOO0 8
(OO8 91
%ActionContentTemplateSelectorPropertyOO9 ^
)OO^ _
;OO_ `
}OOa b
setPP 
{PP 
SetValuePP 
(PP 1
%ActionContentTemplateSelectorPropertyPP @
,PP@ A
valuePPB G
)PPG H
;PPH I
}PPJ K
}QQ 	
publicVV 
staticVV 
readonlyVV 
RoutedEventVV *
ActionClickEventVV+ ;
=VV< =
EventManagerVV> J
.VVJ K
RegisterRoutedEventVVK ^
(VV^ _
$strVV_ l
,VVl m
RoutingStrategyWW 
.WW 
BubbleWW "
,WW" #
typeofWW$ *
(WW* +
RoutedEventHandlerWW+ =
)WW= >
,WW> ?
typeofWW@ F
(WWF G
SnackbarMessageWWG V
)WWV W
)WWW X
;WWX Y
[\\ 	
Category\\	 
(\\ 
$str\\ 
)\\ 
]\\ 
public]] 
event]] 
RoutedEventHandler]] '
ActionClick]]( 3
{]]4 5
add]]6 9
{]]: ;

AddHandler]]< F
(]]F G
ActionClickEvent]]G W
,]]W X
value]]Y ^
)]]^ _
;]]_ `
}]]a b
remove]]c i
{]]j k
RemoveHandler]]l y
(]]y z
ActionClickEvent	]]z ä
,
]]ä ã
value
]]å ë
)
]]ë í
;
]]í ì
}
]]î ï
}
]]ñ ó
	protected__ 
virtual__ 
void__ 
OnActionClick__ ,
(__, -
)__- .
{`` 	
varaa 
newEventaa 
=aa 
newaa 
RoutedEventArgsaa .
(aa. /
ActionClickEventaa/ ?
,aa? @
thisaaA E
)aaE F
;aaF G

RaiseEventbb 
(bb 
newEventbb 
)bb  
;bb  !
}cc 	
publicee 
overrideee 
voidee 
OnApplyTemplateee ,
(ee, -
)ee- .
{ff 	"
_templateCleanupActiongg "
(gg" #
)gg# $
;gg$ %
varii 

buttonBaseii 
=ii 
GetTemplateChildii -
(ii- . 
ActionButtonPartNameii. B
)iiB C
asiiD F

ButtonBaseiiG Q
;iiQ R
ifjj 
(jj 

buttonBasejj 
!=jj 
nulljj "
)jj" #
{kk 

buttonBasell 
.ll 
Clickll  
+=ll! #
ButtonBaseOnClickll$ 5
;ll5 6"
_templateCleanupActionnn &
=nn' (
(nn) *
)nn* +
=>nn, .

buttonBasenn/ 9
.nn9 :
Clicknn: ?
-=nn@ B
ButtonBaseOnClicknnC T
;nnT U
}oo 
elsepp "
_templateCleanupActionqq &
=qq' (
(qq) *
)qq* +
=>qq, .
{qq/ 0
}qq1 2
;qq2 3
basess 
.ss 
OnApplyTemplatess  
(ss  !
)ss! "
;ss" #
}tt 	
privatevv 
voidvv 
ButtonBaseOnClickvv &
(vv& '
objectvv' -
sendervv. 4
,vv4 5
RoutedEventArgsvv6 E
routedEventArgsvvF U
)vvU V
{ww 	
OnActionClickxx 
(xx 
)xx 
;xx 
}yy 	
}zz 
}{{ Ã
_D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\SnackbarMessageEventArgs.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class $
SnackbarMessageEventArgs )
:* +
RoutedEventArgs, ;
{ 
public $
SnackbarMessageEventArgs '
(' (
SnackbarMessage( 7
message8 ?
)? @
{ 	
Message		 
=		 
message		 
;		 
}

 	
public $
SnackbarMessageEventArgs '
(' (
RoutedEvent( 3
routedEvent4 ?
,? @
SnackbarMessageA P
messageQ X
)X Y
:Z [
base\ `
(` a
routedEventa l
)l m
{ 	
Message 
= 
message 
; 
} 	
public $
SnackbarMessageEventArgs '
(' (
RoutedEvent( 3
routedEvent4 ?
,? @
objectA G
sourceH N
,N O
SnackbarMessageP _
message` g
)g h
:i j
basek o
(o p
routedEventp {
,{ |
source	} É
)
É Ñ
{ 	
Message 
= 
message 
; 
} 	
public 
SnackbarMessage 
Message &
{' (
get) ,
;, -
}. /
} 
} •Õ
[D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\SnackbarMessageQueue.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class  
SnackbarMessageQueue %
:& '!
ISnackbarMessageQueue( =
,= >
IDisposable? J
{ 
private 
readonly 
TimeSpan !
_messageDuration" 2
;2 3
private 
readonly 
HashSet  
<  !
Snackbar! )
>) *
_pairedSnackbars+ ;
=< =
new> A
HashSetB I
<I J
SnackbarJ R
>R S
(S T
)T U
;U V
private 
readonly 

LinkedList #
<# $$
SnackbarMessageQueueItem$ <
>< =
_snackbarMessages> O
=P Q
newR U

LinkedListV `
<` a$
SnackbarMessageQueueItema y
>y z
(z {
){ |
;| }
private 
readonly 
ManualResetEvent )
_disposedEvent* 8
=9 :
new; >
ManualResetEvent? O
(O P
falseP U
)U V
;V W
private 
readonly 
ManualResetEvent )
_pausedEvent* 6
=7 8
new9 <
ManualResetEvent= M
(M N
falseN S
)S T
;T U
private 
readonly 
ManualResetEvent ) 
_messageWaitingEvent* >
=? @
newA D
ManualResetEventE U
(U V
falseV [
)[ \
;\ ]
private 
Tuple 
< $
SnackbarMessageQueueItem .
,. /
DateTime0 8
>8 9
_latestShownItem: J
;J K
private 
int 
_pauseCounter !
;! "
private 
bool 
_isDisposed  
;  !
private 
class )
MouseNotOverManagedWaitHandle 3
:4 5
IDisposable6 A
{ 	
private 
readonly 
ManualResetEvent -
_waitHandle. 9
;9 :
private 
readonly 
ManualResetEvent -
_disposedWaitHandle. A
=B C
newD G
ManualResetEventH X
(X Y
falseY ^
)^ _
;_ `
private 
Action 
_cleanUp #
;# $
private   
bool   !
_isWaitHandleDisposed   .
;  . /
private!! 
readonly!! 
object!! #
_waitHandleGate!!$ 3
=!!4 5
new!!6 9
object!!: @
(!!@ A
)!!A B
;!!B C
public## )
MouseNotOverManagedWaitHandle## 0
(##0 1
	UIElement##1 :
	uiElement##; D
)##D E
{$$ 
if%% 
(%% 
	uiElement%% 
==%%  
null%%! %
)%%% &
throw%%' ,
new%%- 0!
ArgumentNullException%%1 F
(%%F G
nameof%%G M
(%%M N
	uiElement%%N W
)%%W X
)%%X Y
;%%Y Z
_waitHandle'' 
='' 
new'' !
ManualResetEvent''" 2
(''2 3
!''3 4
	uiElement''4 =
.''= >
IsMouseOver''> I
)''I J
;''J K
	uiElement(( 
.(( 

MouseEnter(( $
+=((% '!
UiElementOnMouseEnter((( =
;((= >
	uiElement)) 
.)) 

MouseLeave)) $
+=))% '!
UiElementOnMouseLeave))( =
;))= >
_cleanUp++ 
=++ 
(++ 
)++ 
=>++  
{,, 
	uiElement-- 
.-- 

MouseEnter-- (
-=--) +!
UiElementOnMouseEnter--, A
;--A B
	uiElement.. 
... 

MouseLeave.. (
-=..) +!
UiElementOnMouseLeave.., A
;..A B
lock// 
(// 
_waitHandleGate// )
)//) *
{00 
_waitHandle11 #
.11# $
Dispose11$ +
(11+ ,
)11, -
;11- .!
_isWaitHandleDisposed22 -
=22. /
true220 4
;224 5
}33 
_disposedWaitHandle44 '
.44' (
Set44( +
(44+ ,
)44, -
;44- .
_disposedWaitHandle55 '
.55' (
Dispose55( /
(55/ 0
)550 1
;551 2
_cleanUp66 
=66 
(66  
)66  !
=>66" $
{66% &
}66' (
;66( )
}77 
;77 
}88 
public:: 

WaitHandle:: 

WaitHandle:: (
=>::) +
_waitHandle::, 7
;::7 8
private<< 
void<< !
UiElementOnMouseLeave<< .
(<<. /
object<</ 5
sender<<6 <
,<<< =
MouseEventArgs<<> L
mouseEventArgs<<M [
)<<[ \
{== 
Task>> 
.>> 
Factory>> 
.>> 
StartNew>> %
(>>% &
(>>& '
)>>' (
=>>>) +
{?? 
try@@ 
{AA 
_disposedWaitHandleBB +
.BB+ ,
WaitOneBB, 3
(BB3 4
TimeSpanBB4 <
.BB< =
FromSecondsBB= H
(BBH I
$numBBI J
)BBJ K
)BBK L
;BBL M
}CC 
catchDD 
(DD #
ObjectDisposedExceptionDD 2
)DD2 3
{EE 
}MM 
}OO 
)OO 
.OO 
ContinueWithOO 
(OO  
tOO  !
=>OO" $
{PP 
ifQQ 
(QQ 
(QQ 
(QQ 
	UIElementQQ #
)QQ# $
senderQQ% +
)QQ+ ,
.QQ, -
IsMouseOverQQ- 8
)QQ8 9
returnQQ: @
;QQ@ A
lockRR 
(RR 
_waitHandleGateRR )
)RR) *
{SS 
ifTT 
(TT 
!TT !
_isWaitHandleDisposedTT 2
)TT2 3
_waitHandleUU '
.UU' (
SetUU( +
(UU+ ,
)UU, -
;UU- .
}VV 
}WW 
,WW 
TaskSchedulerWW  
.WW  !-
!FromCurrentSynchronizationContextWW! B
(WWB C
)WWC D
)WWD E
;WWE F
}XX 
privateZZ 
voidZZ !
UiElementOnMouseEnterZZ .
(ZZ. /
objectZZ/ 5
senderZZ6 <
,ZZ< =
MouseEventArgsZZ> L
mouseEventArgsZZM [
)ZZ[ \
{[[ 
_waitHandle\\ 
.\\ 
Reset\\ !
(\\! "
)\\" #
;\\# $
}]] 
public__ 
void__ 
Dispose__ 
(__  
)__  !
{`` 
_cleanUpaa 
(aa 
)aa 
;aa 
}bb 
}cc 	
privateii 
classii 
DurationMonitorii %
{jj 	
privatekk 
DateTimekk 
_completionTimekk ,
;kk, -
privatemm 
DurationMonitormm #
(mm# $
TimeSpannn 
minimumDurationnn (
,nn( )

WaitHandleoo 
pausedWaitHandleoo +
,oo+ ,
EventWaitHandlepp .
"signalWhenDurationPassedWaitHandlepp  B
,ppB C

WaitHandleqq 
ceaseWaitHandleqq *
)qq* +
{rr 
ifss 
(ss 
pausedWaitHandless $
==ss% '
nullss( ,
)ss, -
throwss. 3
newss4 7!
ArgumentNullExceptionss8 M
(ssM N
nameofssN T
(ssT U
pausedWaitHandlessU e
)sse f
)ssf g
;ssg h
iftt 
(tt .
"signalWhenDurationPassedWaitHandlett 6
==tt7 9
nulltt: >
)tt> ?
throwuu 
newuu !
ArgumentNullExceptionuu 3
(uu3 4
nameofuu4 :
(uu: ;.
"signalWhenDurationPassedWaitHandleuu; ]
)uu] ^
)uu^ _
;uu_ `
ifvv 
(vv 
ceaseWaitHandlevv #
==vv$ &
nullvv' +
)vv+ ,
throwvv- 2
newvv3 6!
ArgumentNullExceptionvv7 L
(vvL M
nameofvvM S
(vvS T
ceaseWaitHandlevvT c
)vvc d
)vvd e
;vve f
_completionTimexx 
=xx  !
DateTimexx" *
.xx* +
Nowxx+ .
.xx. /
Addxx/ 2
(xx2 3
minimumDurationxx3 B
)xxB C
;xxC D
var{{ 
granularity{{ 
={{  !
TimeSpan{{" *
.{{* +
FromMilliseconds{{+ ;
({{; <
$num{{< ?
){{? @
;{{@ A
Task}} 
.}} 
Factory}} 
.}} 
StartNew}} %
(}}% &
(}}& '
)}}' (
=>}}) +
{~~ 
while
ÄÄ 
(
ÄÄ 
DateTime
ÄÄ #
.
ÄÄ# $
Now
ÄÄ$ '
<
ÄÄ( )
_completionTime
ÄÄ* 9
&&
ÄÄ: <
!
ÄÄ= >
ceaseWaitHandle
ÄÄ> M
.
ÄÄM N
WaitOne
ÄÄN U
(
ÄÄU V
granularity
ÄÄV a
)
ÄÄa b
)
ÄÄb c
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
pausedWaitHandle
ÇÇ ,
.
ÇÇ, -
WaitOne
ÇÇ- 4
(
ÇÇ4 5
TimeSpan
ÇÇ5 =
.
ÇÇ= >
Zero
ÇÇ> B
)
ÇÇB C
)
ÇÇC D
{
ÉÉ 
_completionTime
ÑÑ +
=
ÑÑ, -
_completionTime
ÑÑ. =
.
ÑÑ= >
Add
ÑÑ> A
(
ÑÑA B
granularity
ÑÑB M
)
ÑÑM N
;
ÑÑN O
}
ÖÖ 
}
ÜÜ 
if
àà 
(
àà 
DateTime
àà  
.
àà  !
Now
àà! $
>=
àà% '
_completionTime
àà( 7
)
àà7 80
"signalWhenDurationPassedWaitHandle
ââ :
.
ââ: ;
Set
ââ; >
(
ââ> ?
)
ââ? @
;
ââ@ A
}
ää 
)
ää 
;
ää 
}
ãã 
public
çç 
static
çç 
DurationMonitor
çç )
Start
çç* /
(
çç/ 0
TimeSpan
çç0 8
minimumDuration
çç9 H
,
ççH I

WaitHandle
éé 
pausedWaitHandle
éé +
,
éé+ ,
EventWaitHandle
èè 0
"signalWhenDurationPassedWaitHandle
èè  B
,
èèB C

WaitHandle
êê 
ceaseWaitHandle
êê *
)
êê* +
{
ëë 
return
íí 
new
íí 
DurationMonitor
íí *
(
íí* +
minimumDuration
íí+ :
,
íí: ;
pausedWaitHandle
íí< L
,
ííL M0
"signalWhenDurationPassedWaitHandle
ííN p
,
ííp q
ceaseWaitHandle
ìì #
)
ìì# $
;
ìì$ %
}
îî 
}
ïï 	
public
ôô "
SnackbarMessageQueue
ôô #
(
ôô# $
)
ôô$ %
:
ôô& '
this
ôô( ,
(
ôô, -
TimeSpan
ôô- 5
.
ôô5 6
FromSeconds
ôô6 A
(
ôôA B
$num
ôôB C
)
ôôC D
)
ôôD E
{
öö 	
}
õõ 	
public
ùù "
SnackbarMessageQueue
ùù #
(
ùù# $
TimeSpan
ùù$ ,
messageDuration
ùù- <
)
ùù< =
{
ûû 	
_messageDuration
üü 
=
üü 
messageDuration
üü .
;
üü. /
Task
†† 
.
†† 
Factory
†† 
.
†† 
StartNew
†† !
(
††! "
	PumpAsync
††" +
)
††+ ,
;
††, -
}
°° 	
internal
•• 
Action
•• 
Pair
•• 
(
•• 
Snackbar
•• %
snackbar
••& .
)
••. /
{
¶¶ 	
if
ßß 
(
ßß 
snackbar
ßß 
==
ßß 
null
ßß  
)
ßß  !
throw
ßß" '
new
ßß( +#
ArgumentNullException
ßß, A
(
ßßA B
nameof
ßßB H
(
ßßH I
snackbar
ßßI Q
)
ßßQ R
)
ßßR S
;
ßßS T
_pairedSnackbars
©© 
.
©© 
Add
©©  
(
©©  !
snackbar
©©! )
)
©©) *
;
©©* +
return
´´ 
(
´´ 
)
´´ 
=>
´´ 
_pairedSnackbars
´´ )
.
´´) *
Remove
´´* 0
(
´´0 1
snackbar
´´1 9
)
´´9 :
;
´´: ;
}
¨¨ 	
internal
ÆÆ 
Action
ÆÆ 
Pause
ÆÆ 
(
ÆÆ 
)
ÆÆ 
{
ØØ 	
if
∞∞ 
(
∞∞ 
_isDisposed
∞∞ 
)
∞∞ 
return
∞∞ #
(
∞∞$ %
)
∞∞% &
=>
∞∞' )
{
∞∞* +
}
∞∞, -
;
∞∞- .
if
≤≤ 
(
≤≤ 
Interlocked
≤≤ 
.
≤≤ 
	Increment
≤≤ %
(
≤≤% &
ref
≤≤& )
_pauseCounter
≤≤* 7
)
≤≤7 8
==
≤≤9 ;
$num
≤≤< =
)
≤≤= >
_pausedEvent
≥≥ 
.
≥≥ 
Set
≥≥  
(
≥≥  !
)
≥≥! "
;
≥≥" #
return
µµ 
(
µµ 
)
µµ 
=>
µµ 
{
∂∂ 
if
∑∑ 
(
∑∑ 
Interlocked
∑∑ 
.
∑∑  
	Decrement
∑∑  )
(
∑∑) *
ref
∑∑* -
_pauseCounter
∑∑. ;
)
∑∑; <
==
∑∑= ?
$num
∑∑@ A
)
∑∑A B
_pausedEvent
∏∏  
.
∏∏  !
Reset
∏∏! &
(
∏∏& '
)
∏∏' (
;
∏∏( )
}
ππ 
;
ππ 
}
∫∫ 	
public
ºº 
void
ºº 
Enqueue
ºº 
(
ºº 
object
ºº "
content
ºº# *
)
ºº* +
{
ΩΩ 	
Enqueue
ææ 
(
ææ 
content
ææ 
,
ææ 
false
ææ "
)
ææ" #
;
ææ# $
}
øø 	
public
¡¡ 
void
¡¡ 
Enqueue
¡¡ 
(
¡¡ 
object
¡¡ "
content
¡¡# *
,
¡¡* +
bool
¡¡, 0(
neverConsiderToBeDuplicate
¡¡1 K
)
¡¡K L
{
¬¬ 	
if
√√ 
(
√√ 
content
√√ 
==
√√ 
null
√√ 
)
√√  
throw
√√! &
new
√√' *#
ArgumentNullException
√√+ @
(
√√@ A
nameof
√√A G
(
√√G H
content
√√H O
)
√√O P
)
√√P Q
;
√√Q R
Enqueue
≈≈ 
(
≈≈ 
content
≈≈ 
,
≈≈ 
null
≈≈ !
,
≈≈! "
null
≈≈# '
,
≈≈' (
null
≈≈) -
,
≈≈- .
false
≈≈/ 4
,
≈≈4 5(
neverConsiderToBeDuplicate
≈≈6 P
)
≈≈P Q
;
≈≈Q R
}
∆∆ 	
public
»» 
void
»» 
Enqueue
»» 
(
»» 
object
»» "
content
»»# *
,
»»* +
object
»», 2
actionContent
»»3 @
,
»»@ A
Action
»»B H
actionHandler
»»I V
)
»»V W
{
…… 	
Enqueue
   
(
   
content
   
,
   
actionContent
   *
,
  * +
actionHandler
  , 9
,
  9 :
false
  ; @
)
  @ A
;
  A B
}
ÀÀ 	
public
ÕÕ 
void
ÕÕ 
Enqueue
ÕÕ 
(
ÕÕ 
object
ÕÕ "
content
ÕÕ# *
,
ÕÕ* +
object
ÕÕ, 2
actionContent
ÕÕ3 @
,
ÕÕ@ A
Action
ÕÕB H
actionHandler
ÕÕI V
,
ÕÕV W
bool
ÕÕX \
promote
ÕÕ] d
)
ÕÕd e
{
ŒŒ 	
if
œœ 
(
œœ 
content
œœ 
==
œœ 
null
œœ 
)
œœ  
throw
œœ! &
new
œœ' *#
ArgumentNullException
œœ+ @
(
œœ@ A
nameof
œœA G
(
œœG H
content
œœH O
)
œœO P
)
œœP Q
;
œœQ R
if
–– 
(
–– 
actionContent
–– 
==
––  
null
––! %
)
––% &
throw
––' ,
new
––- 0#
ArgumentNullException
––1 F
(
––F G
nameof
––G M
(
––M N
actionContent
––N [
)
––[ \
)
––\ ]
;
––] ^
if
—— 
(
—— 
actionHandler
—— 
==
——  
null
——! %
)
——% &
throw
——' ,
new
——- 0#
ArgumentNullException
——1 F
(
——F G
nameof
——G M
(
——M N
actionHandler
——N [
)
——[ \
)
——\ ]
;
——] ^
Enqueue
”” 
(
”” 
content
”” 
,
”” 
actionContent
”” *
,
””* +
_
””, -
=>
””. 0
actionHandler
””1 >
(
””> ?
)
””? @
,
””@ A
promote
””B I
,
””I J
false
””K P
,
””P Q
false
””R W
)
””W X
;
””X Y
}
‘‘ 	
public
÷÷ 
void
÷÷ 
Enqueue
÷÷ 
<
÷÷ 
	TArgument
÷÷ %
>
÷÷% &
(
÷÷& '
object
÷÷' -
content
÷÷. 5
,
÷÷5 6
object
÷÷7 =
actionContent
÷÷> K
,
÷÷K L
Action
÷÷M S
<
÷÷S T
	TArgument
÷÷T ]
>
÷÷] ^
actionHandler
÷÷_ l
,
÷÷l m
	TArgument
◊◊ 
actionArgument
◊◊ $
)
◊◊$ %
{
ÿÿ 	
Enqueue
ŸŸ 
(
ŸŸ 
content
ŸŸ 
,
ŸŸ 
actionContent
ŸŸ *
,
ŸŸ* +
actionHandler
ŸŸ, 9
,
ŸŸ9 :
actionArgument
ŸŸ; I
,
ŸŸI J
false
ŸŸK P
,
ŸŸP Q
false
ŸŸR W
)
ŸŸW X
;
ŸŸX Y
}
⁄⁄ 	
public
‹‹ 
void
‹‹ 
Enqueue
‹‹ 
<
‹‹ 
	TArgument
‹‹ %
>
‹‹% &
(
‹‹& '
object
‹‹' -
content
‹‹. 5
,
‹‹5 6
object
‹‹7 =
actionContent
‹‹> K
,
‹‹K L
Action
‹‹M S
<
‹‹S T
	TArgument
‹‹T ]
>
‹‹] ^
actionHandler
‹‹_ l
,
‹‹l m
	TArgument
›› 
actionArgument
›› $
,
››$ %
bool
››& *
promote
››+ 2
)
››2 3
=>
››4 6
Enqueue
ﬁﬁ 
(
ﬁﬁ 
content
ﬁﬁ 
,
ﬁﬁ 
actionContent
ﬁﬁ *
,
ﬁﬁ* +
actionHandler
ﬁﬁ, 9
,
ﬁﬁ9 :
actionArgument
ﬁﬁ; I
,
ﬁﬁI J
promote
ﬁﬁK R
,
ﬁﬁR S
promote
ﬁﬁT [
)
ﬁﬁ[ \
;
ﬁﬁ\ ]
public
‡‡ 
void
‡‡ 
Enqueue
‡‡ 
<
‡‡ 
	TArgument
‡‡ %
>
‡‡% &
(
‡‡& '
object
‡‡' -
content
‡‡. 5
,
‡‡5 6
object
‡‡7 =
actionContent
‡‡> K
,
‡‡K L
Action
‡‡M S
<
‡‡S T
	TArgument
‡‡T ]
>
‡‡] ^
actionHandler
‡‡_ l
,
‡‡l m
	TArgument
·· 
actionArgument
·· $
,
··$ %
bool
··& *
promote
··+ 2
,
··2 3
bool
··4 8(
neverConsiderToBeDuplicate
··9 S
)
··S T
{
‚‚ 	
if
„„ 
(
„„ 
content
„„ 
==
„„ 
null
„„ 
)
„„  
throw
„„! &
new
„„' *#
ArgumentNullException
„„+ @
(
„„@ A
nameof
„„A G
(
„„G H
content
„„H O
)
„„O P
)
„„P Q
;
„„Q R
if
ÂÂ 
(
ÂÂ 
actionContent
ÂÂ 
==
ÂÂ  
null
ÂÂ! %
^
ÂÂ& '
actionHandler
ÂÂ( 5
==
ÂÂ6 8
null
ÂÂ9 =
)
ÂÂ= >
{
ÊÊ 
throw
ÁÁ 
new
ÁÁ 
ArgumentException
ÁÁ +
(
ÁÁ+ ,
$str
ÁÁ, h
,
ÁÁh i
actionContent
ËË !
!=
ËË" $
null
ËË% )
?
ËË* +
nameof
ËË, 2
(
ËË2 3
actionContent
ËË3 @
)
ËË@ A
:
ËËB C
nameof
ËËD J
(
ËËJ K
actionHandler
ËËK X
)
ËËX Y
)
ËËY Z
;
ËËZ [
}
ÈÈ 
Action
ÎÎ 
<
ÎÎ 
object
ÎÎ 
>
ÎÎ 
handler
ÎÎ "
=
ÎÎ# $
actionHandler
ÎÎ% 2
!=
ÎÎ3 5
null
ÎÎ6 :
?
ÏÏ 
new
ÏÏ 
Action
ÏÏ 
<
ÏÏ 
object
ÏÏ #
>
ÏÏ# $
(
ÏÏ$ %
argument
ÏÏ% -
=>
ÏÏ. 0
actionHandler
ÏÏ1 >
(
ÏÏ> ?
(
ÏÏ? @
	TArgument
ÏÏ@ I
)
ÏÏI J
argument
ÏÏJ R
)
ÏÏR S
)
ÏÏS T
:
ÌÌ 
null
ÌÌ 
;
ÌÌ 
Enqueue
ÓÓ 
(
ÓÓ 
content
ÓÓ 
,
ÓÓ 
actionContent
ÓÓ *
,
ÓÓ* +
handler
ÓÓ, 3
,
ÓÓ3 4
actionArgument
ÓÓ5 C
,
ÓÓC D
promote
ÓÓE L
,
ÓÓL M(
neverConsiderToBeDuplicate
ÓÓN h
)
ÓÓh i
;
ÓÓi j
}
ÔÔ 	
public
ÒÒ 
void
ÒÒ 
Enqueue
ÒÒ 
(
ÒÒ 
object
ÒÒ "
content
ÒÒ# *
,
ÒÒ* +
object
ÒÒ, 2
actionContent
ÒÒ3 @
,
ÒÒ@ A
Action
ÒÒB H
<
ÒÒH I
object
ÒÒI O
>
ÒÒO P
actionHandler
ÒÒQ ^
,
ÒÒ^ _
object
ÚÚ 
actionArgument
ÚÚ !
,
ÚÚ! "
bool
ÚÚ# '
promote
ÚÚ( /
,
ÚÚ/ 0
bool
ÚÚ1 5(
neverConsiderToBeDuplicate
ÚÚ6 P
)
ÚÚP Q
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
content
ÙÙ 
==
ÙÙ 
null
ÙÙ 
)
ÙÙ  
throw
ÙÙ! &
new
ÙÙ' *#
ArgumentNullException
ÙÙ+ @
(
ÙÙ@ A
nameof
ÙÙA G
(
ÙÙG H
content
ÙÙH O
)
ÙÙO P
)
ÙÙP Q
;
ÙÙQ R
if
ˆˆ 
(
ˆˆ 
actionContent
ˆˆ 
==
ˆˆ  
null
ˆˆ! %
^
ˆˆ& '
actionHandler
ˆˆ( 5
==
ˆˆ6 8
null
ˆˆ9 =
)
ˆˆ= >
{
˜˜ 
throw
¯¯ 
new
¯¯ 
ArgumentException
¯¯ +
(
¯¯+ ,
$str
¯¯, h
,
¯¯h i
actionContent
˘˘ !
!=
˘˘" $
null
˘˘% )
?
˘˘* +
nameof
˘˘, 2
(
˘˘2 3
actionContent
˘˘3 @
)
˘˘@ A
:
˘˘B C
nameof
˘˘D J
(
˘˘J K
actionHandler
˘˘K X
)
˘˘X Y
)
˘˘Y Z
;
˘˘Z [
}
˙˙ 
var
¸¸ &
snackbarMessageQueueItem
¸¸ (
=
¸¸) *
new
¸¸+ .&
SnackbarMessageQueueItem
¸¸/ G
(
¸¸G H
content
¸¸H O
,
¸¸O P
actionContent
¸¸Q ^
,
¸¸^ _
actionHandler
¸¸` m
,
¸¸m n
actionArgument
˝˝ 
,
˝˝ 
promote
˝˝  '
,
˝˝' ((
neverConsiderToBeDuplicate
˝˝) C
)
˝˝C D
;
˝˝D E
if
˛˛ 
(
˛˛ 
promote
˛˛ 
)
˛˛ )
InsertAsLastNotPromotedNode
ˇˇ +
(
ˇˇ+ ,&
snackbarMessageQueueItem
ˇˇ, D
)
ˇˇD E
;
ˇˇE F
else
ÄÄ 
_snackbarMessages
ÅÅ !
.
ÅÅ! "
AddLast
ÅÅ" )
(
ÅÅ) *&
snackbarMessageQueueItem
ÅÅ* B
)
ÅÅB C
;
ÅÅC D"
_messageWaitingEvent
ÉÉ  
.
ÉÉ  !
Set
ÉÉ! $
(
ÉÉ$ %
)
ÉÉ% &
;
ÉÉ& '
}
ÑÑ 	
private
ÜÜ 
void
ÜÜ )
InsertAsLastNotPromotedNode
ÜÜ 0
(
ÜÜ0 1&
SnackbarMessageQueueItem
ÜÜ1 I&
snackbarMessageQueueItem
ÜÜJ b
)
ÜÜb c
{
áá 	
var
àà 
node
àà 
=
àà 
_snackbarMessages
àà (
.
àà( )
First
àà) .
;
àà. /
while
ââ 
(
ââ 
node
ââ 
!=
ââ 
null
ââ 
)
ââ  
{
ää 
if
ãã 
(
ãã 
!
ãã 
node
ãã 
.
ãã 
Value
ãã 
.
ãã  

IsPromoted
ãã  *
)
ãã* +
{
åå 
_snackbarMessages
çç %
.
çç% &
	AddBefore
çç& /
(
çç/ 0
node
çç0 4
,
çç4 5&
snackbarMessageQueueItem
çç6 N
)
ççN O
;
ççO P
return
éé 
;
éé 
}
èè 
node
êê 
=
êê 
node
êê 
.
êê 
Next
êê  
;
êê  !
}
ëë 
_snackbarMessages
íí 
.
íí 
AddLast
íí %
(
íí% &&
snackbarMessageQueueItem
íí& >
)
íí> ?
;
íí? @
}
ìì 	
private
ïï 
async
ïï 
void
ïï 
	PumpAsync
ïï $
(
ïï$ %
)
ïï% &
{
ññ 	
while
óó 
(
óó 
!
óó 
_isDisposed
óó 
)
óó  
{
òò 
var
ôô 
eventId
ôô 
=
ôô 

WaitHandle
ôô (
.
ôô( )
WaitAny
ôô) 0
(
ôô0 1
new
ôô1 4

WaitHandle
ôô5 ?
[
ôô? @
]
ôô@ A
{
ôôB C
_disposedEvent
ôôD R
,
ôôR S"
_messageWaitingEvent
ôôT h
}
ôôi j
)
ôôj k
;
ôôk l
if
öö 
(
öö 
eventId
öö 
==
öö 
$num
öö  
)
öö  !
continue
öö" *
;
öö* +
var
õõ 
exemplar
õõ 
=
õõ 
_pairedSnackbars
õõ /
.
õõ/ 0
FirstOrDefault
õõ0 >
(
õõ> ?
)
õõ? @
;
õõ@ A
if
úú 
(
úú 
exemplar
úú 
==
úú 
null
úú  $
)
úú$ %
{
ùù 
Trace
ûû 
.
ûû 
TraceWarning
ûû &
(
ûû& '
$str
üü u
)
üüu v
;
üüv w
_disposedEvent
†† "
.
††" #
WaitOne
††# *
(
††* +
TimeSpan
††+ 3
.
††3 4
FromSeconds
††4 ?
(
††? @
$num
††@ A
)
††A B
)
††B C
;
††C D
continue
°° 
;
°° 
}
¢¢ 
var
•• 
snackbar
•• 
=
•• 
await
•• $
FindSnackbar
••% 1
(
••1 2
exemplar
••2 :
.
••: ;

Dispatcher
••; E
)
••E F
;
••F G
if
®® 
(
®® 
snackbar
®® 
!=
®® 
null
®®  $
)
®®$ %
{
©© 
var
™™ 
message
™™ 
=
™™  !
_snackbarMessages
™™" 3
.
™™3 4
First
™™4 9
.
™™9 :
Value
™™: ?
;
™™? @
_snackbarMessages
´´ %
.
´´% &
RemoveFirst
´´& 1
(
´´1 2
)
´´2 3
;
´´3 4
if
¨¨ 
(
¨¨ 
_latestShownItem
¨¨ (
==
¨¨) +
null
¨¨, 0
||
≠≠ 
message
≠≠ "
.
≠≠" #
IgnoreDuplicate
≠≠# 2
||
ÆÆ 
!
ÆÆ 
Equals
ÆÆ "
(
ÆÆ" #
_latestShownItem
ÆÆ# 3
.
ÆÆ3 4
Item1
ÆÆ4 9
.
ÆÆ9 :
Content
ÆÆ: A
,
ÆÆA B
message
ÆÆC J
.
ÆÆJ K
Content
ÆÆK R
)
ÆÆR S
||
ØØ 
!
ØØ 
Equals
ØØ "
(
ØØ" #
_latestShownItem
ØØ# 3
.
ØØ3 4
Item1
ØØ4 9
.
ØØ9 :
ActionContent
ØØ: G
,
ØØG H
message
ØØI P
.
ØØP Q
ActionContent
ØØQ ^
)
ØØ^ _
||
∞∞ 
_latestShownItem
∞∞ +
.
∞∞+ ,
Item2
∞∞, 1
<=
∞∞2 4
DateTime
∞∞5 =
.
∞∞= >
Now
∞∞> A
.
∞∞A B
Subtract
∞∞B J
(
∞∞J K
_messageDuration
∞∞K [
)
∞∞[ \
)
∞∞\ ]
{
±± 
await
≤≤ 
	ShowAsync
≤≤ '
(
≤≤' (
snackbar
≤≤( 0
,
≤≤0 1
message
≤≤2 9
)
≤≤9 :
;
≤≤: ;
_latestShownItem
≥≥ (
=
≥≥) *
new
≥≥+ .
Tuple
≥≥/ 4
<
≥≥4 5&
SnackbarMessageQueueItem
≥≥5 M
,
≥≥M N
DateTime
≥≥O W
>
≥≥W X
(
≥≥X Y
message
≥≥Y `
,
≥≥` a
DateTime
≥≥b j
.
≥≥j k
Now
≥≥k n
)
≥≥n o
;
≥≥o p
}
¥¥ 
}
µµ 
else
∂∂ 
{
∑∑ 
_disposedEvent
ππ "
.
ππ" #
WaitOne
ππ# *
(
ππ* +
TimeSpan
ππ+ 3
.
ππ3 4
FromSeconds
ππ4 ?
(
ππ? @
$num
ππ@ A
)
ππA B
)
ππB C
;
ππC D
}
∫∫ 
if
ºº 
(
ºº 
_snackbarMessages
ºº %
.
ºº% &
Count
ºº& +
>
ºº, -
$num
ºº. /
)
ºº/ 0"
_messageWaitingEvent
ΩΩ (
.
ΩΩ( )
Set
ΩΩ) ,
(
ΩΩ, -
)
ΩΩ- .
;
ΩΩ. /
else
ææ "
_messageWaitingEvent
øø (
.
øø( )
Reset
øø) .
(
øø. /
)
øø/ 0
;
øø0 1
}
¿¿ 
}
¡¡ 	
private
√√ !
DispatcherOperation
√√ #
<
√√# $
Snackbar
√√$ ,
>
√√, -
FindSnackbar
√√. :
(
√√: ;

Dispatcher
√√; E

dispatcher
√√F P
)
√√P Q
{
ƒƒ 	
return
≈≈ 

dispatcher
≈≈ 
.
≈≈ 
InvokeAsync
≈≈ )
(
≈≈) *
(
≈≈* +
)
≈≈+ ,
=>
≈≈- /
{
∆∆ 
return
«« 
_pairedSnackbars
«« '
.
««' (
FirstOrDefault
««( 6
(
««6 7
sb
««7 9
=>
««: <
{
»» 
if
…… 
(
…… 
!
…… 
sb
…… 
.
…… 
IsLoaded
…… $
||
……% '
sb
……( *
.
……* +

Visibility
……+ 5
!=
……6 8

Visibility
……9 C
.
……C D
Visible
……D K
)
……K L
return
……M S
false
……T Y
;
……Y Z
var
   
window
   
=
    
Window
  ! '
.
  ' (
	GetWindow
  ( 1
(
  1 2
sb
  2 4
)
  4 5
;
  5 6
return
ÀÀ 
window
ÀÀ !
?
ÀÀ! "
.
ÀÀ" #
WindowState
ÀÀ# .
!=
ÀÀ/ 1
WindowState
ÀÀ2 =
.
ÀÀ= >
	Minimized
ÀÀ> G
;
ÀÀG H
}
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
private
–– 
async
–– 
Task
–– 
	ShowAsync
–– $
(
––$ %
Snackbar
––% -
snackbar
––. 6
,
––6 7&
SnackbarMessageQueueItem
––8 P
messageQueueItem
––Q a
)
––a b
{
—— 	
await
““ 
Task
““ 
.
““ 
Run
““ 
(
““ 
async
““  
(
““! "
)
““" #
=>
““$ &
{
”” 
var
’’ #
actionClickWaitHandle
’’ -
=
’’. /
new
’’0 3
ManualResetEvent
’’4 D
(
’’D E
false
’’E J
)
’’J K
;
’’K L
var
÷÷ +
mouseNotOverManagedWaitHandle
÷÷ 5
=
÷÷6 7
await
◊◊ 
snackbar
ÿÿ $
.
ÿÿ$ %

Dispatcher
ÿÿ% /
.
ÿÿ/ 0
InvokeAsync
ÿÿ0 ;
(
ÿÿ; <
(
ŸŸ  !
)
ŸŸ! "
=>
ŸŸ# %"
CreateAndShowMessage
ŸŸ& :
(
ŸŸ: ;
snackbar
ŸŸ; C
,
ŸŸC D
messageQueueItem
ŸŸE U
,
ŸŸU V#
actionClickWaitHandle
ŸŸW l
)
ŸŸl m
)
ŸŸm n
;
ŸŸn o
var
⁄⁄ &
durationPassedWaitHandle
⁄⁄ 0
=
⁄⁄1 2
new
⁄⁄3 6
ManualResetEvent
⁄⁄7 G
(
⁄⁄G H
false
⁄⁄H M
)
⁄⁄M N
;
⁄⁄N O
DurationMonitor
€€ #
.
€€# $
Start
€€$ )
(
€€) *
_messageDuration
€€* :
.
€€: ;
Add
€€; >
(
€€> ?
snackbar
€€? G
.
€€G H(
ActivateStoryboardDuration
€€H b
)
€€b c
,
€€c d
_pausedEvent
‹‹ $
,
‹‹$ %&
durationPassedWaitHandle
‹‹& >
,
‹‹> ?
_disposedEvent
‹‹@ N
)
‹‹N O
;
‹‹O P
await
ﬂﬂ $
WaitForCompletionAsync
ﬂﬂ 0
(
ﬂﬂ0 1+
mouseNotOverManagedWaitHandle
ﬂﬂ1 N
,
ﬂﬂN O&
durationPassedWaitHandle
ﬂﬂP h
,
ﬂﬂh i#
actionClickWaitHandle
ﬂﬂj 
)ﬂﬂ Ä
;ﬂﬂÄ Å
await
‚‚ 
snackbar
„„  
.
„„  !

Dispatcher
„„! +
.
„„+ ,
InvokeAsync
„„, 7
(
„„7 8
(
‰‰ 
)
‰‰ 
=>
‰‰ !
snackbar
‰‰" *
.
‰‰* +
SetCurrentValue
‰‰+ :
(
‰‰: ;
Snackbar
‰‰; C
.
‰‰C D
IsActiveProperty
‰‰D T
,
‰‰T U
false
‰‰V [
)
‰‰[ \
)
‰‰\ ]
;
‰‰] ^
_disposedEvent
ËË "
.
ËË" #
WaitOne
ËË# *
(
ËË* +
snackbar
ËË+ 3
.
ËË3 4*
DeactivateStoryboardDuration
ËË4 P
)
ËËP Q
;
ËËQ R
await
ÎÎ 
snackbar
ÎÎ "
.
ÎÎ" #

Dispatcher
ÎÎ# -
.
ÎÎ- .
InvokeAsync
ÎÎ. 9
(
ÎÎ9 :
(
ÏÏ 
)
ÏÏ 
=>
ÏÏ 
snackbar
ÏÏ &
.
ÏÏ& '
SetCurrentValue
ÏÏ' 6
(
ÏÏ6 7
Snackbar
ÏÏ7 ?
.
ÏÏ? @
MessageProperty
ÏÏ@ O
,
ÏÏO P
null
ÏÏQ U
)
ÏÏU V
)
ÏÏV W
;
ÏÏW X+
mouseNotOverManagedWaitHandle
ÓÓ 1
.
ÓÓ1 2
Dispose
ÓÓ2 9
(
ÓÓ9 :
)
ÓÓ: ;
;
ÓÓ; <&
durationPassedWaitHandle
ÔÔ ,
.
ÔÔ, -
Dispose
ÔÔ- 4
(
ÔÔ4 5
)
ÔÔ5 6
;
ÔÔ6 7
}
ÒÒ 
)
ÒÒ 
.
ÚÚ 
ContinueWith
ÚÚ 
(
ÚÚ 
t
ÚÚ 
=>
ÚÚ  "
{
ÛÛ 
if
ÙÙ 
(
ÙÙ 
t
ÙÙ 
.
ÙÙ 
	Exception
ÙÙ #
==
ÙÙ$ &
null
ÙÙ' +
)
ÙÙ+ ,
return
ÙÙ- 3
;
ÙÙ3 4
var
ˆˆ 
exc
ˆˆ 
=
ˆˆ 
t
ˆˆ 
.
ˆˆ  
	Exception
ˆˆ  )
.
ˆˆ) *
InnerExceptions
ˆˆ* 9
.
ˆˆ9 :
FirstOrDefault
ˆˆ: H
(
ˆˆH I
)
ˆˆI J
??
ˆˆK M
t
ˆˆN O
.
ˆˆO P
	Exception
ˆˆP Y
;
ˆˆY Z
Trace
˜˜ 
.
˜˜ 
	WriteLine
˜˜ #
(
˜˜# $
$str
˜˜$ h
)
˜˜h i
;
˜˜i j
Trace
¯¯ 
.
¯¯ 
	WriteLine
¯¯ #
(
¯¯# $
$"
¯¯$ &
{
¯¯& '
exc
¯¯' *
.
¯¯* +
Message
¯¯+ 2
}
¯¯2 3
 (
¯¯3 5
{
¯¯5 6
exc
¯¯6 9
.
¯¯9 :
GetType
¯¯: A
(
¯¯A B
)
¯¯B C
.
¯¯C D
FullName
¯¯D L
}
¯¯L M
)
¯¯M N
"
¯¯N O
)
¯¯O P
;
¯¯P Q
Trace
˘˘ 
.
˘˘ 
	WriteLine
˘˘ #
(
˘˘# $
exc
˘˘$ '
.
˘˘' (

StackTrace
˘˘( 2
)
˘˘2 3
;
˘˘3 4
throw
˚˚ 
t
˚˚ 
.
˚˚ 
	Exception
˚˚ %
;
˚˚% &
}
¸¸ 
)
¸¸ 
;
¸¸ 
}
˝˝ 	
private
ˇˇ 
static
ˇˇ +
MouseNotOverManagedWaitHandle
ˇˇ 4"
CreateAndShowMessage
ˇˇ5 I
(
ˇˇI J
	UIElement
ˇˇJ S
snackbar
ˇˇT \
,
ˇˇ\ ]&
SnackbarMessageQueueItem
ÄÄ $
messageQueueItem
ÄÄ% 5
,
ÄÄ5 6
EventWaitHandle
ÄÄ7 F#
actionClickWaitHandle
ÄÄG \
)
ÄÄ\ ]
{
ÅÅ 	
var
ÇÇ 

clickCount
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
var
ÉÉ 
snackbarMessage
ÉÉ 
=
ÉÉ  !
Create
ÉÉ" (
(
ÉÉ( )
messageQueueItem
ÉÉ) 9
)
ÉÉ9 :
;
ÉÉ: ;
snackbarMessage
ÑÑ 
.
ÑÑ 
ActionClick
ÑÑ '
+=
ÑÑ( *
(
ÑÑ+ ,
sender
ÑÑ, 2
,
ÑÑ2 3
args
ÑÑ4 8
)
ÑÑ8 9
=>
ÑÑ: <
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
++
ÜÜ 

clickCount
ÜÜ  
==
ÜÜ! #
$num
ÜÜ$ %
)
ÜÜ% &
DoActionCallback
áá $
(
áá$ %
messageQueueItem
áá% 5
)
áá5 6
;
áá6 7#
actionClickWaitHandle
àà %
.
àà% &
Set
àà& )
(
àà) *
)
àà* +
;
àà+ ,
}
ââ 
;
ââ 
snackbar
ää 
.
ää 
SetCurrentValue
ää $
(
ää$ %
Snackbar
ää% -
.
ää- .
MessageProperty
ää. =
,
ää= >
snackbarMessage
ää? N
)
ääN O
;
ääO P
snackbar
ãã 
.
ãã 
SetCurrentValue
ãã $
(
ãã$ %
Snackbar
ãã% -
.
ãã- .
IsActiveProperty
ãã. >
,
ãã> ?
true
ãã@ D
)
ããD E
;
ããE F
return
åå 
new
åå +
MouseNotOverManagedWaitHandle
åå 4
(
åå4 5
snackbar
åå5 =
)
åå= >
;
åå> ?
}
çç 	
private
èè 
static
èè 
async
èè 
Task
èè !$
WaitForCompletionAsync
èè" 8
(
èè8 9+
MouseNotOverManagedWaitHandle
êê )+
mouseNotOverManagedWaitHandle
êê* G
,
êêG H

WaitHandle
ëë &
durationPassedWaitHandle
ëë /
,
ëë/ 0

WaitHandle
ëë1 ;#
actionClickWaitHandle
ëë< Q
)
ëëQ R
{
íí 	
await
ìì 
Task
ìì 
.
ìì 
WhenAny
ìì 
(
ìì 
Task
îî 
.
îî 
Factory
îî 
.
îî 
StartNew
îî %
(
îî% &
(
îî& '
)
îî' (
=>
îî) +
{
ïï 

WaitHandle
ññ 
.
ññ 
WaitAll
ññ &
(
ññ& '
new
ññ' *
[
ññ* +
]
ññ+ ,
{
óó +
mouseNotOverManagedWaitHandle
òò 5
.
òò5 6

WaitHandle
òò6 @
,
òò@ A&
durationPassedWaitHandle
ôô 0
}
öö 
)
öö 
;
öö 
}
õõ 
)
õõ 
,
õõ 
Task
úú 
.
úú 
Factory
úú 
.
úú 
StartNew
úú %
(
úú% &#
actionClickWaitHandle
úú& ;
.
úú; <
WaitOne
úú< C
)
úúC D
)
úúD E
;
úúE F
}
ùù 	
private
üü 
static
üü 
void
üü 
DoActionCallback
üü ,
(
üü, -&
SnackbarMessageQueueItem
üü- E
messageQueueItem
üüF V
)
üüV W
{
†† 	
try
°° 
{
¢¢ 
messageQueueItem
££  
.
££  !
ActionHandler
££! .
(
££. /
messageQueueItem
££/ ?
.
££? @
ActionArgument
££@ N
)
££N O
;
££O P
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
exc
¶¶  
)
¶¶  !
{
ßß 
Trace
®® 
.
®® 
	WriteLine
®® 
(
®®  
$str
®®  x
)
®®x y
;
®®y z
Trace
©© 
.
©© 
	WriteLine
©© 
(
©©  
$"
©©  "
{
©©" #
exc
©©# &
.
©©& '
Message
©©' .
}
©©. /
 (
©©/ 1
{
©©1 2
exc
©©2 5
.
©©5 6
GetType
©©6 =
(
©©= >
)
©©> ?
.
©©? @
FullName
©©@ H
}
©©H I
)
©©I J
"
©©J K
)
©©K L
;
©©L M
Trace
™™ 
.
™™ 
	WriteLine
™™ 
(
™™  
exc
™™  #
.
™™# $

StackTrace
™™$ .
)
™™. /
;
™™/ 0
throw
¨¨ 
;
¨¨ 
}
≠≠ 
}
ÆÆ 	
private
∞∞ 
static
∞∞ 
SnackbarMessage
∞∞ &
Create
∞∞' -
(
∞∞- .&
SnackbarMessageQueueItem
∞∞. F
messageQueueItem
∞∞G W
)
∞∞W X
{
±± 	
return
≤≤ 
new
≤≤ 
SnackbarMessage
≤≤ &
{
≥≥ 
Content
¥¥ 
=
¥¥ 
messageQueueItem
¥¥ *
.
¥¥* +
Content
¥¥+ 2
,
¥¥2 3
ActionContent
µµ 
=
µµ 
messageQueueItem
µµ  0
.
µµ0 1
ActionContent
µµ1 >
}
∂∂ 
;
∂∂ 
}
∑∑ 	
public
ππ 
void
ππ 
Dispose
ππ 
(
ππ 
)
ππ 
{
∫∫ 	
_isDisposed
ªª 
=
ªª 
true
ªª 
;
ªª 
_disposedEvent
ºº 
.
ºº 
Set
ºº 
(
ºº 
)
ºº  
;
ºº  !
_disposedEvent
ΩΩ 
.
ΩΩ 
Dispose
ΩΩ "
(
ΩΩ" #
)
ΩΩ# $
;
ΩΩ$ %
_pausedEvent
ææ 
.
ææ 
Dispose
ææ  
(
ææ  !
)
ææ! "
;
ææ" #
}
øø 	
}
¿¿ 
}¡¡ å
_D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\SnackbarMessageQueueItem.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
internal 
class $
SnackbarMessageQueueItem +
{ 
public $
SnackbarMessageQueueItem '
(' (
object( .
content/ 6
,6 7
object8 >
actionContent? L
=M N
nullO S
,S T
ActionU [
<[ \
object\ b
>b c
actionHandlerd q
=r s
nullt x
,x y
object	z Ä
actionArgument
Å è
=
ê ë
null
í ñ
,
ñ ó
bool 

isPromoted 
= 
false #
,# $
bool% )
ignoreDuplicate* 9
=: ;
false< A
)A B
{		 	
Content

 
=

 
content

 
;

 
ActionContent 
= 
actionContent )
;) *
ActionHandler 
= 
actionHandler )
;) *
ActionArgument 
= 
actionArgument +
;+ ,

IsPromoted 
= 

isPromoted #
;# $
IgnoreDuplicate 
= 
ignoreDuplicate -
;- .
} 	
public 
object 
Content 
{ 
get  #
;# $
}% &
public 
object 
ActionContent #
{$ %
get& )
;) *
}+ ,
public 
Action 
< 
object 
> 
ActionHandler +
{, -
get. 1
;1 2
}3 4
public$$ 
object$$ 
ActionArgument$$ $
{$$% &
get$$' *
;$$* +
}$$, -
public)) 
bool)) 

IsPromoted)) 
{))  
get))! $
;))$ %
}))& '
public.. 
bool.. 
IgnoreDuplicate.. #
{..$ %
get..& )
;..) *
}..+ ,
}// 
}00 õ
OD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Spelling.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
Spelling  
{ 
public 
static 
ResourceKey !&
SuggestionMenuItemStyleKey" <
{= >
get? B
;B C
}D E
=F G
newH K 
ComponentResourceKeyL `
(` a
typeofa g
(g h
Spellingh p
)p q
,q r
ResourceKeyId	s Ä
.
Ä Å-
SpellingSuggestionMenuItemStyle
Å †
)
† °
;
° ¢
public 
static 
ResourceKey !%
IgnoreAllMenuItemStyleKey" ;
{< =
get> A
;A B
}C D
=E F
newG J 
ComponentResourceKeyK _
(_ `
typeof` f
(f g
Spellingg o
)o p
,p q
ResourceKeyIdr 
.	 Ä,
SpellingIgnoreAllMenuItemStyle
Ä û
)
û ü
;
ü †
public		 
static		 
ResourceKey		 !)
NoSuggestionsMenuItemStyleKey		" ?
{		@ A
get		B E
;		E F
}		G H
=		I J
new		K N 
ComponentResourceKey		O c
(		c d
typeof		d j
(		j k
Spelling		k s
)		s t
,		t u
ResourceKeyId			v É
.
		É Ñ0
"SpellingNoSuggestionsMenuItemStyle
		Ñ ¶
)
		¶ ß
;
		ß ®
public

 
static

 
ResourceKey

 !
SeparatorStyleKey

" 3
{

4 5
get

6 9
;

9 :
}

; <
=

= >
new

? B 
ComponentResourceKey

C W
(

W X
typeof

X ^
(

^ _
Spelling

_ g
)

g h
,

h i
ResourceKeyId

j w
.

w x#
SpellingSeparatorStyle	

x é
)


é è
;


è ê
} 
internal 
enum 
ResourceKeyId 
{ +
SpellingSuggestionMenuItemStyle '
,' (*
SpellingIgnoreAllMenuItemStyle &
,& '.
"SpellingNoSuggestionsMenuItemStyle *
,* +"
SpellingSeparatorStyle 
, 
} 
} ˚H
]D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\CircleWipe.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

class 

CircleWipe 
: 
ITransitionWipe -
{		 
public

 
void

 
Wipe

 
(

 
TransitionerSlide

 *
	fromSlide

+ 4
,

4 5
TransitionerSlide

6 G
toSlide

H O
,

O P
Point

Q V
origin

W ]
,

] ^
IZIndexController

_ p
zIndexController	

q Å
)


Å Ç
{ 	
if 
( 
	fromSlide 
== 
null !
)! "
throw# (
new) ,!
ArgumentNullException- B
(B C
nameofC I
(I J
	fromSlideJ S
)S T
)T U
;U V
if 
( 
toSlide 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
nameofA G
(G H
toSlideH O
)O P
)P Q
;Q R
if 
( 
zIndexController  
==! #
null$ (
)( )
throw* /
new0 3!
ArgumentNullException4 I
(I J
nameofJ P
(P Q
zIndexControllerQ a
)a b
)b c
;c d
var  
horizontalProportion $
=% &
Math' +
.+ ,
Max, /
(/ 0
$num0 3
-4 5
origin6 <
.< =
X= >
,> ?
$num@ C
*D E
originF L
.L M
XM N
)N O
;O P
var 
verticalProportion "
=# $
Math% )
.) *
Max* -
(- .
$num. 1
-2 3
origin4 :
.: ;
Y; <
,< =
$num> A
*B C
originD J
.J K
YK L
)L M
;M N
var 
radius 
= 
Math 
. 
Sqrt "
(" #
Math# '
.' (
Pow( +
(+ ,
toSlide, 3
.3 4
ActualWidth4 ?
*@ A 
horizontalProportionB V
,V W
$numX Y
)Y Z
+[ \
Math] a
.a b
Powb e
(e f
toSlidef m
.m n
ActualHeightn z
*{ |
verticalProportion	} è
,
è ê
$num
ë í
)
í ì
)
ì î
;
î ï
var 
scaleTransform 
=  
new! $
ScaleTransform% 3
(3 4
$num4 5
,5 6
$num7 8
)8 9
;9 :
var 
translateTransform "
=# $
new% (
TranslateTransform) ;
(; <
toSlide< C
.C D
ActualWidthD O
*P Q
originR X
.X Y
XY Z
,Z [
toSlide\ c
.c d
ActualHeightd p
*q r
origins y
.y z
Yz {
){ |
;| }
var 
transformGroup 
=  
new! $
TransformGroup% 3
(3 4
)4 5
;5 6
transformGroup 
. 
Children #
.# $
Add$ '
(' (
scaleTransform( 6
)6 7
;7 8
transformGroup 
. 
Children #
.# $
Add$ '
(' (
translateTransform( :
): ;
;; <
var 
ellipseGeomotry 
=  !
new" %
EllipseGeometry& 5
(5 6
)6 7
{ 
RadiusX 
= 
radius  
,  !
RadiusY 
= 
radius  
,  !
	Transform 
= 
transformGroup *
} 
; 
toSlide   
.   
SetCurrentValue   #
(  # $
	UIElement  $ -
.  - .
ClipProperty  . :
,  : ;
ellipseGeomotry  < K
)  K L
;  L M
zIndexController!! 
.!! 
Stack!! "
(!!" #
toSlide!!# *
,!!* +
	fromSlide!!, 5
)!!5 6
;!!6 7
var## 
zeroKeyTime## 
=## 
KeyTime## %
.##% &
FromTimeSpan##& 2
(##2 3
TimeSpan##3 ;
.##; <
Zero##< @
)##@ A
;##A B
var$$ 

midKeyTime$$ 
=$$ 
KeyTime$$ $
.$$$ %
FromTimeSpan$$% 1
($$1 2
TimeSpan$$2 :
.$$: ;
FromMilliseconds$$; K
($$K L
$num$$L O
)$$O P
)$$P Q
;$$Q R
var%% 

endKeyTime%% 
=%% 
KeyTime%% $
.%%$ %
FromTimeSpan%%% 1
(%%1 2
TimeSpan%%2 :
.%%: ;
FromMilliseconds%%; K
(%%K L
$num%%L O
)%%O P
)%%P Q
;%%Q R
var'' 
opacityAnimation''  
=''! "
new''# &)
DoubleAnimationUsingKeyFrames''' D
(''D E
)''E F
;''F G
opacityAnimation(( 
.(( 
	KeyFrames(( &
.((& '
Add((' *
(((* +
new((+ . 
EasingDoubleKeyFrame((/ C
(((C D
$num((D E
,((E F
zeroKeyTime((G R
)((R S
)((S T
;((T U
opacityAnimation)) 
.)) 
	KeyFrames)) &
.))& '
Add))' *
())* +
new))+ . 
EasingDoubleKeyFrame))/ C
())C D
$num))D E
,))E F

midKeyTime))G Q
)))Q R
)))R S
;))S T
opacityAnimation** 
.** 
	KeyFrames** &
.**& '
Add**' *
(*** +
new**+ . 
EasingDoubleKeyFrame**/ C
(**C D
$num**D E
,**E F

endKeyTime**G Q
)**Q R
)**R S
;**S T
opacityAnimation++ 
.++ 
	Completed++ &
+=++' )
(++* +
sender+++ 1
,++1 2
args++3 7
)++7 8
=>++9 ;
{,, 
	fromSlide-- 
.-- 
BeginAnimation-- (
(--( )
	UIElement--) 2
.--2 3
OpacityProperty--3 B
,--B C
null--D H
)--H I
;--I J
	fromSlide.. 
... 
Opacity.. !
=.." #
$num..$ %
;..% &
}// 
;// 
	fromSlide00 
.00 
BeginAnimation00 $
(00$ %
	UIElement00% .
.00. /
OpacityProperty00/ >
,00> ?
opacityAnimation00@ P
)00P Q
;00Q R
var22 
scaleAnimation22 
=22  
new22! $)
DoubleAnimationUsingKeyFrames22% B
(22B C
)22C D
;22D E
scaleAnimation33 
.33 
	Completed33 $
+=33& (
(33) *
sender33* 0
,330 1
args332 6
)336 7
=>338 :
{44 
toSlide55 
.55 
SetCurrentValue55 '
(55' (
	UIElement55( 1
.551 2
ClipProperty552 >
,55> ?
null55@ D
)55D E
;55E F
	fromSlide66 
.66 
BeginAnimation66 (
(66( )
	UIElement66) 2
.662 3
OpacityProperty663 B
,66B C
null66D H
)66H I
;66I J
	fromSlide77 
.77 
Opacity77 !
=77" #
$num77$ %
;77% &
}88 
;88 
scaleAnimation99 
.99 
	KeyFrames99 $
.99$ %
Add99% (
(99( )
new99) , 
EasingDoubleKeyFrame99- A
(99A B
$num99B C
,99C D
zeroKeyTime99E P
)99P Q
)99Q R
;99R S
scaleAnimation:: 
.:: 
	KeyFrames:: $
.::$ %
Add::% (
(::( )
new::) , 
EasingDoubleKeyFrame::- A
(::A B
$num::B C
,::C D

endKeyTime::E O
)::O P
)::P Q
;::Q R
scaleTransform;; 
.;; 
BeginAnimation;; )
(;;) *
ScaleTransform;;* 8
.;;8 9
ScaleXProperty;;9 G
,;;G H
scaleAnimation;;I W
);;W X
;;;X Y
scaleTransform<< 
.<< 
BeginAnimation<< )
(<<) *
ScaleTransform<<* 8
.<<8 9
ScaleYProperty<<9 G
,<<G H
scaleAnimation<<I W
)<<W X
;<<X Y
}== 	
}>> 
}?? π	
QD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\IHintProxy.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{		 
public 

	interface 

IHintProxy 
:  !
IDisposable" -
{ 
bool 
IsEmpty 
( 
) 
; 
bool 
	IsFocused 
( 
) 
; 
[ 	
Obsolete	 
] 
object 
Content 
{ 
get 
; 
} 
bool!! 
IsLoaded!! 
{!! 
get!! 
;!! 
}!! 
bool## 
	IsVisible## 
{## 
get## 
;## 
}## 
event%% 
EventHandler%% 
ContentChanged%% )
;%%) *
event'' 
EventHandler'' 
IsVisibleChanged'' +
;''+ ,
event)) 
EventHandler)) 
Loaded)) !
;))! "
event++ 
EventHandler++ 
FocusedChanged++ )
;++) *
},, 
}-- «0
[D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\FadeWipe.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

class 
FadeWipe 
: 
ITransitionWipe +
{ 
private		 
readonly		 
SineEase		 !
	_sineEase		" +
=		, -
new		. 1
SineEase		2 :
(		: ;
)		; <
;		< =
public 
TimeSpan 
Duration  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
TimeSpan1 9
.9 :
FromSeconds: E
(E F
$numF I
)I J
;J K
public 
void 
Wipe 
( 
TransitionerSlide *
	fromSlide+ 4
,4 5
TransitionerSlide6 G
toSlideH O
,O P
PointQ V
originW ]
,] ^
IZIndexController_ p
zIndexController	q Å
)
Å Ç
{ 	
if 
( 
	fromSlide 
== 
null !
)! "
throw# (
new) ,!
ArgumentNullException- B
(B C
nameofC I
(I J
	fromSlideJ S
)S T
)T U
;U V
if 
( 
toSlide 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
nameofA G
(G H
toSlideH O
)O P
)P Q
;Q R
if 
( 
zIndexController  
==! #
null$ (
)( )
throw* /
new0 3!
ArgumentNullException4 I
(I J
nameofJ P
(P Q
zIndexControllerQ a
)a b
)b c
;c d
var 
zeroKeyTime 
= 
KeyTime %
.% &
FromTimeSpan& 2
(2 3
TimeSpan3 ;
.; <
Zero< @
)@ A
;A B
var 

endKeyTime 
= 
KeyTime $
.$ %
FromTimeSpan% 1
(1 2
TimeSpan2 :
.: ;
FromSeconds; F
(F G
DurationG O
.O P
TotalSecondsP \
/\ ]
$num] ^
)^ _
)_ `
;` a
var 
fromAnimation 
= 
new  #)
DoubleAnimationUsingKeyFrames$ A
(A B
)B C
;C D
fromAnimation 
. 
	KeyFrames #
.# $
Add$ '
(' (
new( + 
LinearDoubleKeyFrame, @
(@ A
$numA B
,B C
zeroKeyTimeD O
)O P
)P Q
;Q R
fromAnimation 
. 
	KeyFrames #
.# $
Add$ '
(' (
new( + 
EasingDoubleKeyFrame, @
(@ A
$numA B
,B C

endKeyTimeD N
,N O
	_sineEaseP Y
)Y Z
)Z [
;[ \
var   
toAnimation   
=   
new   !)
DoubleAnimationUsingKeyFrames  " ?
(  ? @
)  @ A
;  A B
toAnimation!! 
.!! 
	KeyFrames!! !
.!!! "
Add!!" %
(!!% &
new!!& ) 
LinearDoubleKeyFrame!!* >
(!!> ?
$num!!? @
,!!@ A
zeroKeyTime!!B M
)!!M N
)!!N O
;!!O P
toAnimation"" 
."" 
	KeyFrames"" !
.""! "
Add""" %
(""% &
new""& ) 
EasingDoubleKeyFrame""* >
(""> ?
$num""? @
,""@ A

endKeyTime""B L
,""L M
	_sineEase""N W
)""W X
)""X Y
;""Y Z
	fromSlide%% 
.%% 
Opacity%% 
=%% 
$num%%  !
;%%! "
toSlide&& 
.&& 
Opacity&& 
=&& 
$num&& 
;&&  
toAnimation)) 
.)) 
	Completed)) !
+=))" $
())% &
sender))& ,
,)), -
args)). 2
)))2 3
=>))4 6
{** 
toSlide++ 
.++ 
BeginAnimation++ &
(++& '
	UIElement++' 0
.++0 1
OpacityProperty++1 @
,++@ A
null++B F
)++F G
;++G H
	fromSlide,, 
.,, 
Opacity,, !
=,," #
$num,,$ %
;,,% &
toSlide-- 
.-- 
Opacity-- 
=--  !
$num--" #
;--# $
}.. 
;.. 
fromAnimation// 
.// 
	Completed// #
+=//$ &
(//' (
sender//( .
,//. /
args//0 4
)//4 5
=>//6 8
{00 
	fromSlide11 
.11 
BeginAnimation11 (
(11( )
	UIElement11) 2
.112 3
OpacityProperty113 B
,11B C
null11D H
)11H I
;11I J
	fromSlide22 
.22 
Opacity22 !
=22" #
$num22$ %
;22% &
toSlide33 
.33 
BeginAnimation33 &
(33& '
	UIElement33' 0
.330 1
OpacityProperty331 @
,33@ A
toAnimation33B M
)33M N
;33N O
}44 
;44 
	fromSlide77 
.77 
BeginAnimation77 $
(77$ %
	UIElement77% .
.77. /
OpacityProperty77/ >
,77> ?
fromAnimation77@ M
)77M N
;77N O
zIndexController88 
.88 
Stack88 "
(88" #
toSlide88# *
,88* +
	fromSlide88, 5
)885 6
;886 7
}99 	
}:: 
};; ı5
wD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\IndexedItemOffsetMultiplierExtension.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
[ %
MarkupExtensionReturnType 
( 
typeof %
(% &
TimeSpan& .
). /
)/ 0
]0 1
public 

class 0
$IndexedItemOffsetMultiplierExtension 5
:6 7
MarkupExtension8 G
{ 
public 0
$IndexedItemOffsetMultiplierExtension 3
(3 4
TimeSpan4 <
unit= A
)A B
{ 	
Unit 
= 
unit 
; 
} 	
[ 	
ConstructorArgument	 
( 
$str #
)# $
]$ %
public 
TimeSpan 
Unit 
{ 
get "
;" #
set$ '
;' (
}) *
public 
override 
object 
ProvideValue +
(+ ,
IServiceProvider, <
serviceProvider= L
)L M
{ 	
var 
provideValueTarget "
=# $
serviceProvider% 4
.4 5

GetService5 ?
(? @
typeof@ F
(F G
IProvideValueTargetG Z
)Z [
)[ \
as] _
IProvideValueTarget` s
;s t
if 
( 
provideValueTarget "
==# %
null& *
)* +
return, 2
TimeSpan3 ;
.; <
Zero< @
;@ A
if   
(   
provideValueTarget   "
.  " #
TargetObject  # /
!=  0 2
null  3 7
&&  8 :
provideValueTarget!! "
.!!" #
TargetObject!!# /
.!!/ 0
GetType!!0 7
(!!7 8
)!!8 9
.!!9 :
FullName!!: B
==!!C E
$str!!F _
)!!_ `
return## 
this## 
;## 
var%% 
element%% 
=%% 
provideValueTarget%% ,
?%%, -
.%%- .
TargetObject%%. :
as%%; =
DependencyObject%%> N
;%%N O
if&& 
(&& 
element&& 
==&& 
null&& 
)&&  
return&&! '
TimeSpan&&( 0
.&&0 1
Zero&&1 5
;&&5 6
var(( 
itemsControl(( 
=(( 
ItemsControl(( +
.((+ ,)
ItemsControlFromItemContainer((, I
(((I J
element((J Q
)((Q R
;((R S
if)) 
()) 
itemsControl)) 
==)) 
null))  $
)))$ %
{** 
var++ 
ancestor++ 
=++ 
element++ &
;++& '
while,, 
(,, 
ancestor,, 
!=,,  "
null,,# '
&&,,( *
itemsControl,,+ 7
==,,8 :
null,,; ?
),,? @
{-- 
ancestor.. 
=.. 
VisualTreeHelper.. /
.../ 0
	GetParent..0 9
(..9 :
ancestor..: B
)..B C
;..C D
itemsControl//  
=//! "
ItemsControl//# /
./// 0)
ItemsControlFromItemContainer//0 M
(//M N
ancestor//N V
)//V W
;//W X
}00 
}11 
if22 
(22 
itemsControl22 
==22 
null22  $
)22$ %
return22& ,
TimeSpan22- 5
.225 6
Zero226 :
;22: ;
var44 
isOwnContainer44 
=44  
itemsControl44! -
.44- .!
IsItemItsOwnContainer44. C
(44C D
element44D K
)44K L
;44L M
var55 
	container55 
=55 
isOwnContainer55 *
?66 
element66 
:77 
itemsControl77 
.77 "
ItemContainerGenerator77 5
.775 6
ContainerFromItem776 G
(77G H
element77H O
)77O P
;77P Q
if88 
(88 
	container88 
==88 
null88 !
)88! "
{99 
var:: 
dataContext:: 
=::  !
(::" #
element::# *
as::+ -
FrameworkElement::. >
)::> ?
?::? @
.::@ A
DataContext::A L
;::L M
if;; 
(;; 
dataContext;; 
!=;;  "
null;;# '
);;' (
	container<< 
=<< 
itemsControl<<  ,
.<<, -"
ItemContainerGenerator<<- C
.<<C D
ContainerFromItem<<D U
(<<U V
dataContext<<V a
)<<a b
;<<b c
}== 
if?? 
(?? 
	container?? 
==?? 
null?? !
)??! "
return??# )
TimeSpan??* 2
.??2 3
Zero??3 7
;??7 8
varAA 

multiplierAA 
=AA 
itemsControlAA )
.AA) *"
ItemContainerGeneratorAA* @
.AA@ A
IndexFromContainerAAA S
(AAS T
	containerAAT ]
)AA] ^
;AA^ _
ifBB 
(BB 

multiplierBB 
==BB 
-BB 
$numBB  
)BB  !
{CC 

multiplierDD 
=DD 
itemsControlDD )
.DD) *
ItemsDD* /
.DD/ 0
IndexOfDD0 7
(DD7 8
elementDD8 ?
)DD? @
;DD@ A
}EE 
ifGG 
(GG 

multiplierGG 
==GG 
-GG 
$numGG  
)GG  !
{HH 
varII 
frameworkElementII $
=II% &
elementII' .
asII/ 1
FrameworkElementII2 B
;IIB C
ifJJ 
(JJ 
frameworkElementJJ $
!=JJ% '
nullJJ( ,
)JJ, -
{KK 

multiplierLL 
=LL  
itemsControlLL! -
.LL- .
ItemsLL. 3
.LL3 4
IndexOfLL4 ;
(LL; <
frameworkElementLL< L
.LLL M
DataContextLLM X
)LLX Y
;LLY Z
}MM 
}NN 
returnPP 

multiplierPP 
>PP 
-PP  !
$numPP! "
?PP# $
newPP% (
TimeSpanPP) 1
(PP1 2
UnitPP2 6
.PP6 7
TicksPP7 <
*PP= >

multiplierPP? I
)PPI J
:PPK L
TimeSpanPPM U
.PPU V
ZeroPPV Z
;PPZ [
}QQ 	
}RR 
}SS ≠
dD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\ITransitionEffect.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

	interface 
ITransitionEffect &
{ 
Timeline 
Build 
< 
TSubject 
>  
(  !
TSubject! )
effectSubject* 7
)7 8
where9 >
TSubject? G
:H I
FrameworkElementJ Z
,Z [$
ITransitionEffectSubject\ t
;t u
}		 
}

 ú
kD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\ITransitionEffectSubject.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

	interface $
ITransitionEffectSubject -
{ 
string 
MatrixTransformName "
{# $
get% (
;( )
}* +
string 
RotateTransformName "
{# $
get% (
;( )
}* +
string		 
ScaleTransformName		 !
{		" #
get		$ '
;		' (
}		) *
string

 
SkewTransformName

  
{

! "
get

# &
;

& '
}

( )
string "
TranslateTransformName %
{& '
get( +
;+ ,
}- .
TimeSpan 
Offset 
{ 
get 
; 
}  
} 
} Ø
bD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\ITransitionWipe.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

	interface 
ITransitionWipe $
{ 
void 
Wipe 
( 
TransitionerSlide #
	fromSlide$ -
,- .
TransitionerSlide/ @
toSlideA H
,H I
PointJ O
originP V
,V W
IZIndexControllerX i
zIndexControllerj z
)z {
;{ |
} 
}		 …8
aD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ListSortDirectionIndicator.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[		 
TemplateVisualState		 
(		 
	GroupName		 "
=		# $
DirectionGroupName		% 7
,		7 8
Name		9 =
=		> ?
NoneStateName		@ M
)		M N
]		N O
[

 
TemplateVisualState

 
(

 
	GroupName

 "
=

# $
DirectionGroupName

% 7
,

7 8
Name

9 =
=

> ?
AscendingStateName

@ R
)

R S
]

S T
[ 
TemplateVisualState 
( 
	GroupName "
=# $
DirectionGroupName% 7
,7 8
Name9 =
=> ?
DescendingStateName@ S
)S T
]T U
public 

class &
ListSortDirectionIndicator +
:, -
Control. 5
{ 
public 
const 
string 
DirectionGroupName .
=/ 0
$str1 <
;< =
public 
const 
string 
NoneStateName )
=* +
$str, 2
;2 3
public 
const 
string 
AscendingStateName .
=/ 0
$str1 <
;< =
public 
const 
string 
DescendingStateName /
=0 1
$str2 >
;> ?
static &
ListSortDirectionIndicator )
() *
)* +
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <&
ListSortDirectionIndicator< V
)V W
,W X
newY \%
FrameworkPropertyMetadata] v
(v w
typeofw }
(} ~'
ListSortDirectionIndicator	~ ò
)
ò ô
)
ô ö
)
ö õ
;
õ ú
} 	
public 
override 
void 
OnApplyTemplate ,
(, -
)- .
{ 	
base 
. 
OnApplyTemplate  
(  !
)! "
;" #
GotoVisualState 
( 
true  
,  !
ListSortDirection" 3
)3 4
;4 5
} 	
public   
static   
readonly   
DependencyProperty   1%
ListSortDirectionProperty  2 K
=  L M
DependencyProperty  N `
.  ` a
Register  a i
(  i j
nameof!! 
(!! 
ListSortDirection!! $
)!!$ %
,!!% &
typeof!!' -
(!!. /
ListSortDirection!!/ @
?!!@ A
)!!A B
,!!B C
typeof!!D J
(!!K L&
ListSortDirectionIndicator!!L f
)!!f g
,!!g h
new!!i l
PropertyMetadata!!m }
(!!} ~
default	!!~ Ö
(
!!Ö Ü
ListSortDirection
!!Ü ó
?
!!ó ò
)
!!ò ô
,
!!ô ö6
(ListSortDirectionPropertyChangedCallback
!!õ √
)
!!√ ƒ
)
!!ƒ ≈
;
!!≈ ∆
private## 
static## 
void## 4
(ListSortDirectionPropertyChangedCallback## D
(##D E
DependencyObject##E U
dependencyObject##V f
,##f g/
"DependencyPropertyChangedEventArgs	##h ä0
"dependencyPropertyChangedEventArgs
##ã ≠
)
##≠ Æ
{$$ 	
var%% 
	indicator%% 
=%% 
(%% &
ListSortDirectionIndicator%% 7
)%%7 8
dependencyObject%%9 I
;%%I J
	indicator&& 
.&& 
GotoVisualState&& %
(&&% &
true&&& *
,&&* +
	indicator&&, 5
.&&5 6
ListSortDirection&&6 G
)&&G H
;&&H I
	indicator'' 
.'' 
	IsNeutral'' 
=''  !
!''" #
	indicator''# ,
.'', -
ListSortDirection''- >
.''> ?
HasValue''? G
;''G H
}(( 	
public** 
ListSortDirection**  
?**  !
ListSortDirection**" 3
{++ 	
get,, 
{,, 
return,, 
(,, 
ListSortDirection,, +
?,,+ ,
),,, -
GetValue,,. 6
(,,6 7%
ListSortDirectionProperty,,7 P
),,P Q
;,,Q R
},,S T
set-- 
{-- 
SetValue-- 
(-- %
ListSortDirectionProperty-- 4
,--4 5
value--6 ;
)--; <
;--< =
}--> ?
}.. 	
private00 
static00 
readonly00 !
DependencyPropertyKey00  5 
IsNeutralPropertyKey006 J
=00K L
DependencyProperty11 
.11 
RegisterReadOnly11 /
(11/ 0
$str22 
,22 
typeof22 #
(22$ %
bool22% )
)22) *
,22* +
typeof22, 2
(223 4&
ListSortDirectionIndicator224 N
)22N O
,22O P
new33 
PropertyMetadata33 $
(33$ %
true33% )
)33) *
)33* +
;33+ ,
public55 
static55 
readonly55 
DependencyProperty55 1
IsNeutralProperty552 C
=55D E 
IsNeutralPropertyKey66  
.66  !
DependencyProperty66! 3
;663 4
public88 
bool88 
	IsNeutral88 
{99 	
get:: 
{:: 
return:: 
(:: 
bool:: 
):: 
GetValue::  (
(::( )
IsNeutralProperty::) :
)::: ;
;::; <
}::= >
private;; 
set;; 
{;; 
SetValue;; "
(;;" # 
IsNeutralPropertyKey;;# 7
,;;7 8
value;;9 >
);;> ?
;;;? @
};;A B
}<< 	
private>> 
void>> 
GotoVisualState>> $
(>>$ %
bool>>% )
useTransitions>>* 8
,>>8 9
ListSortDirection>>: K
?>>K L
	direction>>M V
)>>V W
{?? 	
var@@ 
	stateName@@ 
=@@ 
	direction@@ %
.@@% &
HasValue@@& .
?AA 
(AA 
	directionAA 
.AA 
ValueAA "
==AA# %
SystemAA& ,
.AA, -
ComponentModelAA- ;
.AA; <
ListSortDirectionAA< M
.AAM N
	AscendingAAN W
?BB 
AscendingStateNameBB (
:CC 
DescendingStateNameCC )
)CC) *
:DD 
NoneStateNameDD 
;DD  
VisualStateManagerFF 
.FF 
	GoToStateFF (
(FF( )
thisFF) -
,FF- .
	stateNameFF/ 8
,FF8 9
useTransitionsFF: H
)FFH I
;FFI J
}GG 	
}HH 
}II ˜4
eD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\MaterialDataGridComboBoxColumn.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class *
MaterialDataGridComboBoxColumn /
:0 1"
DataGridComboBoxColumn2 H
{ 
static		 *
MaterialDataGridComboBoxColumn		 -
(		- .
)		. /
{

 	 
ElementStyleProperty  
.  !
OverrideMetadata! 1
(1 2
typeof2 8
(8 9*
MaterialDataGridComboBoxColumn9 W
)W X
,X Y
newZ ]%
FrameworkPropertyMetadata^ w
(w x 
DefaultElementStyle	x ã
)
ã å
)
å ç
;
ç é'
EditingElementStyleProperty '
.' (
OverrideMetadata( 8
(8 9
typeof9 ?
(? @*
MaterialDataGridComboBoxColumn@ ^
)^ _
,_ `
newa d%
FrameworkPropertyMetadatae ~
(~ '
DefaultEditingElementStyle	 ô
)
ô ö
)
ö õ
;
õ ú
} 	
public 
Binding 
ItemsSourceBinding )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
	protected 
override 
FrameworkElement +
GenerateElement, ;
(; <
DataGridCell< H
cellI M
,M N
objectO U
dataItemV ^
)^ _
{ 	
var 
comboBox 
= 
base 
.  
GenerateElement  /
(/ 0
cell0 4
,4 5
cell6 :
): ;
;; <
if 
( 
ItemsSourceBinding "
!=# %
null& *
)* +
comboBox 
. 

SetBinding #
(# $
ItemsControl$ 0
.0 1
ItemsSourceProperty1 D
,D E
ItemsSourceBindingF X
)X Y
;Y Z

ApplyStyle 
( 
false 
, 
false #
,# $
comboBox% -
)- .
;. /
return 
comboBox 
; 
} 	
	protected 
override 
FrameworkElement +"
GenerateEditingElement, B
(B C
DataGridCellC O
cellP T
,T U
objectV \
dataItem] e
)e f
{ 	
var 
comboBox 
= 
( 
ComboBox $
)$ %
base% )
.) *
GenerateElement* 9
(9 :
cell: >
,> ?
cell@ D
)D E
;E F
if   
(   
ItemsSourceBinding   "
!=  # %
null  & *
)  * +
comboBox!! 
.!! 

SetBinding!! #
(!!# $
ItemsControl!!$ 0
.!!0 1
ItemsSourceProperty!!1 D
,!!D E
ItemsSourceBinding!!F X
)!!X Y
;!!Y Z

ApplyStyle"" 
("" 
true"" 
,"" 
false"" "
,""" #
comboBox""$ ,
)"", -
;""- .
return$$ 
comboBox$$ 
;$$ 
}%% 	
public'' 
static'' 
new'' 
Style'' 
DefaultElementStyle''  3
{(( 	
get)) 
{** 
var++ 
comboBox++ 
=++ 
new++ "
ComboBox++# +
(+++ ,
)++, -
;++- .
var-- 
brushKey-- 
=-- 
new-- " 
ComponentResourceKey--# 7
(--7 8
typeof--8 >
(--> ?
ComboBox--? G
)--G H
,--H I
$str--J o
)--o p
;--p q
var.. 
style.. 
=.. 
(.. 
Style.. "
).." #
comboBox..# +
...+ ,
TryFindResource.., ;
(..; <
brushKey..< D
)..D E
;..E F
return00 
style00 
;00 
}11 
}22 	
public44 
static44 
new44 
Style44 &
DefaultEditingElementStyle44  :
{55 	
get66 
{77 
var88 
comboBox88 
=88 
new88 "
ComboBox88# +
(88+ ,
)88, -
;88- .
var:: 
brushKey:: 
=:: 
new:: " 
ComponentResourceKey::# 7
(::7 8
typeof::8 >
(::> ?
ComboBox::? G
)::G H
,::H I
$str::J v
)::v w
;::w x
var;; 
style;; 
=;; 
(;; 
Style;; "
);;" #
comboBox;;# +
.;;+ ,
TryFindResource;;, ;
(;;; <
brushKey;;< D
);;D E
;;;E F
return== 
style== 
;== 
}>> 
}?? 	
privateAA 
voidAA 

ApplyStyleAA 
(AA  
boolAA  $
	isEditingAA% .
,AA. /
boolAA0 4!
defaultToElementStyleAA5 J
,AAJ K
FrameworkElementAAL \
elementAA] d
)AAd e
{BB 	
varCC 
styleCC 
=CC 
	PickStyleCC !
(CC! "
	isEditingCC" +
,CC+ ,!
defaultToElementStyleCC- B
)CCB C
;CCC D
ifDD 
(DD 
styleDD 
!=DD 
nullDD 
)DD 
{EE 
elementFF 
.FF 
StyleFF 
=FF 
styleFF  %
;FF% &
}GG 
}HH 	
privateJJ 
StyleJJ 
	PickStyleJJ 
(JJ  
boolJJ  $
	isEditingJJ% .
,JJ. /
boolJJ0 4!
defaultToElementStyleJJ5 J
)JJJ K
{KK 	
varLL 
styleLL 
=LL 
	isEditingLL !
?LL" #
EditingElementStyleLL$ 7
:LL8 9
ElementStyleLL: F
;LLF G
ifMM 
(MM 
	isEditingMM 
&&MM !
defaultToElementStyleMM 2
&&MM3 5
(MM6 7
styleMM7 <
==MM= ?
nullMM@ D
)MMD E
)MME F
{NN 
styleOO 
=OO 
ElementStyleOO $
;OO$ %
}PP 
returnRR 
styleRR 
;RR 
}SS 	
}gg 
}hh ˙
aD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\MaterialDataGridTextColumn.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class &
MaterialDataGridTextColumn +
:, -
DataGridTextColumn. @
{ 
	protected		 
override		 
object		 !
PrepareCellForEdit		" 4
(		4 5
FrameworkElement		5 E
editingElement		F T
,		T U
RoutedEventArgs		V e
editingEventArgs		f v
)		v w
{

 	
var 
textBox 
= 
editingElement (
as) +
TextBox, 3
;3 4
if 
( 
textBox 
!= 
null 
)  
{ 
textBox 
. 
	MaxLength !
=" #
	MaxLength$ -
;- .
textBox 
. 
SelectionStart &
=' (
textBox) 0
.0 1
Text1 5
.5 6
Length6 <
;< =
} 
editingElement 
. 
Focus  
(  !
)! "
;" #
return 
null 
; 
} 	
public 
int 
	MaxLength 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ∆i
ZD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\MaterialDateDisplay.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class 
MaterialDateDisplay $
:% &
Control' .
{ 
static 
MaterialDateDisplay "
(" #
)# $
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
MaterialDateDisplay< O
)O P
,P Q
newR U%
FrameworkPropertyMetadataV o
(o p
typeofp v
(v w 
MaterialDateDisplay	w ä
)
ä ã
)
ã å
)
å ç
;
ç é
} 	
public 
MaterialDateDisplay "
(" #
)# $
{ 	
SetCurrentValue 
( 
DisplayDateProperty /
,/ 0
DateTime1 9
.9 :
Now: =
.= >
Date> B
)B C
;C D
} 	
public 
static 
readonly 
DependencyProperty 1
DisplayDateProperty2 E
=F G
DependencyPropertyH Z
.Z [
Register[ c
(c d
nameof   
(   
DisplayDate   
)   
,    
typeof  ! '
(  ( )
DateTime  ) 1
)  1 2
,  2 3
typeof  4 :
(  ; <
MaterialDateDisplay  < O
)  O P
,  P Q
new  R U
PropertyMetadata  V f
(  f g
default  g n
(  n o
DateTime  o w
)  w x
,  x y/
"DisplayDatePropertyChangedCallback	  z ú
)
  ú ù
)
  ù û
;
  û ü
private"" 
static"" 
void"" .
"DisplayDatePropertyChangedCallback"" >
(""> ?
DependencyObject""? O
dependencyObject""P `
,""` a/
"DependencyPropertyChangedEventArgs	""b Ñ0
"dependencyPropertyChangedEventArgs
""Ö ß
)
""ß ®
{## 	
($$ 
($$ 
MaterialDateDisplay$$ !
)$$! "
dependencyObject$$" 2
)$$2 3
.$$3 4
UpdateComponents$$4 D
($$D E
)$$E F
;$$F G
}%% 	
public'' 
DateTime'' 
DisplayDate'' #
{(( 	
get)) 
{)) 
return)) 
()) 
DateTime)) "
)))" #
GetValue))$ ,
()), -
DisplayDateProperty))- @
)))@ A
;))A B
}))C D
set** 
{** 
SetValue** 
(** 
DisplayDateProperty** .
,**. /
value**0 5
)**5 6
;**6 7
}**8 9
}++ 	
private-- 
static-- 
readonly-- !
DependencyPropertyKey--  5*
ComponentOneContentPropertyKey--6 T
=--U V
DependencyProperty.. 
... 
RegisterReadOnly.. /
(../ 0
$str// %
,//% &
typeof//' -
(//. /
string/// 5
)//5 6
,//6 7
typeof//8 >
(//? @
MaterialDateDisplay//@ S
)//S T
,//T U
new00 
PropertyMetadata00 $
(00$ %
default00% ,
(00, -
string00- 3
)003 4
)004 5
)005 6
;006 7
public22 
static22 
readonly22 
DependencyProperty22 1'
ComponentOneContentProperty222 M
=22N O*
ComponentOneContentPropertyKey33 *
.33* +
DependencyProperty33+ =
;33= >
public55 
string55 
ComponentOneContent55 )
{66 	
get77 
{77 
return77 
(77 
string77  
)77  !
GetValue77" *
(77* +'
ComponentOneContentProperty77+ F
)77F G
;77G H
}77I J
private88 
set88 
{88 
SetValue88 "
(88" #*
ComponentOneContentPropertyKey88# A
,88A B
value88C H
)88H I
;88I J
}88K L
}99 	
private;; 
static;; 
readonly;; !
DependencyPropertyKey;;  5*
ComponentTwoContentPropertyKey;;6 T
=;;U V
DependencyProperty<< 
.<< 
RegisterReadOnly<< /
(<</ 0
$str== %
,==% &
typeof==' -
(==. /
string==/ 5
)==5 6
,==6 7
typeof==8 >
(==? @
MaterialDateDisplay==@ S
)==S T
,==T U
new>> 
PropertyMetadata>> $
(>>$ %
default>>% ,
(>>, -
string>>- 3
)>>3 4
)>>4 5
)>>5 6
;>>6 7
public@@ 
static@@ 
readonly@@ 
DependencyProperty@@ 1'
ComponentTwoContentProperty@@2 M
=@@N O*
ComponentTwoContentPropertyKeyAA *
.AA* +
DependencyPropertyAA+ =
;AA= >
publicCC 
stringCC 
ComponentTwoContentCC )
{DD 	
getEE 
{EE 
returnEE 
(EE 
stringEE  
)EE  !
GetValueEE" *
(EE* +'
ComponentTwoContentPropertyEE+ F
)EEF G
;EEG H
}EEI J
privateFF 
setFF 
{FF 
SetValueFF "
(FF" #*
ComponentTwoContentPropertyKeyFF# A
,FFA B
valueFFC H
)FFH I
;FFI J
}FFK L
}GG 	
privateII 
staticII 
readonlyII !
DependencyPropertyKeyII  5,
 ComponentThreeContentPropertyKeyII6 V
=IIW X
DependencyPropertyJJ 
.JJ 
RegisterReadOnlyJJ /
(JJ/ 0
$strKK '
,KK' (
typeofKK) /
(KK0 1
stringKK1 7
)KK7 8
,KK8 9
typeofKK: @
(KKA B
MaterialDateDisplayKKB U
)KKU V
,KKV W
newLL 
PropertyMetadataLL $
(LL$ %
defaultLL% ,
(LL, -
stringLL- 3
)LL3 4
)LL4 5
)LL5 6
;LL6 7
publicNN 
staticNN 
readonlyNN 
DependencyPropertyNN 1)
ComponentThreeContentPropertyNN2 O
=NNP Q,
 ComponentThreeContentPropertyKeyOO ,
.OO, -
DependencyPropertyOO- ?
;OO? @
publicQQ 
stringQQ !
ComponentThreeContentQQ +
{RR 	
getSS 
{SS 
returnSS 
(SS 
stringSS  
)SS  !
GetValueSS" *
(SS* +)
ComponentThreeContentPropertySS+ H
)SSH I
;SSI J
}SSK L
privateTT 
setTT 
{TT 
SetValueTT "
(TT" #,
 ComponentThreeContentPropertyKeyTT# C
,TTC D
valueTTE J
)TTJ K
;TTK L
}TTM N
}UU 	
privateWW 
staticWW 
readonlyWW !
DependencyPropertyKeyWW 2,
 IsDayInFirstComponentPropertyKeyWW3 S
=WWT U
DependencyPropertyXX 
.XX 
RegisterReadOnlyXX )
(XX) *
$strYY 
,YY 
typeofYY  &
(YY' (
boolYY( ,
)YY, -
,YY- .
typeofYY/ 5
(YY6 7
MaterialDateDisplayYY7 J
)YYJ K
,YYK L
newZZ 

PropertyMetadataZZ 
(ZZ 
defaultZZ #
(ZZ# $
boolZZ$ (
)ZZ( )
)ZZ) *
)ZZ* +
;ZZ+ ,
public\\ 
static\\ 
readonly\\ 
DependencyProperty\\ .)
IsDayInFirstComponentProperty\\/ L
=\\M N,
 IsDayInFirstComponentPropertyKey]] &
.]]& '
DependencyProperty]]' 9
;]]9 :
public__ 
bool__ !
IsDayInFirstComponent__ &
{`` 
getaa 	
{aa
 
returnaa 
(aa 
boolaa 
)aa 
GetValueaa "
(aa" #)
IsDayInFirstComponentPropertyaa# @
)aa@ A
;aaA B
}aaC D
privatebb 
setbb 
{bb 
SetValuebb 
(bb ,
 IsDayInFirstComponentPropertyKeybb =
,bb= >
valuebb? D
)bbD E
;bbE F
}bbG H
}cc 
privateff 
voidff 
UpdateComponentsff %
(ff% &
)ff& '
{gg 	
varhh 
culturehh 
=hh 
Languagehh "
.hh" #
GetSpecificCulturehh# 5
(hh5 6
)hh6 7
;hh7 8
varii 
dateTimeFormatInfoii "
=ii# $
cultureii% ,
.ii, -
GetDateFormatii- :
(ii: ;
)ii; <
;ii< =
ComponentOneContentkk 
=kk  !
DisplayDatekk" -
.kk- .
ToStringkk. 6
(kk6 7
dateTimeFormatInfokk7 I
.kkI J
MonthDayPatternkkJ Y
.kkY Z
ReplacekkZ a
(kka b
$strkkb h
,kkh i
$strkkj o
)kko p
,kkp q
culturekkr y
)kky z
.kkz {
ToTitleCase	kk{ Ü
(
kkÜ á
culture
kká é
)
kké è
;
kkè ê
ComponentTwoContentll 
=ll  !
DisplayDatell" -
.ll- .
ToStringll. 6
(ll6 7
$strll7 =
,ll= >
culturell? F
)llF G
.llG H
ToTitleCasellH S
(llS T
culturellT [
)ll[ \
;ll\ ]!
ComponentThreeContentmm !
=mm" #
DisplayDatemm$ /
.mm/ 0
ToStringmm0 8
(mm8 9
$strmm9 ?
,mm? @
culturemmA H
)mmH I
.mmI J
ToTitleCasemmJ U
(mmU V
culturemmV ]
)mm] ^
;mm^ _
}nn 	
internaluu 
staticuu 
DateTimeFormatInfouu *
GetDateFormatuu+ 8
(uu8 9
CultureInfouu9 D
cultureuuE L
)uuL M
{vv 	
ifww 
(ww 
cultureww 
.ww 
Calendarww  
isww! #
GregorianCalendarww$ 5
)ww5 6
{xx 
returnyy 
cultureyy 
.yy 
DateTimeFormatyy -
;yy- .
}zz 
else{{ 
{|| 
GregorianCalendar}} !
foundCal}}" *
=}}+ ,
null}}- 1
;}}1 2
DateTimeFormatInfo~~ "
dtfi~~# '
=~~( )
null~~* .
;~~. /
foreach
ÄÄ 
(
ÄÄ 
System
ÄÄ 
.
ÄÄ  
Globalization
ÄÄ  -
.
ÄÄ- .
Calendar
ÄÄ. 6
cal
ÄÄ7 :
in
ÄÄ; =
culture
ÄÄ> E
.
ÄÄE F
OptionalCalendars
ÄÄF W
)
ÄÄW X
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
cal
ÇÇ 
is
ÇÇ 
GregorianCalendar
ÇÇ 0
)
ÇÇ0 1
{
ÉÉ 
if
ÜÜ 
(
ÜÜ 
foundCal
ÜÜ $
==
ÜÜ% '
null
ÜÜ( ,
)
ÜÜ, -
{
áá 
foundCal
àà $
=
àà% &
cal
àà' *
as
àà+ -
GregorianCalendar
àà. ?
;
àà? @
}
ââ 
if
ãã 
(
ãã 
(
ãã 
(
ãã 
GregorianCalendar
ãã /
)
ãã/ 0
cal
ãã0 3
)
ãã3 4
.
ãã4 5
CalendarType
ãã5 A
==
ããB D$
GregorianCalendarTypes
ããE [
.
ãã[ \
	Localized
ãã\ e
)
ããe f
{
åå 
foundCal
çç $
=
çç% &
cal
çç' *
as
çç+ -
GregorianCalendar
çç. ?
;
çç? @
break
éé !
;
éé! "
}
èè 
}
êê 
}
ëë 
if
ìì 
(
ìì 
foundCal
ìì 
==
ìì 
null
ìì  $
)
ìì$ %
{
îî 
dtfi
ññ 
=
ññ 
(
ññ 
(
ññ 
CultureInfo
ññ (
)
ññ( )
CultureInfo
ññ) 4
.
ññ4 5
InvariantCulture
ññ5 E
.
ññE F
Clone
ññF K
(
ññK L
)
ññL M
)
ññM N
.
ññN O
DateTimeFormat
ññO ]
;
ññ] ^
dtfi
óó 
.
óó 
Calendar
óó !
=
óó" #
new
óó$ '
GregorianCalendar
óó( 9
(
óó9 :
)
óó: ;
;
óó; <
}
òò 
else
ôô 
{
öö 
dtfi
õõ 
=
õõ 
(
õõ 
(
õõ 
CultureInfo
õõ (
)
õõ( )
culture
õõ) 0
.
õõ0 1
Clone
õõ1 6
(
õõ6 7
)
õõ7 8
)
õõ8 9
.
õõ9 :
DateTimeFormat
õõ: H
;
õõH I
dtfi
úú 
.
úú 
Calendar
úú !
=
úú" #
foundCal
úú$ ,
;
úú, -
}
ùù 
return
üü 
dtfi
üü 
;
üü 
}
†† 
}
°° 	
}
££ 
}§§ ¡
OD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\PackIcon.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
{ 
public 

class 
PackIcon 
: 
PackIconBase (
<( )
PackIconKind) 5
>5 6
{ 
static 
PackIcon 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
PackIcon< D
)D E
,E F
newG J%
FrameworkPropertyMetadataK d
(d e
typeofe k
(k l
PackIconl t
)t u
)u v
)v w
;w x
} 	
public 
PackIcon 
( 
) 
: 
base  
(  !
PackIconDataFactory! 4
.4 5
Create5 ;
); <
{= >
}? @
} 
} •ˆ
ZD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\PackIconDataFactory.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
internal		 
static		 
class		 
PackIconDataFactory		 -
{

 
internal 
static 
IDictionary #
<# $
PackIconKind$ 0
,0 1
string2 8
>8 9
Create: @
(@ A
)A B
=>C E
newF I

DictionaryJ T
<T U
PackIconKindU a
,a b
stringc i
>i j
{ 
{ 
PackIconKind 
. 
AccessPoint 
, 
$str	 û
}
û ü
,
ü †
{
† °
PackIconKind
° ≠
.
≠ Æ 
AccessPointNetwork
Æ ¿
,
¿ ¡
$str
¡ •
}
• ¶
,
¶ ß
{
ß ®
PackIconKind
® ¥
.
¥ µ
Account
µ º
,
º Ω
$str
Ω Ω
}
Ω æ
,
æ ø
{
ø ¿
PackIconKind
¿ Ã
.
Ã Õ
AccountAlert
Õ Ÿ
,
Ÿ ⁄
$str
⁄ ˝
}
˝ ˛
,
˛ ˇ
{
ˇ Ä
PackIconKind
Ä å
.
å ç

AccountBox
ç ó
,
ó ò
$str
ò ‹
}
‹ ›
,
› ﬁ
{
ﬁ ﬂ
PackIconKind
ﬂ Î
.
Î Ï
AccountBoxOutline
Ï ˝
,
˝ ˛
$str
˛ ë
}
ë í
,
í ì
{
ì î
PackIconKind
î †
.
† ° 
AccountCardDetails
° ≥
,
≥ ¥
$str
¥ »
}
» …
,
…  
{
  À
PackIconKind
À ◊
.
◊ ÿ
AccountCheck
ÿ ‰
,
‰ Â
$str
Â œ
}
œ –
,
– —
{
— “
PackIconKind
“ ﬁ
.
ﬁ ﬂ
AccountCircle
ﬂ Ï
,
Ï Ì
$str
Ì Ì
}
Ì Ó
,
Ó Ô
{
Ô 
PackIconKind
 ¸
.
¸ ˝
AccountConvert
˝ ã
,
ã å
$str
å –
}
– —
,
— “
{
“ ”
PackIconKind
” ﬂ
.
ﬂ ‡
AccountEdit
‡ Î
,
Î Ï
$str
Ï ´
}
´ ¨
,
¨ ≠
{
≠ Æ
PackIconKind
Æ ∫
.
∫ ª

AccountKey
ª ≈
,
≈ ∆
$str
∆ Ù 
}
Ù  ı 
,
ı  ˆ 
{
ˆ  ˜ 
PackIconKind
˜  É!
.
É! Ñ!
AccountLocation
Ñ! ì!
,
ì! î!
$str
î! ö#
}
ö# õ#
,
õ# ú#
{
ú# ù#
PackIconKind
ù# ©#
.
©# ™#
AccountMinus
™# ∂#
,
∂# ∑#
$str
∑# «$
}
«$ »$
,
»$ …$
{
…$  $
PackIconKind
 $ ÷$
.
÷$ ◊$
AccountMultiple
◊$ Ê$
,
Ê$ Á$
$str
Á$ ã'
}
ã' å'
,
å' ç'
{
ç' é'
PackIconKind
é' ö'
.
ö' õ'"
AccountMultipleMinus
õ' Ø'
,
Ø' ∞'
$str
∞' õ*
}
õ* ú*
,
ú* ù*
{
ù* û*
PackIconKind
û* ™*
.
™* ´*$
AccountMultipleOutline
´* ¡*
,
¡* ¬*
$str
¬* ·/
}
·/ ‚/
,
‚/ „/
{
„/ ‰/
PackIconKind
‰/ /
.
/ Ò/!
AccountMultiplePlus
Ò/ Ñ0
,
Ñ0 Ö0
$str
Ö0 É3
}
É3 Ñ3
,
Ñ3 Ö3
{
Ö3 Ü3
PackIconKind
Ü3 í3
.
í3 ì3(
AccountMultiplePlusOutline
ì3 ≠3
,
≠3 Æ3
$str
Æ3 ”9
}
”9 ‘9
,
‘9 ’9
{
’9 ÷9
PackIconKind
÷9 ‚9
.
‚9 „9
AccountNetwork
„9 Ò9
,
Ò9 Ú9
$str
Ú9 Ó;
}
Ó; Ô;
,
Ô; ;
{
; Ò;
PackIconKind
Ò; ˝;
.
˝; ˛;

AccountOff
˛; à<
,
à< â<
$str
â< ˚=
}
˚= ¸=
,
¸= ˝=
{
˝= ˛=
PackIconKind
˛= ä>
.
ä> ã>
AccountOutline
ã> ô>
,
ô> ö>
$str
ö> ¿@
}
¿@ ¡@
,
¡@ ¬@
{
¬@ √@
PackIconKind
√@ œ@
.
œ@ –@
AccountPlus
–@ €@
,
€@ ‹@
$str
‹@ ˇA
}
ˇA ÄB
,
ÄB ÅB
{
ÅB ÇB
PackIconKind
ÇB éB
.
éB èB 
AccountPlusOutline
èB °B
,
°B ¢B
$str
¢B ˙D
}
˙D ˚D
,
˚D ¸D
{
¸D ˝D
PackIconKind
˝D âE
.
âE äE
AccountRemove
äE óE
,
óE òE
$str
òE ïG
}
ïG ñG
,
ñG óG
{
óG òG
PackIconKind
òG §G
.
§G •G
AccountSearch
•G ≤G
,
≤G ≥G
$str
≥G œJ
}
œJ –J
,
–J —J
{
—J “J
PackIconKind
“J ﬁJ
.
ﬁJ ﬂJ
AccountSettings
ﬂJ ÓJ
,
ÓJ ÔJ
$str
ÔJ ¢L
}
¢L £L
,
£L §L
{
§L •L
PackIconKind
•L ±L
.
±L ≤L$
AccountSettingsVariant
≤L »L
,
»L …L
$str
…L ¥U
}
¥U µU
,
µU ∂U
{
∂U ∑U
PackIconKind
∑U √U
.
√U ƒU
AccountStar
ƒU œU
,
œU –U
$str
–U ∏W
}
∏W πW
,
πW ∫W
{
∫W ªW
PackIconKind
ªW «W
.
«W »W
AccountSwitch
»W ’W
,
’W ÷W
$str
÷W úZ
}
úZ ùZ
,
ùZ ûZ
{
ûZ üZ
PackIconKind
üZ ´Z
.
´Z ¨Z
Adjust
¨Z ≤Z
,
≤Z ≥Z
$str
≥Z °\
}
°\ ¢\
,
¢\ £\
{
£\ §\
PackIconKind
§\ ∞\
.
∞\ ±\
AirConditioner
±\ ø\
,
ø\ ¿\
$str
¿\ Òa
}
Òa Úa
,
Úa Ûa
{
Ûa Ùa
PackIconKind
Ùa Äb
.
Äb Åb

Airballoon
Åb ãb
,
ãb åb
$str
åb ·e
}
·e ‚e
,
‚e „e
{
„e ‰e
PackIconKind
‰e e
.
e Òe
Airplane
Òe ˘e
,
˘e ˙e
$str
˙e ¸f
}
¸f ˝f
,
˝f ˛f
{
˛f ˇf
PackIconKind
ˇf ãg
.
ãg åg
AirplaneLanding
åg õg
,
õg úg
$str
úg ˚h
}
˚h ¸h
,
¸h ˝h
{
˝h ˛h
PackIconKind
˛h äi
.
äi ãi
AirplaneOff
ãi ñi
,
ñi ói
$str
ói Ûj
}
Ûj Ùj
,
Ùj ıj
{
ıj ˆj
PackIconKind
ˆj Çk
.
Çk Ék
AirplaneTakeoff
Ék ík
,
ík ìk
$str
ìk Çm
}
Çm Ém
,
Ém Ñm
{
Ñm Öm
PackIconKind
Öm ëm
.
ëm ím
Airplay
ím ôm
,
ôm öm
$str
öm ãn
}
ãn ån
,
ån çn
{
çn én
PackIconKind
én ön
.
ön õn
Alarm
õn †n
,
†n °n
$str
°n ∫p
}
∫p ªp
,
ªp ºp
{
ºp Ωp
PackIconKind
Ωp …p
.
…p  p
	AlarmBell
 p ”p
,
”p ‘p
$str
‘p Üt
}
Üt át
,
át àt
{
àt ât
PackIconKind
ât ït
.
ït ñt

AlarmCheck
ñt †t
,
†t °t
$str
°t Ÿv
}
Ÿv ⁄v
,
⁄v €v
{
€v ‹v
PackIconKind
‹v Ëv
.
Ëv Èv

AlarmLight
Èv Ûv
,
Ûv Ùv
$str
Ùv Ìx
}
Ìx Óx
,
Óx Ôx
{
Ôx x
PackIconKind
x ¸x
.
¸x ˝x
AlarmMultiple
˝x äy
,
äy ãy
$str
ãy –|
}
–| —|
,
—| “|
{
“| ”|
PackIconKind
”| ﬂ|
.
ﬂ| ‡|
AlarmOff
‡| Ë|
,
Ë| È|
$strÈ| ÂÄ
}ÂÄ ÊÄ
,ÊÄ ÁÄ
{ÁÄ ËÄ
PackIconKindËÄ ÙÄ
.ÙÄ ıÄ
	AlarmPlusıÄ ˛Ä
,˛Ä ˇÄ
$strˇÄ ÑÉ
}ÑÉ ÖÉ
,ÖÉ ÜÉ
{ÜÉ áÉ
PackIconKindáÉ ìÉ
.ìÉ îÉ
AlarmSnoozeîÉ üÉ
,üÉ †É
$str†É ∏Ö
}∏Ö πÖ
,πÖ ∫Ö
{∫Ö ªÖ
PackIconKindªÖ «Ö
.«Ö »Ö
Album»Ö ÕÖ
,ÕÖ ŒÖ
$strŒÖ –á
}–á —á
,—á “á
{“á ”á
PackIconKind”á ﬂá
.ﬂá ‡á
Alert‡á Âá
,Âá Êá
$strÊá ôà
}ôà öà
,öà õà
{õà úà
PackIconKindúà ®à
.®à ©à
AlertBox©à ±à
,±à ≤à
$str≤à ¢â
}¢â £â
,£â §â
{§â •â
PackIconKind•â ±â
.±â ≤â
AlertCircle≤â Ωâ
,Ωâ æâ
$stræâ ©ä
}©ä ™ä
,™ä ´ä
{´ä ¨ä
PackIconKind¨ä ∏ä
.∏ä πä"
AlertCircleOutlineπä Àä
,Àä Ãä
$strÃä Åå
}Åå Çå
,Çå Éå
{Éå Ñå
PackIconKindÑå êå
.êå ëå
AlertDecagramëå ûå
,ûå üå
$strüå âé
}âé äé
,äé ãé
{ãé åé
PackIconKindåé òé
.òé ôé
AlertOctagonôé •é
,•é ¶é
$str¶é ’è
}’è ÷è
,÷è ◊è
{◊è ÿè
PackIconKindÿè ‰è
.‰è Âè
AlertOctagramÂè Úè
,Úè Ûè
$strÛè ¡ë
}¡ë ¬ë
,¬ë √ë
{√ë ƒë
PackIconKindƒë –ë
.–ë —ë
AlertOutline—ë ›ë
,›ë ﬁë
$strﬁë ûí
}ûí üí
,üí †í
{†í °í
PackIconKind°í ≠í
.≠í Æí
AllInclusiveÆí ∫í
,∫í ªí
$strªí Ìñ
}Ìñ Óñ
,Óñ Ôñ
{Ôñ ñ
PackIconKindñ ¸ñ
.¸ñ ˝ñ
Allo˝ñ Åó
,Åó Çó
$strÇó ˚ò
}˚ò ¸ò
,¸ò ˝ò
{˝ò ˛ò
PackIconKind˛ò äô
.äô ãô
Alphaãô êô
,êô ëô
$strëô ˜û
}˜û ¯û
,¯û ˘û
{˘û ˙û
PackIconKind˙û Üü
.Üü áü
Alphabeticaláü ìü
,ìü îü
$strîü ¯†
}¯† ˘†
,˘† ˙†
{˙† ˚†
PackIconKind˚† á°
.á° à°
	Altimeterà° ë°
,ë° í°
$strí° ù¢
}ù¢ û¢
,û¢ ü¢
{ü¢ †¢
PackIconKind†¢ ¨¢
.¨¢ ≠¢
Amazon≠¢ ≥¢
,≥¢ ¥¢
$str¥¢ å´
}å´ ç´
,ç´ é´
{é´ è´
PackIconKindè´ õ´
.õ´ ú´ 
AmazonClouddriveú´ ¨´
,¨´ ≠´
$str≠´ ¶Æ
}¶Æ ßÆ
,ßÆ ®Æ
{®Æ ©Æ
PackIconKind©Æ µÆ
.µÆ ∂Æ
	Ambulance∂Æ øÆ
,øÆ ¿Æ
$str¿Æ ≠±
}≠± Æ±
,Æ± Ø±
{Ø± ∞±
PackIconKind∞± º±
.º± Ω±
	AmplifierΩ± ∆±
,∆± «±
$str«± ∫¥
}∫¥ ª¥
,ª¥ º¥
{º¥ Ω¥
PackIconKindΩ¥ …¥
.…¥  ¥
Anchor ¥ –¥
,–¥ —¥
$str—¥ †∑
}†∑ °∑
,°∑ ¢∑
{¢∑ £∑
PackIconKind£∑ Ø∑
.Ø∑ ∞∑
Android∞∑ ∑∑
,∑∑ ∏∑
$str∏∑ Œº
}Œº œº
,œº –º
{–º —º
PackIconKind—º ›º
.›º ﬁº"
AndroidDebugBridgeﬁº º
,º Òº
$strÒº ﬁø
}ﬁø ﬂø
,ﬂø ‡ø
{‡ø ·ø
PackIconKind·ø Ìø
.Ìø Óø
AndroidHeadÓø ˘ø
,˘ø ˙ø
$str˙ø Ï√
}Ï√ Ì√
,Ì√ Ó√
{Ó√ Ô√
PackIconKindÔ√ ˚√
.˚√ ¸√
AndroidStudio¸√ âƒ
,âƒ äƒ
$sträƒ ˙«
}˙« ˚«
,˚« ¸«
{¸« ˝«
PackIconKind˝« â»
.â» ä»
Angularä» ë»
,ë» í»
$strí» ≥…
}≥… ¥…
,¥… µ…
{µ… ∂…
PackIconKind∂… ¬…
.¬… √…
	Angularjs√… Ã…
,Ã… Õ…
$strÕ… ®À
}®À ©À
,©À ™À
{™À ´À
PackIconKind´À ∑À
.∑À ∏À
	Animation∏À ¡À
,¡À ¬À
$str¬À ˇÃ
}ˇÃ ÄÕ
,ÄÕ ÅÕ
{ÅÕ ÇÕ
PackIconKindÇÕ éÕ
.éÕ èÕ
AppleèÕ îÕ
,îÕ ïÕ
$strïÕ ®—
}®— ©—
,©— ™—
{™— ´—
PackIconKind´— ∑—
.∑— ∏—
AppleFinder∏— √—
,√— ƒ—
$strƒ— ∏÷
}∏÷ π÷
,π÷ ∫÷
{∫÷ ª÷
PackIconKindª÷ «÷
.«÷ »÷
AppleIos»÷ –÷
,–÷ —÷
$str—÷ ßÿ
}ßÿ ®ÿ
,®ÿ ©ÿ
{©ÿ ™ÿ
PackIconKind™ÿ ∂ÿ
.∂ÿ ∑ÿ!
AppleKeyboardCaps∑ÿ »ÿ
,»ÿ …ÿ
$str…ÿ ØŸ
}ØŸ ∞Ÿ
,∞Ÿ ±Ÿ
{±Ÿ ≤Ÿ
PackIconKind≤Ÿ æŸ
.æŸ øŸ$
AppleKeyboardCommandøŸ ”Ÿ
,”Ÿ ‘Ÿ
$str‘Ÿ ü›
}ü› †›
,†› °›
{°› ¢›
PackIconKind¢› Æ›
.Æ› Ø›$
AppleKeyboardControlØ› √›
,√› ƒ›
$strƒ› éﬁ
}éﬁ èﬁ
,èﬁ êﬁ
{êﬁ ëﬁ
PackIconKindëﬁ ùﬁ
.ùﬁ ûﬁ#
AppleKeyboardOptionûﬁ ±ﬁ
,±ﬁ ≤ﬁ
$str≤ﬁ Ìﬁ
}Ìﬁ Óﬁ
,Óﬁ Ôﬁ
{Ôﬁ ﬁ
PackIconKindﬁ ¸ﬁ
.¸ﬁ ˝ﬁ"
AppleKeyboardShift˝ﬁ èﬂ
,èﬂ êﬂ
$strêﬂ ◊ﬂ
}◊ﬂ ÿﬂ
,ÿﬂ Ÿﬂ
{Ÿﬂ ⁄ﬂ
PackIconKind⁄ﬂ Êﬂ
.Êﬂ Áﬂ
AppleMobilemeÁﬂ Ùﬂ
,Ùﬂ ıﬂ
$strıﬂ ≤‚
}≤‚ ≥‚
,≥‚ ¥‚
{¥‚ µ‚
PackIconKindµ‚ ¡‚
.¡‚ ¬‚
AppleSafari¬‚ Õ‚
,Õ‚ Œ‚
$strŒ‚ ºÊ
}ºÊ ΩÊ
,ΩÊ æÊ
{æÊ øÊ
PackIconKindøÊ ÀÊ
.ÀÊ ÃÊ
ApplicationÃÊ ◊Ê
,◊Ê ÿÊ
$strÿÊ ¿Á
}¿Á ¡Á
,¡Á ¬Á
{¬Á √Á
PackIconKind√Á œÁ
.œÁ –Á
Approval–Á ÿÁ
,ÿÁ ŸÁ
$strŸÁ ’È
}’È ÷È
,÷È ◊È
{◊È ÿÈ
PackIconKindÿÈ ‰È
.‰È ÂÈ
AppsÂÈ ÈÈ
,ÈÈ ÍÈ
$strÍÈ ÁÍ
}ÁÍ ËÍ
,ËÍ ÈÍ
{ÈÍ ÍÍ
PackIconKindÍÍ ˆÍ
.ˆÍ ˜Í
Archive˜Í ˛Í
,˛Í ˇÍ
$strˇÍ ﬁÎ
}ﬁÎ ﬂÎ
,ﬂÎ ‡Î
{‡Î ·Î
PackIconKind·Î ÌÎ
.ÌÎ ÓÎ#
ArrangeBringForwardÓÎ ÅÏ
,ÅÏ ÇÏ
$strÇÏ ¥Ï
}¥Ï µÏ
,µÏ ∂Ï
{∂Ï ∑Ï
PackIconKind∑Ï √Ï
.√Ï ƒÏ#
ArrangeBringToFrontƒÏ ◊Ï
,◊Ï ÿÏ
$strÿÏ ßÌ
}ßÌ ®Ì
,®Ì ©Ì
{©Ì ™Ì
PackIconKind™Ì ∂Ì
.∂Ì ∑Ì#
ArrangeSendBackward∑Ì  Ì
, Ì ÀÌ
$strÀÌ ˇÌ
}ˇÌ ÄÓ
,ÄÓ ÅÓ
{ÅÓ ÇÓ
PackIconKindÇÓ éÓ
.éÓ èÓ!
ArrangeSendToBackèÓ †Ó
,†Ó °Ó
$str°Ó ÉÔ
}ÉÔ ÑÔ
,ÑÔ ÖÔ
{ÖÔ ÜÔ
PackIconKindÜÔ íÔ
.íÔ ìÔ
ArrowAllìÔ õÔ
,õÔ úÔ
$strúÔ ìÒ
}ìÒ îÒ
,îÒ ïÒ
{ïÒ ñÒ
PackIconKindñÒ ¢Ò
.¢Ò £Ò
ArrowBottomLeft£Ò ≤Ò
,≤Ò ≥Ò
$str≥Ò ËÒ
}ËÒ ÈÒ
,ÈÒ ÍÒ
{ÍÒ ÎÒ
PackIconKindÎÒ ˜Ò
.˜Ò ¯Ò 
ArrowBottomRight¯Ò àÚ
,àÚ âÚ
$strâÚ ΩÚ
}ΩÚ æÚ
,æÚ øÚ
{øÚ ¿Ú
PackIconKind¿Ú ÃÚ
.ÃÚ ÕÚ
ArrowCollapseÕÚ ⁄Ú
,⁄Ú €Ú
$str€Ú ÀÛ
}ÀÛ ÃÛ
,ÃÛ ÕÛ
{ÕÛ ŒÛ
PackIconKindŒÛ ⁄Û
.⁄Û €Û 
ArrowCollapseAll€Û ÎÛ
,ÎÛ ÏÛ
$strÏÛ ”ı
}”ı ‘ı
,‘ı ’ı
{’ı ÷ı
PackIconKind÷ı ‚ı
.‚ı „ı!
ArrowCollapseDown„ı Ùı
,Ùı ıı
$strıı ﬁˆ
}ﬁˆ ﬂˆ
,ﬂˆ ‡ˆ
{‡ˆ ·ˆ
PackIconKind·ˆ Ìˆ
.Ìˆ Óˆ!
ArrowCollapseLeftÓˆ ˇˆ
,ˇˆ Ä˜
$strÄ˜ ‰˜
}‰˜ Â˜
,Â˜ Ê˜
{Ê˜ Á˜
PackIconKindÁ˜ Û˜
.Û˜ Ù˜"
ArrowCollapseRightÙ˜ Ü¯
,Ü¯ á¯
$strá¯ Ô¯
}Ô¯ ¯
,¯ Ò¯
{Ò¯ Ú¯
PackIconKindÚ¯ ˛¯
.˛¯ ˇ¯
ArrowCollapseUpˇ¯ é˘
,é˘ è˘
$strè˘ Ú˘
}Ú˘ Û˘
,Û˘ Ù˘
{Ù˘ ı˘
PackIconKindı˘ Å˙
.Å˙ Ç˙
	ArrowDownÇ˙ ã˙
,ã˙ å˙
$strå˙ ’˙
}’˙ ÷˙
,÷˙ ◊˙
{◊˙ ÿ˙
PackIconKindÿ˙ ‰˙
.‰˙ Â˙
ArrowDownBoldÂ˙ Ú˙
,Ú˙ Û˙
$strÛ˙ õ˚
}õ˚ ú˚
,ú˚ ù˚
{ù˚ û˚
PackIconKindû˚ ™˚
.™˚ ´˚ 
ArrowDownBoldBox´˚ ª˚
,ª˚ º˚
$strº˚ ®¸
}®¸ ©¸
,©¸ ™¸
{™¸ ´¸
PackIconKind´¸ ∑¸
.∑¸ ∏¸'
ArrowDownBoldBoxOutline∏¸ œ¸
,œ¸ –¸
$str–¸  ˝
} ˝ À˝
,À˝ Ã˝
{Ã˝ Õ˝
PackIconKindÕ˝ Ÿ˝
.Ÿ˝ ⁄˝#
ArrowDownBoldCircle⁄˝ Ì˝
,Ì˝ Ó˝
$strÓ˝ €˛
}€˛ ‹˛
,‹˛ ›˛
{›˛ ﬁ˛
PackIconKindﬁ˛ Í˛
.Í˛ Î˛*
ArrowDownBoldCircleOutlineÎ˛ Öˇ
,Öˇ Üˇ
$strÜˇ ∂Ä
}∂Ä ∑Ä
,∑Ä ∏Ä
{∏Ä πÄ
PackIconKindπÄ ≈Ä
.≈Ä ∆Ä+
ArrowDownBoldHexagonOutline∆Ä ·Ä
,·Ä ‚Ä
$str‚Ä ÿÉ
}ÿÉ ŸÉ
,ŸÉ ⁄É
{⁄É €É
PackIconKind€É ÁÉ
.ÁÉ ËÉ
ArrowDownBoxËÉ ÙÉ
,ÙÉ ıÉ
$strıÉ çÖ
}çÖ éÖ
,éÖ èÖ
{èÖ êÖ
PackIconKindêÖ úÖ
.úÖ ùÖ#
ArrowDownDropCircleùÖ ∞Ö
,∞Ö ±Ö
$str±Ö íÜ
}íÜ ìÜ
,ìÜ îÜ
{îÜ ïÜ
PackIconKindïÜ °Ü
.°Ü ¢Ü*
ArrowDownDropCircleOutline¢Ü ºÜ
,ºÜ ΩÜ
$strΩÜ ·á
}·á ‚á
,‚á „á
{„á ‰á
PackIconKind‰á á
.á Òá
ArrowDownThickÒá ˇá
,ˇá Äà
$strÄà «à
}«à »à
,»à …à
{…à  à
PackIconKind à ÷à
.÷à ◊à
ArrowExpand◊à ‚à
,‚à „à
$str„à ◊â
}◊â ÿâ
,ÿâ Ÿâ
{Ÿâ ⁄â
PackIconKind⁄â Êâ
.Êâ Áâ
ArrowExpandAllÁâ ıâ
,ıâ ˆâ
$strˆâ ‚ã
}‚ã „ã
,„ã ‰ã
{‰ã Âã
PackIconKindÂã Òã
.Òã Úã
ArrowExpandDownÚã Åå
,Åå Çå
$strÇå Ÿå
}Ÿå ⁄å
,⁄å €å
{€å ‹å
PackIconKind‹å Ëå
.Ëå Èå
ArrowExpandLeftÈå ¯å
,¯å ˘å
$str˘å œç
}œç –ç
,–ç —ç
{—ç “ç
PackIconKind“ç ﬁç
.ﬁç ﬂç 
ArrowExpandRightﬂç Ôç
,Ôç ç
$strç ∆é
}∆é «é
,«é »é
{»é …é
PackIconKind…é ’é
.’é ÷é
ArrowExpandUp÷é „é
,„é ‰é
$str‰é πè
}πè ∫è
,∫è ªè
{ªè ºè
PackIconKindºè »è
.»è …è
	ArrowLeft…è “è
,“è ”è
$str”è õê
}õê úê
,úê ùê
{ùê ûê
PackIconKindûê ™ê
.™ê ´ê
ArrowLeftBold´ê ∏ê
,∏ê πê
$strπê ‚ê
}‚ê „ê
,„ê ‰ê
{‰ê Âê
PackIconKindÂê Òê
.Òê Úê 
ArrowLeftBoldBoxÚê Çë
,Çë Éë
$strÉë Ôë
}Ôë ë
,ë Òë
{Òë Úë
PackIconKindÚë ˛ë
.˛ë ˇë'
ArrowLeftBoldBoxOutlineˇë ñí
,ñí óí
$stróí íì
}íì ìì
,ìì îì
{îì ïì
PackIconKindïì °ì
.°ì ¢ì#
ArrowLeftBoldCircle¢ì µì
,µì ∂ì
$str∂ì £î
}£î §î
,§î •î
{•î ¶î
PackIconKind¶î ≤î
.≤î ≥î*
ArrowLeftBoldCircleOutline≥î Õî
,Õî Œî
$strŒî ˇï
}ˇï Äñ
,Äñ Åñ
{Åñ Çñ
PackIconKindÇñ éñ
.éñ èñ+
ArrowLeftBoldHexagonOutlineèñ ™ñ
,™ñ ´ñ
$str´ñ †ô
}†ô °ô
,°ô ¢ô
{¢ô £ô
PackIconKind£ô Øô
.Øô ∞ô
ArrowLeftBox∞ô ºô
,ºô Ωô
$strΩô ”ö
}”ö ‘ö
,‘ö ’ö
{’ö ÷ö
PackIconKind÷ö ‚ö
.‚ö „ö#
ArrowLeftDropCircle„ö ˆö
,ˆö ˜ö
$str˜ö ÿõ
}ÿõ Ÿõ
,Ÿõ ⁄õ
{⁄õ €õ
PackIconKind€õ Áõ
.Áõ Ëõ*
ArrowLeftDropCircleOutlineËõ Çú
,Çú Éú
$strÉú ®ù
}®ù ©ù
,©ù ™ù
{™ù ´ù
PackIconKind´ù ∑ù
.∑ù ∏ù
ArrowLeftThick∏ù ∆ù
,∆ù «ù
$str«ù ëû
}ëû íû
,íû ìû
{ìû îû
PackIconKindîû †û
.†û °û

ArrowRight°û ´û
,´û ¨û
$str¨û ıû
}ıû ˆû
,ˆû ˜û
{˜û ¯û
PackIconKind¯û Ñü
.Ñü Öü
ArrowRightBoldÖü ìü
,ìü îü
$strîü Ωü
}Ωü æü
,æü øü
{øü ¿ü
PackIconKind¿ü Ãü
.Ãü Õü!
ArrowRightBoldBoxÕü ﬁü
,ﬁü ﬂü
$strﬂü Ã†
}Ã† Õ†
,Õ† Œ†
{Œ† œ†
PackIconKindœ† €†
.€† ‹†(
ArrowRightBoldBoxOutline‹† Ù†
,Ù† ı†
$strı† Ò°
}Ò° Ú°
,Ú° Û°
{Û° Ù°
PackIconKindÙ° Ä¢
.Ä¢ Å¢$
ArrowRightBoldCircleÅ¢ ï¢
,ï¢ ñ¢
$strñ¢ É£
}É£ Ñ£
,Ñ£ Ö£
{Ö£ Ü£
PackIconKindÜ£ í£
.í£ ì£+
ArrowRightBoldCircleOutlineì£ Æ£
,Æ£ Ø£
$strØ£ ﬂ§
}ﬂ§ ‡§
,‡§ ·§
{·§ ‚§
PackIconKind‚§ Ó§
.Ó§ Ô§,
ArrowRightBoldHexagonOutlineÔ§ ã•
,ã• å•
$strå• Ç®
}Ç® É®
,É® Ñ®
{Ñ® Ö®
PackIconKindÖ® ë®
.ë® í®
ArrowRightBoxí® ü®
,ü® †®
$str†® ª©
}ª© º©
,º© Ω©
{Ω© æ©
PackIconKindæ©  ©
. © À©$
ArrowRightDropCircleÀ© ﬂ©
,ﬂ© ‡©
$str‡© ¬™
}¬™ √™
,√™ ƒ™
{ƒ™ ≈™
PackIconKind≈™ —™
.—™ “™+
ArrowRightDropCircleOutline“™ Ì™
,Ì™ Ó™
$strÓ™ ì¨
}ì¨ î¨
,î¨ ï¨
{ï¨ ñ¨
PackIconKindñ¨ ¢¨
.¢¨ £¨
ArrowRightThick£¨ ≤¨
,≤¨ ≥¨
$str≥¨ ˙¨
}˙¨ ˚¨
,˚¨ ¸¨
{¸¨ ˝¨
PackIconKind˝¨ â≠
.â≠ ä≠
ArrowTopLeftä≠ ñ≠
,ñ≠ ó≠
$stró≠ Õ≠
}Õ≠ Œ≠
,Œ≠ œ≠
{œ≠ –≠
PackIconKind–≠ ‹≠
.‹≠ ›≠
ArrowTopRight›≠ Í≠
,Í≠ Î≠
$strÎ≠ †Æ
}†Æ °Æ
,°Æ ¢Æ
{¢Æ £Æ
PackIconKind£Æ ØÆ
.ØÆ ∞Æ
ArrowUp∞Æ ∑Æ
,∑Æ ∏Æ
$str∏Æ ÄØ
}ÄØ ÅØ
,ÅØ ÇØ
{ÇØ ÉØ
PackIconKindÉØ èØ
.èØ êØ
ArrowUpBoldêØ õØ
,õØ úØ
$strúØ ∆Ø
}∆Ø «Ø
,«Ø »Ø
{»Ø …Ø
PackIconKind…Ø ’Ø
.’Ø ÷Ø
ArrowUpBoldBox÷Ø ‰Ø
,‰Ø ÂØ
$strÂØ “∞
}“∞ ”∞
,”∞ ‘∞
{‘∞ ’∞
PackIconKind’∞ ·∞
.·∞ ‚∞%
ArrowUpBoldBoxOutline‚∞ ˜∞
,˜∞ ¯∞
$str¯∞ ı±
}ı± ˆ±
,ˆ± ˜±
{˜± ¯±
PackIconKind¯± Ñ≤
.Ñ≤ Ö≤!
ArrowUpBoldCircleÖ≤ ñ≤
,ñ≤ ó≤
$stró≤ Ñ≥
}Ñ≥ Ö≥
,Ö≥ Ü≥
{Ü≥ á≥
PackIconKindá≥ ì≥
.ì≥ î≥(
ArrowUpBoldCircleOutlineî≥ ¨≥
,¨≥ ≠≥
$str≠≥ ﬁ¥
}ﬁ¥ ﬂ¥
,ﬂ¥ ‡¥
{‡¥ ·¥
PackIconKind·¥ Ì¥
.Ì¥ Ó¥)
ArrowUpBoldHexagonOutlineÓ¥ áµ
,áµ àµ
$stràµ ˝∑
}˝∑ ˛∑
,˛∑ ˇ∑
{ˇ∑ Ä∏
PackIconKindÄ∏ å∏
.å∏ ç∏

ArrowUpBoxç∏ ó∏
,ó∏ ò∏
$strò∏ ±π
}±π ≤π
,≤π ≥π
{≥π ¥π
PackIconKind¥π ¿π
.¿π ¡π!
ArrowUpDropCircle¡π “π
,“π ”π
$str”π µ∫
}µ∫ ∂∫
,∂∫ ∑∫
{∑∫ ∏∫
PackIconKind∏∫ ƒ∫
.ƒ∫ ≈∫(
ArrowUpDropCircleOutline≈∫ ›∫
,›∫ ﬁ∫
$strﬁ∫ Ñº
}Ñº Öº
,Öº Üº
{Üº áº
PackIconKindáº ìº
.ìº îº
ArrowUpThickîº †º
,†º °º
$str°º Îº
}Îº Ïº
,Ïº Ìº
{Ìº Óº
PackIconKindÓº ˙º
.˙º ˚º
Artist˚º ÅΩ
,ÅΩ ÇΩ
$strÇΩ ﬁ¡
}ﬁ¡ ﬂ¡
,ﬂ¡ ‡¡
{‡¡ ·¡
PackIconKind·¡ Ì¡
.Ì¡ Ó¡
	AssistantÓ¡ ˜¡
,˜¡ ¯¡
$str¯¡ ó√
}ó√ ò√
,ò√ ô√
{ô√ ö√
PackIconKindö√ ¶√
.¶√ ß√
Asteriskß√ Ø√
,Ø√ ∞√
$str∞√ ‡ƒ
}‡ƒ ·ƒ
,·ƒ ‚ƒ
{‚ƒ „ƒ
PackIconKind„ƒ Ôƒ
.Ôƒ ƒ
Atƒ Úƒ
,Úƒ Ûƒ
$strÛƒ ïÃ
}ïÃ ñÃ
,ñÃ óÃ
{óÃ òÃ
PackIconKindòÃ §Ã
.§Ã •Ã
	Atlassian•Ã ÆÃ
,ÆÃ ØÃ
$strØÃ Ôœ
}Ôœ œ
,œ Òœ
{Òœ Úœ
PackIconKindÚœ ˛œ
.˛œ ˇœ
Atomˇœ É–
,É– Ñ–
$strÑ– ûŸ
}ûŸ üŸ
,üŸ †Ÿ
{†Ÿ °Ÿ
PackIconKind°Ÿ ≠Ÿ
.≠Ÿ ÆŸ

AttachmentÆŸ ∏Ÿ
,∏Ÿ πŸ
$strπŸ —€
}—€ “€
,“€ ”€
{”€ ‘€
PackIconKind‘€ ‡€
.‡€ ·€
	Audiobook·€ Í€
,Í€ Î€
$strÎ€ ≤›
}≤› ≥›
,≥› ¥›
{¥› µ›
PackIconKindµ› ¡›
.¡› ¬›
AutoFix¬› …›
,…›  ›
$str › Û‡
}Û‡ Ù‡
,Ù‡ ı‡
{ı‡ ˆ‡
PackIconKindˆ‡ Ç·
.Ç· É·

AutoUploadÉ· ç·
,ç· é·
$stré· é‚
}é‚ è‚
,è‚ ê‚
{ê‚ ë‚
PackIconKindë‚ ù‚
.ù‚ û‚
	Autorenewû‚ ß‚
,ß‚ ®‚
$str®‚ î‰
}î‰ ï‰
,ï‰ ñ‰
{ñ‰ ó‰
PackIconKindó‰ £‰
.£‰ §‰
AvTimer§‰ ´‰
,´‰ ¨‰
$str¨‰ ≈Á
}≈Á ∆Á
,∆Á «Á
{«Á »Á
PackIconKind»Á ‘Á
.‘Á ’Á
Azure’Á ⁄Á
,⁄Á €Á
$str€Á …Ë
}…Ë  Ë
, Ë ÀË
{ÀË ÃË
PackIconKindÃË ÿË
.ÿË ŸË
BabyŸË ›Ë
,›Ë ﬁË
$strﬁË »Î
}»Î …Î
,…Î  Î
{ Î ÀÎ
PackIconKindÀÎ ◊Î
.◊Î ÿÎ
	BabyBuggyÿÎ ·Î
,·Î ‚Î
$str‚Î µÔ
}µÔ ∂Ô
,∂Ô ∑Ô
{∑Ô ∏Ô
PackIconKind∏Ô ƒÔ
.ƒÔ ≈Ô

Backburger≈Ô œÔ
,œÔ –Ô
$str–Ô ™
}™ ´
,´ ¨
{¨ ≠
PackIconKind≠ π
.π ∫
	Backspace∫ √
,√ ƒ
$strƒ öÚ
}öÚ õÚ
,õÚ úÚ
{úÚ ùÚ
PackIconKindùÚ ©Ú
.©Ú ™Ú
BackupRestore™Ú ∑Ú
,∑Ú ∏Ú
$str∏Ú ØÙ
}ØÙ ∞Ù
,∞Ù ±Ù
{±Ù ≤Ù
PackIconKind≤Ù æÙ
.æÙ øÙ
BandcampøÙ «Ù
,«Ù »Ù
$str»Ù „Ù
}„Ù ‰Ù
,‰Ù ÂÙ
{ÂÙ ÊÙ
PackIconKindÊÙ ÚÙ
.ÚÙ ÛÙ
BankÛÙ ˜Ù
,˜Ù ¯Ù
$str¯Ù «ı
}«ı »ı
,»ı …ı
{…ı  ı
PackIconKind ı ÷ı
.÷ı ◊ı
Barcode◊ı ﬁı
,ﬁı ﬂı
$strﬂı  ˆ
} ˆ Àˆ
,Àˆ Ãˆ
{Ãˆ Õˆ
PackIconKindÕˆ Ÿˆ
.Ÿˆ ⁄ˆ
BarcodeScan⁄ˆ Âˆ
,Âˆ Êˆ
$strÊˆ Õ¯
}Õ¯ Œ¯
,Œ¯ œ¯
{œ¯ –¯
PackIconKind–¯ ‹¯
.‹¯ ›¯
Barley›¯ „¯
,„¯ ‰¯
$str‰¯ òˇ
}òˇ ôˇ
,ôˇ öˇ
{öˇ õˇ
PackIconKindõˇ ßˇ
.ßˇ ®ˇ
Barrel®ˇ Æˇ
,Æˇ Øˇ
$strØˇ πÄ
}πÄ ∫Ä
,∫Ä ªÄ
{ªÄ ºÄ
PackIconKindºÄ »Ä
.»Ä …Ä
Basecamp…Ä —Ä
,—Ä “Ä
$str“Ä ÎÇ
}ÎÇ ÏÇ
,ÏÇ ÌÇ
{ÌÇ ÓÇ
PackIconKindÓÇ ˙Ç
.˙Ç ˚Ç
Basket˚Ç ÅÉ
,ÅÉ ÇÉ
$strÇÉ ¡Ö
}¡Ö ¬Ö
,¬Ö √Ö
{√Ö ƒÖ
PackIconKindƒÖ –Ö
.–Ö —Ö

BasketFill—Ö €Ö
,€Ö ‹Ö
$str‹Ö Ÿá
}Ÿá ⁄á
,⁄á €á
{€á ‹á
PackIconKind‹á Ëá
.Ëá Èá
BasketUnfillÈá ıá
,ıá ˆá
$strˆá ıâ
}ıâ ˆâ
,ˆâ ˜â
{˜â ¯â
PackIconKind¯â Ñä
.Ñä Öä

BasketballÖä èä
,èä êä
$strêä „í
}„í ‰í
,‰í Âí
{Âí Êí
PackIconKindÊí Úí
.Úí Ûí
BatteryÛí ˙í
,˙í ˚í
$str˚í Åî
}Åî Çî
,Çî Éî
{Éî Ñî
PackIconKindÑî êî
.êî ëî
	Battery10ëî öî
,öî õî
$strõî Æï
}Æï Øï
,Øï ∞ï
{∞ï ±ï
PackIconKind±ï Ωï
.Ωï æï
	Battery20æï «ï
,«ï »ï
$str»ï €ñ
}€ñ ‹ñ
,‹ñ ›ñ
{›ñ ﬁñ
PackIconKindﬁñ Íñ
.Íñ Îñ
	Battery30Îñ Ùñ
,Ùñ ıñ
$strıñ àò
}àò âò
,âò äò
{äò ãò
PackIconKindãò óò
.óò òò
	Battery40òò °ò
,°ò ¢ò
$str¢ò µô
}µô ∂ô
,∂ô ∑ô
{∑ô ∏ô
PackIconKind∏ô ƒô
.ƒô ≈ô
	Battery50≈ô Œô
,Œô œô
$strœô ‚ö
}‚ö „ö
,„ö ‰ö
{‰ö Âö
PackIconKindÂö Òö
.Òö Úö
	Battery60Úö ˚ö
,˚ö ¸ö
$str¸ö èú
}èú êú
,êú ëú
{ëú íú
PackIconKindíú ûú
.ûú üú
	Battery70üú ®ú
,®ú ©ú
$str©ú ºù
}ºù Ωù
,Ωù æù
{æù øù
PackIconKindøù Àù
.Àù Ãù
	Battery80Ãù ’ù
,’ù ÷ù
$str÷ù Ëû
}Ëû Èû
,Èû Íû
{Íû Îû
PackIconKindÎû ˜û
.˜û ¯û
	Battery90¯û Åü
,Åü Çü
$strÇü î†
}î† ï†
,ï† ñ†
{ñ† ó†
PackIconKindó† £†
.£† §†
BatteryAlert§† ∞†
,∞† ±†
$str±† ‘°
}‘° ’°
,’° ÷°
{÷° ◊°
PackIconKind◊° „°
.„° ‰°
BatteryCharging‰° Û°
,Û° Ù°
$strÙ° ì£
}ì£ î£
,î£ ï£
{ï£ ñ£
PackIconKindñ£ ¢£
.¢£ ££"
BatteryCharging100££ µ£
,µ£ ∂£
$str∂£ ’§
}’§ ÷§
,÷§ ◊§
{◊§ ÿ§
PackIconKindÿ§ ‰§
.‰§ Â§!
BatteryCharging20Â§ ˆ§
,ˆ§ ˜§
$str˜§ Ã¶
}Ã¶ Õ¶
,Õ¶ Œ¶
{Œ¶ œ¶
PackIconKindœ¶ €¶
.€¶ ‹¶!
BatteryCharging30‹¶ Ì¶
,Ì¶ Ó¶
$strÓ¶ †®
}†® °®
,°® ¢®
{¢® £®
PackIconKind£® Ø®
.Ø® ∞®!
BatteryCharging40∞® ¡®
,¡® ¬®
$str¬® Ó©
}Ó© Ô©
,Ô© ©
{© Ò©
PackIconKindÒ© ˝©
.˝© ˛©!
BatteryCharging60˛© è™
,è™ ê™
$strê™ ¬´
}¬´ √´
,√´ ƒ´
{ƒ´ ≈´
PackIconKind≈´ —´
.—´ “´!
BatteryCharging80“´ „´
,„´ ‰´
$str‰´ è≠
}è≠ ê≠
,ê≠ ë≠
{ë≠ í≠
PackIconKindí≠ û≠
.û≠ ü≠!
BatteryCharging90ü≠ ∞≠
,∞≠ ±≠
$str±≠ ‹Æ
}‹Æ ›Æ
,›Æ ﬁÆ
{ﬁÆ ﬂÆ
PackIconKindﬂÆ ÎÆ
.ÎÆ ÏÆ'
BatteryChargingWirelessÏÆ ÉØ
,ÉØ ÑØ
$strÑØ ©±
}©± ™±
,™± ´±
{´± ¨±
PackIconKind¨± ∏±
.∏± π±)
BatteryChargingWireless10π± “±
,“± ”±
$str”± å¥
}å¥ ç¥
,ç¥ é¥
{é¥ è¥
PackIconKindè¥ õ¥
.õ¥ ú¥)
BatteryChargingWireless20ú¥ µ¥
,µ¥ ∂¥
$str∂¥ Î∂
}Î∂ Ï∂
,Ï∂ Ì∂
{Ì∂ Ó∂
PackIconKindÓ∂ ˙∂
.˙∂ ˚∂)
BatteryChargingWireless30˚∂ î∑
,î∑ ï∑
$strï∑  π
} π Àπ
,Àπ Ãπ
{Ãπ Õπ
PackIconKindÕπ Ÿπ
.Ÿπ ⁄π)
BatteryChargingWireless40⁄π Ûπ
,Ûπ Ùπ
$strÙπ ≠º
}≠º Æº
,Æº Øº
{Øº ∞º
PackIconKind∞º ºº
.ºº Ωº)
BatteryChargingWireless50Ωº ÷º
,÷º ◊º
$str◊º åø
}åø çø
,çø éø
{éø èø
PackIconKindèø õø
.õø úø)
BatteryChargingWireless60úø µø
,µø ∂ø
$str∂ø Ô¡
}Ô¡ ¡
,¡ Ò¡
{Ò¡ Ú¡
PackIconKindÚ¡ ˛¡
.˛¡ ˇ¡)
BatteryChargingWireless70ˇ¡ ò¬
,ò¬ ô¬
$strô¬ Œƒ
}Œƒ œƒ
,œƒ –ƒ
{–ƒ —ƒ
PackIconKind—ƒ ›ƒ
.›ƒ ﬁƒ)
BatteryChargingWireless80ﬁƒ ˜ƒ
,˜ƒ ¯ƒ
$str¯ƒ ´«
}´« ¨«
,¨« ≠«
{≠« Æ«
PackIconKindÆ« ∫«
.∫« ª«)
BatteryChargingWireless90ª« ‘«
,‘« ’«
$str’« å 
}å  ç 
,ç  é 
{é  è 
PackIconKindè  õ 
.õ  ú ,
BatteryChargingWirelessAlertú  ∏ 
,∏  π 
$strπ  ˚Ã
}˚Ã ¸Ã
,¸Ã ˝Ã
{˝Ã ˛Ã
PackIconKind˛Ã äÕ
.äÕ ãÕ.
BatteryChargingWirelessOutlineãÕ ©Õ
,©Õ ™Õ
$str™Õ ﬂœ
}ﬂœ ‡œ
,‡œ ·œ
{·œ ‚œ
PackIconKind‚œ Óœ
.Óœ Ôœ
BatteryMinusÔœ ˚œ
,˚œ ¸œ
$str¸œ è—
}è— ê—
,ê— ë—
{ë— í—
PackIconKindí— û—
.û— ü—
BatteryNegativeü— Æ—
,Æ— Ø—
$strØ— ÿ“
}ÿ“ Ÿ“
,Ÿ“ ⁄“
{⁄“ €“
PackIconKind€“ Á“
.Á“ Ë“
BatteryOutlineË“ ˆ“
,ˆ“ ˜“
$str˜“ ä‘
}ä‘ ã‘
,ã‘ å‘
{å‘ ç‘
PackIconKindç‘ ô‘
.ô‘ ö‘
BatteryPlusö‘ •‘
,•‘ ¶‘
$str¶‘ ‘’
}‘’ ’’
,’’ ÷’
{÷’ ◊’
PackIconKind◊’ „’
.„’ ‰’
BatteryPositive‰’ Û’
,Û’ Ù’
$strÙ’ ¥◊
}¥◊ µ◊
,µ◊ ∂◊
{∂◊ ∑◊
PackIconKind∑◊ √◊
.√◊ ƒ◊
BatteryUnknownƒ◊ “◊
,“◊ ”◊
$str”◊ ÿ⁄
}ÿ⁄ Ÿ⁄
,Ÿ⁄ ⁄⁄
{⁄⁄ €⁄
PackIconKind€⁄ Á⁄
.Á⁄ Ë⁄
BeachË⁄ Ì⁄
,Ì⁄ Ó⁄
$strÓ⁄ ı›
}ı› ˆ›
,ˆ› ˜›
{˜› ¯›
PackIconKind¯› Ñﬁ
.Ñﬁ Öﬁ
BeakerÖﬁ ãﬁ
,ãﬁ åﬁ
$stråﬁ üﬂ
}üﬂ †ﬂ
,†ﬂ °ﬂ
{°ﬂ ¢ﬂ
PackIconKind¢ﬂ Æﬂ
.Æﬂ Øﬂ
BeatsØﬂ ¥ﬂ
,¥ﬂ µﬂ
$strµﬂ ≠·
}≠· Æ·
,Æ· Ø·
{Ø· ∞·
PackIconKind∞· º·
.º· Ω·
BeerΩ· ¡·
,¡· ¬·
$str¬· ≥‚
}≥‚ ¥‚
,¥‚ µ‚
{µ‚ ∂‚
PackIconKind∂‚ ¬‚
.¬‚ √‚
Behance√‚  ‚
, ‚ À‚
$strÀ‚ ÍÏ
}ÍÏ ÎÏ
,ÎÏ ÏÏ
{ÏÏ ÌÏ
PackIconKindÌÏ ˘Ï
.˘Ï ˙Ï
Bell˙Ï ˛Ï
,˛Ï ˇÏ
$strˇÏ öÓ
}öÓ õÓ
,õÓ úÓ
{úÓ ùÓ
PackIconKindùÓ ©Ó
.©Ó ™Ó
BellOff™Ó ±Ó
,±Ó ≤Ó
$str≤Ó Ω
}Ω æ
,æ ø
{ø ¿
PackIconKind¿ Ã
.Ã Õ
BellOutlineÕ ÿ
,ÿ Ÿ
$strŸ ºÚ
}ºÚ ΩÚ
,ΩÚ æÚ
{æÚ øÚ
PackIconKindøÚ ÀÚ
.ÀÚ ÃÚ
BellPlusÃÚ ‘Ú
,‘Ú ’Ú
$str’Ú …Ù
}…Ù  Ù
, Ù ÀÙ
{ÀÙ ÃÙ
PackIconKindÃÙ ÿÙ
.ÿÙ ŸÙ
BellRingŸÙ ·Ù
,·Ù ‚Ù
$str‚Ù â¯
}â¯ ä¯
,ä¯ ã¯
{ã¯ å¯
PackIconKindå¯ ò¯
.ò¯ ô¯
BellRingOutlineô¯ ®¯
,®¯ ©¯
$str©¯ ∂˚
}∂˚ ∑˚
,∑˚ ∏˚
{∏˚ π˚
PackIconKindπ˚ ≈˚
.≈˚ ∆˚
	BellSleep∆˚ œ˚
,œ˚ –˚
$str–˚ ≥˝
}≥˝ ¥˝
,¥˝ µ˝
{µ˝ ∂˝
PackIconKind∂˝ ¬˝
.¬˝ √˝
Beta√˝ «˝
,«˝ »˝
$str»˝ ˘Ç
}˘Ç ˙Ç
,˙Ç ˚Ç
{˚Ç ¸Ç
PackIconKind¸Ç àÉ
.àÉ âÉ
BibleâÉ éÉ
,éÉ èÉ
$strèÉ ±Ñ
}±Ñ ≤Ñ
,≤Ñ ≥Ñ
{≥Ñ ¥Ñ
PackIconKind¥Ñ ¿Ñ
.¿Ñ ¡Ñ
Bike¡Ñ ≈Ñ
,≈Ñ ∆Ñ
$str∆Ñ †â
}†â °â
,°â ¢â
{¢â £â
PackIconKind£â Øâ
.Øâ ∞â
Bing∞â ¥â
,¥â µâ
$strµâ ää
}ää ãä
,ãä åä
{åä çä
PackIconKindçä ôä
.ôä öä

Binocularsöä §ä
,§ä •ä
$str•ä „ã
}„ã ‰ã
,‰ã Âã
{Âã Êã
PackIconKindÊã Úã
.Úã Ûã
BioÛã ˆã
,ˆã ˜ã
$str˜ã Ïç
}Ïç Ìç
,Ìç Óç
{Óç Ôç
PackIconKindÔç ˚ç
.˚ç ¸ç
	Biohazard¸ç Öé
,Öé Üé
$strÜé ‚ó
}‚ó „ó
,„ó ‰ó
{‰ó Âó
PackIconKindÂó Òó
.Òó Úó
	BitbucketÚó ˚ó
,˚ó ¸ó
$str¸ó ”ô
}”ô ‘ô
,‘ô ’ô
{’ô ÷ô
PackIconKind÷ô ‚ô
.‚ô „ô
Bitcoin„ô Íô
,Íô Îô
$strÎô Îõ
}Îõ Ïõ
,Ïõ Ìõ
{Ìõ Óõ
PackIconKindÓõ ˙õ
.˙õ ˚õ
	BlackMesa˚õ Ñú
,Ñú Öú
$strÖú øù
}øù ¿ù
,¿ù ¡ù
{¡ù ¬ù
PackIconKind¬ù Œù
.Œù œù

Blackberryœù Ÿù
,Ÿù ⁄ù
$str⁄ù Û¢
}Û¢ Ù¢
,Ù¢ ı¢
{ı¢ ˆ¢
PackIconKindˆ¢ Ç£
.Ç£ É£
BlenderÉ£ ä£
,ä£ ã£
$strã£ ôß
}ôß öß
,öß õß
{õß úß
PackIconKindúß ®ß
.®ß ©ß
Blinds©ß Øß
,Øß ∞ß
$str∞ß À©
}À© Ã©
,Ã© Õ©
{Õ© Œ©
PackIconKindŒ© ⁄©
.⁄© €©
BlockHelper€© Ê©
,Ê© Á©
$strÁ© ﬁ´
}ﬁ´ ﬂ´
,ﬂ´ ‡´
{‡´ ·´
PackIconKind·´ Ì´
.Ì´ Ó´
BloggerÓ´ ı´
,ı´ ˆ´
$strˆ´ ÁÆ
}ÁÆ ËÆ
,ËÆ ÈÆ
{ÈÆ ÍÆ
PackIconKindÍÆ ˆÆ
.ˆÆ ˜Æ
	Bluetooth˜Æ ÄØ
,ÄØ ÅØ
$strÅØ ®∞
}®∞ ©∞
,©∞ ™∞
{™∞ ´∞
PackIconKind´∞ ∑∞
.∑∞ ∏∞
BluetoothAudio∏∞ ∆∞
,∆∞ «∞
$str«∞ —≥
}—≥ “≥
,“≥ ”≥
{”≥ ‘≥
PackIconKind‘≥ ‡≥
.‡≥ ·≥ 
BluetoothConnect·≥ Ò≥
,Ò≥ Ú≥
$strÚ≥ øµ
}øµ ¿µ
,¿µ ¡µ
{¡µ ¬µ
PackIconKind¬µ Œµ
.Œµ œµ
BluetoothOffœµ €µ
,€µ ‹µ
$str‹µ ñ∑
}ñ∑ ó∑
,ó∑ ò∑
{ò∑ ô∑
PackIconKindô∑ •∑
.•∑ ¶∑!
BluetoothSettings¶∑ ∑∑
,∑∑ ∏∑
$str∏∑ òπ
}òπ ôπ
,ôπ öπ
{öπ õπ
PackIconKindõπ ßπ
.ßπ ®π!
BluetoothTransfer®π ππ
,ππ ∫π
$str∫π ´ª
}´ª ¨ª
,¨ª ≠ª
{≠ª Æª
PackIconKindÆª ∫ª
.∫ª ªª
Blurªª øª
,øª ¿ª
$str¿ª æ 
}æ  ø 
,ø  ¿ 
{¿  ¡ 
PackIconKind¡  Õ 
.Õ  Œ 

BlurLinearŒ  ÿ 
,ÿ  Ÿ 
$strŸ  ©“
}©“ ™“
,™“ ´“
{´“ ¨“
PackIconKind¨“ ∏“
.∏“ π“
BlurOffπ“ ¿“
,¿“ ¡“
$str¡“ å‡
}å‡ ç‡
,ç‡ é‡
{é‡ è‡
PackIconKindè‡ õ‡
.õ‡ ú‡

BlurRadialú‡ ¶‡
,¶‡ ß‡
$strß‡ ±È
}±È ≤È
,≤È ≥È
{≥È ¥È
PackIconKind¥È ¿È
.¿È ¡È
Bomb¡È ≈È
,≈È ∆È
$str∆È ÍÏ
}ÍÏ ÎÏ
,ÎÏ ÏÏ
{ÏÏ ÌÏ
PackIconKindÌÏ ˘Ï
.˘Ï ˙Ï
BombOff˙Ï ÅÌ
,ÅÌ ÇÌ
$strÇÌ ˜
}˜ ¯
,¯ ˘
{˘ ˙
PackIconKind˙ ÜÒ
.ÜÒ áÒ
BoneáÒ ãÒ
,ãÒ åÒ
$stråÒ ıÛ
}ıÛ ˆÛ
,ˆÛ ˜Û
{˜Û ¯Û
PackIconKind¯Û ÑÙ
.ÑÙ ÖÙ
BookÖÙ âÙ
,âÙ äÙ
$sträÙ ÒÙ
}ÒÙ ÚÙ
,ÚÙ ÛÙ
{ÛÙ ÙÙ
PackIconKindÙÙ Äı
.Äı Åı
	BookMinusÅı äı
,äı ãı
$strãı Çˆ
}Çˆ Éˆ
,Éˆ Ñˆ
{Ñˆ Öˆ
PackIconKindÖˆ ëˆ
.ëˆ íˆ
BookMultipleíˆ ûˆ
,ûˆ üˆ
$strüˆ •˜
}•˜ ¶˜
,¶˜ ß˜
{ß˜ ®˜
PackIconKind®˜ ¥˜
.¥˜ µ˜#
BookMultipleVariantµ˜ »˜
,»˜ …˜
$str…˜ ‘¯
}‘¯ ’¯
,’¯ ÷¯
{÷¯ ◊¯
PackIconKind◊¯ „¯
.„¯ ‰¯
BookOpen‰¯ Ï¯
,Ï¯ Ì¯
$strÌ¯ ˙˘
}˙˘ ˚˘
,˚˘ ¸˘
{¸˘ ˝˘
PackIconKind˝˘ â˙
.â˙ ä˙#
BookOpenPageVariantä˙ ù˙
,ù˙ û˙
$strû˙ „˝
}„˝ ‰˝
,‰˝ Â˝
{Â˝ Ê˝
PackIconKindÊ˝ Ú˝
.Ú˝ Û˝
BookOpenVariantÛ˝ Ç˛
,Ç˛ É˛
$strÉ˛ ıÅ
}ıÅ ˆÅ
,ˆÅ ˜Å
{˜Å ¯Å
PackIconKind¯Å ÑÇ
.ÑÇ ÖÇ
BookPlusÖÇ çÇ
,çÇ éÇ
$stréÇ ùÉ
}ùÉ ûÉ
,ûÉ üÉ
{üÉ †É
PackIconKind†É ¨É
.¨É ≠É

BookSecure≠É ∑É
,∑É ∏É
$str∏É ÉÖ
}ÉÖ ÑÖ
,ÑÖ ÖÖ
{ÖÖ ÜÖ
PackIconKindÜÖ íÖ
.íÖ ìÖ
BookUnsecureìÖ üÖ
,üÖ †Ö
$str†Ö ﬂÜ
}ﬂÜ ‡Ü
,‡Ü ·Ü
{·Ü ‚Ü
PackIconKind‚Ü ÓÜ
.ÓÜ ÔÜ
BookVariantÔÜ ˙Ü
,˙Ü ˚Ü
$str˚Ü ·á
}·á ‚á
,‚á „á
{„á ‰á
PackIconKind‰á á
.á Òá
BookmarkÒá ˘á
,˘á ˙á
$str˙á ∑à
}∑à ∏à
,∏à πà
{πà ∫à
PackIconKind∫à ∆à
.∆à «à
BookmarkCheck«à ‘à
,‘à ’à
$str’à  â
} â Àâ
,Àâ Ãâ
{Ãâ Õâ
PackIconKindÕâ Ÿâ
.Ÿâ ⁄â
BookmarkMusic⁄â Áâ
,Áâ Ëâ
$strËâ Çã
}Çã Éã
,Éã Ñã
{Ñã Öã
PackIconKindÖã ëã
.ëã íã
BookmarkOutlineíã °ã
,°ã ¢ã
$str¢ã ¯ã
}¯ã ˘ã
,˘ã ˙ã
{˙ã ˚ã
PackIconKind˚ã áå
.áå àå
BookmarkPlusàå îå
,îå ïå
$strïå ıå
}ıå ˆå
,ˆå ˜å
{˜å ¯å
PackIconKind¯å Ñç
.Ñç Öç#
BookmarkPlusOutlineÖç òç
,òç ôç
$strôç ïé
}ïé ñé
,ñé óé
{óé òé
PackIconKindòé §é
.§é •é
BookmarkRemove•é ≥é
,≥é ¥é
$str¥é Ùè
}Ùè ıè
,ıè ˆè
{ˆè ˜è
PackIconKind˜è Éê
.Éê Ñê
BoomboxÑê ãê
,ãê åê
$stråê √î
}√î ƒî
,ƒî ≈î
{≈î ∆î
PackIconKind∆î “î
.“î ”î
	Bootstrap”î ‹î
,‹î ›î
$str›î •ó
}•ó ¶ó
,¶ó ßó
{ßó ®ó
PackIconKind®ó ¥ó
.¥ó µó
	BorderAllµó æó
,æó øó
$strøó âò
}âò äò
,äò ãò
{ãò åò
PackIconKindåò òò
.òò ôò
BorderBottomôò •ò
,•ò ¶ò
$str¶ò áö
}áö àö
,àö âö
{âö äö
PackIconKindäö ñö
.ñö óö
BorderColoróö ¢ö
,¢ö £ö
$str£ö Æõ
}Æõ Øõ
,Øõ ∞õ
{∞õ ±õ
PackIconKind±õ Ωõ
.Ωõ æõ 
BorderHorizontalæõ Œõ
,Œõ œõ
$strœõ ∞ù
}∞ù ±ù
,±ù ≤ù
{≤ù ≥ù
PackIconKind≥ù øù
.øù ¿ù
BorderInside¿ù Ãù
,Ãù Õù
$strÕù éü
}éü èü
,èü êü
{êü ëü
PackIconKindëü ùü
.ùü ûü

BorderLeftûü ®ü
,®ü ©ü
$str©ü ï°
}ï° ñ°
,ñ° ó°
{ó° ò°
PackIconKindò° §°
.§° •°

BorderNone•° Ø°
,Ø° ∞°
$str∞° »£
}»£ …£
,…£  £
{ £ À£
PackIconKindÀ£ ◊£
.◊£ ÿ£
BorderOutsideÿ£ Â£
,Â£ Ê£
$strÊ£  §
} § À§
,À§ Ã§
{Ã§ Õ§
PackIconKindÕ§ Ÿ§
.Ÿ§ ⁄§
BorderRight⁄§ Â§
,Â§ Ê§
$strÊ§ ∆¶
}∆¶ «¶
,«¶ »¶
{»¶ …¶
PackIconKind…¶ ’¶
.’¶ ÷¶
BorderStyle÷¶ ·¶
,·¶ ‚¶
$str‚¶ ÿß
}ÿß Ÿß
,Ÿß ⁄ß
{⁄ß €ß
PackIconKind€ß Áß
.Áß Ëß
	BorderTopËß Òß
,Òß Úß
$strÚß €©
}€© ‹©
,‹© ›©
{›© ﬁ©
PackIconKindﬁ© Í©
.Í© Î©
BorderVerticalÎ© ˘©
,˘© ˙©
$str˙© Ÿ´
}Ÿ´ ⁄´
,⁄´ €´
{€´ ‹´
PackIconKind‹´ Ë´
.Ë´ È´
BowTieÈ´ Ô´
,Ô´ ´
$str´ ∞¨
}∞¨ ±¨
,±¨ ≤¨
{≤¨ ≥¨
PackIconKind≥¨ ø¨
.ø¨ ¿¨
Bowl¿¨ ƒ¨
,ƒ¨ ≈¨
$str≈¨ ò≠
}ò≠ ô≠
,ô≠ ö≠
{ö≠ õ≠
PackIconKindõ≠ ß≠
.ß≠ ®≠
Bowling®≠ Ø≠
,Ø≠ ∞≠
$str∞≠ °∞
}°∞ ¢∞
,¢∞ £∞
{£∞ §∞
PackIconKind§∞ ∞∞
.∞∞ ±∞
Box±∞ ¥∞
,¥∞ µ∞
$strµ∞ ﬁ∫
}ﬁ∫ ﬂ∫
,ﬂ∫ ‡∫
{‡∫ ·∫
PackIconKind·∫ Ì∫
.Ì∫ Ó∫
	BoxCutterÓ∫ ˜∫
,˜∫ ¯∫
$str¯∫ …Ω
}…Ω  Ω
, Ω ÀΩ
{ÀΩ ÃΩ
PackIconKindÃΩ ÿΩ
.ÿΩ ŸΩ
	BoxShadowŸΩ ‚Ω
,‚Ω „Ω
$str„Ω êø
}êø ëø
,ëø íø
{íø ìø
PackIconKindìø üø
.üø †ø
Bridge†ø ¶ø
,¶ø ßø
$strßø ˜¡
}˜¡ ¯¡
,¯¡ ˘¡
{˘¡ ˙¡
PackIconKind˙¡ Ü¬
.Ü¬ á¬
	Briefcaseá¬ ê¬
,ê¬ ë¬
$strë¬ ¢√
}¢√ £√
,£√ §√
{§√ •√
PackIconKind•√ ±√
.±√ ≤√
BriefcaseCheck≤√ ¿√
,¿√ ¡√
$str¡√ ä≈
}ä≈ ã≈
,ã≈ å≈
{å≈ ç≈
PackIconKindç≈ ô≈
.ô≈ ö≈!
BriefcaseDownloadö≈ ´≈
,´≈ ¨≈
$str¨≈ ›∆
}›∆ ﬁ∆
,ﬁ∆ ﬂ∆
{ﬂ∆ ‡∆
PackIconKind‡∆ Ï∆
.Ï∆ Ì∆ 
BriefcaseOutlineÌ∆ ˝∆
,˝∆ ˛∆
$str˛∆ ›…
}›… ﬁ…
,ﬁ… ﬂ…
{ﬂ… ‡…
PackIconKind‡… Ï…
.Ï… Ì…
BriefcaseUploadÌ… ¸…
,¸… ˝…
$str˝… ¨À
}¨À ≠À
,≠À ÆÀ
{ÆÀ ØÀ
PackIconKindØÀ ªÀ
.ªÀ ºÀ
Brightness1ºÀ «À
,«À »À
$str»À ñÃ
}ñÃ óÃ
,óÃ òÃ
{òÃ ôÃ
PackIconKindôÃ •Ã
.•Ã ¶Ã
Brightness2¶Ã ±Ã
,±Ã ≤Ã
$str≤Ã ∏Õ
}∏Õ πÕ
,πÕ ∫Õ
{∫Õ ªÕ
PackIconKindªÕ «Õ
.«Õ »Õ
Brightness3»Õ ”Õ
,”Õ ‘Õ
$str‘Õ ·Œ
}·Œ ‚Œ
,‚Œ „Œ
{„Œ ‰Œ
PackIconKind‰Œ Œ
.Œ ÒŒ
Brightness4ÒŒ ¸Œ
,¸Œ ˝Œ
$str˝Œ ˙–
}˙– ˚–
,˚– ¸–
{¸– ˝–
PackIconKind˝– â—
.â— ä—
Brightness5ä— ï—
,ï— ñ—
$strñ— »“
}»“ …“
,…“  “
{ “ À“
PackIconKindÀ“ ◊“
.◊“ ÿ“
Brightness6ÿ“ „“
,„“ ‰“
$str‰“ ˙”
}˙” ˚”
,˚” ¸”
{¸” ˝”
PackIconKind˝” â‘
.â‘ ä‘
Brightness7ä‘ ï‘
,ï‘ ñ‘
$strñ‘ ä÷
}ä÷ ã÷
,ã÷ å÷
{å÷ ç÷
PackIconKindç÷ ô÷
.ô÷ ö÷
BrightnessAutoö÷ ®÷
,®÷ ©÷
$str©÷ Ó◊
}Ó◊ Ô◊
,Ô◊ ◊
{◊ Ò◊
PackIconKindÒ◊ ˝◊
.˝◊ ˛◊
Broom˛◊ Éÿ
,Éÿ Ñÿ
$strÑÿ ÚŸ
}ÚŸ ÛŸ
,ÛŸ ÙŸ
{ÙŸ ıŸ
PackIconKindıŸ Å⁄
.Å⁄ Ç⁄
BrushÇ⁄ á⁄
,á⁄ à⁄
$strà⁄ ‘€
}‘€ ’€
,’€ ÷€
{÷€ ◊€
PackIconKind◊€ „€
.„€ ‰€
Buffer‰€ Í€
,Í€ Î€
$strÎ€ ¥Ê
}¥Ê µÊ
,µÊ ∂Ê
{∂Ê ∑Ê
PackIconKind∑Ê √Ê
.√Ê ƒÊ
BugƒÊ «Ê
,«Ê »Ê
$str»Ê ˚È
}˚È ¸È
,¸È ˝È
{˝È ˛È
PackIconKind˛È äÍ
.äÍ ãÍ
BulletinBoardãÍ òÍ
,òÍ ôÍ
$strôÍ ◊Î
}◊Î ÿÎ
,ÿÎ ŸÎ
{ŸÎ ⁄Î
PackIconKind⁄Î ÊÎ
.ÊÎ ÁÎ
BullhornÁÎ ÔÎ
,ÔÎ Î
$strÎ ˙Ô
}˙Ô ˚Ô
,˚Ô ¸Ô
{¸Ô ˝Ô
PackIconKind˝Ô â
.â ä
Bullseyeä í
,í ì
$strì Ú
}Ú ÒÚ
,ÒÚ ÚÚ
{ÚÚ ÛÚ
PackIconKindÛÚ ˇÚ
.ˇÚ ÄÛ
BusÄÛ ÉÛ
,ÉÛ ÑÛ
$strÑÛ âˆ
}âˆ äˆ
,äˆ ãˆ
{ãˆ åˆ
PackIconKindåˆ òˆ
.òˆ ôˆ!
BusArticulatedEndôˆ ™ˆ
,™ˆ ´ˆ
$str´ˆ À¯
}À¯ Ã¯
,Ã¯ Õ¯
{Õ¯ Œ¯
PackIconKindŒ¯ ⁄¯
.⁄¯ €¯#
BusArticulatedFront€¯ Ó¯
,Ó¯ Ô¯
$strÔ¯ ê¸
}ê¸ ë¸
,ë¸ í¸
{í¸ ì¸
PackIconKindì¸ ü¸
.ü¸ †¸
BusDoubleDecker†¸ Ø¸
,Ø¸ ∞¸
$str∞¸ £Ä
}£Ä §Ä
,§Ä •Ä
{•Ä ¶Ä
PackIconKind¶Ä ≤Ä
.≤Ä ≥Ä
	BusSchool≥Ä ºÄ
,ºÄ ΩÄ
$strΩÄ ‘É
}‘É ’É
,’É ÷É
{÷É ◊É
PackIconKind◊É „É
.„É ‰É
BusSide‰É ÎÉ
,ÎÉ ÏÉ
$strÏÉ ˛Ü
}˛Ü ˇÜ
,ˇÜ Äá
{Äá Åá
PackIconKindÅá çá
.çá éá
Cachedéá îá
,îá ïá
$strïá Ûà
}Ûà Ùà
,Ùà ıà
{ıà ˆà
PackIconKindˆà Çâ
.Çâ Éâ
CakeÉâ áâ
,áâ àâ
$stràâ ≠å
}≠å Æå
,Æå Øå
{Øå ∞å
PackIconKind∞å ºå
.ºå Ωå
CakeLayeredΩå »å
,»å …å
$str…å ∫é
}∫é ªé
,ªé ºé
{ºé Ωé
PackIconKindΩé …é
.…é  é
CakeVariant é ’é
,’é ÷é
$str÷é ¶ì
}¶ì ßì
,ßì ®ì
{®ì ©ì
PackIconKind©ì µì
.µì ∂ì

Calculator∂ì ¿ì
,¿ì ¡ì
$str¡ì ¥ï
}¥ï µï
,µï ∂ï
{∂ï ∑ï
PackIconKind∑ï √ï
.√ï ƒï
Calendarƒï Ãï
,Ãï Õï
$strÕï “ñ
}“ñ ”ñ
,”ñ ‘ñ
{‘ñ ’ñ
PackIconKind’ñ ·ñ
.·ñ ‚ñ
CalendarBlank‚ñ Ôñ
,Ôñ ñ
$strñ ‚ó
}‚ó „ó
,„ó ‰ó
{‰ó Âó
PackIconKindÂó Òó
.Òó Úó
CalendarCheckÚó ˇó
,ˇó Äò
$strÄò ºô
}ºô Ωô
,Ωô æô
{æô øô
PackIconKindøô Àô
.Àô Ãô
CalendarClockÃô Ÿô
,Ÿô ⁄ô
$str⁄ô Çù
}Çù Éù
,Éù Ñù
{Ñù Öù
PackIconKindÖù ëù
.ëù íù 
CalendarMultipleíù ¢ù
,¢ù £ù
$str£ù ”û
}”û ‘û
,‘û ’û
{’û ÷û
PackIconKind÷û ‚û
.‚û „û%
CalendarMultipleCheck„û ¯û
,¯û ˘û
$str˘û Á†
}Á† Ë†
,Ë† È†
{È† Í†
PackIconKindÍ† ˆ†
.ˆ† ˜†
CalendarPlus˜† É°
,É° Ñ°
$strÑ° §¢
}§¢ •¢
,•¢ ¶¢
{¶¢ ß¢
PackIconKindß¢ ≥¢
.≥¢ ¥¢ 
CalendarQuestion¥¢ ƒ¢
,ƒ¢ ≈¢
$str≈¢ ß
}ß Òß
,Òß Úß
{Úß Ûß
PackIconKindÛß ˇß
.ˇß Ä®
CalendarRangeÄ® ç®
,ç® é®
$stré® ¥©
}¥© µ©
,µ© ∂©
{∂© ∑©
PackIconKind∑© √©
.√© ƒ©
CalendarRemoveƒ© “©
,“© ”©
$str”© …´
}…´  ´
, ´ À´
{À´ Ã´
PackIconKindÃ´ ÿ´
.ÿ´ Ÿ´
CalendarTextŸ´ Â´
,Â´ Ê´
$strÊ´ ı¨
}ı¨ ˆ¨
,ˆ¨ ˜¨
{˜¨ ¯¨
PackIconKind¯¨ Ñ≠
.Ñ≠ Ö≠
CalendarTodayÖ≠ í≠
,í≠ ì≠
$strì≠ êÆ
}êÆ ëÆ
,ëÆ íÆ
{íÆ ìÆ
PackIconKindìÆ üÆ
.üÆ †Æ
CallMade†Æ ®Æ
,®Æ ©Æ
$str©Æ ◊Æ
}◊Æ ÿÆ
,ÿÆ ŸÆ
{ŸÆ ⁄Æ
PackIconKind⁄Æ ÊÆ
.ÊÆ ÁÆ
	CallMergeÁÆ Æ
,Æ ÒÆ
$strÒÆ ÕØ
}ÕØ ŒØ
,ŒØ œØ
{œØ –Ø
PackIconKind–Ø ‹Ø
.‹Ø ›Ø

CallMissed›Ø ÁØ
,ÁØ ËØ
$strËØ •∞
}•∞ ¶∞
,¶∞ ß∞
{ß∞ ®∞
PackIconKind®∞ ¥∞
.¥∞ µ∞
CallReceivedµ∞ ¡∞
,¡∞ ¬∞
$str¬∞ Ó∞
}Ó∞ Ô∞
,Ô∞ ∞
{∞ Ò∞
PackIconKindÒ∞ ˝∞
.˝∞ ˛∞
	CallSplit˛∞ á±
,á± à±
$strà± ˜±
}˜± ¯±
,¯± ˘±
{˘± ˙±
PackIconKind˙± Ü≤
.Ü≤ á≤
	Camcorderá≤ ê≤
,ê≤ ë≤
$strë≤ ˚≤
}˚≤ ¸≤
,¸≤ ˝≤
{˝≤ ˛≤
PackIconKind˛≤ ä≥
.ä≥ ã≥
CamcorderBoxã≥ ó≥
,ó≥ ò≥
$strò≥ ç¥
}ç¥ é¥
,é¥ è¥
{è¥ ê¥
PackIconKindê¥ ú¥
.ú¥ ù¥
CamcorderBoxOffù¥ ¨¥
,¨¥ ≠¥
$str≠¥ ˇµ
}ˇµ Ä∂
,Ä∂ Å∂
{Å∂ Ç∂
PackIconKindÇ∂ é∂
.é∂ è∂
CamcorderOffè∂ õ∂
,õ∂ ú∂
$strú∂ Ω∑
}Ω∑ æ∑
,æ∑ ø∑
{ø∑ ¿∑
PackIconKind¿∑ Ã∑
.Ã∑ Õ∑
CameraÕ∑ ”∑
,”∑ ‘∑
$str‘∑ µπ
}µπ ∂π
,∂π ∑π
{∑π ∏π
PackIconKind∏π ƒπ
.ƒπ ≈π
CameraBurst≈π –π
,–π —π
$str—π Í∫
}Í∫ Î∫
,Î∫ Ï∫
{Ï∫ Ì∫
PackIconKindÌ∫ ˘∫
.˘∫ ˙∫
CameraEnhance˙∫ áª
,áª àª
$stràª º
}º Òº
,Òº Úº
{Úº Ûº
PackIconKindÛº ˇº
.ˇº ÄΩ
CameraFrontÄΩ ãΩ
,ãΩ åΩ
$stråΩ Üø
}Üø áø
,áø àø
{àø âø
PackIconKindâø ïø
.ïø ñø"
CameraFrontVariantñø ®ø
,®ø ©ø
$str©ø £¡
}£¡ §¡
,§¡ •¡
{•¡ ¶¡
PackIconKind¶¡ ≤¡
.≤¡ ≥¡
CameraGopro≥¡ æ¡
,æ¡ ø¡
$strø¡ óƒ
}óƒ òƒ
,òƒ ôƒ
{ôƒ öƒ
PackIconKindöƒ ¶ƒ
.¶ƒ ßƒ

CameraIrisßƒ ±ƒ
,±ƒ ≤ƒ
$str≤ƒ ‚«
}‚« „«
,„« ‰«
{‰« Â«
PackIconKindÂ« Ò«
.Ò« Ú«$
CameraMeteringCenterÚ« Ü»
,Ü» á»
$strá» πÀ
}πÀ ∫À
,∫À ªÀ
{ªÀ ºÀ
PackIconKindºÀ »À
.»À …À$
CameraMeteringMatrix…À ›À
,›À ﬁÀ
$strﬁÀ Åœ
}Åœ Çœ
,Çœ Éœ
{Éœ Ñœ
PackIconKindÑœ êœ
.êœ ëœ%
CameraMeteringPartialëœ ¶œ
,¶œ ßœ
$strßœ ˘—
}˘— ˙—
,˙— ˚—
{˚— ¸—
PackIconKind¸— à“
.à“ â“"
CameraMeteringSpotâ“ õ“
,õ“ ú“
$strú“ ◊”
}◊” ÿ”
,ÿ” Ÿ”
{Ÿ” ⁄”
PackIconKind⁄” Ê”
.Ê” Á”
	CameraOffÁ” ”
,” Ò”
$strÒ” ƒ◊
}ƒ◊ ≈◊
,≈◊ ∆◊
{∆◊ «◊
PackIconKind«◊ ”◊
.”◊ ‘◊
CameraPartyMode‘◊ „◊
,„◊ ‰◊
$str‰◊ ¿⁄
}¿⁄ ¡⁄
,¡⁄ ¬⁄
{¬⁄ √⁄
PackIconKind√⁄ œ⁄
.œ⁄ –⁄

CameraRear–⁄ ⁄⁄
,⁄⁄ €⁄
$str€⁄ £‹
}£‹ §‹
,§‹ •‹
{•‹ ¶‹
PackIconKind¶‹ ≤‹
.≤‹ ≥‹!
CameraRearVariant≥‹ ƒ‹
,ƒ‹ ≈‹
$str≈‹ Û›
}Û› Ù›
,Ù› ı›
{ı› ˆ›
PackIconKindˆ› Çﬁ
.Çﬁ Éﬁ
CameraSwitchÉﬁ èﬁ
,èﬁ êﬁ
$strêﬁ ®ﬂ
}®ﬂ ©ﬂ
,©ﬂ ™ﬂ
{™ﬂ ´ﬂ
PackIconKind´ﬂ ∑ﬂ
.∑ﬂ ∏ﬂ
CameraTimer∏ﬂ √ﬂ
,√ﬂ ƒﬂ
$strƒﬂ Ã‚
}Ã‚ Õ‚
,Õ‚ Œ‚
{Œ‚ œ‚
PackIconKindœ‚ €‚
.€‚ ‹‚
Cancel‹‚ ‚‚
,‚‚ „‚
$str„‚ ‡‰
}‡‰ ·‰
,·‰ ‚‰
{‚‰ „‰
PackIconKind„‰ Ô‰
.Ô‰ ‰
Candle‰ ˆ‰
,ˆ‰ ˜‰
$str˜‰ ¡Á
}¡Á ¬Á
,¬Á √Á
{√Á ƒÁ
PackIconKindƒÁ –Á
.–Á —Á
	Candycane—Á ⁄Á
,⁄Á €Á
$str€Á ÃÍ
}ÃÍ ÕÍ
,ÕÍ ŒÍ
{ŒÍ œÍ
PackIconKindœÍ €Í
.€Í ‹Í
Cannabis‹Í ‰Í
,‰Í ÂÍ
$strÂÍ üÓ
}üÓ †Ó
,†Ó °Ó
{°Ó ¢Ó
PackIconKind¢Ó ÆÓ
.ÆÓ ØÓ
CarØÓ ≤Ó
,≤Ó ≥Ó
$str≥Ó ¶Ò
}¶Ò ßÒ
,ßÒ ®Ò
{®Ò ©Ò
PackIconKind©Ò µÒ
.µÒ ∂Ò

CarBattery∂Ò ¿Ò
,¿Ò ¡Ò
$str¡Ò ≠Ú
}≠Ú ÆÚ
,ÆÚ ØÚ
{ØÚ ∞Ú
PackIconKind∞Ú ºÚ
.ºÚ ΩÚ
CarConnectedΩÚ …Ú
,…Ú  Ú
$str Ú ¡˜
}¡˜ ¬˜
,¬˜ √˜
{√˜ ƒ˜
PackIconKindƒ˜ –˜
.–˜ —˜
CarConvertible—˜ ﬂ˜
,ﬂ˜ ‡˜
$str‡˜ ≈˙
}≈˙ ∆˙
,∆˙ «˙
{«˙ »˙
PackIconKind»˙ ‘˙
.‘˙ ’˙
	CarEstate’˙ ﬁ˙
,ﬁ˙ ﬂ˙
$strﬂ˙ ÷˝
}÷˝ ◊˝
,◊˝ ÿ˝
{ÿ˝ Ÿ˝
PackIconKindŸ˝ Â˝
.Â˝ Ê˝
CarHatchbackÊ˝ Ú˝
,Ú˝ Û˝
$strÛ˝ ·Ä
}·Ä ‚Ä
,‚Ä „Ä
{„Ä ‰Ä
PackIconKind‰Ä Ä
.Ä ÒÄ
	CarPickupÒÄ ˙Ä
,˙Ä ˚Ä
$str˚Ä –É
}–É —É
,—É “É
{“É ”É
PackIconKind”É ﬂÉ
.ﬂÉ ‡É
CarSide‡É ÁÉ
,ÁÉ ËÉ
$strËÉ ÔÜ
}ÔÜ Ü
,Ü ÒÜ
{ÒÜ ÚÜ
PackIconKindÚÜ ˛Ü
.˛Ü ˇÜ
	CarSportsˇÜ àá
,àá âá
$strâá ßä
}ßä ®ä
,®ä ©ä
{©ä ™ä
PackIconKind™ä ∂ä
.∂ä ∑ä
CarWash∑ä æä
,æä øä
$strøä æè
}æè øè
,øè ¿è
{¿è ¡è
PackIconKind¡è Õè
.Õè Œè
CaravanŒè ’è
,’è ÷è
$str÷è âë
}âë äë
,äë ãë
{ãë åë
PackIconKindåë òë
.òë ôë
Cardsôë ûë
,ûë üë
$strüë §î
}§î •î
,•î ¶î
{¶î ßî
PackIconKindßî ≥î
.≥î ¥î
CardsOutline¥î ¿î
,¿î ¡î
$str¡î ‰ó
}‰ó Âó
,Âó Êó
{Êó Áó
PackIconKindÁó Ûó
.Ûó Ùó#
CardsPlayingOutlineÙó áò
,áò àò
$stràò ˇõ
}ˇõ Äú
,Äú Åú
{Åú Çú
PackIconKindÇú éú
.éú èú
CardsVariantèú õú
,õú úú
$strúú ◊ù
}◊ù ÿù
,ÿù Ÿù
{Ÿù ⁄ù
PackIconKind⁄ù Êù
.Êù Áù
CarrotÁù Ìù
,Ìù Óù
$strÓù —°
}—° “°
,“° ”°
{”° ‘°
PackIconKind‘° ‡°
.‡° ·°
Cart·° Â°
,Â° Ê°
$strÊ° ¸§
}¸§ ˝§
,˝§ ˛§
{˛§ ˇ§
PackIconKindˇ§ ã•
.ã• å•
CartOffå• ì•
,ì• î•
$strî• ›®
}›® ﬁ®
,ﬁ® ﬂ®
{ﬂ® ‡®
PackIconKind‡® Ï®
.Ï® Ì®
CartOutlineÌ® ¯®
,¯® ˘®
$str˘® û¨
}û¨ ü¨
,ü¨ †¨
{†¨ °¨
PackIconKind°¨ ≠¨
.≠¨ Æ¨
CartPlusÆ¨ ∂¨
,∂¨ ∑¨
$str∑¨ €Ø
}€Ø ‹Ø
,‹Ø ›Ø
{›Ø ﬁØ
PackIconKindﬁØ ÍØ
.ÍØ ÎØ 
CaseSensitiveAltÎØ ˚Ø
,˚Ø ¸Ø
$str¸Ø ≈≤
}≈≤ ∆≤
,∆≤ «≤
{«≤ »≤
PackIconKind»≤ ‘≤
.‘≤ ’≤
Cash’≤ Ÿ≤
,Ÿ≤ ⁄≤
$str⁄≤ ˙≥
}˙≥ ˚≥
,˚≥ ¸≥
{¸≥ ˝≥
PackIconKind˝≥ â¥
.â¥ ä¥
Cash100ä¥ ë¥
,ë¥ í¥
$strí¥ Ã∏
}Ã∏ Õ∏
,Õ∏ Œ∏
{Œ∏ œ∏
PackIconKindœ∏ €∏
.€∏ ‹∏
CashMultiple‹∏ Ë∏
,Ë∏ È∏
$strÈ∏ ü∫
}ü∫ †∫
,†∫ °∫
{°∫ ¢∫
PackIconKind¢∫ Æ∫
.Æ∫ Ø∫
CashUsdØ∫ ∂∫
,∂∫ ∑∫
$str∑∫ óº
}óº òº
,òº ôº
{ôº öº
PackIconKindöº ¶º
.¶º ßº
Castßº ´º
,´º ¨º
$str¨º ıΩ
}ıΩ ˆΩ
,ˆΩ ˜Ω
{˜Ω ¯Ω
PackIconKind¯Ω Ñæ
.Ñæ Öæ
CastConnectedÖæ íæ
,íæ ìæ
$strìæ ä¿
}ä¿ ã¿
,ã¿ å¿
{å¿ ç¿
PackIconKindç¿ ô¿
.ô¿ ö¿
CastOffö¿ °¿
,°¿ ¢¿
$str¢¿ ±¬
}±¬ ≤¬
,≤¬ ≥¬
{≥¬ ¥¬
PackIconKind¥¬ ¿¬
.¿¬ ¡¬
Castle¡¬ «¬
,«¬ »¬
$str»¬ ˇ√
}ˇ√ Äƒ
,Äƒ Åƒ
{Åƒ Çƒ
PackIconKindÇƒ éƒ
.éƒ èƒ
Catèƒ íƒ
,íƒ ìƒ
$strìƒ ≠ 
}≠  Æ 
,Æ  Ø 
{Ø  ∞ 
PackIconKind∞  º 
.º  Ω 
CctvΩ  ¡ 
,¡  ¬ 
$str¬  àŒ
}àŒ âŒ
,âŒ äŒ
{äŒ ãŒ
PackIconKindãŒ óŒ
.óŒ òŒ
CeilingLightòŒ §Œ
,§Œ •Œ
$str•Œ ÓŒ
}ÓŒ ÔŒ
,ÔŒ Œ
{Œ ÒŒ
PackIconKindÒŒ ˝Œ
.˝Œ ˛Œ
	Cellphone˛Œ áœ
,áœ àœ
$stràœ Ïœ
}Ïœ Ìœ
,Ìœ Óœ
{Óœ Ôœ
PackIconKindÔœ ˚œ
.˚œ ¸œ 
CellphoneAndroid¸œ å–
,å– ç–
$strç– Ä—
}Ä— Å—
,Å— Ç—
{Ç— É—
PackIconKindÉ— è—
.è— ê—
CellphoneBasicê— û—
,û— ü—
$strü— ‡”
}‡” ·”
,·” ‚”
{‚” „”
PackIconKind„” Ô”
.Ô” ”
CellphoneDock” ˝”
,˝” ˛”
$str˛” Ú‘
}Ú‘ Û‘
,Û‘ Ù‘
{Ù‘ ı‘
PackIconKindı‘ Å’
.Å’ Ç’
CellphoneIphoneÇ’ ë’
,ë’ í’
$strí’ Ô÷
}Ô÷ ÷
,÷ Ò÷
{Ò÷ Ú÷
PackIconKindÚ÷ ˛÷
.˛÷ ˇ÷
CellphoneLinkˇ÷ å◊
,å◊ ç◊
$strç◊ òÿ
}òÿ ôÿ
,ôÿ öÿ
{öÿ õÿ
PackIconKindõÿ ßÿ
.ßÿ ®ÿ 
CellphoneLinkOff®ÿ ∏ÿ
,∏ÿ πÿ
$strπÿ ∑⁄
}∑⁄ ∏⁄
,∏⁄ π⁄
{π⁄ ∫⁄
PackIconKind∫⁄ ∆⁄
.∆⁄ «⁄!
CellphoneSettings«⁄ ÿ⁄
,ÿ⁄ Ÿ⁄
$strŸ⁄ ·€
}·€ ‚€
,‚€ „€
{„€ ‰€
PackIconKind‰€ €
.€ Ò€!
CellphoneWirelessÒ€ Ç‹
,Ç‹ É‹
$strÉ‹ ˙ﬂ
}˙ﬂ ˚ﬂ
,˚ﬂ ¸ﬂ
{¸ﬂ ˝ﬂ
PackIconKind˝ﬂ â‡
.â‡ ä‡
Certificateä‡ ï‡
,ï‡ ñ‡
$strñ‡ Û·
}Û· Ù·
,Ù· ı·
{ı· ˆ·
PackIconKindˆ· Ç‚
.Ç‚ É‚
ChairSchoolÉ‚ é‚
,é‚ è‚
$strè‚ „
}„ Ò„
,Ò„ Ú„
{Ú„ Û„
PackIconKindÛ„ ˇ„
.ˇ„ Ä‰
ChartArcÄ‰ à‰
,à‰ â‰
$strâ‰ ºÁ
}ºÁ ΩÁ
,ΩÁ æÁ
{æÁ øÁ
PackIconKindøÁ ÀÁ
.ÀÁ ÃÁ
ChartAreasplineÃÁ €Á
,€Á ‹Á
$str‹Á ÁË
}ÁË ËË
,ËË ÈË
{ÈË ÍË
PackIconKindÍË ˆË
.ˆË ˜Ë
ChartBar˜Ë ˇË
,ˇË ÄÈ
$strÄÈ ¥È
}¥È µÈ
,µÈ ∂È
{∂È ∑È
PackIconKind∑È √È
.√È ƒÈ
ChartBarStackedƒÈ ”È
,”È ‘È
$str‘È ›Í
}›Í ﬁÍ
,ﬁÍ ﬂÍ
{ﬂÍ ‡Í
PackIconKind‡Í ÏÍ
.ÏÍ ÌÍ
ChartBubbleÌÍ ¯Í
,¯Í ˘Í
$str˘Í ∞Ì
}∞Ì ±Ì
,±Ì ≤Ì
{≤Ì ≥Ì
PackIconKind≥Ì øÌ
.øÌ ¿Ì

ChartDonut¿Ì  Ì
, Ì ÀÌ
$strÀÌ ÙÔ
}ÙÔ ıÔ
,ıÔ ˆÔ
{ˆÔ ˜Ô
PackIconKind˜Ô É
.É Ñ!
ChartDonutVariantÑ ï
,ï ñ
$strñ œÙ
}œÙ –Ù
,–Ù —Ù
{—Ù “Ù
PackIconKind“Ù ﬁÙ
.ﬁÙ ﬂÙ

ChartGanttﬂÙ ÈÙ
,ÈÙ ÍÙ
$strÍÙ Œı
}Œı œı
,œı –ı
{–ı —ı
PackIconKind—ı ›ı
.›ı ﬁı
ChartHistogramﬁı Ïı
,Ïı Ìı
$strÌı ìˆ
}ìˆ îˆ
,îˆ ïˆ
{ïˆ ñˆ
PackIconKindñˆ ¢ˆ
.¢ˆ £ˆ
	ChartLine£ˆ ¨ˆ
,¨ˆ ≠ˆ
$str≠ˆ è˜
}è˜ ê˜
,ê˜ ë˜
{ë˜ í˜
PackIconKindí˜ û˜
.û˜ ü˜ 
ChartLineStackedü˜ Ø˜
,Ø˜ ∞˜
$str∞˜ ≠¯
}≠¯ Æ¯
,Æ¯ Ø¯
{Ø¯ ∞¯
PackIconKind∞¯ º¯
.º¯ Ω¯ 
ChartLineVariantΩ¯ Õ¯
,Õ¯ Œ¯
$strŒ¯ ü˘
}ü˘ †˘
,†˘ °˘
{°˘ ¢˘
PackIconKind¢˘ Æ˘
.Æ˘ Ø˘
ChartPieØ˘ ∑˘
,∑˘ ∏˘
$str∏˘ ô˚
}ô˚ ö˚
,ö˚ õ˚
{õ˚ ú˚
PackIconKindú˚ ®˚
.®˚ ©˚&
ChartScatterplotHexbin©˚ ø˚
,ø˚ ¿˚
$str¿˚ Û¸
}Û¸ Ù¸
,Ù¸ ı¸
{ı¸ ˆ¸
PackIconKindˆ¸ Ç˝
.Ç˝ É˝
ChartTimelineÉ˝ ê˝
,ê˝ ë˝
$strë˝ ﬂ˝
}ﬂ˝ ‡˝
,‡˝ ·˝
{·˝ ‚˝
PackIconKind‚˝ Ó˝
.Ó˝ Ô˝
CheckÔ˝ Ù˝
,Ù˝ ı˝
$strı˝ Æ˛
}Æ˛ Ø˛
,Ø˛ ∞˛
{∞˛ ±˛
PackIconKind±˛ Ω˛
.Ω˛ æ˛
CheckAllæ˛ ∆˛
,∆˛ «˛
$str«˛ ‘ˇ
}‘ˇ ’ˇ
,’ˇ ÷ˇ
{÷ˇ ◊ˇ
PackIconKind◊ˇ „ˇ
.„ˇ ‰ˇ
CheckCircle‰ˇ Ôˇ
,Ôˇ ˇ
$strˇ ˚Ä
}˚Ä ¸Ä
,¸Ä ˝Ä
{˝Ä ˛Ä
PackIconKind˛Ä äÅ
.äÅ ãÅ"
CheckCircleOutlineãÅ ùÅ
,ùÅ ûÅ
$strûÅ ÏÇ
}ÏÇ ÌÇ
,ÌÇ ÓÇ
{ÓÇ ÔÇ
PackIconKindÔÇ ˚Ç
.˚Ç ¸Ç
CheckboxBlank¸Ç âÉ
,âÉ äÉ
$sträÉ ·É
}·É ‚É
,‚É „É
{„É ‰É
PackIconKind‰É É
.É ÒÉ#
CheckboxBlankCircleÒÉ ÑÑ
,ÑÑ ÖÑ
$strÖÑ ”Ñ
}”Ñ ‘Ñ
,‘Ñ ’Ñ
{’Ñ ÷Ñ
PackIconKind÷Ñ ‚Ñ
.‚Ñ „Ñ*
CheckboxBlankCircleOutline„Ñ ˝Ñ
,˝Ñ ˛Ñ
$str˛Ñ êÜ
}êÜ ëÜ
,ëÜ íÜ
{íÜ ìÜ
PackIconKindìÜ üÜ
.üÜ †Ü$
CheckboxBlankOutline†Ü ¥Ü
,¥Ü µÜ
$strµÜ õá
}õá úá
,úá ùá
{ùá ûá
PackIconKindûá ™á
.™á ´á
CheckboxMarked´á πá
,πá ∫á
$str∫á ¿à
}¿à ¡à
,¡à ¬à
{¬à √à
PackIconKind√à œà
.œà –à$
CheckboxMarkedCircle–à ‰à
,‰à Âà
$strÂà ‚â
}‚â „â
,„â ‰â
{‰â Ââ
PackIconKindÂâ Òâ
.Òâ Úâ+
CheckboxMarkedCircleOutlineÚâ çä
,çä éä
$stréä ˜ã
}˜ã ¯ã
,¯ã ˘ã
{˘ã ˙ã
PackIconKind˙ã Üå
.Üå áå%
CheckboxMarkedOutlineáå úå
,úå ùå
$strùå ¨ç
}¨ç ≠ç
,≠ç Æç
{Æç Øç
PackIconKindØç ªç
.ªç ºç%
CheckboxMultipleBlankºç —ç
,—ç “ç
$str“ç Œé
}Œé œé
,œé –é
{–é —é
PackIconKind—é ›é
.›é ﬁé+
CheckboxMultipleBlankCircleﬁé ˘é
,˘é ˙é
$str˙é ôë
}ôë öë
,öë õë
{õë úë
PackIconKindúë ®ë
.®ë ©ë2
"CheckboxMultipleBlankCircleOutline©ë Àë
,Àë Ãë
$strÃë ºî
}ºî Ωî
,Ωî æî
{æî øî
PackIconKindøî Àî
.Àî Ãî,
CheckboxMultipleBlankOutlineÃî Ëî
,Ëî Èî
$strÈî ıï
}ıï ˆï
,ˆï ˜ï
{˜ï ¯ï
PackIconKind¯ï Ññ
.Ññ Öñ&
CheckboxMultipleMarkedÖñ õñ
,õñ úñ
$strúñ œó
}œó –ó
,–ó —ó
{—ó “ó
PackIconKind“ó ﬁó
.ﬁó ﬂó,
CheckboxMultipleMarkedCircleﬂó ˚ó
,˚ó ¸ó
$str¸ó ”ö
}”ö ‘ö
,‘ö ’ö
{’ö ÷ö
PackIconKind÷ö ‚ö
.‚ö „ö3
#CheckboxMultipleMarkedCircleOutline„ö Üõ
,Üõ áõ
$stráõ √û
}√û ƒû
,ƒû ≈û
{≈û ∆û
PackIconKind∆û “û
.“û ”û-
CheckboxMultipleMarkedOutline”û û
,û Òû
$strÒû ´†
}´† ¨†
,¨† ≠†
{≠† Æ†
PackIconKindÆ† ∫†
.∫† ª†
Checkerboardª† «†
,«† »†
$str»† Û†
}Û† Ù†
,Ù† ı†
{ı† ˆ†
PackIconKindˆ† Ç°
.Ç° É°
ChemicalWeaponÉ° ë°
,ë° í°
$strí° ·®
}·® ‚®
,‚® „®
{„® ‰®
PackIconKind‰® ®
.® Ò®!
ChevronDoubleDownÒ® Ç©
,Ç© É©
$strÉ© ˚©
}˚© ¸©
,¸© ˝©
{˝© ˛©
PackIconKind˛© ä™
.ä™ ã™!
ChevronDoubleLeftã™ ú™
,ú™ ù™
$strù™ ñ´
}ñ´ ó´
,ó´ ò´
{ò´ ô´
PackIconKindô´ •´
.•´ ¶´"
ChevronDoubleRight¶´ ∏´
,∏´ π´
$strπ´ Ø¨
}Ø¨ ∞¨
,∞¨ ±¨
{±¨ ≤¨
PackIconKind≤¨ æ¨
.æ¨ ø¨
ChevronDoubleUpø¨ Œ¨
,Œ¨ œ¨
$strœ¨ »≠
}»≠ …≠
,…≠  ≠
{ ≠ À≠
PackIconKindÀ≠ ◊≠
.◊≠ ÿ≠
ChevronDownÿ≠ „≠
,„≠ ‰≠
$str‰≠ †Æ
}†Æ °Æ
,°Æ ¢Æ
{¢Æ £Æ
PackIconKind£Æ ØÆ
.ØÆ ∞Æ
ChevronLeft∞Æ ªÆ
,ªÆ ºÆ
$strºÆ ˚Æ
}˚Æ ¸Æ
,¸Æ ˝Æ
{˝Æ ˛Æ
PackIconKind˛Æ äØ
.äØ ãØ
ChevronRightãØ óØ
,óØ òØ
$stròØ ’Ø
}’Ø ÷Ø
,÷Ø ◊Ø
{◊Ø ÿØ
PackIconKindÿØ ‰Ø
.‰Ø ÂØ
	ChevronUpÂØ ÓØ
,ÓØ ÔØ
$strÔØ ≠∞
}≠∞ Æ∞
,Æ∞ Ø∞
{Ø∞ ∞∞
PackIconKind∞∞ º∞
.º∞ Ω∞
ChiliHotΩ∞ ≈∞
,≈∞ ∆∞
$str∆∞ ı∂
}ı∂ ˆ∂
,ˆ∂ ˜∂
{˜∂ ¯∂
PackIconKind¯∂ Ñ∑
.Ñ∑ Ö∑
ChiliMediumÖ∑ ê∑
,ê∑ ë∑
$strë∑ ∞ª
}∞ª ±ª
,±ª ≤ª
{≤ª ≥ª
PackIconKind≥ª øª
.øª ¿ª
	ChiliMild¿ª …ª
,…ª  ª
$str ª ‹Ω
}‹Ω ›Ω
,›Ω ﬁΩ
{ﬁΩ ﬂΩ
PackIconKindﬂΩ ÎΩ
.ÎΩ ÏΩ
ChipÏΩ Ω
,Ω ÒΩ
$strÒΩ äø
}äø ãø
,ãø åø
{åø çø
PackIconKindçø ôø
.ôø öø
Churchöø †ø
,†ø °ø
$str°ø  ¿
} ¿ À¿
,À¿ Ã¿
{Ã¿ Õ¿
PackIconKindÕ¿ Ÿ¿
.Ÿ¿ ⁄¿
Circle⁄¿ ‡¿
,‡¿ ·¿
$str·¿ Ø¡
}Ø¡ ∞¡
,∞¡ ±¡
{±¡ ≤¡
PackIconKind≤¡ æ¡
.æ¡ ø¡
CircleOutlineø¡ Ã¡
,Ã¡ Õ¡
$strÕ¡ ﬂ¬
}ﬂ¬ ‡¬
,‡¬ ·¬
{·¬ ‚¬
PackIconKind‚¬ Ó¬
.Ó¬ Ô¬

CiscoWebexÔ¬ ˘¬
,˘¬ ˙¬
$str˙¬ üƒ
}üƒ †ƒ
,†ƒ °ƒ
{°ƒ ¢ƒ
PackIconKind¢ƒ Æƒ
.Æƒ Øƒ
CityØƒ ≥ƒ
,≥ƒ ¥ƒ
$str¥ƒ “≈
}“≈ ”≈
,”≈ ‘≈
{‘≈ ’≈
PackIconKind’≈ ·≈
.·≈ ‚≈
	Clipboard‚≈ Î≈
,Î≈ Ï≈
$strÏ≈ ö«
}ö« õ«
,õ« ú«
{ú« ù«
PackIconKindù« ©«
.©« ™« 
ClipboardAccount™« ∫«
,∫« ª«
$strª« ¸…
}¸… ˝…
,˝… ˛…
{˛… ˇ…
PackIconKindˇ… ã 
.ã  å 
ClipboardAlertå  ö 
,ö  õ 
$strõ  ˙À
}˙À ˚À
,˚À ¸À
{¸À ˝À
PackIconKind˝À âÃ
.âÃ äÃ"
ClipboardArrowDownäÃ úÃ
,úÃ ùÃ
$strùÃ ¯Õ
}¯Õ ˘Õ
,˘Õ ˙Õ
{˙Õ ˚Õ
PackIconKind˚Õ áŒ
.áŒ àŒ"
ClipboardArrowLeftàŒ öŒ
,öŒ õŒ
$strõŒ ˘œ
}˘œ ˙œ
,˙œ ˚œ
{˚œ ¸œ
PackIconKind¸œ à–
.à– â–
ClipboardCheckâ– ó–
,ó– ò–
$strò– â“
}â“ ä“
,ä“ ã“
{ã“ å“
PackIconKindå“ ò“
.ò“ ô“
ClipboardFlowô“ ¶“
,¶“ ß“
$strß“ ∞‘
}∞‘ ±‘
,±‘ ≤‘
{≤‘ ≥‘
PackIconKind≥‘ ø‘
.ø‘ ¿‘ 
ClipboardOutline¿‘ –‘
,–‘ —‘
$str—‘ ñ÷
}ñ÷ ó÷
,ó÷ ò÷
{ò÷ ô÷
PackIconKindô÷ •÷
.•÷ ¶÷
ClipboardPlus¶÷ ≥÷
,≥÷ ¥÷
$str¥÷ äÿ
}äÿ ãÿ
,ãÿ åÿ
{åÿ çÿ
PackIconKindçÿ ôÿ
.ôÿ öÿ
ClipboardTextöÿ ßÿ
,ßÿ ®ÿ
$str®ÿ í⁄
}í⁄ ì⁄
,ì⁄ î⁄
{î⁄ ï⁄
PackIconKindï⁄ °⁄
.°⁄ ¢⁄
Clippy¢⁄ ®⁄
,®⁄ ©⁄
$str©⁄ Ù„
}Ù„ ı„
,ı„ ˆ„
{ˆ„ ˜„
PackIconKind˜„ É‰
.É‰ Ñ‰
ClockÑ‰ â‰
,â‰ ä‰
$strä‰ ŒÂ
}ŒÂ œÂ
,œÂ –Â
{–Â —Â
PackIconKind—Â ›Â
.›Â ﬁÂ

ClockAlertﬁÂ ËÂ
,ËÂ ÈÂ
$strÈÂ ¯Á
}¯Á ˘Á
,˘Á ˙Á
{˙Á ˚Á
PackIconKind˚Á áË
.áË àË
ClockEndàË êË
,êË ëË
$strëË µÍ
}µÍ ∂Í
,∂Í ∑Í
{∑Í ∏Í
PackIconKind∏Í ƒÍ
.ƒÍ ≈Í
	ClockFast≈Í ŒÍ
,ŒÍ œÍ
$strœÍ ≈Ì
}≈Ì ∆Ì
,∆Ì «Ì
{«Ì »Ì
PackIconKind»Ì ‘Ì
.‘Ì ’Ì
ClockIn’Ì ‹Ì
,‹Ì ›Ì
$str›Ì â
}â ä
,ä ã
{ã å
PackIconKindå ò
.ò ô
ClockOutô °
,° ¢
$str¢ ◊Ú
}◊Ú ÿÚ
,ÿÚ ŸÚ
{ŸÚ ⁄Ú
PackIconKind⁄Ú ÊÚ
.ÊÚ ÁÚ

ClockStartÁÚ ÒÚ
,ÒÚ ÚÚ
$strÚÚ ëı
}ëı íı
,íı ìı
{ìı îı
PackIconKindîı †ı
.†ı °ı
Close°ı ¶ı
,¶ı ßı
$strßı ñˆ
}ñˆ óˆ
,óˆ òˆ
{òˆ ôˆ
PackIconKindôˆ •ˆ
.•ˆ ¶ˆ
CloseBox¶ˆ Æˆ
,Æˆ Øˆ
$strØˆ Å¯
}Å¯ Ç¯
,Ç¯ É¯
{É¯ Ñ¯
PackIconKindÑ¯ ê¯
.ê¯ ë¯
CloseBoxOutlineë¯ †¯
,†¯ °¯
$str°¯ ﬁ˘
}ﬁ˘ ﬂ˘
,ﬂ˘ ‡˘
{‡˘ ·˘
PackIconKind·˘ Ì˘
.Ì˘ Ó˘
CloseCircleÓ˘ ˘˘
,˘˘ ˙˘
$str˙˘ ƒ˚
}ƒ˚ ≈˚
,≈˚ ∆˚
{∆˚ «˚
PackIconKind«˚ ”˚
.”˚ ‘˚"
CloseCircleOutline‘˚ Ê˚
,Ê˚ Á˚
$strÁ˚ ç˛
}ç˛ é˛
,é˛ è˛
{è˛ ê˛
PackIconKindê˛ ú˛
.ú˛ ù˛
CloseNetworkù˛ ©˛
,©˛ ™˛
$str™˛ …Ä	
}…Ä	  Ä	
, Ä	 ÀÄ	
{ÀÄ	 ÃÄ	
PackIconKindÃÄ	 ÿÄ	
.ÿÄ	 ŸÄ	
CloseOctagonŸÄ	 ÂÄ	
,ÂÄ	 ÊÄ	
$strÊÄ	 ÑÇ	
}ÑÇ	 ÖÇ	
,ÖÇ	 ÜÇ	
{ÜÇ	 áÇ	
PackIconKindáÇ	 ìÇ	
.ìÇ	 îÇ	#
CloseOctagonOutlineîÇ	 ßÇ	
,ßÇ	 ®Ç	
$str®Ç	 †Ñ	
}†Ñ	 °Ñ	
,°Ñ	 ¢Ñ	
{¢Ñ	 £Ñ	
PackIconKind£Ñ	 ØÑ	
.ØÑ	 ∞Ñ	
CloseOutline∞Ñ	 ºÑ	
,ºÑ	 ΩÑ	
$strΩÑ	 ØÜ	
}ØÜ	 ∞Ü	
,∞Ü	 ±Ü	
{±Ü	 ≤Ü	
PackIconKind≤Ü	 æÜ	
.æÜ	 øÜ	
ClosedCaptionøÜ	 ÃÜ	
,ÃÜ	 ÕÜ	
$strÕÜ	 ˛à	
}˛à	 ˇà	
,ˇà	 Äâ	
{Äâ	 Åâ	
PackIconKindÅâ	 çâ	
.çâ	 éâ	
Cloudéâ	 ìâ	
,ìâ	 îâ	
$strîâ	 Æä	
}Æä	 Øä	
,Øä	 ∞ä	
{∞ä	 ±ä	
PackIconKind±ä	 Ωä	
.Ωä	 æä	
CloudBracesæä	 …ä	
,…ä	  ä	
$str ä	 ¯ç	
}¯ç	 ˘ç	
,˘ç	 ˙ç	
{˙ç	 ˚ç	
PackIconKind˚ç	 áé	
.áé	 àé	

CloudCheckàé	 íé	
,íé	 ìé	
$strìé	 ‰è	
}‰è	 Âè	
,Âè	 Êè	
{Êè	 Áè	
PackIconKindÁè	 Ûè	
.Ûè	 Ùè	
CloudCircleÙè	 ˇè	
,ˇè	 Äê	
$strÄê	 Êë	
}Êë	 Áë	
,Áë	 Ëë	
{Ëë	 Èë	
PackIconKindÈë	 ıë	
.ıë	 ˆë	
CloudDownloadˆë	 Éí	
,Éí	 Ñí	
$strÑí	 ∫ì	
}∫ì	 ªì	
,ªì	 ºì	
{ºì	 Ωì	
PackIconKindΩì	 …ì	
.…ì	  ì	
CloudOffOutline ì	 Ÿì	
,Ÿì	 ⁄ì	
$str⁄ì	 ÷ñ	
}÷ñ	 ◊ñ	
,◊ñ	 ÿñ	
{ÿñ	 Ÿñ	
PackIconKindŸñ	 Âñ	
.Âñ	 Êñ	
CloudOutlineÊñ	 Úñ	
,Úñ	 Ûñ	
$strÛñ	 ãô	
}ãô	 åô	
,åô	 çô	
{çô	 éô	
PackIconKindéô	 öô	
.öô	 õô	

CloudPrintõô	 •ô	
,•ô	 ¶ô	
$str¶ô	 Äõ	
}Äõ	 Åõ	
,Åõ	 Çõ	
{Çõ	 Éõ	
PackIconKindÉõ	 èõ	
.èõ	 êõ	!
CloudPrintOutlineêõ	 °õ	
,°õ	 ¢õ	
$str¢õ	 áû	
}áû	 àû	
,àû	 âû	
{âû	 äû	
PackIconKindäû	 ñû	
.ñû	 óû	
	CloudSyncóû	 †û	
,†û	 °û	
$str°û	 ì¢	
}ì¢	 î¢	
,î¢	 ï¢	
{ï¢	 ñ¢	
PackIconKindñ¢	 ¢¢	
.¢¢	 £¢	
	CloudTags£¢	 ¨¢	
,¨¢	 ≠¢	
$str≠¢	 √§	
}√§	 ƒ§	
,ƒ§	 ≈§	
{≈§	 ∆§	
PackIconKind∆§	 “§	
.“§	 ”§	
CloudUpload”§	 ﬁ§	
,ﬁ§	 ﬂ§	
$strﬂ§	 ï¶	
}ï¶	 ñ¶	
,ñ¶	 ó¶	
{ó¶	 ò¶	
PackIconKindò¶	 §¶	
.§¶	 •¶	
Clover•¶	 ´¶	
,´¶	 ¨¶	
$str¨¶	 Ω´	
}Ω´	 æ´	
,æ´	 ø´	
{ø´	 ¿´	
PackIconKind¿´	 Ã´	
.Ã´	 Õ´	
	CodeArrayÕ´	 ÷´	
,÷´	 ◊´	
$str◊´	 ›¨	
}›¨	 ﬁ¨	
,ﬁ¨	 ﬂ¨	
{ﬂ¨	 ‡¨	
PackIconKind‡¨	 Ï¨	
.Ï¨	 Ì¨	

CodeBracesÌ¨	 ˜¨	
,˜¨	 ¯¨	
$str¯¨	 ˛Æ	
}˛Æ	 ˇÆ	
,ˇÆ	 ÄØ	
{ÄØ	 ÅØ	
PackIconKindÅØ	 çØ	
.çØ	 éØ	
CodeBracketséØ	 öØ	
,öØ	 õØ	
$strõØ	 ÃØ	
}ÃØ	 ÕØ	
,ÕØ	 ŒØ	
{ŒØ	 œØ	
PackIconKindœØ	 €Ø	
.€Ø	 ‹Ø	
	CodeEqual‹Ø	 ÂØ	
,ÂØ	 ÊØ	
$strÊØ	 Ï∞	
}Ï∞	 Ì∞	
,Ì∞	 Ó∞	
{Ó∞	 Ô∞	
PackIconKindÔ∞	 ˚∞	
.˚∞	 ¸∞	
CodeGreaterThan¸∞	 ã±	
,ã±	 å±	
$strå±	 ê≤	
}ê≤	 ë≤	
,ë≤	 í≤	
{í≤	 ì≤	
PackIconKindì≤	 ü≤	
.ü≤	 †≤	&
CodeGreaterThanOrEqual†≤	 ∂≤	
,∂≤	 ∑≤	
$str∑≤	 €≥	
}€≥	 ‹≥	
,‹≥	 ›≥	
{›≥	 ﬁ≥	
PackIconKindﬁ≥	 Í≥	
.Í≥	 Î≥	
CodeLessThanÎ≥	 ˜≥	
,˜≥	 ¯≥	
$str¯≥	 Äµ	
}Äµ	 Åµ	
,Åµ	 Çµ	
{Çµ	 Éµ	
PackIconKindÉµ	 èµ	
.èµ	 êµ	#
CodeLessThanOrEqualêµ	 £µ	
,£µ	 §µ	
$str§µ	 À∂	
}À∂	 Ã∂	
,Ã∂	 Õ∂	
{Õ∂	 Œ∂	
PackIconKindŒ∂	 ⁄∂	
.⁄∂	 €∂	
CodeNotEqual€∂	 Á∂	
,Á∂	 Ë∂	
$strË∂	 Ï∑	
}Ï∑	 Ì∑	
,Ì∑	 Ó∑	
{Ó∑	 Ô∑	
PackIconKindÔ∑	 ˚∑	
.˚∑	 ¸∑	#
CodeNotEqualVariant¸∑	 è∏	
,è∏	 ê∏	
$strê∏	 ∫π	
}∫π	 ªπ	
,ªπ	 ºπ	
{ºπ	 Ωπ	
PackIconKindΩπ	 …π	
.…π	  π	
CodeParentheses π	 Ÿπ	
,Ÿπ	 ⁄π	
$str⁄π	 ⁄ª	
}⁄ª	 €ª	
,€ª	 ‹ª	
{‹ª	 ›ª	
PackIconKind›ª	 Èª	
.Èª	 Íª	

CodeStringÍª	 Ùª	
,Ùª	 ıª	
$strıª	 Ùæ	
}Ùæ	 ıæ	
,ıæ	 ˆæ	
{ˆæ	 ˜æ	
PackIconKind˜æ	 Éø	
.Éø	 Ñø	
CodeTagsÑø	 åø	
,åø	 çø	
$strçø	 ıø	
}ıø	 ˆø	
,ˆø	 ˜ø	
{˜ø	 ¯ø	
PackIconKind¯ø	 Ñ¿	
.Ñ¿	 Ö¿	
CodeTagsCheckÖ¿	 í¿	
,í¿	 ì¿	
$strì¿	 ”¡	
}”¡	 ‘¡	
,‘¡	 ’¡	
{’¡	 ÷¡	
PackIconKind÷¡	 ‚¡	
.‚¡	 „¡	
Codepen„¡	 Í¡	
,Í¡	 Î¡	
$strÎ¡	 ª∆	
}ª∆	 º∆	
,º∆	 Ω∆	
{Ω∆	 æ∆	
PackIconKindæ∆	  ∆	
. ∆	 À∆	
CoffeeÀ∆	 —∆	
,—∆	 “∆	
$str“∆	 ∆«	
}∆«	 ««	
,««	 »«	
{»«	 …«	
PackIconKind…«	 ’«	
.’«	 ÷«	
CoffeeOutline÷«	 „«	
,„«	 ‰«	
$str‰«	 Ü…	
}Ü…	 á…	
,á…	 à…	
{à…	 â…	
PackIconKindâ…	 ï…	
.ï…	 ñ…	

CoffeeToGoñ…	 †…	
,†…	 °…	
$str°…	 › 	
}› 	 ﬁ 	
,ﬁ 	 ﬂ 	
{ﬂ 	 ‡ 	
PackIconKind‡ 	 Ï 	
.Ï 	 Ì 	
CoinÌ 	 Ò 	
,Ò 	 Ú 	
$strÚ 	 ˇÃ	
}ˇÃ	 ÄÕ	
,ÄÕ	 ÅÕ	
{ÅÕ	 ÇÕ	
PackIconKindÇÕ	 éÕ	
.éÕ	 èÕ	
CoinsèÕ	 îÕ	
,îÕ	 ïÕ	
$strïÕ	 êœ	
}êœ	 ëœ	
,ëœ	 íœ	
{íœ	 ìœ	
PackIconKindìœ	 üœ	
.üœ	 †œ	
Collage†œ	 ßœ	
,ßœ	 ®œ	
$str®œ	 ¶–	
}¶–	 ß–	
,ß–	 ®–	
{®–	 ©–	
PackIconKind©–	 µ–	
.µ–	 ∂–	
ColorHelper∂–	 ¡–	
,¡–	 ¬–	
$str¬–	 ’–	
}’–	 ÷–	
,÷–	 ◊–	
{◊–	 ÿ–	
PackIconKindÿ–	 ‰–	
.‰–	 Â–	
CommentÂ–	 Ï–	
,Ï–	 Ì–	
$strÌ–	 ¸—	
}¸—	 ˝—	
,˝—	 ˛—	
{˛—	 ˇ—	
PackIconKindˇ—	 ã“	
.ã“	 å“	
CommentAccountå“	 ö“	
,ö“	 õ“	
$strõ“	 ©‘	
}©‘	 ™‘	
,™‘	 ´‘	
{´‘	 ¨‘	
PackIconKind¨‘	 ∏‘	
.∏‘	 π‘	%
CommentAccountOutlineπ‘	 Œ‘	
,Œ‘	 œ‘	
$strœ‘	 ˇ÷	
}ˇ÷	 Ä◊	
,Ä◊	 Å◊	
{Å◊	 Ç◊	
PackIconKindÇ◊	 é◊	
.é◊	 è◊	
CommentAlertè◊	 õ◊	
,õ◊	 ú◊	
$strú◊	 Œÿ	
}Œÿ	 œÿ	
,œÿ	 –ÿ	
{–ÿ	 —ÿ	
PackIconKind—ÿ	 ›ÿ	
.›ÿ	 ﬁÿ	#
CommentAlertOutlineﬁÿ	 Òÿ	
,Òÿ	 Úÿ	
$strÚÿ	 ∆⁄	
}∆⁄	 «⁄	
,«⁄	 »⁄	
{»⁄	 …⁄	
PackIconKind…⁄	 ’⁄	
.’⁄	 ÷⁄	
CommentCheck÷⁄	 ‚⁄	
,‚⁄	 „⁄	
$str„⁄	 ¶‹	
}¶‹	 ß‹	
,ß‹	 ®‹	
{®‹	 ©‹	
PackIconKind©‹	 µ‹	
.µ‹	 ∂‹	#
CommentCheckOutline∂‹	 …‹	
,…‹	  ‹	
$str ‹	 ∂ﬁ	
}∂ﬁ	 ∑ﬁ	
,∑ﬁ	 ∏ﬁ	
{∏ﬁ	 πﬁ	
PackIconKindπﬁ	 ≈ﬁ	
.≈ﬁ	 ∆ﬁ	&
CommentMultipleOutline∆ﬁ	 ‹ﬁ	
,‹ﬁ	 ›ﬁ	
$str›ﬁ	 ¥‡	
}¥‡	 µ‡	
,µ‡	 ∂‡	
{∂‡	 ∑‡	
PackIconKind∑‡	 √‡	
.√‡	 ƒ‡	
CommentOutlineƒ‡	 “‡	
,“‡	 ”‡	
$str”‡	 Ñ‚	
}Ñ‚	 Ö‚	
,Ö‚	 Ü‚	
{Ü‚	 á‚	
PackIconKindá‚	 ì‚	
.ì‚	 î‚	"
CommentPlusOutlineî‚	 ¶‚	
,¶‚	 ß‚	
$strß‚	 ˝„	
}˝„	 ˛„	
,˛„	 ˇ„	
{ˇ„	 Ä‰	
PackIconKindÄ‰	 å‰	
.å‰	 ç‰	!
CommentProcessingç‰	 û‰	
,û‰	 ü‰	
$strü‰	 ﬁÂ	
}ﬁÂ	 ﬂÂ	
,ﬂÂ	 ‡Â	
{‡Â	 ·Â	
PackIconKind·Â	 ÌÂ	
.ÌÂ	 ÓÂ	(
CommentProcessingOutlineÓÂ	 ÜÊ	
,ÜÊ	 áÊ	
$stráÊ	 ËÁ	
}ËÁ	 ÈÁ	
,ÈÁ	 ÍÁ	
{ÍÁ	 ÎÁ	
PackIconKindÎÁ	 ˜Á	
.˜Á	 ¯Á	
CommentQuestion¯Á	 áË	
,áË	 àË	
$stràË	 £Ì	
}£Ì	 §Ì	
,§Ì	 •Ì	
{•Ì	 ¶Ì	
PackIconKind¶Ì	 ≤Ì	
.≤Ì	 ≥Ì	&
CommentQuestionOutline≥Ì	 …Ì	
,…Ì	  Ì	
$str Ì	 †Û	
}†Û	 °Û	
,°Û	 ¢Û	
{¢Û	 £Û	
PackIconKind£Û	 ØÛ	
.ØÛ	 ∞Û	
CommentRemove∞Û	 ΩÛ	
,ΩÛ	 æÛ	
$stræÛ	 ∑ı	
}∑ı	 ∏ı	
,∏ı	 πı	
{πı	 ∫ı	
PackIconKind∫ı	 ∆ı	
.∆ı	 «ı	$
CommentRemoveOutline«ı	 €ı	
,€ı	 ‹ı	
$str‹ı	 ˜˜	
}˜˜	 ¯˜	
,¯˜	 ˘˜	
{˘˜	 ˙˜	
PackIconKind˙˜	 Ü¯	
.Ü¯	 á¯	
CommentTextá¯	 í¯	
,í¯	 ì¯	
$strì¯	 Õ˘	
}Õ˘	 Œ˘	
,Œ˘	 œ˘	
{œ˘	 –˘	
PackIconKind–˘	 ‹˘	
.‹˘	 ›˘	"
CommentTextOutline›˘	 Ô˘	
,Ô˘	 ˘	
$str˘	 æ˚	
}æ˚	 ø˚	
,ø˚	 ¿˚	
{¿˚	 ¡˚	
PackIconKind¡˚	 Õ˚	
.Õ˚	 Œ˚	
CompareŒ˚	 ’˚	
,’˚	 ÷˚	
$str÷˚	 ‰¸	
}‰¸	 Â¸	
,Â¸	 Ê¸	
{Ê¸	 Á¸	
PackIconKindÁ¸	 Û¸	
.Û¸	 Ù¸	
CompassÙ¸	 ˚¸	
,˚¸	 ¸¸	
$str¸¸	  ˛	
} ˛	 À˛	
,À˛	 Ã˛	
{Ã˛	 Õ˛	
PackIconKindÕ˛	 Ÿ˛	
.Ÿ˛	 ⁄˛	
CompassOutline⁄˛	 Ë˛	
,Ë˛	 È˛	
$strÈ˛	 ˝Ä

}˝Ä
 ˛Ä

,˛Ä
 ˇÄ

{ˇÄ
 ÄÅ

PackIconKindÄÅ
 åÅ

.åÅ
 çÅ

ConsoleçÅ
 îÅ

,îÅ
 ïÅ

$strïÅ
 ›Ç

}›Ç
 ﬁÇ

,ﬁÇ
 ﬂÇ

{ﬂÇ
 ‡Ç

PackIconKind‡Ç
 ÏÇ

.ÏÇ
 ÌÇ

ConsoleLineÌÇ
 ¯Ç

,¯Ç
 ˘Ç

$str˘Ç
 „É

}„É
 ‰É

,‰É
 ÂÉ

{ÂÉ
 ÊÉ

PackIconKindÊÉ
 ÚÉ

.ÚÉ
 ÛÉ

ContactMailÛÉ
 ˛É

,˛É
 ˇÉ

$strˇÉ
 „Ö

}„Ö
 ‰Ö

,‰Ö
 ÂÖ

{ÂÖ
 ÊÖ

PackIconKindÊÖ
 ÚÖ

.ÚÖ
 ÛÖ

ContactsÛÖ
 ˚Ö

,˚Ö
 ¸Ö

$str¸Ö
 ëà

}ëà
 íà

,íà
 ìà

{ìà
 îà

PackIconKindîà
 †à

.†à
 °à

ContentCopy°à
 ¨à

,¨à
 ≠à

$str≠à
 ©â

}©â
 ™â

,™â
 ´â

{´â
 ¨â

PackIconKind¨â
 ∏â

.∏â
 πâ


ContentCutπâ
 √â

,√â
 ƒâ

$strƒâ
 ≈ç

}≈ç
 ∆ç

,∆ç
 «ç

{«ç
 »ç

PackIconKind»ç
 ‘ç

.‘ç
 ’ç
 
ContentDuplicate’ç
 Âç

,Âç
 Êç

$strÊç
 èè

}èè
 êè

,êè
 ëè

{ëè
 íè

PackIconKindíè
 ûè

.ûè
 üè

ContentPasteüè
 ´è

,´è
 ¨è

$str¨è
 Ñë

}Ñë
 Öë

,Öë
 Üë

{Üë
 áë

PackIconKindáë
 ìë

.ìë
 îë

ContentSaveîë
 üë

,üë
 †ë

$str†ë
 ∏í

}∏í
 πí

,πí
 ∫í

{∫í
 ªí

PackIconKindªí
 «í

.«í
 »í

ContentSaveAll»í
 ÷í

,÷í
 ◊í

$str◊í
 ñî

}ñî
 óî

,óî
 òî

{òî
 ôî

PackIconKindôî
 •î

.•î
 ¶î
"
ContentSaveOutline¶î
 ∏î

,∏î
 πî

$strπî
 Õñ

}Õñ
 Œñ

,Œñ
 œñ

{œñ
 –ñ

PackIconKind–ñ
 ‹ñ

.‹ñ
 ›ñ
#
ContentSaveSettings›ñ
 ñ

,ñ
 Òñ

$strÒñ
 ¿ò

}¿ò
 ¡ò

,¡ò
 ¬ò

{¬ò
 √ò

PackIconKind√ò
 œò

.œò
 –ò

Contrast–ò
 ÿò

,ÿò
 Ÿò

$strŸò
 Ëô

}Ëô
 Èô

,Èô
 Íô

{Íô
 Îô

PackIconKindÎô
 ˜ô

.˜ô
 ¯ô

ContrastBox¯ô
 Éö

,Éö
 Ñö

$strÑö
 £õ

}£õ
 §õ

,§õ
 •õ

{•õ
 ¶õ

PackIconKind¶õ
 ≤õ

.≤õ
 ≥õ

ContrastCircle≥õ
 ¡õ

,¡õ
 ¬õ

$str¬õ
 ¢ù

}¢ù
 £ù

,£ù
 §ù

{§ù
 •ù

PackIconKind•ù
 ±ù

.±ù
 ≤ù

Cookie≤ù
 ∏ù

,∏ù
 πù

$strπù
 ≥¢

}≥¢
 ¥¢

,¥¢
 µ¢

{µ¢
 ∂¢

PackIconKind∂¢
 ¬¢

.¬¢
 √¢

	Copyright√¢
 Ã¢

,Ã¢
 Õ¢

$strÕ¢
 °¨

}°¨
 ¢¨

,¢¨
 £¨

{£¨
 §¨

PackIconKind§¨
 ∞¨

.∞¨
 ±¨

Corn±¨
 µ¨

,µ¨
 ∂¨

$str∂¨
 ÓØ

}ÓØ
 ÔØ

,ÔØ
 Ø

{Ø
 ÒØ

PackIconKindÒØ
 ˝Ø

.˝Ø
 ˛Ø

Counter˛Ø
 Ö∞

,Ö∞
 Ü∞

$strÜ∞
 ûµ

}ûµ
 üµ

,üµ
 †µ

{†µ
 °µ

PackIconKind°µ
 ≠µ

.≠µ
 Æµ

CowÆµ
 ±µ

,±µ
 ≤µ

$str≤µ
 Úæ

}Úæ
 Ûæ

,Ûæ
 Ùæ

{Ùæ
 ıæ

PackIconKindıæ
 Åø

.Åø
 Çø

CreationÇø
 äø

,äø
 ãø

$strãø
 Õ¿

}Õ¿
 Œ¿

,Œ¿
 œ¿

{œ¿
 –¿

PackIconKind–¿
 ‹¿

.‹¿
 ›¿


CreditCard›¿
 Á¿

,Á¿
 Ë¿

$strË¿
 Ÿ¡

}Ÿ¡
 ⁄¡

,⁄¡
 €¡

{€¡
 ‹¡

PackIconKind‹¡
 Ë¡

.Ë¡
 È¡
"
CreditCardMultipleÈ¡
 ˚¡

,˚¡
 ¸¡

$str¸¡
 ï√

}ï√
 ñ√

,ñ√
 ó√

{ó√
 ò√

PackIconKindò√
 §√

.§√
 •√

CreditCardOff•√
 ≤√

,≤√
 ≥√

$str≥√
 ∞≈

}∞≈
 ±≈

,±≈
 ≤≈

{≤≈
 ≥≈

PackIconKind≥≈
 ø≈

.ø≈
 ¿≈

CreditCardPlus¿≈
 Œ≈

,Œ≈
 œ≈

$strœ≈
 ‡∆

}‡∆
 ·∆

,·∆
 ‚∆

{‚∆
 „∆

PackIconKind„∆
 Ô∆

.Ô∆
 ∆

CreditCardScan∆
 ˛∆

,˛∆
 ˇ∆

$strˇ∆
 ˜»

}˜»
 ¯»

,¯»
 ˘»

{˘»
 ˙»

PackIconKind˙»
 Ü…

.Ü…
 á…

Cropá…
 ã…

,ã…
 å…

$strå…
 Ì…

}Ì…
 Ó…

,Ó…
 Ô…

{Ô…
 …

PackIconKind…
 ¸…

.¸…
 ˝…

CropFree˝…
 Ö 

,Ö 
 Ü 

$strÜ 
 îÀ

}îÀ
 ïÀ

,ïÀ
 ñÀ

{ñÀ
 óÀ

PackIconKindóÀ
 £À

.£À
 §À

CropLandscape§À
 ±À

,±À
 ≤À

$str≤À
 íÃ

}íÃ
 ìÃ

,ìÃ
 îÃ

{îÃ
 ïÃ

PackIconKindïÃ
 °Ã

.°Ã
 ¢Ã

CropPortrait¢Ã
 ÆÃ

,ÆÃ
 ØÃ

$strØÃ
 èÕ

}èÕ
 êÕ

,êÕ
 ëÕ

{ëÕ
 íÕ

PackIconKindíÕ
 ûÕ

.ûÕ
 üÕ


CropRotateüÕ
 ©Õ

,©Õ
 ™Õ

$str™Õ
 Ùœ

}Ùœ
 ıœ

,ıœ
 ˆœ

{ˆœ
 ˜œ

PackIconKind˜œ
 É–

.É–
 Ñ–


CropSquareÑ–
 é–

,é–
 è–

$strè–
 Ô–

}Ô–
 –

,–
 Ò–

{Ò–
 Ú–

PackIconKindÚ–
 ˛–

.˛–
 ˇ–


Crosshairsˇ–
 â—

,â—
 ä—

$strä—
 ˆ“

}ˆ“
 ˜“

,˜“
 ¯“

{¯“
 ˘“

PackIconKind˘“
 Ö”

.Ö”
 Ü”

CrosshairsGpsÜ”
 ì”

,ì”
 î”

$strî”
 √’

}√’
 ƒ’

,ƒ’
 ≈’

{≈’
 ∆’

PackIconKind∆’
 “’

.“’
 ”’

Crown”’
 ÿ’

,ÿ’
 Ÿ’

$strŸ’
 ∂÷

}∂÷
 ∑÷

,∑÷
 ∏÷

{∏÷
 π÷

PackIconKindπ÷
 ≈÷

.≈÷
 ∆÷

Cube∆÷
  ÷

, ÷
 À÷

$strÀ÷
 öŸ

}öŸ
 õŸ

,õŸ
 úŸ

{úŸ
 ùŸ

PackIconKindùŸ
 ©Ÿ

.©Ÿ
 ™Ÿ

CubeOutline™Ÿ
 µŸ

,µŸ
 ∂Ÿ

$str∂Ÿ
 œ‹

}œ‹
 –‹

,–‹
 —‹

{—‹
 “‹

PackIconKind“‹
 ﬁ‹

.ﬁ‹
 ﬂ‹

CubeSendﬂ‹
 Á‹

,Á‹
 Ë‹

$strË‹
 óﬁ

}óﬁ
 òﬁ

,òﬁ
 ôﬁ

{ôﬁ
 öﬁ

PackIconKindöﬁ
 ¶ﬁ

.¶ﬁ
 ßﬁ

CubeUnfoldedßﬁ
 ≥ﬁ

,≥ﬁ
 ¥ﬁ

$str¥ﬁ
 ºﬂ

}ºﬂ
 Ωﬂ

,Ωﬂ
 æﬂ

{æﬂ
 øﬂ

PackIconKindøﬂ
 Àﬂ

.Àﬂ
 Ãﬂ

CupÃﬂ
 œﬂ

,œﬂ
 –ﬂ

$str–ﬂ
 ∂‡

}∂‡
 ∑‡

,∑‡
 ∏‡

{∏‡
 π‡

PackIconKindπ‡
 ≈‡

.≈‡
 ∆‡

CupOff∆‡
 Ã‡

,Ã‡
 Õ‡

$strÕ‡
 ˚·

}˚·
 ¸·

,¸·
 ˝·

{˝·
 ˛·

PackIconKind˛·
 ä‚

.ä‚
 ã‚

CupWaterã‚
 ì‚

,ì‚
 î‚

$strî‚
 »„

}»„
 …„

,…„
  „

{ „
 À„

PackIconKindÀ„
 ◊„

.◊„
 ÿ„

CurrencyBtcÿ„
 „„

,„„
 ‰„

$str‰„
 éÊ

}éÊ
 èÊ

,èÊ
 êÊ

{êÊ
 ëÊ

PackIconKindëÊ
 ùÊ

.ùÊ
 ûÊ

CurrencyChfûÊ
 ©Ê

,©Ê
 ™Ê

$str™Ê
 ﬂÊ

}ﬂÊ
 ‡Ê

,‡Ê
 ·Ê

{·Ê
 ‚Ê

PackIconKind‚Ê
 ÓÊ

.ÓÊ
 ÔÊ

CurrencyCnyÔÊ
 ˙Ê

,˙Ê
 ˚Ê

$str˚Ê
 ÙÁ

}ÙÁ
 ıÁ

,ıÁ
 ˆÁ

{ˆÁ
 ˜Á

PackIconKind˜Á
 ÉË

.ÉË
 ÑË

CurrencyEthÑË
 èË

,èË
 êË

$strêË
 ÒË

}ÒË
 ÚË

,ÚË
 ÛË

{ÛË
 ÙË

PackIconKindÙË
 ÄÈ

.ÄÈ
 ÅÈ

CurrencyEurÅÈ
 åÈ

,åÈ
 çÈ

$strçÈ
 ÃÎ

}ÃÎ
 ÕÎ

,ÕÎ
 ŒÎ

{ŒÎ
 œÎ

PackIconKindœÎ
 €Î

.€Î
 ‹Î

CurrencyGbp‹Î
 ÁÎ

,ÁÎ
 ËÎ

$strËÎ
 ”Ô

}”Ô
 ‘Ô

,‘Ô
 ’Ô

{’Ô
 ÷Ô

PackIconKind÷Ô
 ‚Ô

.‚Ô
 „Ô

CurrencyInr„Ô
 ÓÔ

,ÓÔ
 ÔÔ

$strÔÔ
 ∂Ò

}∂Ò
 ∑Ò

,∑Ò
 ∏Ò

{∏Ò
 πÒ

PackIconKindπÒ
 ≈Ò

.≈Ò
 ∆Ò

CurrencyJpy∆Ò
 —Ò

,—Ò
 “Ò

$str“Ò
 ÀÚ

}ÀÚ
 ÃÚ

,ÃÚ
 ÕÚ

{ÕÚ
 ŒÚ

PackIconKindŒÚ
 ⁄Ú

.⁄Ú
 €Ú

CurrencyKrw€Ú
 ÊÚ

,ÊÚ
 ÁÚ

$strÁÚ
 œı

}œı
 –ı

,–ı
 —ı

{—ı
 “ı

PackIconKind“ı
 ﬁı

.ﬁı
 ﬂı

CurrencyNgnﬂı
 Íı

,Íı
 Îı

$strÎı
 §˜

}§˜
 •˜

,•˜
 ¶˜

{¶˜
 ß˜

PackIconKindß˜
 ≥˜

.≥˜
 ¥˜

CurrencyRub¥˜
 ø˜

,ø˜
 ¿˜

$str¿˜
 ’¯

}’¯
 ÷¯

,÷¯
 ◊¯

{◊¯
 ÿ¯

PackIconKindÿ¯
 ‰¯

.‰¯
 Â¯

CurrencySignÂ¯
 Ò¯

,Ò¯
 Ú¯

$strÚ¯
 ¬˚

}¬˚
 √˚

,√˚
 ƒ˚

{ƒ˚
 ≈˚

PackIconKind≈˚
 —˚

.—˚
 “˚

CurrencyTry“˚
 ›˚

,›˚
 ﬁ˚

$strﬁ˚
 ˘¸

}˘¸
 ˙¸

,˙¸
 ˚¸

{˚¸
 ¸¸

PackIconKind¸¸
 à˝

.à˝
 â˝

CurrencyTwdâ˝
 î˝

,î˝
 ï˝

$strï˝
 Ú˝

}Ú˝
 Û˝

,Û˝
 Ù˝

{Ù˝
 ı˝

PackIconKindı˝
 Å˛

.Å˛
 Ç˛

CurrencyUsdÇ˛
 ç˛

,ç˛
 é˛

$stré˛
 ùÅ
}ùÅ ûÅ
,ûÅ üÅ
{üÅ †Å
PackIconKind†Å ¨Å
.¨Å ≠Å
CurrencyUsdOff≠Å ªÅ
,ªÅ ºÅ
$strºÅ «Ñ
}«Ñ »Ñ
,»Ñ …Ñ
{…Ñ  Ñ
PackIconKind Ñ ÷Ñ
.÷Ñ ◊Ñ
CursorDefault◊Ñ ‰Ñ
,‰Ñ ÂÑ
$strÂÑ üá
}üá †á
,†á °á
{°á ¢á
PackIconKind¢á Æá
.Æá Øá$
CursorDefaultOutlineØá √á
,√á ƒá
$strƒá ≠ã
}≠ã Æã
,Æã Øã
{Øã ∞ã
PackIconKind∞ã ºã
.ºã Ωã

CursorMoveΩã «ã
,«ã »ã
$str»ã  å
} å Àå
,Àå Ãå
{Ãå Õå
PackIconKindÕå Ÿå
.Ÿå ⁄å
CursorPointer⁄å Áå
,Áå Ëå
$strËå ¢é
}¢é £é
,£é §é
{§é •é
PackIconKind•é ±é
.±é ≤é

CursorText≤é ºé
,ºé Ωé
$strΩé ãê
}ãê åê
,åê çê
{çê éê
PackIconKindéê öê
.öê õê
Databaseõê £ê
,£ê §ê
$str§ê «í
}«í »í
,»í …í
{…í  í
PackIconKind í ÷í
.÷í ◊í
DatabaseMinus◊í ‰í
,‰í Âí
$strÂí õï
}õï úï
,úï ùï
{ùï ûï
PackIconKindûï ™ï
.™ï ´ï
DatabasePlus´ï ∑ï
,∑ï ∏ï
$str∏ï Üò
}Üò áò
,áò àò
{àò âò
PackIconKindâò ïò
.ïò ñò
DatabaseSearchñò §ò
,§ò •ò
$str•ò Ùú
}Ùú ıú
,ıú ˆú
{ˆú ˜ú
PackIconKind˜ú Éù
.Éù Ñù
DebugStepIntoÑù ëù
,ëù íù
$stríù ùû
}ùû ûû
,ûû üû
{üû †û
PackIconKind†û ¨û
.¨û ≠û
DebugStepOut≠û πû
,πû ∫û
$str∫û ∆ü
}∆ü «ü
,«ü »ü
{»ü …ü
PackIconKind…ü ’ü
.’ü ÷ü
DebugStepOver÷ü „ü
,„ü ‰ü
$str‰ü ÷°
}÷° ◊°
,◊° ÿ°
{ÿ° Ÿ°
PackIconKindŸ° Â°
.Â° Ê°
DecagramÊ° Ó°
,Ó° Ô°
$strÔ° ∂£
}∂£ ∑£
,∑£ ∏£
{∏£ π£
PackIconKindπ£ ≈£
.≈£ ∆£
DecagramOutline∆£ ’£
,’£ ÷£
$str÷£ ‡¶
}‡¶ ·¶
,·¶ ‚¶
{‚¶ „¶
PackIconKind„¶ Ô¶
.Ô¶ ¶
DecimalDecrease¶ ˇ¶
,ˇ¶ Äß
$strÄß Ì®
}Ì® Ó®
,Ó® Ô®
{Ô® ®
PackIconKind® ¸®
.¸® ˝®
DecimalIncrease˝® å©
,å© ç©
$strç© ä¨
}ä¨ ã¨
,ã¨ å¨
{å¨ ç¨
PackIconKindç¨ ô¨
.ô¨ ö¨
Deleteö¨ †¨
,†¨ °¨
$str°¨ Ù¨
}Ù¨ ı¨
,ı¨ ˆ¨
{ˆ¨ ˜¨
PackIconKind˜¨ É≠
.É≠ Ñ≠
DeleteCircleÑ≠ ê≠
,ê≠ ë≠
$strë≠ √Æ
}√Æ ƒÆ
,ƒÆ ≈Æ
{≈Æ ∆Æ
PackIconKind∆Æ “Æ
.“Æ ”Æ
DeleteEmpty”Æ ﬁÆ
,ﬁÆ ﬂÆ
$strﬂÆ ˚Ø
}˚Ø ¸Ø
,¸Ø ˝Ø
{˝Ø ˛Ø
PackIconKind˛Ø ä∞
.ä∞ ã∞
DeleteForeverã∞ ò∞
,ò∞ ô∞
$strô∞ ˚±
}˚± ¸±
,¸± ˝±
{˝± ˛±
PackIconKind˛± ä≤
.ä≤ ã≤
DeleteRestoreã≤ ò≤
,ò≤ ô≤
$strô≤ Ã≥
}Ã≥ Õ≥
,Õ≥ Œ≥
{Œ≥ œ≥
PackIconKindœ≥ €≥
.€≥ ‹≥
DeleteSweep‹≥ Á≥
,Á≥ Ë≥
$strË≥ È¥
}È¥ Í¥
,Í¥ Î¥
{Î¥ Ï¥
PackIconKindÏ¥ ¯¥
.¯¥ ˘¥
DeleteVariant˘¥ Üµ
,Üµ áµ
$stráµ ±∂
}±∂ ≤∂
,≤∂ ≥∂
{≥∂ ¥∂
PackIconKind¥∂ ¿∂
.¿∂ ¡∂
Delta¡∂ ∆∂
,∆∂ «∂
$str«∂ Ù∂
}Ù∂ ı∂
,ı∂ ˆ∂
{ˆ∂ ˜∂
PackIconKind˜∂ É∑
.É∑ Ñ∑
	DeskphoneÑ∑ ç∑
,ç∑ é∑
$stré∑ ãπ
}ãπ åπ
,åπ çπ
{çπ éπ
PackIconKindéπ öπ
.öπ õπ
DesktopClassicõπ ©π
,©π ™π
$str™π Àª
}Àª Ãª
,Ãª Õª
{Õª Œª
PackIconKindŒª ⁄ª
.⁄ª €ª

DesktopMac€ª Âª
,Âª Êª
$strÊª ·º
}·º ‚º
,‚º „º
{„º ‰º
PackIconKind‰º º
.º Òº
DesktopTowerÒº ˝º
,˝º ˛º
$str˛º ˘Ω
}˘Ω ˙Ω
,˙Ω ˚Ω
{˚Ω ¸Ω
PackIconKind¸Ω àæ
.àæ âæ
Detailsâæ êæ
,êæ ëæ
$strëæ øæ
}øæ ¿æ
,¿æ ¡æ
{¡æ ¬æ
PackIconKind¬æ Œæ
.Œæ œæ
DeveloperBoardœæ ›æ
,›æ ﬁæ
$strﬁæ û¿
}û¿ ü¿
,ü¿ †¿
{†¿ °¿
PackIconKind°¿ ≠¿
.≠¿ Æ¿

DeviantartÆ¿ ∏¿
,∏¿ π¿
$strπ¿ Ù¿
}Ù¿ ı¿
,ı¿ ˆ¿
{ˆ¿ ˜¿
PackIconKind˜¿ É¡
.É¡ Ñ¡
DialpadÑ¡ ã¡
,ã¡ å¡
$strå¡ °∆
}°∆ ¢∆
,¢∆ £∆
{£∆ §∆
PackIconKind§∆ ∞∆
.∞∆ ±∆
Diamond±∆ ∏∆
,∏∆ π∆
$strπ∆ ™«
}™« ´«
,´« ¨«
{¨« ≠«
PackIconKind≠« π«
.π« ∫«
Dice1∫« ø«
,ø« ¿«
$str¿« ”»
}”» ‘»
,‘» ’»
{’» ÷»
PackIconKind÷» ‚»
.‚» „»
Dice2„» Ë»
,Ë» È»
$strÈ» ∏ 
}∏  π 
,π  ∫ 
{∫  ª 
PackIconKindª  « 
.«  » 
Dice3»  Õ 
,Õ  Œ 
$strŒ  „Ã
}„Ã ‰Ã
,‰Ã ÂÃ
{ÂÃ ÊÃ
PackIconKindÊÃ ÚÃ
.ÚÃ ÛÃ
Dice4ÛÃ ¯Ã
,¯Ã ˘Ã
$str˘Ã  œ
} œ Àœ
,Àœ Ãœ
{Ãœ Õœ
PackIconKindÕœ Ÿœ
.Ÿœ ⁄œ
Dice5⁄œ ﬂœ
,ﬂœ ‡œ
$str‡œ ˜“
}˜“ ¯“
,¯“ ˘“
{˘“ ˙“
PackIconKind˙“ Ü”
.Ü” á”
Dice6á” å”
,å” ç”
$strç” Â÷
}Â÷ Ê÷
,Ê÷ Á÷
{Á÷ Ë÷
PackIconKindË÷ Ù÷
.Ù÷ ı÷
DiceD10ı÷ ¸÷
,¸÷ ˝÷
$str˝÷ ñ€
}ñ€ ó€
,ó€ ò€
{ò€ ô€
PackIconKindô€ •€
.•€ ¶€
DiceD20¶€ ≠€
,≠€ Æ€
$strÆ€ £‚
}£‚ §‚
,§‚ •‚
{•‚ ¶‚
PackIconKind¶‚ ≤‚
.≤‚ ≥‚
DiceD4≥‚ π‚
,π‚ ∫‚
$str∫‚ ÜÂ
}ÜÂ áÂ
,áÂ àÂ
{àÂ âÂ
PackIconKindâÂ ïÂ
.ïÂ ñÂ
DiceD6ñÂ úÂ
,úÂ ùÂ
$strùÂ ÍË
}ÍË ÎË
,ÎË ÏË
{ÏË ÌË
PackIconKindÌË ˘Ë
.˘Ë ˙Ë
DiceD8˙Ë ÄÈ
,ÄÈ ÅÈ
$strÅÈ ÃÓ
}ÃÓ ÕÓ
,ÕÓ ŒÓ
{ŒÓ œÓ
PackIconKindœÓ €Ó
.€Ó ‹Ó
DiceMultiple‹Ó ËÓ
,ËÓ ÈÓ
$strÈÓ ¡˜
}¡˜ ¬˜
,¬˜ √˜
{√˜ ƒ˜
PackIconKindƒ˜ –˜
.–˜ —˜

Dictionary—˜ €˜
,€˜ ‹˜
$str‹˜ Â˘
}Â˘ Ê˘
,Ê˘ Á˘
{Á˘ Ë˘
PackIconKindË˘ Ù˘
.Ù˘ ı˘
	DipSwitchı˘ ˛˘
,˛˘ ˇ˘
$strˇ˘ ñ¸
}ñ¸ ó¸
,ó¸ ò¸
{ò¸ ô¸
PackIconKindô¸ •¸
.•¸ ¶¸

Directions¶¸ ∞¸
,∞¸ ±¸
$str±¸ ™˛
}™˛ ´˛
,´˛ ¨˛
{¨˛ ≠˛
PackIconKind≠˛ π˛
.π˛ ∫˛
DirectionsFork∫˛ »˛
,»˛ …˛
$str…˛ ÖÄ
}ÖÄ ÜÄ
,ÜÄ áÄ
{áÄ àÄ
PackIconKindàÄ îÄ
.îÄ ïÄ
DiscordïÄ úÄ
,úÄ ùÄ
$strùÄ öá
}öá õá
,õá úá
{úá ùá
PackIconKindùá ©á
.©á ™á
Disk™á Æá
,Æá Øá
$strØá “à
}“à ”à
,”à ‘à
{‘à ’à
PackIconKind’à ·à
.·à ‚à
	DiskAlert‚à Îà
,Îà Ïà
$strÏà ¢ä
}¢ä £ä
,£ä §ä
{§ä •ä
PackIconKind•ä ±ä
.±ä ≤ä
Disqus≤ä ∏ä
,∏ä πä
$strπä äç
}äç ãç
,ãç åç
{åç çç
PackIconKindçç ôç
.ôç öç
DisqusOutlineöç ßç
,ßç ®ç
$str®ç ˚ê
}˚ê ¸ê
,¸ê ˝ê
{˝ê ˛ê
PackIconKind˛ê äë
.äë ãë
Divisionãë ìë
,ìë îë
$strîë Øí
}Øí ∞í
,∞í ±í
{±í ≤í
PackIconKind≤í æí
.æí øí
DivisionBoxøí  í
, í Àí
$strÀí ∫î
}∫î ªî
,ªî ºî
{ºî Ωî
PackIconKindΩî …î
.…î  î
Dna î Õî
,Õî Œî
$strŒî Üõ
}Üõ áõ
,áõ àõ
{àõ âõ
PackIconKindâõ ïõ
.ïõ ñõ
Dnsñõ ôõ
,ôõ öõ
$ströõ ¥ù
}¥ù µù
,µù ∂ù
{∂ù ∑ù
PackIconKind∑ù √ù
.√ù ƒù
DoNotDisturbƒù –ù
,–ù —ù
$str—ù ∞û
}∞û ±û
,±û ≤û
{≤û ≥û
PackIconKind≥û øû
.øû ¿û
DoNotDisturbOff¿û œû
,œû –û
$str–û ‹†
}‹† ›†
,›† ﬁ†
{ﬁ† ﬂ†
PackIconKindﬂ† Î†
.Î† Ï†
DolbyÏ† Ò†
,Ò† Ú†
$strÚ† â¢
}â¢ ä¢
,ä¢ ã¢
{ã¢ å¢
PackIconKindå¢ ò¢
.ò¢ ô¢
Domainô¢ ü¢
,ü¢ †¢
$str†¢ ›£
}›£ ﬁ£
,ﬁ£ ﬂ£
{ﬂ£ ‡£
PackIconKind‡£ Ï£
.Ï£ Ì£
DonkeyÌ£ Û£
,Û£ Ù£
$strÙ£ ˆ¶
}ˆ¶ ˜¶
,˜¶ ¯¶
{¯¶ ˘¶
PackIconKind˘¶ Öß
.Öß Üß
DoorÜß äß
,äß ãß
$strãß „ß
}„ß ‰ß
,‰ß Âß
{Âß Êß
PackIconKindÊß Úß
.Úß Ûß

DoorClosedÛß ˝ß
,˝ß ˛ß
$str˛ß Ë®
}Ë® È®
,È® Í®
{Í® Î®
PackIconKindÎ® ˜®
.˜® ¯®
DoorOpen¯® Ä©
,Ä© Å©
$strÅ© Í©
}Í© Î©
,Î© Ï©
{Ï© Ì©
PackIconKindÌ© ˘©
.˘© ˙©
DotsHorizontal˙© à™
,à™ â™
$strâ™ Ÿ´
}Ÿ´ ⁄´
,⁄´ €´
{€´ ‹´
PackIconKind‹´ Ë´
.Ë´ È´$
DotsHorizontalCircleÈ´ ˝´
,˝´ ˛´
$str˛´ ÎÆ
}ÎÆ ÏÆ
,ÏÆ ÌÆ
{ÌÆ ÓÆ
PackIconKindÓÆ ˙Æ
.˙Æ ˚Æ
DotsVertical˚Æ áØ
,áØ àØ
$stràØ ÿ∞
}ÿ∞ Ÿ∞
,Ÿ∞ ⁄∞
{⁄∞ €∞
PackIconKind€∞ Á∞
.Á∞ Ë∞"
DotsVerticalCircleË∞ ˙∞
,˙∞ ˚∞
$str˚∞ Ë≥
}Ë≥ È≥
,È≥ Í≥
{Í≥ Î≥
PackIconKindÎ≥ ˜≥
.˜≥ ¯≥
Douban¯≥ ˛≥
,˛≥ ˇ≥
$strˇ≥ ¯¥
}¯¥ ˘¥
,˘¥ ˙¥
{˙¥ ˚¥
PackIconKind˚¥ áµ
.áµ àµ
Downloadàµ êµ
,êµ ëµ
$strëµ ºµ
}ºµ Ωµ
,Ωµ æµ
{æµ øµ
PackIconKindøµ Àµ
.Àµ Ãµ
DownloadNetworkÃµ €µ
,€µ ‹µ
$str‹µ ∑∑
}∑∑ ∏∑
,∏∑ π∑
{π∑ ∫∑
PackIconKind∫∑ ∆∑
.∆∑ «∑
Drag«∑ À∑
,À∑ Ã∑
$strÃ∑ èπ
}èπ êπ
,êπ ëπ
{ëπ íπ
PackIconKindíπ ûπ
.ûπ üπ
DragHorizontalüπ ≠π
,≠π Æπ
$strÆπ ‘∫
}‘∫ ’∫
,’∫ ÷∫
{÷∫ ◊∫
PackIconKind◊∫ „∫
.„∫ ‰∫
DragVertical‰∫ ∫
,∫ Ò∫
$strÒ∫ íº
}íº ìº
,ìº îº
{îº ïº
PackIconKindïº °º
.°º ¢º
Drawing¢º ©º
,©º ™º
$str™º ∑Ω
}∑Ω ∏Ω
,∏Ω πΩ
{πΩ ∫Ω
PackIconKind∫Ω ∆Ω
.∆Ω «Ω

DrawingBox«Ω —Ω
,—Ω “Ω
$str“Ω  ø
} ø Àø
,Àø Ãø
{Ãø Õø
PackIconKindÕø Ÿø
.Ÿø ⁄ø
Dribbble⁄ø ‚ø
,‚ø „ø
$str„ø ∫»
}∫» ª»
,ª» º»
{º» Ω»
PackIconKindΩ» …»
.…»  »
DribbbleBox » ’»
,’» ÷»
$str÷» Í–
}Í– Î–
,Î– Ï–
{Ï– Ì–
PackIconKindÌ– ˘–
.˘– ˙–
Drone˙– ˇ–
,ˇ– Ä—
$strÄ— Ä‘
}Ä‘ Å‘
,Å‘ Ç‘
{Ç‘ É‘
PackIconKindÉ‘ è‘
.è‘ ê‘
Dropboxê‘ ó‘
,ó‘ ò‘
$strò‘ ò÷
}ò÷ ô÷
,ô÷ ö÷
{ö÷ õ÷
PackIconKindõ÷ ß÷
.ß÷ ®÷
Drupal®÷ Æ÷
,Æ÷ Ø÷
$strØ÷ ä€
}ä€ ã€
,ã€ å€
{å€ ç€
PackIconKindç€ ô€
.ô€ ö€
Duckö€ û€
,û€ ü€
$strü€ «›
}«› »›
,»› …›
{…›  ›
PackIconKind › ÷›
.÷› ◊›
Dumbbell◊› ﬂ›
,ﬂ› ‡›
$str‡› ê‰
}ê‰ ë‰
,ë‰ í‰
{í‰ ì‰
PackIconKindì‰ ü‰
.ü‰ †‰

EarHearing†‰ ™‰
,™‰ ´‰
$str´‰ ∂È
}∂È ∑È
,∑È ∏È
{∏È πÈ
PackIconKindπÈ ≈È
.≈È ∆È
Earth∆È ÀÈ
,ÀÈ ÃÈ
$strÃÈ ïÏ
}ïÏ ñÏ
,ñÏ óÏ
{óÏ òÏ
PackIconKindòÏ §Ï
.§Ï •Ï
EarthBox•Ï ≠Ï
,≠Ï ÆÏ
$strÆÏ ·Ó
}·Ó ‚Ó
,‚Ó „Ó
{„Ó ‰Ó
PackIconKind‰Ó Ó
.Ó ÒÓ
EarthBoxOffÒÓ ¸Ó
,¸Ó ˝Ó
$str˝Ó íÚ
}íÚ ìÚ
,ìÚ îÚ
{îÚ ïÚ
PackIconKindïÚ °Ú
.°Ú ¢Ú
EarthOff¢Ú ™Ú
,™Ú ´Ú
$str´Ú Ñ˜
}Ñ˜ Ö˜
,Ö˜ Ü˜
{Ü˜ á˜
PackIconKindá˜ ì˜
.ì˜ î˜
Edgeî˜ ò˜
,ò˜ ô˜
$strô˜ Ô¯
}Ô¯ ¯
,¯ Ò¯
{Ò¯ Ú¯
PackIconKindÚ¯ ˛¯
.˛¯ ˇ¯
Ejectˇ¯ Ñ˘
,Ñ˘ Ö˘
$strÖ˘ ´˘
}´˘ ¨˘
,¨˘ ≠˘
{≠˘ Æ˘
PackIconKindÆ˘ ∫˘
.∫˘ ª˘
Elephantª˘ √˘
,√˘ ƒ˘
$strƒ˘ ú˚
}ú˚ ù˚
,ù˚ û˚
{û˚ ü˚
PackIconKindü˚ ´˚
.´˚ ¨˚ 
ElevationDecline¨˚ º˚
,º˚ Ω˚
$strΩ˚ ∂¸
}∂¸ ∑¸
,∑¸ ∏¸
{∏¸ π¸
PackIconKindπ¸ ≈¸
.≈¸ ∆¸
ElevationRise∆¸ ”¸
,”¸ ‘¸
$str‘¸ –˝
}–˝ —˝
,—˝ “˝
{“˝ ”˝
PackIconKind”˝ ﬂ˝
.ﬂ˝ ‡˝
Elevator‡˝ Ë˝
,Ë˝ È˝
$strÈ˝ Äˇ
}Äˇ Åˇ
,Åˇ Çˇ
{Çˇ Éˇ
PackIconKindÉˇ èˇ
.èˇ êˇ
Emailêˇ ïˇ
,ïˇ ñˇ
$strñˇ âÄ
}âÄ äÄ
,äÄ ãÄ
{ãÄ åÄ
PackIconKindåÄ òÄ
.òÄ ôÄ

EmailAlertôÄ £Ä
,£Ä §Ä
$str§Ä ∏Å
}∏Å πÅ
,πÅ ∫Å
{∫Å ªÅ
PackIconKindªÅ «Å
.«Å »Å
	EmailOpen»Å —Å
,—Å “Å
$str“Å ‚Ç
}‚Ç „Ç
,„Ç ‰Ç
{‰Ç ÂÇ
PackIconKindÂÇ ÒÇ
.ÒÇ ÚÇ 
EmailOpenOutlineÚÇ ÇÉ
,ÇÉ ÉÉ
$strÉÉ πÑ
}πÑ ∫Ñ
,∫Ñ ªÑ
{ªÑ ºÑ
PackIconKindºÑ »Ñ
.»Ñ …Ñ
EmailOutline…Ñ ’Ñ
,’Ñ ÷Ñ
$str÷Ñ ﬂÖ
}ﬂÖ ‡Ö
,‡Ö ·Ö
{·Ö ‚Ö
PackIconKind‚Ö ÓÖ
.ÓÖ ÔÖ
EmailSecureÔÖ ˙Ö
,˙Ö ˚Ö
$str˚Ö «à
}«à »à
,»à …à
{…à  à
PackIconKind à ÷à
.÷à ◊à
EmailVariant◊à „à
,„à ‰à
$str‰à ıâ
}ıâ ˆâ
,ˆâ ˜â
{˜â ¯â
PackIconKind¯â Ñä
.Ñä Öä
EmbyÖä âä
,âä ää
$strää Èä
}Èä Íä
,Íä Îä
{Îä Ïä
PackIconKindÏä ¯ä
.¯ä ˘ä
Emoticon˘ä Åã
,Åã Çã
$strÇã îé
}îé ïé
,ïé ñé
{ñé óé
PackIconKindóé £é
.£é §é
EmoticonCool§é ∞é
,∞é ±é
$str±é ∏í
}∏í πí
,πí ∫í
{∫í ªí
PackIconKindªí «í
.«í »í
EmoticonDead»í ‘í
,‘í ’í
$str’í ∑ñ
}∑ñ ∏ñ
,∏ñ πñ
{πñ ∫ñ
PackIconKind∫ñ ∆ñ
.∆ñ «ñ
EmoticonDevil«ñ ‘ñ
,‘ñ ’ñ
$str’ñ Œõ
}Œõ œõ
,œõ –õ
{–õ —õ
PackIconKind—õ ›õ
.›õ ﬁõ
EmoticonExcitedﬁõ Ìõ
,Ìõ Óõ
$strÓõ ÷û
}÷û ◊û
,◊û ÿû
{ÿû Ÿû
PackIconKindŸû Âû
.Âû Êû
EmoticonHappyÊû Ûû
,Ûû Ùû
$strÙû ›¢
}›¢ ﬁ¢
,ﬁ¢ ﬂ¢
{ﬂ¢ ‡¢
PackIconKind‡¢ Ï¢
.Ï¢ Ì¢
EmoticonNeutralÌ¢ ¸¢
,¸¢ ˝¢
$str˝¢ ê¶
}ê¶ ë¶
,ë¶ í¶
{í¶ ì¶
PackIconKindì¶ ü¶
.ü¶ †¶
EmoticonPoop†¶ ¨¶
,¨¶ ≠¶
$str≠¶ ∏¥
}∏¥ π¥
,π¥ ∫¥
{∫¥ ª¥
PackIconKindª¥ «¥
.«¥ »¥
EmoticonSad»¥ ”¥
,”¥ ‘¥
$str‘¥ Æ∏
}Æ∏ Ø∏
,Ø∏ ∞∏
{∞∏ ±∏
PackIconKind±∏ Ω∏
.Ω∏ æ∏
EmoticonTongueæ∏ Ã∏
,Ã∏ Õ∏
$strÕ∏ Ïº
}Ïº Ìº
,Ìº Óº
{Óº Ôº
PackIconKindÔº ˚º
.˚º ¸º
Engine¸º ÇΩ
,ÇΩ ÉΩ
$strÉΩ ﬂΩ
}ﬂΩ ‡Ω
,‡Ω ·Ω
{·Ω ‚Ω
PackIconKind‚Ω ÓΩ
.ÓΩ ÔΩ
EngineOutlineÔΩ ¸Ω
,¸Ω ˝Ω
$str˝Ω Òæ
}Òæ Úæ
,Úæ Ûæ
{Ûæ Ùæ
PackIconKindÙæ Äø
.Äø Åø
EqualÅø Üø
,Üø áø
$stráø ´ø
}´ø ¨ø
,¨ø ≠ø
{≠ø Æø
PackIconKindÆø ∫ø
.∫ø ªø
EqualBoxªø √ø
,√ø ƒø
$strƒø º¿
}º¿ Ω¿
,Ω¿ æ¿
{æ¿ ø¿
PackIconKindø¿ À¿
.À¿ Ã¿
EraserÃ¿ “¿
,“¿ ”¿
$str”¿ ‰¬
}‰¬ Â¬
,Â¬ Ê¬
{Ê¬ Á¬
PackIconKindÁ¬ Û¬
.Û¬ Ù¬
EraserVariantÙ¬ Å√
,Å√ Ç√
$strÇ√ ƒƒ
}ƒƒ ≈ƒ
,≈ƒ ∆ƒ
{∆ƒ «ƒ
PackIconKind«ƒ ”ƒ
.”ƒ ‘ƒ
	Escalator‘ƒ ›ƒ
,›ƒ ﬁƒ
$strﬁƒ  ∆
} ∆ À∆
,À∆ Ã∆
{Ã∆ Õ∆
PackIconKindÕ∆ Ÿ∆
.Ÿ∆ ⁄∆
Ethernet⁄∆ ‚∆
,‚∆ „∆
$str„∆ õ»
}õ» ú»
,ú» ù»
{ù» û»
PackIconKindû» ™»
.™» ´»
EthernetCable´» ∏»
,∏» π»
$strπ» ı»
}ı» ˆ»
,ˆ» ˜»
{˜» ¯»
PackIconKind¯» Ñ…
.Ñ… Ö… 
EthernetCableOffÖ… ï…
,ï… ñ…
$strñ… â 
}â  ä 
,ä  ã 
{ã  å 
PackIconKindå  ò 
.ò  ô 
Etsyô  ù 
,ù  û 
$strû  Ó“
}Ó“ Ô“
,Ô“ “
{“ Ò“
PackIconKindÒ“ ˝“
.˝“ ˛“
	EvStation˛“ á”
,á” à”
$strà” ≤÷
}≤÷ ≥÷
,≥÷ ¥÷
{¥÷ µ÷
PackIconKindµ÷ ¡÷
.¡÷ ¬÷

Eventbrite¬÷ Ã÷
,Ã÷ Õ÷
$strÕ÷ æﬁ
}æﬁ øﬁ
,øﬁ ¿ﬁ
{¿ﬁ ¡ﬁ
PackIconKind¡ﬁ Õﬁ
.Õﬁ Œﬁ
EvernoteŒﬁ ÷ﬁ
,÷ﬁ ◊ﬁ
$str◊ﬁ ÆÂ
}ÆÂ ØÂ
,ØÂ ∞Â
{∞Â ±Â
PackIconKind±Â ΩÂ
.ΩÂ æÂ
ExclamationæÂ …Â
,…Â  Â
$str Â ˚Â
}˚Â ¸Â
,¸Â ˝Â
{˝Â ˛Â
PackIconKind˛Â äÊ
.äÊ ãÊ
	ExitToAppãÊ îÊ
,îÊ ïÊ
$strïÊ ÕÁ
}ÕÁ ŒÁ
,ŒÁ œÁ
{œÁ –Á
PackIconKind–Á ‹Á
.‹Á ›Á
Export›Á „Á
,„Á ‰Á
$str‰Á ‰Ë
}‰Ë ÂË
,ÂË ÊË
{ÊË ÁË
PackIconKindÁË ÛË
.ÛË ÙË
EyeÙË ˜Ë
,˜Ë ¯Ë
$str¯Ë ÎÍ
}ÎÍ ÏÍ
,ÏÍ ÌÍ
{ÌÍ ÓÍ
PackIconKindÓÍ ˙Í
.˙Í ˚Í
EyeOff˚Í ÅÎ
,ÅÎ ÇÎ
$strÇÎ ƒÔ
}ƒÔ ≈Ô
,≈Ô ∆Ô
{∆Ô «Ô
PackIconKind«Ô ”Ô
.”Ô ‘Ô
EyeOffOutline‘Ô ·Ô
,·Ô ‚Ô
$str‚Ô ôÙ
}ôÙ öÙ
,öÙ õÙ
{õÙ úÙ
PackIconKindúÙ ®Ù
.®Ù ©Ù

EyeOutline©Ù ≥Ù
,≥Ù ¥Ù
$str¥Ù ﬂˆ
}ﬂˆ ‡ˆ
,‡ˆ ·ˆ
{·ˆ ‚ˆ
PackIconKind‚ˆ Óˆ
.Óˆ Ôˆ
EyePlusÔˆ ˆˆ
,ˆˆ ˜ˆ
$str˜ˆ Ë˙
}Ë˙ È˙
,È˙ Í˙
{Í˙ Î˙
PackIconKindÎ˙ ˜˙
.˜˙ ¯˙
EyePlusOutline¯˙ Ü˚
,Ü˚ á˚
$strá˚ Üˇ
}Üˇ áˇ
,áˇ àˇ
{àˇ âˇ
PackIconKindâˇ ïˇ
.ïˇ ñˇ

Eyedropperñˇ †ˇ
,†ˇ °ˇ
$str°ˇ ØÅ
}ØÅ ∞Å
,∞Å ±Å
{±Å ≤Å
PackIconKind≤Å æÅ
.æÅ øÅ!
EyedropperVariantøÅ –Å
,–Å —Å
$str—Å µÉ
}µÉ ∂É
,∂É ∑É
{∑É ∏É
PackIconKind∏É ƒÉ
.ƒÉ ≈É
Face≈É …É
,…É  É
$str É ±á
}±á ≤á
,≤á ≥á
{≥á ¥á
PackIconKind¥á ¿á
.¿á ¡á
FaceProfile¡á Ãá
,Ãá Õá
$strÕá ÷ä
}÷ä ◊ä
,◊ä ÿä
{ÿä Ÿä
PackIconKindŸä Âä
.Âä Êä
FacebookÊä Óä
,Óä Ôä
$strÔä œã
}œã –ã
,–ã —ã
{—ã “ã
PackIconKind“ã ﬁã
.ﬁã ﬂã
FacebookBoxﬂã Íã
,Íã Îã
$strÎã ãç
}ãç åç
,åç çç
{çç éç
PackIconKindéç öç
.öç õç!
FacebookMessengerõç ¨ç
,¨ç ≠ç
$str≠ç †è
}†è °è
,°è ¢è
{¢è £è
PackIconKind£è Øè
.Øè ∞è
Factory∞è ∑è
,∑è ∏è
$str∏è øê
}øê ¿ê
,¿ê ¡ê
{¡ê ¬ê
PackIconKind¬ê Œê
.Œê œê
Fanœê “ê
,“ê ”ê
$str”ê éï
}éï èï
,èï êï
{êï ëï
PackIconKindëï ùï
.ùï ûï
FanOffûï §ï
,§ï •ï
$str•ï ıò
}ıò ˆò
,ˆò ˜ò
{˜ò ¯ò
PackIconKind¯ò Ñô
.Ñô Öô
FastForwardÖô êô
,êô ëô
$strëô ∏ô
}∏ô πô
,πô ∫ô
{∫ô ªô
PackIconKindªô «ô
.«ô »ô"
FastForwardOutline»ô ⁄ô
,⁄ô €ô
$str€ô µö
}µö ∂ö
,∂ö ∑ö
{∑ö ∏ö
PackIconKind∏ö ƒö
.ƒö ≈ö
Fax≈ö »ö
,»ö …ö
$str…ö ∫ú
}∫ú ªú
,ªú ºú
{ºú Ωú
PackIconKindΩú …ú
.…ú  ú
Feather ú —ú
,—ú “ú
$str“ú ®ü
}®ü ©ü
,©ü ™ü
{™ü ´ü
PackIconKind´ü ∑ü
.∑ü ∏ü
Ferry∏ü Ωü
,Ωü æü
$stræü —£
}—£ “£
,“£ ”£
{”£ ‘£
PackIconKind‘£ ‡£
.‡£ ·£
File·£ Â£
,Â£ Ê£
$strÊ£ Ω§
}Ω§ æ§
,æ§ ø§
{ø§ ¿§
PackIconKind¿§ Ã§
.Ã§ Õ§
FileAccountÕ§ ÿ§
,ÿ§ Ÿ§
$strŸ§ π¶
}π¶ ∫¶
,∫¶ ª¶
{ª¶ º¶
PackIconKindº¶ »¶
.»¶ …¶
	FileChart…¶ “¶
,“¶ ”¶
$str”¶ Âß
}Âß Êß
,Êß Áß
{Áß Ëß
PackIconKindËß Ùß
.Ùß ıß
	FileCheckıß ˛ß
,˛ß ˇß
$strˇß ¨©
}¨© ≠©
,≠© Æ©
{Æ© Ø©
PackIconKindØ© ª©
.ª© º©
	FileCloudº© ≈©
,≈© ∆©
$str∆© √´
}√´ ƒ´
,ƒ´ ≈´
{≈´ ∆´
PackIconKind∆´ “´
.“´ ”´
FileDelimited”´ ‡´
,‡´ ·´
$str·´ â≠
}â≠ ä≠
,ä≠ ã≠
{ã≠ å≠
PackIconKindå≠ ò≠
.ò≠ ô≠
FileDocumentô≠ •≠
,•≠ ¶≠
$str¶≠ ßÆ
}ßÆ ®Æ
,®Æ ©Æ
{©Æ ™Æ
PackIconKind™Æ ∂Æ
.∂Æ ∑Æ
FileDocumentBox∑Æ ∆Æ
,∆Æ «Æ
$str«Æ ∆Ø
}∆Ø «Ø
,«Ø »Ø
{»Ø …Ø
PackIconKind…Ø ’Ø
.’Ø ÷Ø
	FileExcel÷Ø ﬂØ
,ﬂØ ‡Ø
$str‡Ø ∞±
}∞± ±±
,±± ≤±
{≤± ≥±
PackIconKind≥± ø±
.ø± ¿±
FileExcelBox¿± Ã±
,Ã± Õ±
$strÕ± Ó≤
}Ó≤ Ô≤
,Ô≤ ≤
{≤ Ò≤
PackIconKindÒ≤ ˝≤
.˝≤ ˛≤

FileExport˛≤ à≥
,à≥ â≥
$strâ≥ ù¥
}ù¥ û¥
,û¥ ü¥
{ü¥ †¥
PackIconKind†¥ ¨¥
.¨¥ ≠¥
FileFind≠¥ µ¥
,µ¥ ∂¥
$str∂¥ À∂
}À∂ Ã∂
,Ã∂ Õ∂
{Õ∂ Œ∂
PackIconKindŒ∂ ⁄∂
.⁄∂ €∂

FileHidden€∂ Â∂
,Â∂ Ê∂
$strÊ∂ Õπ
}Õπ Œπ
,Œπ œπ
{œπ –π
PackIconKind–π ‹π
.‹π ›π
	FileImage›π Êπ
,Êπ Áπ
$strÁπ ®ª
}®ª ©ª
,©ª ™ª
{™ª ´ª
PackIconKind´ª ∑ª
.∑ª ∏ª

FileImport∏ª ¬ª
,¬ª √ª
$str√ª ◊º
}◊º ÿº
,ÿº Ÿº
{Ÿº ⁄º
PackIconKind⁄º Êº
.Êº Áº
FileLockÁº Ôº
,Ôº º
$strº ¬æ
}¬æ √æ
,√æ ƒæ
{ƒæ ≈æ
PackIconKind≈æ —æ
.—æ “æ
FileMultiple“æ ﬁæ
,ﬁæ ﬂæ
$strﬂæ ‹ø
}‹ø ›ø
,›ø ﬁø
{ﬁø ﬂø
PackIconKindﬂø Îø
.Îø Ïø
	FileMusicÏø ıø
,ıø ˆø
$strˆø ±¡
}±¡ ≤¡
,≤¡ ≥¡
{≥¡ ¥¡
PackIconKind¥¡ ¿¡
.¿¡ ¡¡
FileOutline¡¡ Ã¡
,Ã¡ Õ¡
$strÕ¡ «¬
}«¬ »¬
,»¬ …¬
{…¬  ¬
PackIconKind ¬ ÷¬
.÷¬ ◊¬
FilePdf◊¬ ﬁ¬
,ﬁ¬ ﬂ¬
$strﬂ¬ ΩÃ
}ΩÃ æÃ
,æÃ øÃ
{øÃ ¿Ã
PackIconKind¿Ã ÃÃ
.ÃÃ ÕÃ

FilePdfBoxÕÃ ◊Ã
,◊Ã ÿÃ
$strÿÃ ‰ÿ
}‰ÿ Âÿ
,Âÿ Êÿ
{Êÿ Áÿ
PackIconKindÁÿ Ûÿ
.Ûÿ Ùÿ
FilePercentÙÿ ˇÿ
,ˇÿ ÄŸ
$strÄŸ º€
}º€ Ω€
,Ω€ æ€
{æ€ ø€
PackIconKindø€ À€
.À€ Ã€
FilePlusÃ€ ‘€
,‘€ ’€
$str’€ €‹
}€‹ ‹‹
,‹‹ ›‹
{›‹ ﬁ‹
PackIconKindﬁ‹ Í‹
.Í‹ Î‹
FilePowerpointÎ‹ ˘‹
,˘‹ ˙‹
$str˙‹ ƒﬁ
}ƒﬁ ≈ﬁ
,≈ﬁ ∆ﬁ
{∆ﬁ «ﬁ
PackIconKind«ﬁ ”ﬁ
.”ﬁ ‘ﬁ!
FilePowerpointBox‘ﬁ Âﬁ
,Âﬁ Êﬁ
$strÊﬁ ’·
}’· ÷·
,÷· ◊·
{◊· ÿ·
PackIconKindÿ· ‰·
.‰· Â·#
FilePresentationBoxÂ· ¯·
,¯· ˘·
$str˘· ›‚
}›‚ ﬁ‚
,ﬁ‚ ﬂ‚
{ﬂ‚ ‡‚
PackIconKind‡‚ Ï‚
.Ï‚ Ì‚
FileQuestionÌ‚ ˘‚
,˘‚ ˙‚
$str˙‚ éÂ
}éÂ èÂ
,èÂ êÂ
{êÂ ëÂ
PackIconKindëÂ ùÂ
.ùÂ ûÂ
FileRestoreûÂ ©Â
,©Â ™Â
$str™Â «Á
}«Á »Á
,»Á …Á
{…Á  Á
PackIconKind Á ÷Á
.÷Á ◊Á
FileSend◊Á ﬂÁ
,ﬂÁ ‡Á
$str‡Á ¸Ë
}¸Ë ˝Ë
,˝Ë ˛Ë
{˛Ë ˇË
PackIconKindˇË ãÈ
.ãÈ åÈ
FileTreeåÈ îÈ
,îÈ ïÈ
$strïÈ ÌÈ
}ÌÈ ÓÈ
,ÓÈ ÔÈ
{ÔÈ È
PackIconKindÈ ¸È
.¸È ˝È
	FileVideo˝È ÜÍ
,ÜÍ áÍ
$stráÍ çÎ
}çÎ éÎ
,éÎ èÎ
{èÎ êÎ
PackIconKindêÎ úÎ
.úÎ ùÎ
FileWordùÎ •Î
,•Î ¶Î
$str¶Î ÎÏ
}ÎÏ ÏÏ
,ÏÏ ÌÏ
{ÌÏ ÓÏ
PackIconKindÓÏ ˙Ï
.˙Ï ˚Ï
FileWordBox˚Ï ÜÌ
,ÜÌ áÌ
$stráÌ ±Ó
}±Ó ≤Ó
,≤Ó ≥Ó
{≥Ó ¥Ó
PackIconKind¥Ó ¿Ó
.¿Ó ¡Ó
FileXml¡Ó »Ó
,»Ó …Ó
$str…Ó ≈
}≈ ∆
,∆ «
{« »
PackIconKind» ‘
.‘ ’
Film’ Ÿ
,Ÿ ⁄
$str⁄ ÔÚ
}ÔÚ Ú
,Ú ÒÚ
{ÒÚ ÚÚ
PackIconKindÚÚ ˛Ú
.˛Ú ˇÚ
	FilmstripˇÚ àÛ
,àÛ âÛ
$strâÛ êÙ
}êÙ ëÙ
,ëÙ íÙ
{íÙ ìÙ
PackIconKindìÙ üÙ
.üÙ †Ù
FilmstripOff†Ù ¨Ù
,¨Ù ≠Ù
$str≠Ù Üˆ
}Üˆ áˆ
,áˆ àˆ
{àˆ âˆ
PackIconKindâˆ ïˆ
.ïˆ ñˆ
Filterñˆ úˆ
,úˆ ùˆ
$strùˆ ›ˆ
}›ˆ ﬁˆ
,ﬁˆ ﬂˆ
{ﬂˆ ‡ˆ
PackIconKind‡ˆ Ïˆ
.Ïˆ Ìˆ
FilterOutlineÌˆ ˙ˆ
,˙ˆ ˚ˆ
$str˚ˆ ˜
}˜ Ò˜
,Ò˜ Ú˜
{Ú˜ Û˜
PackIconKindÛ˜ ˇ˜
.ˇ˜ Ä¯
FilterRemoveÄ¯ å¯
,å¯ ç¯
$strç¯ ⁄˘
}⁄˘ €˘
,€˘ ‹˘
{‹˘ ›˘
PackIconKind›˘ È˘
.È˘ Í˘#
FilterRemoveOutlineÍ˘ ˝˘
,˝˘ ˛˘
$str˛˘ ˇ˚
}ˇ˚ Ä¸
,Ä¸ Å¸
{Å¸ Ç¸
PackIconKindÇ¸ é¸
.é¸ è¸
FilterVariantè¸ ú¸
,ú¸ ù¸
$strù¸  ¸
} ¸ À¸
,À¸ Ã¸
{Ã¸ Õ¸
PackIconKindÕ¸ Ÿ¸
.Ÿ¸ ⁄¸
Finance⁄¸ ·¸
,·¸ ‚¸
$str‚¸ Ï˝
}Ï˝ Ì˝
,Ì˝ Ó˝
{Ó˝ Ô˝
PackIconKindÔ˝ ˚˝
.˚˝ ¸˝
FindReplace¸˝ á˛
,á˛ à˛
$strà˛ ·Ä
}·Ä ‚Ä
,‚Ä „Ä
{„Ä ‰Ä
PackIconKind‰Ä Ä
.Ä ÒÄ
FingerprintÒÄ ¸Ä
,¸Ä ˝Ä
$str˝Ä Ÿê
}Ÿê ⁄ê
,⁄ê €ê
{€ê ‹ê
PackIconKind‹ê Ëê
.Ëê Èê
FireÈê Ìê
,Ìê Óê
$strÓê ‘ì
}‘ì ’ì
,’ì ÷ì
{÷ì ◊ì
PackIconKind◊ì „ì
.„ì ‰ì
Firefox‰ì Îì
,Îì Ïì
$strÏì ò°
}ò° ô°
,ô° ö°
{ö° õ°
PackIconKindõ° ß°
.ß° ®°
Fish®° ¨°
,¨° ≠°
$str≠° ä•
}ä• ã•
,ã• å•
{å• ç•
PackIconKindç• ô•
.ô• ö•
Flagö• û•
,û• ü•
$strü• Õ•
}Õ• Œ•
,Œ• œ•
{œ• –•
PackIconKind–• ‹•
.‹• ›•
FlagCheckered›• Í•
,Í• Î•
$strÎ• ëß
}ëß íß
,íß ìß
{ìß îß
PackIconKindîß †ß
.†ß °ß
FlagOutline°ß ¨ß
,¨ß ≠ß
$str≠ß ˛ß
}˛ß ˇß
,ˇß Ä®
{Ä® Å®
PackIconKindÅ® ç®
.ç® é®
FlagTriangleé® ö®
,ö® õ®
$strõ® ¡®
}¡® ¬®
,¬® √®
{√® ƒ®
PackIconKindƒ® –®
.–® —®
FlagVariant—® ‹®
,‹® ›®
$str›® ı©
}ı© ˆ©
,ˆ© ˜©
{˜© ¯©
PackIconKind¯© Ñ™
.Ñ™ Ö™"
FlagVariantOutlineÖ™ ó™
,ó™ ò™
$strò™ ®¨
}®¨ ©¨
,©¨ ™¨
{™¨ ´¨
PackIconKind´¨ ∑¨
.∑¨ ∏¨
Flash∏¨ Ω¨
,Ω¨ æ¨
$stræ¨ ﬁ¨
}ﬁ¨ ﬂ¨
,ﬂ¨ ‡¨
{‡¨ ·¨
PackIconKind·¨ Ì¨
.Ì¨ Ó¨
	FlashAutoÓ¨ ˜¨
,˜¨ ¯¨
$str¯¨ ﬂ≠
}ﬂ≠ ‡≠
,‡≠ ·≠
{·≠ ‚≠
PackIconKind‚≠ Ó≠
.Ó≠ Ô≠
FlashCircleÔ≠ ˙≠
,˙≠ ˚≠
$str˚≠ ÊØ
}ÊØ ÁØ
,ÁØ ËØ
{ËØ ÈØ
PackIconKindÈØ ıØ
.ıØ ˆØ
FlashOffˆØ ˛Ø
,˛Ø ˇØ
$strˇØ Ê∞
}Ê∞ Á∞
,Á∞ Ë∞
{Ë∞ È∞
PackIconKindÈ∞ ı∞
.ı∞ ˆ∞
FlashOutlineˆ∞ Ç±
,Ç± É±
$strÉ±  ±
} ± À±
,À± Ã±
{Ã± Õ±
PackIconKindÕ± Ÿ±
.Ÿ± ⁄±
FlashRedEye⁄± Â±
,Â± Ê±
$strÊ± €¥
}€¥ ‹¥
,‹¥ ›¥
{›¥ ﬁ¥
PackIconKindﬁ¥ Í¥
.Í¥ Î¥

FlashlightÎ¥ ı¥
,ı¥ ˆ¥
$strˆ¥ Òµ
}Òµ Úµ
,Úµ Ûµ
{Ûµ Ùµ
PackIconKindÙµ Ä∂
.Ä∂ Å∂
FlashlightOffÅ∂ é∂
,é∂ è∂
$strè∂ é∑
}é∑ è∑
,è∑ ê∑
{ê∑ ë∑
PackIconKindë∑ ù∑
.ù∑ û∑
Flaskû∑ £∑
,£∑ §∑
$str§∑ ¨∫
}¨∫ ≠∫
,≠∫ Æ∫
{Æ∫ Ø∫
PackIconKindØ∫ ª∫
.ª∫ º∫

FlaskEmptyº∫ ∆∫
,∆∫ «∫
$str«∫ Åº
}Åº Çº
,Çº Éº
{Éº Ñº
PackIconKindÑº êº
.êº ëº!
FlaskEmptyOutlineëº ¢º
,¢º £º
$str£º ⁄æ
}⁄æ €æ
,€æ ‹æ
{‹æ ›æ
PackIconKind›æ Èæ
.Èæ Íæ
FlaskOutlineÍæ ˆæ
,ˆæ ˜æ
$str˜æ ¿¬
}¿¬ ¡¬
,¡¬ ¬¬
{¬¬ √¬
PackIconKind√¬ œ¬
.œ¬ –¬
Flattr–¬ ÷¬
,÷¬ ◊¬
$str◊¬ Ïƒ
}Ïƒ Ìƒ
,Ìƒ Óƒ
{Óƒ Ôƒ
PackIconKindÔƒ ˚ƒ
.˚ƒ ¸ƒ

FlipToBack¸ƒ Ü≈
,Ü≈ á≈
$strá≈ ˛∆
}˛∆ ˇ∆
,ˇ∆ Ä«
{Ä« Å«
PackIconKindÅ« ç«
.ç« é«
FlipToFronté« ô«
,ô« ö«
$strö« Ô»
}Ô» »
,» Ò»
{Ò» Ú»
PackIconKindÚ» ˛»
.˛» ˇ»
	FloorPlanˇ» à…
,à… â…
$strâ… Ì…
}Ì… Ó…
,Ó… Ô…
{Ô… …
PackIconKind… ¸…
.¸… ˝…
Floppy˝… É 
,É  Ñ 
$strÑ  ƒÀ
}ƒÀ ≈À
,≈À ∆À
{∆À «À
PackIconKind«À ”À
.”À ‘À
Flower‘À ⁄À
,⁄À €À
$str€À Ω—
}Ω— æ—
,æ— ø—
{ø— ¿—
PackIconKind¿— Ã—
.Ã— Õ—
FolderÕ— ”—
,”— ‘—
$str‘— ≥“
}≥“ ¥“
,¥“ µ“
{µ“ ∂“
PackIconKind∂“ ¬“
.¬“ √“
FolderAccount√“ –“
,–“ —“
$str—“ µ‘
}µ‘ ∂‘
,∂‘ ∑‘
{∑‘ ∏‘
PackIconKind∏‘ ƒ‘
.ƒ‘ ≈‘
FolderDownload≈‘ ”‘
,”‘ ‘‘
$str‘‘ ’’
}’’ ÷’
,÷’ ◊’
{◊’ ÿ’
PackIconKindÿ’ ‰’
.‰’ Â’!
FolderGoogleDriveÂ’ ˆ’
,ˆ’ ˜’
$str˜’ ◊◊
}◊◊ ÿ◊
,ÿ◊ Ÿ◊
{Ÿ◊ ⁄◊
PackIconKind⁄◊ Ê◊
.Ê◊ Á◊
FolderImageÁ◊ Ú◊
,Ú◊ Û◊
$strÛ◊ Ìÿ
}Ìÿ Óÿ
,Óÿ Ôÿ
{Ôÿ ÿ
PackIconKindÿ ¸ÿ
.¸ÿ ˝ÿ

FolderLock˝ÿ áŸ
,áŸ àŸ
$stràŸ –⁄
}–⁄ —⁄
,—⁄ “⁄
{“⁄ ”⁄
PackIconKind”⁄ ﬂ⁄
.ﬂ⁄ ‡⁄
FolderLockOpen‡⁄ Ó⁄
,Ó⁄ Ô⁄
$strÔ⁄ ¥‹
}¥‹ µ‹
,µ‹ ∂‹
{∂‹ ∑‹
PackIconKind∑‹ √‹
.√‹ ƒ‹

FolderMoveƒ‹ Œ‹
,Œ‹ œ‹
$strœ‹ »›
}»› …›
,…›  ›
{ › À›
PackIconKindÀ› ◊›
.◊› ÿ›
FolderMultipleÿ› Ê›
,Ê› Á›
$strÁ› ‰ﬁ
}‰ﬁ Âﬁ
,Âﬁ Êﬁ
{Êﬁ Áﬁ
PackIconKindÁﬁ Ûﬁ
.Ûﬁ Ùﬁ#
FolderMultipleImageÙﬁ áﬂ
,áﬂ àﬂ
$stràﬂ ©‡
}©‡ ™‡
,™‡ ´‡
{´‡ ¨‡
PackIconKind¨‡ ∏‡
.∏‡ π‡%
FolderMultipleOutlineπ‡ Œ‡
,Œ‡ œ‡
$strœ‡ ⁄·
}⁄· €·
,€· ‹·
{‹· ›·
PackIconKind›· È·
.È· Í·
FolderNetworkÍ· ˜·
,˜· ¯·
$str¯· Ø„
}Ø„ ∞„
,∞„ ±„
{±„ ≤„
PackIconKind≤„ æ„
.æ„ ø„

FolderOpenø„ …„
,…„  „
$str „ ‘‰
}‘‰ ’‰
,’‰ ÷‰
{÷‰ ◊‰
PackIconKind◊‰ „‰
.„‰ ‰‰
FolderOutline‰‰ Ò‰
,Ò‰ Ú‰
$strÚ‰ ﬁÂ
}ﬁÂ ﬂÂ
,ﬂÂ ‡Â
{‡Â ·Â
PackIconKind·Â ÌÂ
.ÌÂ ÓÂ

FolderPlusÓÂ ¯Â
,¯Â ˘Â
$str˘Â ÄÁ
}ÄÁ ÅÁ
,ÅÁ ÇÁ
{ÇÁ ÉÁ
PackIconKindÉÁ èÁ
.èÁ êÁ
FolderRemoveêÁ úÁ
,úÁ ùÁ
$strùÁ äÈ
}äÈ ãÈ
,ãÈ åÈ
{åÈ çÈ
PackIconKindçÈ ôÈ
.ôÈ öÈ

FolderStaröÈ §È
,§È •È
$str•È ÏÍ
}ÏÍ ÌÍ
,ÌÍ ÓÍ
{ÓÍ ÔÍ
PackIconKindÔÍ ˚Í
.˚Í ¸Í
FolderUpload¸Í àÎ
,àÎ âÎ
$strâÎ ÅÏ
}ÅÏ ÇÏ
,ÇÏ ÉÏ
{ÉÏ ÑÏ
PackIconKindÑÏ êÏ
.êÏ ëÏ
FontAwesomeëÏ úÏ
,úÏ ùÏ
$strùÏ ÀÔ
}ÀÔ ÃÔ
,ÃÔ ÕÔ
{ÕÔ ŒÔ
PackIconKindŒÔ ⁄Ô
.⁄Ô €Ô
Food€Ô ﬂÔ
,ﬂÔ ‡Ô
$str‡Ô ÃÒ
}ÃÒ ÕÒ
,ÕÒ ŒÒ
{ŒÒ œÒ
PackIconKindœÒ €Ò
.€Ò ‹Ò
	FoodApple‹Ò ÂÒ
,ÂÒ ÊÒ
$strÊÒ êÛ
}êÛ ëÛ
,ëÛ íÛ
{íÛ ìÛ
PackIconKindìÛ üÛ
.üÛ †Û
FoodCroissant†Û ≠Û
,≠Û ÆÛ
$strÆÛ ¨Ù
}¨Ù ≠Ù
,≠Ù ÆÙ
{ÆÙ ØÙ
PackIconKindØÙ ªÙ
.ªÙ ºÙ
FoodForkDrinkºÙ …Ù
,…Ù  Ù
$str Ù è¯
}è¯ ê¯
,ê¯ ë¯
{ë¯ í¯
PackIconKindí¯ û¯
.û¯ ü¯
FoodOffü¯ ¶¯
,¶¯ ß¯
$strß¯ ÷˙
}÷˙ ◊˙
,◊˙ ÿ˙
{ÿ˙ Ÿ˙
PackIconKindŸ˙ Â˙
.Â˙ Ê˙
FoodVariantÊ˙ Ò˙
,Ò˙ Ú˙
$strÚ˙ ¬¸
}¬¸ √¸
,√¸ ƒ¸
{ƒ¸ ≈¸
PackIconKind≈¸ —¸
.—¸ “¸
Football“¸ ⁄¸
,⁄¸ €¸
$str€¸ ÷Å
}÷Å ◊Å
,◊Å ÿÅ
{ÿÅ ŸÅ
PackIconKindŸÅ ÂÅ
.ÂÅ ÊÅ"
FootballAustralianÊÅ ¯Å
,¯Å ˘Å
$str˘Å àÜ
}àÜ âÜ
,âÜ äÜ
{äÜ ãÜ
PackIconKindãÜ óÜ
.óÜ òÜ
FootballHelmetòÜ ¶Ü
,¶Ü ßÜ
$strßÜ ¬â
}¬â √â
,√â ƒâ
{ƒâ ≈â
PackIconKind≈â —â
.—â “â
Forklift“â ⁄â
,⁄â €â
$str€â ºå
}ºå Ωå
,Ωå æå
{æå øå
PackIconKindøå Àå
.Àå Ãå!
FormatAlignBottomÃå ›å
,›å ﬁå
$strﬁå ¡ç
}¡ç ¬ç
,¬ç √ç
{√ç ƒç
PackIconKindƒç –ç
.–ç —ç!
FormatAlignCenter—ç ‚ç
,‚ç „ç
$str„ç ∞é
}∞é ±é
,±é ≤é
{≤é ≥é
PackIconKind≥é øé
.øé ¿é"
FormatAlignJustify¿é “é
,“é ”é
$str”é †è
}†è °è
,°è ¢è
{¢è £è
PackIconKind£è Øè
.Øè ∞è
FormatAlignLeft∞è øè
,øè ¿è
$str¿è çê
}çê éê
,éê èê
{èê êê
PackIconKindêê úê
.úê ùê!
FormatAlignMiddleùê Æê
,Æê Øê
$strØê πë
}πë ∫ë
,∫ë ªë
{ªë ºë
PackIconKindºë »ë
.»ë …ë 
FormatAlignRight…ë Ÿë
,Ÿë ⁄ë
$str⁄ë ßí
}ßí ®í
,®í ©í
{©í ™í
PackIconKind™í ∂í
.∂í ∑í
FormatAlignTop∑í ≈í
,≈í ∆í
$str∆í ´ì
}´ì ¨ì
,¨ì ≠ì
{≠ì Æì
PackIconKindÆì ∫ì
.∫ì ªì$
FormatAnnotationPlusªì œì
,œì –ì
$str–ì √î
}√î ƒî
,ƒî ≈î
{≈î ∆î
PackIconKind∆î “î
.“î ”î

FormatBold”î ›î
,›î ﬁî
$strﬁî Íñ
}Íñ Îñ
,Îñ Ïñ
{Ïñ Ìñ
PackIconKindÌñ ˘ñ
.˘ñ ˙ñ
FormatClear˙ñ Öó
,Öó Üó
$strÜó ñò
}ñò óò
,óò òò
{òò ôò
PackIconKindôò •ò
.•ò ¶ò
FormatColorFill¶ò µò
,µò ∂ò
$str∂ò Îö
}Îö Ïö
,Ïö Ìö
{Ìö Óö
PackIconKindÓö ˙ö
.˙ö ˚ö
FormatColorText˚ö äõ
,äõ ãõ
$strãõ ‹õ
}‹õ ›õ
,›õ ﬁõ
{ﬁõ ﬂõ
PackIconKindﬂõ Îõ
.Îõ Ïõ!
FormatFloatCenterÏõ ˝õ
,˝õ ˛õ
$str˛õ ºú
}ºú Ωú
,Ωú æú
{æú øú
PackIconKindøú Àú
.Àú Ãú
FormatFloatLeftÃú €ú
,€ú ‹ú
$str‹ú ∫ù
}∫ù ªù
,ªù ºù
{ºù Ωù
PackIconKindΩù …ù
.…ù  ù
FormatFloatNone ù Ÿù
,Ÿù ⁄ù
$str⁄ù ©û
}©û ™û
,™û ´û
{´û ¨û
PackIconKind¨û ∏û
.∏û πû 
FormatFloatRightπû …û
,…û  û
$str û ßü
}ßü ®ü
,®ü ©ü
{©ü ™ü
PackIconKind™ü ∂ü
.∂ü ∑ü

FormatFont∑ü ¡ü
,¡ü ¬ü
$str¬ü ﬁ†
}ﬁ† ﬂ†
,ﬂ† ‡†
{‡† ·†
PackIconKind·† Ì†
.Ì† Ó†
FormatHeader1Ó† ˚†
,˚† ¸†
$str¸† ‘°
}‘° ’°
,’° ÷°
{÷° ◊°
PackIconKind◊° „°
.„° ‰°
FormatHeader2‰° Ò°
,Ò° Ú°
$strÚ° ÿ£
}ÿ£ Ÿ£
,Ÿ£ ⁄£
{⁄£ €£
PackIconKind€£ Á£
.Á£ Ë£
FormatHeader3Ë£ ı£
,ı£ ˆ£
$strˆ£ ä•
}ä• ã•
,ã• å•
{å• ç•
PackIconKindç• ô•
.ô• ö•
FormatHeader4ö• ß•
,ß• ®•
$str®• å¶
}å¶ ç¶
,ç¶ é¶
{é¶ è¶
PackIconKindè¶ õ¶
.õ¶ ú¶
FormatHeader5ú¶ ©¶
,©¶ ™¶
$str™¶ ‰ß
}‰ß Âß
,Âß Êß
{Êß Áß
PackIconKindÁß Ûß
.Ûß Ùß
FormatHeader6Ùß Å®
,Å® Ç®
$strÇ® ¶©
}¶© ß©
,ß© ®©
{®© ©©
PackIconKind©© µ©
.µ© ∂©$
FormatHeaderDecrease∂©  ©
, © À©
$strÀ© ≠™
}≠™ Æ™
,Æ™ Ø™
{Ø™ ∞™
PackIconKind∞™ º™
.º™ Ω™!
FormatHeaderEqualΩ™ Œ™
,Œ™ œ™
$strœ™ ò´
}ò´ ô´
,ô´ ö´
{ö´ õ´
PackIconKindõ´ ß´
.ß´ ®´$
FormatHeaderIncrease®´ º´
,º´ Ω´
$strΩ´ ü¨
}ü¨ †¨
,†¨ °¨
{°¨ ¢¨
PackIconKind¢¨ Æ¨
.Æ¨ Ø¨!
FormatHeaderPoundØ¨ ¿¨
,¿¨ ¡¨
$str¡¨ ±Æ
}±Æ ≤Æ
,≤Æ ≥Æ
{≥Æ ¥Æ
PackIconKind¥Æ ¿Æ
.¿Æ ¡Æ+
FormatHorizontalAlignCenter¡Æ ‹Æ
,‹Æ ›Æ
$str›Æ ´Ø
}´Ø ¨Ø
,¨Ø ≠Ø
{≠Ø ÆØ
PackIconKindÆØ ∫Ø
.∫Ø ªØ)
FormatHorizontalAlignLeftªØ ‘Ø
,‘Ø ’Ø
$str’Ø Ö∞
}Ö∞ Ü∞
,Ü∞ á∞
{á∞ à∞
PackIconKindà∞ î∞
.î∞ ï∞*
FormatHorizontalAlignRightï∞ Ø∞
,Ø∞ ∞∞
$str∞∞ ‚∞
}‚∞ „∞
,„∞ ‰∞
{‰∞ Â∞
PackIconKindÂ∞ Ò∞
.Ò∞ Ú∞$
FormatIndentDecreaseÚ∞ Ü±
,Ü± á±
$strá± ‹±
}‹± ›±
,›± ﬁ±
{ﬁ± ﬂ±
PackIconKindﬂ± Î±
.Î± Ï±$
FormatIndentIncreaseÏ± Ä≤
,Ä≤ Å≤
$strÅ≤ ÷≤
}÷≤ ◊≤
,◊≤ ÿ≤
{ÿ≤ Ÿ≤
PackIconKindŸ≤ Â≤
.Â≤ Ê≤
FormatItalicÊ≤ Ú≤
,Ú≤ Û≤
$strÛ≤ ¨≥
}¨≥ ≠≥
,≠≥ Æ≥
{Æ≥ Ø≥
PackIconKindØ≥ ª≥
.ª≥ º≥!
FormatLineSpacingº≥ Õ≥
,Õ≥ Œ≥
$strŒ≥ ´¥
}´¥ ¨¥
,¨¥ ≠¥
{≠¥ Æ¥
PackIconKindÆ¥ ∫¥
.∫¥ ª¥
FormatLineStyleª¥  ¥
, ¥ À¥
$strÀ¥ à∂
}à∂ â∂
,â∂ ä∂
{ä∂ ã∂
PackIconKindã∂ ó∂
.ó∂ ò∂ 
FormatLineWeightò∂ ®∂
,®∂ ©∂
$str©∂ È∂
}È∂ Í∂
,Í∂ Î∂
{Î∂ Ï∂
PackIconKindÏ∂ ¯∂
.¯∂ ˘∂"
FormatListBulleted˘∂ ã∑
,ã∑ å∑
$strå∑ »π
}»π …π
,…π  π
{ π Àπ
PackIconKindÀπ ◊π
.◊π ÿπ&
FormatListBulletedTypeÿπ Óπ
,Óπ Ôπ
$strÔπ Éª
}Éª Ñª
,Ñª Öª
{Öª Üª
PackIconKindÜª íª
.íª ìª 
FormatListChecksìª £ª
,£ª §ª
$str§ª òº
}òº ôº
,ôº öº
{öº õº
PackIconKindõº ßº
.ßº ®º!
FormatListNumbers®º πº
,πº ∫º
$str∫º øΩ
}øΩ ¿Ω
,¿Ω ¡Ω
{¡Ω ¬Ω
PackIconKind¬Ω ŒΩ
.ŒΩ œΩ
FormatPageBreakœΩ ﬁΩ
,ﬁΩ ﬂΩ
$strﬂΩ ∆æ
}∆æ «æ
,«æ »æ
{»æ …æ
PackIconKind…æ ’æ
.’æ ÷æ
FormatPaint÷æ ·æ
,·æ ‚æ
$str‚æ Ëø
}Ëø Èø
,Èø Íø
{Íø Îø
PackIconKindÎø ˜ø
.˜ø ¯ø
FormatParagraph¯ø á¿
,á¿ à¿
$strà¿ È¿
}È¿ Í¿
,Í¿ Î¿
{Î¿ Ï¿
PackIconKindÏ¿ ¯¿
.¯¿ ˘¿
FormatPilcrow˘¿ Ü¡
,Ü¡ á¡
$strá¡ …¡
}…¡  ¡
, ¡ À¡
{À¡ Ã¡
PackIconKindÃ¡ ÿ¡
.ÿ¡ Ÿ¡ 
FormatQuoteCloseŸ¡ È¡
,È¡ Í¡
$strÍ¡ ¢¬
}¢¬ £¬
,£¬ §¬
{§¬ •¬
PackIconKind•¬ ±¬
.±¬ ≤¬
FormatQuoteOpen≤¬ ¡¬
,¡¬ ¬¬
$str¬¬ Ä√
}Ä√ Å√
,Å√ Ç√
{Ç√ É√
PackIconKindÉ√ è√
.è√ ê√
FormatRotate90ê√ û√
,û√ ü√
$strü√ ¢∆
}¢∆ £∆
,£∆ §∆
{§∆ •∆
PackIconKind•∆ ±∆
.±∆ ≤∆
FormatSection≤∆ ø∆
,ø∆ ¿∆
$str¿∆ ßÃ
}ßÃ ®Ã
,®Ã ©Ã
{©Ã ™Ã
PackIconKind™Ã ∂Ã
.∂Ã ∑Ã

FormatSize∑Ã ¡Ã
,¡Ã ¬Ã
$str¬Ã ÛÃ
}ÛÃ ÙÃ
,ÙÃ ıÃ
{ıÃ ˆÃ
PackIconKindˆÃ ÇÕ
.ÇÕ ÉÕ#
FormatStrikethroughÉÕ ñÕ
,ñÕ óÕ
$stróÕ œÕ
}œÕ –Õ
,–Õ —Õ
{—Õ “Õ
PackIconKind“Õ ﬁÕ
.ﬁÕ ﬂÕ*
FormatStrikethroughVariantﬂÕ ˘Õ
,˘Õ ˙Õ
$str˙Õ Ï–
}Ï– Ì–
,Ì– Ó–
{Ó– Ô–
PackIconKindÔ– ˚–
.˚– ¸–
FormatSubscript¸– ã—
,ã— å—
$strå— Œ’
}Œ’ œ’
,œ’ –’
{–’ —’
PackIconKind—’ ›’
.›’ ﬁ’!
FormatSuperscriptﬁ’ Ô’
,Ô’ ’
$str’ ıŸ
}ıŸ ˆŸ
,ˆŸ ˜Ÿ
{˜Ÿ ¯Ÿ
PackIconKind¯Ÿ Ñ⁄
.Ñ⁄ Ö⁄

FormatTextÖ⁄ è⁄
,è⁄ ê⁄
$strê⁄ ¨‹
}¨‹ ≠‹
,≠‹ Æ‹
{Æ‹ Ø‹
PackIconKindØ‹ ª‹
.ª‹ º‹'
FormatTextdirectionLToRº‹ ”‹
,”‹ ‘‹
$str‘‹ ≠›
}≠› Æ›
,Æ› Ø›
{Ø› ∞›
PackIconKind∞› º›
.º› Ω›'
FormatTextdirectionRToLΩ› ‘›
,‘› ’›
$str’› ≤ﬁ
}≤ﬁ ≥ﬁ
,≥ﬁ ¥ﬁ
{¥ﬁ µﬁ
PackIconKindµﬁ ¡ﬁ
.¡ﬁ ¬ﬁ
FormatTitle¬ﬁ Õﬁ
,Õﬁ Œﬁ
$strŒﬁ Ìﬁ
}Ìﬁ Óﬁ
,Óﬁ Ôﬁ
{Ôﬁ ﬁ
PackIconKindﬁ ¸ﬁ
.¸ﬁ ˝ﬁ
FormatUnderline˝ﬁ åﬂ
,åﬂ çﬂ
$strçﬂ Ç‡
}Ç‡ É‡
,É‡ Ñ‡
{Ñ‡ Ö‡
PackIconKindÖ‡ ë‡
.ë‡ í‡)
FormatVerticalAlignBottomí‡ ´‡
,´‡ ¨‡
$str¨‡ ﬁ‡
}ﬁ‡ ﬂ‡
,ﬂ‡ ‡‡
{‡‡ ·‡
PackIconKind·‡ Ì‡
.Ì‡ Ó‡)
FormatVerticalAlignCenterÓ‡ á·
,á· à·
$strà· ’·
}’· ÷·
,÷· ◊·
{◊· ÿ·
PackIconKindÿ· ‰·
.‰· Â·&
FormatVerticalAlignTopÂ· ˚·
,˚· ¸·
$str¸· ™‚
}™‚ ´‚
,´‚ ¨‚
{¨‚ ≠‚
PackIconKind≠‚ π‚
.π‚ ∫‚ 
FormatWrapInline∫‚  ‚
, ‚ À‚
$strÀ‚ ç„
}ç„ é„
,é„ è„
{è„ ê„
PackIconKindê„ ú„
.ú„ ù„ 
FormatWrapSquareù„ ≠„
,≠„ Æ„
$strÆ„ Ω‰
}Ω‰ æ‰
,æ‰ ø‰
{ø‰ ¿‰
PackIconKind¿‰ Ã‰
.Ã‰ Õ‰
FormatWrapTightÕ‰ ‹‰
,‹‰ ›‰
$str›‰ ÏÂ
}ÏÂ ÌÂ
,ÌÂ ÓÂ
{ÓÂ ÔÂ
PackIconKindÔÂ ˚Â
.˚Â ¸Â#
FormatWrapTopBottom¸Â èÊ
,èÊ êÊ
$strêÊ ¬Ê
}¬Ê √Ê
,√Ê ƒÊ
{ƒÊ ≈Ê
PackIconKind≈Ê —Ê
.—Ê “Ê
Forum“Ê ◊Ê
,◊Ê ÿÊ
$strÿÊ ÷Á
}÷Á ◊Á
,◊Á ÿÁ
{ÿÁ ŸÁ
PackIconKindŸÁ ÂÁ
.ÂÁ ÊÁ
ForumOutlineÊÁ ÚÁ
,ÚÁ ÛÁ
$strÛÁ íÈ
}íÈ ìÈ
,ìÈ îÈ
{îÈ ïÈ
PackIconKindïÈ °È
.°È ¢È
Forward¢È ©È
,©È ™È
$str™È  È
} È ÀÈ
,ÀÈ ÃÈ
{ÃÈ ÕÈ
PackIconKindÕÈ ŸÈ
.ŸÈ ⁄È

Foursquare⁄È ‰È
,‰È ÂÈ
$strÂÈ „Ô
}„Ô ‰Ô
,‰Ô ÂÔ
{ÂÔ ÊÔ
PackIconKindÊÔ ÚÔ
.ÚÔ ÛÔ
FridgeÛÔ ˘Ô
,˘Ô ˙Ô
$str˙Ô ìÒ
}ìÒ îÒ
,îÒ ïÒ
{ïÒ ñÒ
PackIconKindñÒ ¢Ò
.¢Ò £Ò
FridgeFilled£Ò ØÒ
,ØÒ ∞Ò
$str∞Ò ªÚ
}ªÚ ºÚ
,ºÚ ΩÚ
{ΩÚ æÚ
PackIconKindæÚ  Ú
. Ú ÀÚ"
FridgeFilledBottomÀÚ ›Ú
,›Ú ﬁÚ
$strﬁÚ ÊÛ
}ÊÛ ÁÛ
,ÁÛ ËÛ
{ËÛ ÈÛ
PackIconKindÈÛ ıÛ
.ıÛ ˆÛ
FridgeFilledTopˆÛ ÖÙ
,ÖÙ ÜÙ
$strÜÙ ëı
}ëı íı
,íı ìı
{ìı îı
PackIconKindîı †ı
.†ı °ı
Fuel°ı •ı
,•ı ¶ı
$str¶ı ¨¯
}¨¯ ≠¯
,≠¯ Æ¯
{Æ¯ Ø¯
PackIconKindØ¯ ª¯
.ª¯ º¯

Fullscreenº¯ ∆¯
,∆¯ «¯
$str«¯ ü˘
}ü˘ †˘
,†˘ °˘
{°˘ ¢˘
PackIconKind¢˘ Æ˘
.Æ˘ Ø˘
FullscreenExitØ˘ Ω˘
,Ω˘ æ˘
$stræ˘ ï˙
}ï˙ ñ˙
,ñ˙ ó˙
{ó˙ ò˙
PackIconKindò˙ §˙
.§˙ •˙
Function•˙ ≠˙
,≠˙ Æ˙
$strÆ˙ â˝
}â˝ ä˝
,ä˝ ã˝
{ã˝ å˝
PackIconKindå˝ ò˝
.ò˝ ô˝
FunctionVariantô˝ ®˝
,®˝ ©˝
$str©˝ âÅ
}âÅ äÅ
,äÅ ãÅ
{ãÅ åÅ
PackIconKindåÅ òÅ
.òÅ ôÅ
GamepadôÅ †Å
,†Å °Å
$str°Å èÇ
}èÇ êÇ
,êÇ ëÇ
{ëÇ íÇ
PackIconKindíÇ ûÇ
.ûÇ üÇ
GamepadVariantüÇ ≠Ç
,≠Ç ÆÇ
$strÆÇ íÖ
}íÖ ìÖ
,ìÖ îÖ
{îÖ ïÖ
PackIconKindïÖ °Ö
.°Ö ¢Ö
Garage¢Ö ®Ö
,®Ö ©Ö
$str©Ö ˇÖ
}ˇÖ ÄÜ
,ÄÜ ÅÜ
{ÅÜ ÇÜ
PackIconKindÇÜ éÜ
.éÜ èÜ

GarageOpenèÜ ôÜ
,ôÜ öÜ
$ströÜ œÜ
}œÜ –Ü
,–Ü —Ü
{—Ü “Ü
PackIconKind“Ü ﬁÜ
.ﬁÜ ﬂÜ
GasCylinderﬂÜ ÍÜ
,ÍÜ ÎÜ
$strÎÜ Èá
}Èá Íá
,Íá Îá
{Îá Ïá
PackIconKindÏá ¯á
.¯á ˘á

GasStation˘á Éà
,Éà Ñà
$strÑà ¨ã
}¨ã ≠ã
,≠ã Æã
{Æã Øã
PackIconKindØã ªã
.ªã ºã
Gateºã ¿ã
,¿ã ¡ã
$str¡ã ëç
}ëç íç
,íç ìç
{ìç îç
PackIconKindîç †ç
.†ç °ç
Gauge°ç ¶ç
,¶ç ßç
$strßç ÷ë
}÷ë ◊ë
,◊ë ÿë
{ÿë Ÿë
PackIconKindŸë Âë
.Âë Êë
GavelÊë Îë
,Îë Ïë
$strÏë ›ñ
}›ñ ﬁñ
,ﬁñ ﬂñ
{ﬂñ ‡ñ
PackIconKind‡ñ Ïñ
.Ïñ Ìñ
GenderFemaleÌñ ˘ñ
,˘ñ ˙ñ
$str˙ñ Ωò
}Ωò æò
,æò øò
{øò ¿ò
PackIconKind¿ò Ãò
.Ãò Õò

GenderMaleÕò ◊ò
,◊ò ÿò
$strÿò ™ö
}™ö ´ö
,´ö ¨ö
{¨ö ≠ö
PackIconKind≠ö πö
.πö ∫ö 
GenderMaleFemale∫ö  ö
, ö Àö
$strÀö ÷ú
}÷ú ◊ú
,◊ú ÿú
{ÿú Ÿú
PackIconKindŸú Âú
.Âú Êú!
GenderTransgenderÊú ˜ú
,˜ú ¯ú
$str¯ú é†
}é† è†
,è† ê†
{ê† ë†
PackIconKindë† ù†
.ù† û†
Gestureû† •†
,•† ¶†
$str¶† ∑¶
}∑¶ ∏¶
,∏¶ π¶
{π¶ ∫¶
PackIconKind∫¶ ∆¶
.∆¶ «¶ 
GestureDoubleTap«¶ ◊¶
,◊¶ ÿ¶
$strÿ¶ ≠´
}≠´ Æ´
,Æ´ Ø´
{Ø´ ∞´
PackIconKind∞´ º´
.º´ Ω´ 
GestureSwipeDownΩ´ Õ´
,Õ´ Œ´
$strŒ´ Ã≠
}Ã≠ Õ≠
,Õ≠ Œ≠
{Œ≠ œ≠
PackIconKindœ≠ €≠
.€≠ ‹≠ 
GestureSwipeLeft‹≠ Ï≠
,Ï≠ Ì≠
$strÌ≠ ÎØ
}ÎØ ÏØ
,ÏØ ÌØ
{ÌØ ÓØ
PackIconKindÓØ ˙Ø
.˙Ø ˚Ø!
GestureSwipeRight˚Ø å∞
,å∞ ç∞
$strç∞ å≤
}å≤ ç≤
,ç≤ é≤
{é≤ è≤
PackIconKindè≤ õ≤
.õ≤ ú≤
GestureSwipeUpú≤ ™≤
,™≤ ´≤
$str´≤ ©¥
}©¥ ™¥
,™¥ ´¥
{´¥ ¨¥
PackIconKind¨¥ ∏¥
.∏¥ π¥

GestureTapπ¥ √¥
,√¥ ƒ¥
$strƒ¥ €∑
}€∑ ‹∑
,‹∑ ›∑
{›∑ ﬁ∑
PackIconKindﬁ∑ Í∑
.Í∑ Î∑#
GestureTwoDoubleTapÎ∑ ˛∑
,˛∑ ˇ∑
$strˇ∑ ÍΩ
}ÍΩ ÎΩ
,ÎΩ ÏΩ
{ÏΩ ÌΩ
PackIconKindÌΩ ˘Ω
.˘Ω ˙Ω
GestureTwoTap˙Ω áæ
,áæ àæ
$stràæ ∏√
}∏√ π√
,π√ ∫√
{∫√ ª√
PackIconKindª√ «√
.«√ »√
Ghost»√ Õ√
,Õ√ Œ√
$strŒ√ †≈
}†≈ °≈
,°≈ ¢≈
{¢≈ £≈
PackIconKind£≈ Ø≈
.Ø≈ ∞≈
Gift∞≈ ¥≈
,¥≈ µ≈
$strµ≈ Å…
}Å… Ç…
,Ç… É…
{É… Ñ…
PackIconKindÑ… ê…
.ê… ë…
Gitë… î…
,î… ï…
$strï… §Õ
}§Õ •Õ
,•Õ ¶Õ
{¶Õ ßÕ
PackIconKindßÕ ≥Õ
.≥Õ ¥Õ
	GithubBox¥Õ ΩÕ
,ΩÕ æÕ
$stræÕ á”
}á” à”
,à” â”
{â” ä”
PackIconKindä” ñ”
.ñ” ó”
GithubCircleó” £”
,£” §”
$str§” ëŸ
}ëŸ íŸ
,íŸ ìŸ
{ìŸ îŸ
PackIconKindîŸ †Ÿ
.†Ÿ °Ÿ

GithubFace°Ÿ ´Ÿ
,´Ÿ ¨Ÿ
$str¨Ÿ  ﬂ
} ﬂ Àﬂ
,Àﬂ Ãﬂ
{Ãﬂ Õﬂ
PackIconKindÕﬂ Ÿﬂ
.Ÿﬂ ⁄ﬂ

GlassFlute⁄ﬂ ‰ﬂ
,‰ﬂ Âﬂ
$strÂﬂ ‚‚
}‚‚ „‚
,„‚ ‰‚
{‰‚ Â‚
PackIconKindÂ‚ Ò‚
.Ò‚ Ú‚
GlassMugÚ‚ ˙‚
,˙‚ ˚‚
$str˚‚ ì‰
}ì‰ î‰
,î‰ ï‰
{ï‰ ñ‰
PackIconKindñ‰ ¢‰
.¢‰ £‰
GlassStange£‰ Æ‰
,Æ‰ Ø‰
$strØ‰ œ‰
}œ‰ –‰
,–‰ —‰
{—‰ “‰
PackIconKind“‰ ﬁ‰
.ﬁ‰ ﬂ‰

GlassTulipﬂ‰ È‰
,È‰ Í‰
$strÍ‰ ©Ë
}©Ë ™Ë
,™Ë ´Ë
{´Ë ¨Ë
PackIconKind¨Ë ∏Ë
.∏Ë πË
	GlassdoorπË ¬Ë
,¬Ë √Ë
$str√Ë ™È
}™È ´È
,´È ¨È
{¨È ≠È
PackIconKind≠È πÈ
.πÈ ∫È
Glasses∫È ¡È
,¡È ¬È
$str¬È ≈
}≈ ∆
,∆ «
{« »
PackIconKind» ‘
.‘ ’
Gmail’ ⁄
,⁄ €
$str€ ÎÒ
}ÎÒ ÏÒ
,ÏÒ ÌÒ
{ÌÒ ÓÒ
PackIconKindÓÒ ˙Ò
.˙Ò ˚Ò
Gnome˚Ò ÄÚ
,ÄÚ ÅÚ
$strÅÚ ”ˆ
}”ˆ ‘ˆ
,‘ˆ ’ˆ
{’ˆ ÷ˆ
PackIconKind÷ˆ ‚ˆ
.‚ˆ „ˆ
Golf„ˆ Áˆ
,Áˆ Ëˆ
$strËˆ À¯
}À¯ Ã¯
,Ã¯ Õ¯
{Õ¯ Œ¯
PackIconKindŒ¯ ⁄¯
.⁄¯ €¯
Gondola€¯ ‚¯
,‚¯ „¯
$str„¯ §¸
}§¸ •¸
,•¸ ¶¸
{¶¸ ß¸
PackIconKindß¸ ≥¸
.≥¸ ¥¸
Google¥¸ ∫¸
,∫¸ ª¸
$strª¸ ‰˛
}‰˛ Â˛
,Â˛ Ê˛
{Ê˛ Á˛
PackIconKindÁ˛ Û˛
.Û˛ Ù˛
GoogleAnalyticsÙ˛ Éˇ
,Éˇ Ñˇ
$strÑˇ îÄ
}îÄ ïÄ
,ïÄ ñÄ
{ñÄ óÄ
PackIconKindóÄ £Ä
.£Ä §Ä
GoogleAssistant§Ä ≥Ä
,≥Ä ¥Ä
$str¥Ä ÁÇ
}ÁÇ ËÇ
,ËÇ ÈÇ
{ÈÇ ÍÇ
PackIconKindÍÇ ˆÇ
.ˆÇ ˜Ç
GoogleCardboard˜Ç ÜÉ
,ÜÉ áÉ
$stráÉ îá
}îá ïá
,ïá ñá
{ñá óá
PackIconKindóá £á
.£á §á
GoogleChrome§á ∞á
,∞á ±á
$str±á ¢ã
}¢ã £ã
,£ã §ã
{§ã •ã
PackIconKind•ã ±ã
.±ã ≤ã
GoogleCircles≤ã øã
,øã ¿ã
$str¿ã îé
}îé ïé
,ïé ñé
{ñé óé
PackIconKindóé £é
.£é §é(
GoogleCirclesCommunities§é ºé
,ºé Ωé
$strΩé ∫ë
}∫ë ªë
,ªë ºë
{ºë Ωë
PackIconKindΩë …ë
.…ë  ë%
GoogleCirclesExtended ë ﬂë
,ﬂë ‡ë
$str‡ë ˙ï
}˙ï ˚ï
,˚ï ¸ï
{¸ï ˝ï
PackIconKind˝ï âñ
.âñ äñ"
GoogleCirclesGroupäñ úñ
,úñ ùñ
$strùñ Ôô
}Ôô ô
,ô Òô
{Òô Úô
PackIconKindÚô ˛ô
.˛ô ˇô 
GoogleControllerˇô èö
,èö êö
$strêö Ÿü
}Ÿü ⁄ü
,⁄ü €ü
{€ü ‹ü
PackIconKind‹ü Ëü
.Ëü Èü#
GoogleControllerOffÈü ¸ü
,¸ü ˝ü
$str˝ü ‹•
}‹• ›•
,›• ﬁ•
{ﬁ• ﬂ•
PackIconKindﬂ• Î•
.Î• Ï•
GoogleDriveÏ• ˜•
,˜• ¯•
$str¯• Ë¶
}Ë¶ È¶
,È¶ Í¶
{Í¶ Î¶
PackIconKindÎ¶ ˜¶
.˜¶ ¯¶
GoogleEarth¯¶ Éß
,Éß Ñß
$strÑß ÿ¨
}ÿ¨ Ÿ¨
,Ÿ¨ ⁄¨
{⁄¨ €¨
PackIconKind€¨ Á¨
.Á¨ Ë¨
GoogleGlassË¨ Û¨
,Û¨ Ù¨
$strÙ¨ “Æ
}“Æ ”Æ
,”Æ ‘Æ
{‘Æ ’Æ
PackIconKind’Æ ·Æ
.·Æ ‚Æ

GoogleHome‚Æ ÏÆ
,ÏÆ ÌÆ
$strÌÆ Óµ
}Óµ Ôµ
,Ôµ µ
{µ Òµ
PackIconKindÒµ ˝µ
.˝µ ˛µ

GoogleKeep˛µ à∂
,à∂ â∂
$strâ∂ ÿ∏
}ÿ∏ Ÿ∏
,Ÿ∏ ⁄∏
{⁄∏ €∏
PackIconKind€∏ Á∏
.Á∏ Ë∏

GoogleMapsË∏ Ú∏
,Ú∏ Û∏
$strÛ∏ Íº
}Íº Îº
,Îº Ïº
{Ïº Ìº
PackIconKindÌº ˘º
.˘º ˙º
GoogleNearby˙º ÜΩ
,ÜΩ áΩ
$stráΩ êø
}êø ëø
,ëø íø
{íø ìø
PackIconKindìø üø
.üø †ø
GooglePages†ø ´ø
,´ø ¨ø
$str¨ø —¿
}—¿ “¿
,“¿ ”¿
{”¿ ‘¿
PackIconKind‘¿ ‡¿
.‡¿ ·¿
GooglePhotos·¿ Ì¿
,Ì¿ Ó¿
$strÓ¿ ˇ¡
}ˇ¡ Ä¬
,Ä¬ Å¬
{Å¬ Ç¬
PackIconKindÇ¬ é¬
.é¬ è¬!
GooglePhysicalWebè¬ †¬
,†¬ °¬
$str°¬ ß«
}ß« ®«
,®« ©«
{©« ™«
PackIconKind™« ∂«
.∂« ∑«

GooglePlay∑« ¡«
,¡« ¬«
$str¬« È…
}È… Í…
,Í… Î…
{Î… Ï…
PackIconKindÏ… ¯…
.¯… ˘…

GooglePlus˘… É 
,É  Ñ 
$strÑ  ñÃ
}ñÃ óÃ
,óÃ òÃ
{òÃ ôÃ
PackIconKindôÃ •Ã
.•Ã ¶Ã
GooglePlusBox¶Ã ≥Ã
,≥Ã ¥Ã
$str¥Ã ˜œ
}˜œ ¯œ
,¯œ ˘œ
{˘œ ˙œ
PackIconKind˙œ Ü–
.Ü– á–
GoogleTranslateá– ñ–
,ñ– ó–
$stró– ™÷
}™÷ ´÷
,´÷ ¨÷
{¨÷ ≠÷
PackIconKind≠÷ π÷
.π÷ ∫÷
GoogleWallet∫÷ ∆÷
,∆÷ «÷
$str«÷ ﬂÿ
}ﬂÿ ‡ÿ
,‡ÿ ·ÿ
{·ÿ ‚ÿ
PackIconKind‚ÿ Óÿ
.Óÿ Ôÿ
GradientÔÿ ˜ÿ
,˜ÿ ¯ÿ
$str¯ÿ ê€
}ê€ ë€
,ë€ í€
{í€ ì€
PackIconKindì€ ü€
.ü€ †€
GreasePencil†€ ¨€
,¨€ ≠€
$str≠€ Ú›
}Ú› Û›
,Û› Ù›
{Ù› ı›
PackIconKindı› Åﬁ
.Åﬁ Çﬁ
GridÇﬁ Üﬁ
,Üﬁ áﬁ
$stráﬁ Èﬂ
}Èﬂ Íﬂ
,Íﬂ Îﬂ
{Îﬂ Ïﬂ
PackIconKindÏﬂ ¯ﬂ
.¯ﬂ ˘ﬂ
	GridLarge˘ﬂ Ç‡
,Ç‡ É‡
$strÉ‡ ï·
}ï· ñ·
,ñ· ó·
{ó· ò·
PackIconKindò· §·
.§· •·
GridOff•· ¨·
,¨· ≠·
$str≠· ò‰
}ò‰ ô‰
,ô‰ ö‰
{ö‰ õ‰
PackIconKindõ‰ ß‰
.ß‰ ®‰
Group®‰ ≠‰
,≠‰ Æ‰
$strÆ‰ …Â
}…Â  Â
, Â ÀÂ
{ÀÂ ÃÂ
PackIconKindÃÂ ÿÂ
.ÿÂ ŸÂ
GuitarAcousticŸÂ ÁÂ
,ÁÂ ËÂ
$strËÂ ∆Ë
}∆Ë «Ë
,«Ë »Ë
{»Ë …Ë
PackIconKind…Ë ’Ë
.’Ë ÷Ë
GuitarElectric÷Ë ‰Ë
,‰Ë ÂË
$strÂË âÏ
}âÏ äÏ
,äÏ ãÏ
{ãÏ åÏ
PackIconKindåÏ òÏ
.òÏ ôÏ

GuitarPickôÏ £Ï
,£Ï §Ï
$str§Ï ªÓ
}ªÓ ºÓ
,ºÓ ΩÓ
{ΩÓ æÓ
PackIconKindæÓ  Ó
. Ó ÀÓ!
GuitarPickOutlineÀÓ ‹Ó
,‹Ó ›Ó
$str›Ó ÷Û
}÷Û ◊Û
,◊Û ÿÛ
{ÿÛ ŸÛ
PackIconKindŸÛ ÂÛ
.ÂÛ ÊÛ
GuyFawkesMaskÊÛ ÛÛ
,ÛÛ ÙÛ
$strÙÛ è¯
}è¯ ê¯
,ê¯ ë¯
{ë¯ í¯
PackIconKindí¯ û¯
.û¯ ü¯

Hackernewsü¯ ©¯
,©¯ ™¯
$str™¯ ˛¯
}˛¯ ˇ¯
,ˇ¯ Ä˘
{Ä˘ Å˘
PackIconKindÅ˘ ç˘
.ç˘ é˘
	Hamburgeré˘ ó˘
,ó˘ ò˘
$strò˘ Ä˚
}Ä˚ Å˚
,Å˚ Ç˚
{Ç˚ É˚
PackIconKindÉ˚ è˚
.è˚ ê˚!
HandPointingRightê˚ °˚
,°˚ ¢˚
$str¢˚ ã˝
}ã˝ å˝
,å˝ ç˝
{ç˝ é˝
PackIconKindé˝ ö˝
.ö˝ õ˝
Hangerõ˝ °˝
,°˝ ¢˝
$str¢˝ ŸÄ
}ŸÄ ⁄Ä
,⁄Ä €Ä
{€Ä ‹Ä
PackIconKind‹Ä ËÄ
.ËÄ ÈÄ
HangoutsÈÄ ÒÄ
,ÒÄ ÚÄ
$strÚÄ ûÇ
}ûÇ üÇ
,üÇ †Ç
{†Ç °Ç
PackIconKind°Ç ≠Ç
.≠Ç ÆÇ
HarddiskÆÇ ∂Ç
,∂Ç ∑Ç
$str∑Ç ÑÜ
}ÑÜ ÖÜ
,ÖÜ ÜÜ
{ÜÜ áÜ
PackIconKindáÜ ìÜ
.ìÜ îÜ

HeadphonesîÜ ûÜ
,ûÜ üÜ
$strüÜ †á
}†á °á
,°á ¢á
{¢á £á
PackIconKind£á Øá
.Øá ∞á
HeadphonesBox∞á Ωá
,Ωá æá
$stræá ≤â
}≤â ≥â
,≥â ¥â
{¥â µâ
PackIconKindµâ ¡â
.¡â ¬â
HeadphonesOff¬â œâ
,œâ –â
$str–â ùå
}ùå ûå
,ûå üå
{üå †å
PackIconKind†å ¨å
.¨å ≠å"
HeadphonesSettings≠å øå
,øå ¿å
$str¿å Ûç
}Ûç Ùç
,Ùç ıç
{ıç ˆç
PackIconKindˆç Çé
.Çé Éé
HeadsetÉé äé
,äé ãé
$strãé òè
}òè ôè
,ôè öè
{öè õè
PackIconKindõè ßè
.ßè ®è
HeadsetDock®è ≥è
,≥è ¥è
$str¥è Äë
}Äë Åë
,Åë Çë
{Çë Éë
PackIconKindÉë èë
.èë êë

HeadsetOffêë öë
,öë õë
$strõë Ôì
}Ôì ì
,ì Òì
{Òì Úì
PackIconKindÚì ˛ì
.˛ì ˇì
Heartˇì Ñî
,Ñî Öî
$strÖî Ωï
}Ωï æï
,æï øï
{øï ¿ï
PackIconKind¿ï Ãï
.Ãï Õï
HeartBoxÕï ’ï
,’ï ÷ï
$str÷ï Âó
}Âó Êó
,Êó Áó
{Áó Ëó
PackIconKindËó Ùó
.Ùó ıó
HeartBoxOutlineıó Ñò
,Ñò Öò
$strÖò ¢ö
}¢ö £ö
,£ö §ö
{§ö •ö
PackIconKind•ö ±ö
.±ö ≤ö
HeartBroken≤ö Ωö
,Ωö æö
$stræö ªú
}ªú ºú
,ºú Ωú
{Ωú æú
PackIconKindæú  ú
. ú Àú
	HeartHalfÀú ‘ú
,‘ú ’ú
$str’ú ¿ù
}¿ù ¡ù
,¡ù ¬ù
{¬ù √ù
PackIconKind√ù œù
.œù –ù
HeartHalfFull–ù ›ù
,›ù ﬁù
$strﬁù Ëü
}Ëü Èü
,Èü Íü
{Íü Îü
PackIconKindÎü ˜ü
.˜ü ¯ü 
HeartHalfOutline¯ü à†
,à† â†
$strâ† ¿°
}¿° ¡°
,¡° ¬°
{¬° √°
PackIconKind√° œ°
.œ° –°
HeartOff–° ÿ°
,ÿ° Ÿ°
$strŸ° Ù£
}Ù£ ı£
,ı£ ˆ£
{ˆ£ ˜£
PackIconKind˜£ É§
.É§ Ñ§
HeartOutlineÑ§ ê§
,ê§ ë§
$strë§ ˛¶
}˛¶ ˇ¶
,ˇ¶ Äß
{Äß Åß
PackIconKindÅß çß
.çß éß

HeartPulseéß òß
,òß ôß
$strôß Ì™
}Ì™ Ó™
,Ó™ Ô™
{Ô™ ™
PackIconKind™ ¸™
.¸™ ˝™
Help˝™ Å´
,Å´ Ç´
$strÇ´ Ò¨
}Ò¨ Ú¨
,Ú¨ Û¨
{Û¨ Ù¨
PackIconKindÙ¨ Ä≠
.Ä≠ Å≠
HelpBoxÅ≠ à≠
,à≠ â≠
$strâ≠ ‹Æ
}‹Æ ›Æ
,›Æ ﬁÆ
{ﬁÆ ﬂÆ
PackIconKindﬂÆ ÎÆ
.ÎÆ ÏÆ

HelpCircleÏÆ ˆÆ
,ˆÆ ˜Æ
$str˜Æ ∫±
}∫± ª±
,ª± º±
{º± Ω±
PackIconKindΩ± …±
.…±  ±!
HelpCircleOutline ± €±
,€± ‹±
$str‹± å¥
}å¥ ç¥
,ç¥ é¥
{é¥ è¥
PackIconKindè¥ õ¥
.õ¥ ú¥
HelpNetworkú¥ ß¥
,ß¥ ®¥
$str®¥ Ùπ
}Ùπ ıπ
,ıπ ˆπ
{ˆπ ˜π
PackIconKind˜π É∫
.É∫ Ñ∫
HexagonÑ∫ ã∫
,ã∫ å∫
$strå∫ Øº
}Øº ∞º
,∞º ±º
{±º ≤º
PackIconKind≤º æº
.æº øº
HexagonMultipleøº Œº
,Œº œº
$strœº Ó¡
}Ó¡ Ô¡
,Ô¡ ¡
{¡ Ò¡
PackIconKindÒ¡ ˝¡
.˝¡ ˛¡
HexagonOutline˛¡ å¬
,å¬ ç¬
$strç¬ ‰ƒ
}‰ƒ Âƒ
,Âƒ Êƒ
{Êƒ Áƒ
PackIconKindÁƒ Ûƒ
.Ûƒ Ùƒ
HighDefinitionÙƒ Ç≈
,Ç≈ É≈
$strÉ≈ à∆
}à∆ â∆
,â∆ ä∆
{ä∆ ã∆
PackIconKindã∆ ó∆
.ó∆ ò∆
Highwayò∆ ü∆
,ü∆ †∆
$str†∆ ù«
}ù« û«
,û« ü«
{ü« †«
PackIconKind†« ¨«
.¨« ≠«
History≠« ¥«
,¥« µ«
$strµ« Ã…
}Ã… Õ…
,Õ… Œ…
{Œ… œ…
PackIconKindœ… €…
.€… ‹…
Hololens‹… ‰…
,‰… Â…
$strÂ… ¸À
}¸À ˝À
,˝À ˛À
{˛À ˇÀ
PackIconKindˇÀ ãÃ
.ãÃ åÃ
HomeåÃ êÃ
,êÃ ëÃ
$strëÃ æÃ
}æÃ øÃ
,øÃ ¿Ã
{¿Ã ¡Ã
PackIconKind¡Ã ÕÃ
.ÕÃ ŒÃ
HomeAccountŒÃ ŸÃ
,ŸÃ ⁄Ã
$str⁄Ã ≠Œ
}≠Œ ÆŒ
,ÆŒ ØŒ
{ØŒ ∞Œ
PackIconKind∞Œ ºŒ
.ºŒ ΩŒ
HomeAssistantΩŒ  Œ
, Œ ÀŒ
$strÀŒ –’
}–’ —’
,—’ “’
{“’ ”’
PackIconKind”’ ﬂ’
.ﬂ’ ‡’
HomeAutomation‡’ Ó’
,Ó’ Ô’
$strÔ’  Ÿ
} Ÿ ÀŸ
,ÀŸ ÃŸ
{ÃŸ ÕŸ
PackIconKindÕŸ ŸŸ
.ŸŸ ⁄Ÿ

HomeCircle⁄Ÿ ‰Ÿ
,‰Ÿ ÂŸ
$strÂŸ ˝€
}˝€ ˛€
,˛€ ˇ€
{ˇ€ Ä‹
PackIconKindÄ‹ å‹
.å‹ ç‹
	HomeHeartç‹ ñ‹
,ñ‹ ó‹
$stró‹ ˚›
}˚› ¸›
,¸› ˝›
{˝› ˛›
PackIconKind˛› äﬁ
.äﬁ ãﬁ
HomeMapMarkerãﬁ òﬁ
,òﬁ ôﬁ
$strôﬁ ˇﬂ
}ˇﬂ Ä‡
,Ä‡ Å‡
{Å‡ Ç‡
PackIconKindÇ‡ é‡
.é‡ è‡

HomeModernè‡ ô‡
,ô‡ ö‡
$strö‡ ä·
}ä· ã·
,ã· å·
{å· ç·
PackIconKindç· ô·
.ô· ö·
HomeOutlineö· •·
,•· ¶·
$str¶· ì‚
}ì‚ î‚
,î‚ ï‚
{ï‚ ñ‚
PackIconKindñ‚ ¢‚
.¢‚ £‚
HomeVariant£‚ Æ‚
,Æ‚ Ø‚
$strØ‚ Ï‚
}Ï‚ Ì‚
,Ì‚ Ó‚
{Ó‚ Ô‚
PackIconKindÔ‚ ˚‚
.˚‚ ¸‚
Hook¸‚ Ä„
,Ä„ Å„
$strÅ„ ˘‰
}˘‰ ˙‰
,˙‰ ˚‰
{˚‰ ¸‰
PackIconKind¸‰ àÂ
.àÂ âÂ
HookOffâÂ êÂ
,êÂ ëÂ
$strëÂ ñË
}ñË óË
,óË òË
{òË ôË
PackIconKindôË •Ë
.•Ë ¶Ë
Hops¶Ë ™Ë
,™Ë ´Ë
$str´Ë ØÌ
}ØÌ ∞Ì
,∞Ì ±Ì
{±Ì ≤Ì
PackIconKind≤Ì æÌ
.æÌ øÌ
HospitaløÌ «Ì
,«Ì »Ì
$str»Ì ƒÓ
}ƒÓ ≈Ó
,≈Ó ∆Ó
{∆Ó «Ó
PackIconKind«Ó ”Ó
.”Ó ‘Ó 
HospitalBuilding‘Ó ‰Ó
,‰Ó ÂÓ
$strÂÓ †
}† °
,° ¢
{¢ £
PackIconKind£ Ø
.Ø ∞
HospitalMarker∞ æ
,æ ø
$strø ∂Ò
}∂Ò ∑Ò
,∑Ò ∏Ò
{∏Ò πÒ
PackIconKindπÒ ≈Ò
.≈Ò ∆Ò
HotTub∆Ò ÃÒ
,ÃÒ ÕÒ
$strÕÒ ú˜
}ú˜ ù˜
,ù˜ û˜
{û˜ ü˜
PackIconKindü˜ ´˜
.´˜ ¨˜
Hotel¨˜ ±˜
,±˜ ≤˜
$str≤˜ ™¯
}™¯ ´¯
,´¯ ¨¯
{¨¯ ≠¯
PackIconKind≠¯ π¯
.π¯ ∫¯
Houzz∫¯ ø¯
,ø¯ ¿¯
$str¿¯ ä˘
}ä˘ ã˘
,ã˘ å˘
{å˘ ç˘
PackIconKindç˘ ô˘
.ô˘ ö˘
HouzzBoxö˘ ¢˘
,¢˘ £˘
$str£˘ ⁄˙
}⁄˙ €˙
,€˙ ‹˙
{‹˙ ›˙
PackIconKind›˙ È˙
.È˙ Í˙
HuluÍ˙ Ó˙
,Ó˙ Ô˙
$strÔ˙ ë¸
}ë¸ í¸
,í¸ ì¸
{ì¸ î¸
PackIconKindî¸ †¸
.†¸ °¸
Human°¸ ¶¸
,¶¸ ß¸
$strß¸ ò˝
}ò˝ ô˝
,ô˝ ö˝
{ö˝ õ˝
PackIconKindõ˝ ß˝
.ß˝ ®˝

HumanChild®˝ ≤˝
,≤˝ ≥˝
$str≥˝ ù˛
}ù˛ û˛
,û˛ ü˛
{ü˛ †˛
PackIconKind†˛ ¨˛
.¨˛ ≠˛
HumanFemale≠˛ ∏˛
,∏˛ π˛
$strπ˛ ‡ˇ
}‡ˇ ·ˇ
,·ˇ ‚ˇ
{‚ˇ „ˇ
PackIconKind„ˇ Ôˇ
.Ôˇ ˇ
HumanGreetingˇ ˝ˇ
,˝ˇ ˛ˇ
$str˛ˇ ≥Å
}≥Å ¥Å
,¥Å µÅ
{µÅ ∂Å
PackIconKind∂Å ¬Å
.¬Å √Å
HumanHandsdown√Å —Å
,—Å “Å
$str“Å ™É
}™É ´É
,´É ¨É
{¨É ≠É
PackIconKind≠É πÉ
.πÉ ∫É
HumanHandsup∫É ∆É
,∆É «É
$str«É åÖ
}åÖ çÖ
,çÖ éÖ
{éÖ èÖ
PackIconKindèÖ õÖ
.õÖ úÖ
	HumanMaleúÖ •Ö
,•Ö ¶Ö
$str¶Ö ±Ü
}±Ü ≤Ü
,≤Ü ≥Ü
{≥Ü ¥Ü
PackIconKind¥Ü ¿Ü
.¿Ü ¡Ü
HumanMaleFemale¡Ü –Ü
,–Ü —Ü
$str—Ü ˝à
}˝à ˛à
,˛à ˇà
{ˇà Äâ
PackIconKindÄâ åâ
.åâ çâ
HumanPregnantçâ öâ
,öâ õâ
$strõâ ƒä
}ƒä ≈ä
,≈ä ∆ä
{∆ä «ä
PackIconKind«ä ”ä
.”ä ‘ä
HumbleBundle‘ä ‡ä
,‡ä ·ä
$str·ä ßé
}ßé ®é
,®é ©é
{©é ™é
PackIconKind™é ∂é
.∂é ∑é
IceCream∑é øé
,øé ¿é
$str¿é ‚è
}‚è „è
,„è ‰è
{‰è Âè
PackIconKindÂè Òè
.Òè Úè
ImageÚè ˜è
,˜è ¯è
$str¯è Ìê
}Ìê Óê
,Óê Ôê
{Ôê ê
PackIconKindê ¸ê
.¸ê ˝ê

ImageAlbum˝ê áë
,áë àë
$stràë õí
}õí úí
,úí ùí
{ùí ûí
PackIconKindûí ™í
.™í ´í
	ImageArea´í ¥í
,¥í µí
$strµí ≤ì
}≤ì ≥ì
,≥ì ¥ì
{¥ì µì
PackIconKindµì ¡ì
.¡ì ¬ì
ImageAreaClose¬ì –ì
,–ì —ì
$str—ì ◊î
}◊î ÿî
,ÿî Ÿî
{Ÿî ⁄î
PackIconKind⁄î Êî
.Êî Áî
ImageBrokenÁî Úî
,Úî Ûî
$strÛî ˙ñ
}˙ñ ˚ñ
,˚ñ ¸ñ
{¸ñ ˝ñ
PackIconKind˝ñ âó
.âó äó"
ImageBrokenVariantäó úó
,úó ùó
$strùó  ò
} ò Àò
,Àò Ãò
{Ãò Õò
PackIconKindÕò Ÿò
.Ÿò ⁄ò
ImageFilter⁄ò Âò
,Âò Êò
$strÊò ùö
}ùö ûö
,ûö üö
{üö †ö
PackIconKind†ö ¨ö
.¨ö ≠ö%
ImageFilterBlackWhite≠ö ¬ö
,¬ö √ö
$str√ö ≠õ
}≠õ Æõ
,Æõ Øõ
{Øõ ∞õ
PackIconKind∞õ ºõ
.ºõ Ωõ&
ImageFilterCenterFocusΩõ ”õ
,”õ ‘õ
$str‘õ °ù
}°ù ¢ù
,¢ù £ù
{£ù §ù
PackIconKind§ù ∞ù
.∞ù ±ù*
ImageFilterCenterFocusWeak±ù Àù
,Àù Ãù
$strÃù ‹ü
}‹ü ›ü
,›ü ﬁü
{ﬁü ﬂü
PackIconKindﬂü Îü
.Îü Ïü 
ImageFilterDramaÏü ¸ü
,¸ü ˝ü
$str˝ü ∆¢
}∆¢ «¢
,«¢ »¢
{»¢ …¢
PackIconKind…¢ ’¢
.’¢ ÷¢!
ImageFilterFrames÷¢ Á¢
,Á¢ Ë¢
$strË¢ Ò£
}Ò£ Ú£
,Ú£ Û£
{Û£ Ù£
PackIconKindÙ£ Ä§
.Ä§ Å§
ImageFilterHdrÅ§ è§
,è§ ê§
$strê§ ’§
}’§ ÷§
,÷§ ◊§
{◊§ ÿ§
PackIconKindÿ§ ‰§
.‰§ Â§
ImageFilterNoneÂ§ Ù§
,Ù§ ı§
$strı§ Ú•
}Ú• Û•
,Û• Ù•
{Ù• ı•
PackIconKindı• Å¶
.Å¶ Ç¶$
ImageFilterTiltShiftÇ¶ ñ¶
,ñ¶ ó¶
$stró¶ ˆ´
}ˆ´ ˜´
,˜´ ¯´
{¯´ ˘´
PackIconKind˘´ Ö¨
.Ö¨ Ü¨"
ImageFilterVintageÜ¨ ò¨
,ò¨ ô¨
$strô¨ µ≤
}µ≤ ∂≤
,∂≤ ∑≤
{∑≤ ∏≤
PackIconKind∏≤ ƒ≤
.ƒ≤ ≈≤
ImageMultiple≈≤ “≤
,“≤ ”≤
$str”≤ ·≥
}·≥ ‚≥
,‚≥ „≥
{„≥ ‰≥
PackIconKind‰≥ ≥
.≥ Ò≥
ImageOffÒ≥ ˘≥
,˘≥ ˙≥
$str˙≥ úµ
}úµ ùµ
,ùµ ûµ
{ûµ üµ
PackIconKindüµ ´µ
.´µ ¨µ
	ImagePlus¨µ µµ
,µµ ∂µ
$str∂µ Ω∑
}Ω∑ æ∑
,æ∑ ø∑
{ø∑ ¿∑
PackIconKind¿∑ Ã∑
.Ã∑ Õ∑
ImportÕ∑ ”∑
,”∑ ‘∑
$str‘∑ ‘∏
}‘∏ ’∏
,’∏ ÷∏
{÷∏ ◊∏
PackIconKind◊∏ „∏
.„∏ ‰∏
Inbox‰∏ È∏
,È∏ Í∏
$strÍ∏ Íπ
}Íπ Îπ
,Îπ Ïπ
{Ïπ Ìπ
PackIconKindÌπ ˘π
.˘π ˙π
InboxArrowDown˙π à∫
,à∫ â∫
$strâ∫ ¢ª
}¢ª £ª
,£ª §ª
{§ª •ª
PackIconKind•ª ±ª
.±ª ≤ª
InboxArrowUp≤ª æª
,æª øª
$strøª Âº
}Âº Êº
,Êº Áº
{Áº Ëº
PackIconKindËº Ùº
.Ùº ıº
	Incognitoıº ˛º
,˛º ˇº
$strˇº Ω√
}Ω√ æ√
,æ√ ø√
{ø√ ¿√
PackIconKind¿√ Ã√
.Ã√ Õ√
InfinityÕ√ ’√
,’√ ÷√
$str÷√ ï»
}ï» ñ»
,ñ» ó»
{ó» ò»
PackIconKindò» §»
.§» •»
Information•» ∞»
,∞» ±»
$str±» õ…
}õ… ú…
,ú… ù…
{ù… û…
PackIconKindû… ™…
.™… ´…"
InformationOutline´… Ω…
,Ω… æ…
$stræ… áÀ
}áÀ àÀ
,àÀ âÀ
{âÀ äÀ
PackIconKindäÀ ñÀ
.ñÀ óÀ"
InformationVariantóÀ ©À
,©À ™À
$str™À úœ
}úœ ùœ
,ùœ ûœ
{ûœ üœ
PackIconKindüœ ´œ
.´œ ¨œ
	Instagram¨œ µœ
,µœ ∂œ
$str∂œ â”
}â” ä”
,ä” ã”
{ã” å”
PackIconKindå” ò”
.ò” ô”

Instapaperô” £”
,£” §”
$str§” á‘
}á‘ à‘
,à‘ â‘
{â‘ ä‘
PackIconKindä‘ ñ‘
.ñ‘ ó‘ 
InternetExploreró‘ ß‘
,ß‘ ®‘
$str®‘ ¥Ÿ
}¥Ÿ µŸ
,µŸ ∂Ÿ
{∂Ÿ ∑Ÿ
PackIconKind∑Ÿ √Ÿ
.√Ÿ ƒŸ
InvertColorsƒŸ –Ÿ
,–Ÿ —Ÿ
$str—Ÿ Â€
}Â€ Ê€
,Ê€ Á€
{Á€ Ë€
PackIconKindË€ Ù€
.Ù€ ı€
Itunesı€ ˚€
,˚€ ¸€
$str¸€ ≥ﬂ
}≥ﬂ ¥ﬂ
,¥ﬂ µﬂ
{µﬂ ∂ﬂ
PackIconKind∂ﬂ ¬ﬂ
.¬ﬂ √ﬂ
Jeepney√ﬂ  ﬂ
, ﬂ Àﬂ
$strÀﬂ Ç„
}Ç„ É„
,É„ Ñ„
{Ñ„ Ö„
PackIconKindÖ„ ë„
.ë„ í„
Jiraí„ ñ„
,ñ„ ó„
$stró„ ÑÊ
}ÑÊ ÖÊ
,ÖÊ ÜÊ
{ÜÊ áÊ
PackIconKindáÊ ìÊ
.ìÊ îÊ
JsfiddleîÊ úÊ
,úÊ ùÊ
$strùÊ ◊Ô
}◊Ô ÿÔ
,ÿÔ ŸÔ
{ŸÔ ⁄Ô
PackIconKind⁄Ô ÊÔ
.ÊÔ ÁÔ
JsonÁÔ ÎÔ
,ÎÔ ÏÔ
$strÏÔ «Û
}«Û »Û
,»Û …Û
{…Û  Û
PackIconKind Û ÷Û
.÷Û ◊Û
Karate◊Û ›Û
,›Û ﬁÛ
$strﬁÛ €ˆ
}€ˆ ‹ˆ
,‹ˆ ›ˆ
{›ˆ ﬁˆ
PackIconKindﬁˆ Íˆ
.Íˆ Îˆ
KegÎˆ Óˆ
,Óˆ Ôˆ
$strÔˆ ë¯
}ë¯ í¯
,í¯ ì¯
{ì¯ î¯
PackIconKindî¯ †¯
.†¯ °¯
Kettle°¯ ß¯
,ß¯ ®¯
$str®¯ û¸
}û¸ ü¸
,ü¸ †¸
{†¸ °¸
PackIconKind°¸ ≠¸
.≠¸ Æ¸
KeyÆ¸ ±¸
,±¸ ≤¸
$str≤¸ Ë˝
}Ë˝ È˝
,È˝ Í˝
{Í˝ Î˝
PackIconKindÎ˝ ˜˝
.˜˝ ¯˝
	KeyChange¯˝ Å˛
,Å˛ Ç˛
$strÇ˛ ®Å
}®Å ©Å
,©Å ™Å
{™Å ´Å
PackIconKind´Å ∑Å
.∑Å ∏Å
KeyMinus∏Å ¿Å
,¿Å ¡Å
$str¡Å ôÉ
}ôÉ öÉ
,öÉ õÉ
{õÉ úÉ
PackIconKindúÉ ®É
.®É ©É
KeyPlus©É ∞É
,∞É ±É
$str±É °Ö
}°Ö ¢Ö
,¢Ö £Ö
{£Ö §Ö
PackIconKind§Ö ∞Ö
.∞Ö ±Ö
	KeyRemove±Ö ∫Ö
,∫Ö ªÖ
$strªÖ Ùá
}Ùá ıá
,ıá ˆá
{ˆá ˜á
PackIconKind˜á Éà
.Éà Ñà

KeyVariantÑà éà
,éà èà
$strèà ÿâ
}ÿâ Ÿâ
,Ÿâ ⁄â
{⁄â €â
PackIconKind€â Áâ
.Áâ Ëâ
KeyboardËâ â
,â Òâ
$strÒâ ›ã
}›ã ﬁã
,ﬁã ﬂã
{ﬂã ‡ã
PackIconKind‡ã Ïã
.Ïã Ìã!
KeyboardBackspaceÌã ˛ã
,˛ã ˇã
$strˇã ¿å
}¿å ¡å
,¡å ¬å
{¬å √å
PackIconKind√å œå
.œå –å
KeyboardCaps–å ‹å
,‹å ›å
$str›å ßç
}ßç ®ç
,®ç ©ç
{©ç ™ç
PackIconKind™ç ∂ç
.∂ç ∑ç
KeyboardClose∑ç ƒç
,ƒç ≈ç
$str≈ç µè
}µè ∂è
,∂è ∑è
{∑è ∏è
PackIconKind∏è ƒè
.ƒè ≈è
KeyboardOff≈è –è
,–è —è
$str—è ≤í
}≤í ≥í
,≥í ¥í
{¥í µí
PackIconKindµí ¡í
.¡í ¬í
KeyboardReturn¬í –í
,–í —í
$str—í îì
}îì ïì
,ïì ñì
{ñì óì
PackIconKindóì £ì
.£ì §ì
KeyboardTab§ì Øì
,Øì ∞ì
$str∞ì àî
}àî âî
,âî äî
{äî ãî
PackIconKindãî óî
.óî òî
KeyboardVariantòî ßî
,ßî ®î
$str®î «ñ
}«ñ »ñ
,»ñ …ñ
{…ñ  ñ
PackIconKind ñ ÷ñ
.÷ñ ◊ñ
Kickstarter◊ñ ‚ñ
,‚ñ „ñ
$str„ñ ®õ
}®õ ©õ
,©õ ™õ
{™õ ´õ
PackIconKind´õ ∑õ
.∑õ ∏õ
Kodi∏õ ºõ
,ºõ Ωõ
$strΩõ ø¶
}ø¶ ¿¶
,¿¶ ¡¶
{¡¶ ¬¶
PackIconKind¬¶ Œ¶
.Œ¶ œ¶
Labelœ¶ ‘¶
,‘¶ ’¶
$str’¶ “ß
}“ß ”ß
,”ß ‘ß
{‘ß ’ß
PackIconKind’ß ·ß
.·ß ‚ß
LabelOutline‚ß Óß
,Óß Ôß
$strÔß Ç©
}Ç© É©
,É© Ñ©
{Ñ© Ö©
PackIconKindÖ© ë©
.ë© í©
Ladybugí© ô©
,ô© ö©
$strö© ∫¨
}∫¨ ª¨
,ª¨ º¨
{º¨ Ω¨
PackIconKindΩ¨ …¨
.…¨  ¨
Lambda ¨ –¨
,–¨ —¨
$str—¨ Ÿ≠
}Ÿ≠ ⁄≠
,⁄≠ €≠
{€≠ ‹≠
PackIconKind‹≠ Ë≠
.Ë≠ È≠
LampÈ≠ Ì≠
,Ì≠ Ó≠
$strÓ≠ °Æ
}°Æ ¢Æ
,¢Æ £Æ
{£Æ §Æ
PackIconKind§Æ ∞Æ
.∞Æ ±Æ
Lan±Æ ¥Æ
,¥Æ µÆ
$strµÆ ¡±
}¡± ¬±
,¬± √±
{√± ƒ±
PackIconKindƒ± –±
.–± —±

LanConnect—± €±
,€± ‹±
$str‹± ˚≥
}˚≥ ¸≥
,¸≥ ˝≥
{˝≥ ˛≥
PackIconKind˛≥ ä¥
.ä¥ ã¥
LanDisconnectã¥ ò¥
,ò¥ ô¥
$strô¥ °∑
}°∑ ¢∑
,¢∑ £∑
{£∑ §∑
PackIconKind§∑ ∞∑
.∞∑ ±∑

LanPending±∑ ª∑
,ª∑ º∑
$strº∑ ç∫
}ç∫ é∫
,é∫ è∫
{è∫ ê∫
PackIconKindê∫ ú∫
.ú∫ ù∫
	LanguageCù∫ ¶∫
,¶∫ ß∫
$strß∫ ëæ
}ëæ íæ
,íæ ìæ
{ìæ îæ
PackIconKindîæ †æ
.†æ °æ
LanguageCpp°æ ¨æ
,¨æ ≠æ
$str≠æ —¬
}—¬ “¬
,“¬ ”¬
{”¬ ‘¬
PackIconKind‘¬ ‡¬
.‡¬ ·¬
LanguageCsharp·¬ Ô¬
,Ô¬ ¬
$str¬ ≥»
}≥» ¥»
,¥» µ»
{µ» ∂»
PackIconKind∂» ¬»
.¬» √»
LanguageCss3√» œ»
,œ» –»
$str–» …
}… Ò…
,Ò… Ú…
{Ú… Û…
PackIconKindÛ… ˇ…
.ˇ… Ä 

LanguageGoÄ  ä 
,ä  ã 
$strã  à‘
}à‘ â‘
,â‘ ä‘
{ä‘ ã‘
PackIconKindã‘ ó‘
.ó‘ ò‘
LanguageHtml5ò‘ •‘
,•‘ ¶‘
$str¶‘ Â’
}Â’ Ê’
,Ê’ Á’
{Á’ Ë’
PackIconKindË’ Ù’
.Ù’ ı’"
LanguageJavascriptı’ á÷
,á÷ à÷
$strà÷ £€
}£€ §€
,§€ •€
{•€ ¶€
PackIconKind¶€ ≤€
.≤€ ≥€
LanguagePhp≥€ æ€
,æ€ ø€
$strø€ ø‰
}ø‰ ¿‰
,¿‰ ¡‰
{¡‰ ¬‰
PackIconKind¬‰ Œ‰
.Œ‰ œ‰
LanguagePythonœ‰ ›‰
,›‰ ﬁ‰
$strﬁ‰ ÏÍ
}ÏÍ ÌÍ
,ÌÍ ÓÍ
{ÓÍ ÔÍ
PackIconKindÔÍ ˚Í
.˚Í ¸Í"
LanguagePythonText¸Í éÎ
,éÎ èÎ
$strèÎ îÓ
}îÓ ïÓ
,ïÓ ñÓ
{ñÓ óÓ
PackIconKindóÓ £Ó
.£Ó §Ó
	LanguageR§Ó ≠Ó
,≠Ó ÆÓ
$strÆÓ ÛÛ
}ÛÛ ÙÛ
,ÙÛ ıÛ
{ıÛ ˆÛ
PackIconKindˆÛ ÇÙ
.ÇÙ ÉÙ
LanguageSwiftÉÙ êÙ
,êÙ ëÙ
$strëÙ ç¯
}ç¯ é¯
,é¯ è¯
{è¯ ê¯
PackIconKindê¯ ú¯
.ú¯ ù¯"
LanguageTypescriptù¯ Ø¯
,Ø¯ ∞¯
$str∞¯ Õ¸
}Õ¸ Œ¸
,Œ¸ œ¸
{œ¸ –¸
PackIconKind–¸ ‹¸
.‹¸ ›¸
Laptop›¸ „¸
,„¸ ‰¸
$str‰¸ ”˝
}”˝ ‘˝
,‘˝ ’˝
{’˝ ÷˝
PackIconKind÷˝ ‚˝
.‚˝ „˝ 
LaptopChromebook„˝ Û˝
,Û˝ Ù˝
$strÙ˝ Æ˛
}Æ˛ Ø˛
,Ø˛ ∞˛
{∞˛ ±˛
PackIconKind±˛ Ω˛
.Ω˛ æ˛
	LaptopMacæ˛ «˛
,«˛ »˛
$str»˛ ñÄ
}ñÄ óÄ
,óÄ òÄ
{òÄ ôÄ
PackIconKindôÄ •Ä
.•Ä ¶Ä
	LaptopOff¶Ä ØÄ
,ØÄ ∞Ä
$str∞Ä ÄÇ
}ÄÇ ÅÇ
,ÅÇ ÇÇ
{ÇÇ ÉÇ
PackIconKindÉÇ èÇ
.èÇ êÇ
LaptopWindowsêÇ ùÇ
,ùÇ ûÇ
$strûÇ èÉ
}èÉ êÉ
,êÉ ëÉ
{ëÉ íÉ
PackIconKindíÉ ûÉ
.ûÉ üÉ
LastfmüÉ •É
,•É ¶É
$str¶É ﬁà
}ﬁà ﬂà
,ﬂà ‡à
{‡à ·à
PackIconKind·à Ìà
.Ìà Óà
LastpassÓà ˆà
,ˆà ˜à
$str˜à ’ä
}’ä ÷ä
,÷ä ◊ä
{◊ä ÿä
PackIconKindÿä ‰ä
.‰ä Âä
LaunchÂä Îä
,Îä Ïä
$strÏä Ûã
}Ûã Ùã
,Ùã ıã
{ıã ˆã
PackIconKindˆã Çå
.Çå Éå
LavaLampÉå ãå
,ãå åå
$stråå Ìé
}Ìé Óé
,Óé Ôé
{Ôé é
PackIconKindé ¸é
.¸é ˝é
Layers˝é Éè
,Éè Ñè
$strÑè Ùè
}Ùè ıè
,ıè ˆè
{ˆè ˜è
PackIconKind˜è Éê
.Éê Ñê
	LayersOffÑê çê
,çê éê
$stréê àí
}àí âí
,âí äí
{äí ãí
PackIconKindãí óí
.óí òí

LeadPencilòí ¢í
,¢í £í
$str£í ∆î
}∆î «î
,«î »î
{»î …î
PackIconKind…î ’î
.’î ÷î
Leaf÷î ⁄î
,⁄î €î
$str€î ãñ
}ãñ åñ
,åñ çñ
{çñ éñ
PackIconKindéñ öñ
.öñ õñ
LedOffõñ °ñ
,°ñ ¢ñ
$str¢ñ Ûñ
}Ûñ Ùñ
,Ùñ ıñ
{ıñ ˆñ
PackIconKindˆñ Çó
.Çó Éó
LedOnÉó àó
,àó âó
$strâó Ïò
}Ïò Ìò
,Ìò Óò
{Óò Ôò
PackIconKindÔò ˚ò
.˚ò ¸ò

LedOutline¸ò Üô
,Üô áô
$stráô Öö
}Öö Üö
,Üö áö
{áö àö
PackIconKindàö îö
.îö ïö
LedStripïö ùö
,ùö ûö
$strûö »ù
}»ù …ù
,…ù  ù
{ ù Àù
PackIconKindÀù ◊ù
.◊ù ÿù
LedVariantOffÿù Âù
,Âù Êù
$strÊù ôü
}ôü öü
,öü õü
{õü úü
PackIconKindúü ®ü
.®ü ©ü
LedVariantOn©ü µü
,µü ∂ü
$str∂ü Ö†
}Ö† Ü†
,Ü† á†
{á† à†
PackIconKindà† î†
.î† ï†!
LedVariantOutlineï† ¶†
,¶† ß†
$strß† °°
}°° ¢°
,¢° £°
{£° §°
PackIconKind§° ∞°
.∞° ±°
Library±° ∏°
,∏° π°
$strπ° Ó¢
}Ó¢ Ô¢
,Ô¢ ¢
{¢ Ò¢
PackIconKindÒ¢ ˝¢
.˝¢ ˛¢
LibraryBooks˛¢ ä£
,ä£ ã£
$strã£ ¢§
}¢§ £§
,£§ §§
{§§ •§
PackIconKind•§ ±§
.±§ ≤§
LibraryMusic≤§ æ§
,æ§ ø§
$strø§ û¶
}û¶ ü¶
,ü¶ †¶
{†¶ °¶
PackIconKind°¶ ≠¶
.≠¶ Æ¶
LibraryPlusÆ¶ π¶
,π¶ ∫¶
$str∫¶ Õß
}Õß Œß
,Œß œß
{œß –ß
PackIconKind–ß ‹ß
.‹ß ›ß
	Lightbulb›ß Êß
,Êß Áß
$strÁß ú©
}ú© ù©
,ù© û©
{û© ü©
PackIconKindü© ´©
.´© ¨©
LightbulbOn¨© ∑©
,∑© ∏©
$str∏© Ñ¨
}Ñ¨ Ö¨
,Ö¨ Ü¨
{Ü¨ á¨
PackIconKindá¨ ì¨
.ì¨ î¨"
LightbulbOnOutlineî¨ ¶¨
,¶¨ ß¨
$strß¨ ⁄Ø
}⁄Ø €Ø
,€Ø ‹Ø
{‹Ø ›Ø
PackIconKind›Ø ÈØ
.ÈØ ÍØ 
LightbulbOutlineÍØ ˙Ø
,˙Ø ˚Ø
$str˚Ø î≤
}î≤ ï≤
,ï≤ ñ≤
{ñ≤ ó≤
PackIconKindó≤ £≤
.£≤ §≤
Link§≤ ®≤
,®≤ ©≤
$str©≤ î¥
}î¥ ï¥
,ï¥ ñ¥
{ñ¥ ó¥
PackIconKindó¥ £¥
.£¥ §¥
LinkOff§¥ ´¥
,´¥ ¨¥
$str¨¥ ô∑
}ô∑ ö∑
,ö∑ õ∑
{õ∑ ú∑
PackIconKindú∑ ®∑
.®∑ ©∑
LinkVariant©∑ ¥∑
,¥∑ µ∑
$strµ∑ ÉΩ
}ÉΩ ÑΩ
,ÑΩ ÖΩ
{ÖΩ ÜΩ
PackIconKindÜΩ íΩ
.íΩ ìΩ
LinkVariantOffìΩ °Ω
,°Ω ¢Ω
$str¢Ω ô√
}ô√ ö√
,ö√ õ√
{õ√ ú√
PackIconKindú√ ®√
.®√ ©√
Linkedin©√ ±√
,±√ ≤√
$str≤√ ó≈
}ó≈ ò≈
,ò≈ ô≈
{ô≈ ö≈
PackIconKindö≈ ¶≈
.¶≈ ß≈
LinkedinBoxß≈ ≤≈
,≤≈ ≥≈
$str≥≈ …»
}…»  »
, » À»
{À» Ã»
PackIconKindÃ» ÿ»
.ÿ» Ÿ»
LinuxŸ» ﬁ»
,ﬁ» ﬂ»
$strﬂ» ∞—
}∞— ±—
,±— ≤—
{≤— ≥—
PackIconKind≥— ø—
.ø— ¿—
Loading¿— «—
,«— »—
$str»— Ù—
}Ù— ı—
,ı— ˆ—
{ˆ— ˜—
PackIconKind˜— É“
.É“ Ñ“
LockÑ“ à“
,à“ â“
$strâ“ ˆ”
}ˆ” ˜”
,˜” ¯”
{¯” ˘”
PackIconKind˘” Ö‘
.Ö‘ Ü‘
LockOpenÜ‘ é‘
,é‘ è‘
$strè‘ Ó’
}Ó’ Ô’
,Ô’ ’
{’ Ò’
PackIconKindÒ’ ˝’
.˝’ ˛’
LockOpenOutline˛’ ç÷
,ç÷ é÷
$stré÷ ˛◊
}˛◊ ˇ◊
,ˇ◊ Äÿ
{Äÿ Åÿ
PackIconKindÅÿ çÿ
.çÿ éÿ
LockOutlineéÿ ôÿ
,ôÿ öÿ
$ströÿ ¶⁄
}¶⁄ ß⁄
,ß⁄ ®⁄
{®⁄ ©⁄
PackIconKind©⁄ µ⁄
.µ⁄ ∂⁄
LockPattern∂⁄ ¡⁄
,¡⁄ ¬⁄
$str¬⁄ ôﬁ
}ôﬁ öﬁ
,öﬁ õﬁ
{õﬁ úﬁ
PackIconKindúﬁ ®ﬁ
.®ﬁ ©ﬁ
LockPlus©ﬁ ±ﬁ
,±ﬁ ≤ﬁ
$str≤ﬁ í‡
}í‡ ì‡
,ì‡ î‡
{î‡ ï‡
PackIconKindï‡ °‡
.°‡ ¢‡
	LockReset¢‡ ´‡
,´‡ ¨‡
$str¨‡ Û‰
}Û‰ Ù‰
,Ù‰ ı‰
{ı‰ ˆ‰
PackIconKindˆ‰ ÇÂ
.ÇÂ ÉÂ
LockerÉÂ âÂ
,âÂ äÂ
$sträÂ öÊ
}öÊ õÊ
,õÊ úÊ
{úÊ ùÊ
PackIconKindùÊ ©Ê
.©Ê ™Ê
LockerMultiple™Ê ∏Ê
,∏Ê πÊ
$strπÊ ÖË
}ÖË ÜË
,ÜË áË
{áË àË
PackIconKindàË îË
.îË ïË
LoginïË öË
,öË õË
$strõË ¶È
}¶È ßÈ
,ßÈ ®È
{®È ©È
PackIconKind©È µÈ
.µÈ ∂È
LoginVariant∂È ¬È
,¬È √È
$str√È ˚Í
}˚Í ¸Í
,¸Í ˝Í
{˝Í ˛Í
PackIconKind˛Í äÎ
.äÎ ãÎ
LogoutãÎ ëÎ
,ëÎ íÎ
$stríÎ °Ï
}°Ï ¢Ï
,¢Ï £Ï
{£Ï §Ï
PackIconKind§Ï ∞Ï
.∞Ï ±Ï
LogoutVariant±Ï æÏ
,æÏ øÏ
$strøÏ äÓ
}äÓ ãÓ
,ãÓ åÓ
{åÓ çÓ
PackIconKindçÓ ôÓ
.ôÓ öÓ
LooksöÓ üÓ
,üÓ †Ó
$str†Ó “Ô
}“Ô ”Ô
,”Ô ‘Ô
{‘Ô ’Ô
PackIconKind’Ô ·Ô
.·Ô ‚Ô
Loop‚Ô ÊÔ
,ÊÔ ÁÔ
$strÁÔ ∫Ò
}∫Ò ªÒ
,ªÒ ºÒ
{ºÒ ΩÒ
PackIconKindΩÒ …Ò
.…Ò  Ò
Loupe Ò œÒ
,œÒ –Ò
$str–Ò •Û
}•Û ¶Û
,¶Û ßÛ
{ßÛ ®Û
PackIconKind®Û ¥Û
.¥Û µÛ
LumxµÛ πÛ
,πÛ ∫Û
$str∫Û ˆı
}ˆı ˜ı
,˜ı ¯ı
{¯ı ˘ı
PackIconKind˘ı Öˆ
.Öˆ Üˆ
MagnetÜˆ åˆ
,åˆ çˆ
$strçˆ ˆˆ
}ˆˆ ˜ˆ
,˜ˆ ¯ˆ
{¯ˆ ˘ˆ
PackIconKind˘ˆ Ö˜
.Ö˜ Ü˜
MagnetOnÜ˜ é˜
,é˜ è˜
$strè˜ ò¯
}ò¯ ô¯
,ô¯ ö¯
{ö¯ õ¯
PackIconKindõ¯ ß¯
.ß¯ ®¯
Magnify®¯ Ø¯
,Ø¯ ∞¯
$str∞¯ ≥˙
}≥˙ ¥˙
,¥˙ µ˙
{µ˙ ∂˙
PackIconKind∂˙ ¬˙
.¬˙ √˙
MagnifyMinus√˙ œ˙
,œ˙ –˙
$str–˙ Û˚
}Û˚ Ù˚
,Ù˚ ı˚
{ı˚ ˆ˚
PackIconKindˆ˚ Ç¸
.Ç¸ É¸#
MagnifyMinusOutlineÉ¸ ñ¸
,ñ¸ ó¸
$stró¸ ´˛
}´˛ ¨˛
,¨˛ ≠˛
{≠˛ Æ˛
PackIconKindÆ˛ ∫˛
.∫˛ ª˛
MagnifyPlusª˛ ∆˛
,∆˛ «˛
$str«˛ ˛ˇ
}˛ˇ ˇˇ
,ˇˇ ÄÄ
{ÄÄ ÅÄ
PackIconKindÅÄ çÄ
.çÄ éÄ"
MagnifyPlusOutlineéÄ †Ä
,†Ä °Ä
$str°Ä ÀÇ
}ÀÇ ÃÇ
,ÃÇ ÕÇ
{ÕÇ ŒÇ
PackIconKindŒÇ ⁄Ç
.⁄Ç €Ç
MailRu€Ç ·Ç
,·Ç ‚Ç
$str‚Ç Ωà
}Ωà æà
,æà øà
{øà ¿à
PackIconKind¿à Ãà
.Ãà Õà
MailboxÕà ‘à
,‘à ’à
$str’à ∂â
}∂â ∑â
,∑â ∏â
{∏â πâ
PackIconKindπâ ≈â
.≈â ∆â
Map∆â …â
,…â  â
$str â ±ã
}±ã ≤ã
,≤ã ≥ã
{≥ã ¥ã
PackIconKind¥ã ¿ã
.¿ã ¡ã
	MapMarker¡ã  ã
, ã Àã
$strÀã Ùå
}Ùå ıå
,ıå ˆå
{ˆå ˜å
PackIconKind˜å Éç
.Éç Ñç
MapMarkerCircleÑç ìç
,ìç îç
$strîç Îè
}Îè Ïè
,Ïè Ìè
{Ìè Óè
PackIconKindÓè ˙è
.˙è ˚è
MapMarkerMinus˚è âê
,âê äê
$sträê √ë
}√ë ƒë
,ƒë ≈ë
{≈ë ∆ë
PackIconKind∆ë “ë
.“ë ”ë!
MapMarkerMultiple”ë ‰ë
,‰ë Âë
$strÂë ˙ì
}˙ì ˚ì
,˚ì ¸ì
{¸ì ˝ì
PackIconKind˝ì âî
.âî äî
MapMarkerOffäî ñî
,ñî óî
$stróî ﬂñ
}ﬂñ ‡ñ
,‡ñ ·ñ
{·ñ ‚ñ
PackIconKind‚ñ Óñ
.Óñ Ôñ 
MapMarkerOutlineÔñ ˇñ
,ˇñ Äó
$strÄó Óò
}Óò Ôò
,Ôò ò
{ò Òò
PackIconKindÒò ˝ò
.˝ò ˛ò
MapMarkerPlus˛ò ãô
,ãô åô
$stråô ›ö
}›ö ﬁö
,ﬁö ﬂö
{ﬂö ‡ö
PackIconKind‡ö Ïö
.Ïö Ìö
MapMarkerRadiusÌö ¸ö
,¸ö ˝ö
$str˝ö äû
}äû ãû
,ãû åû
{åû çû
PackIconKindçû ôû
.ôû öû
Marginöû †û
,†û °û
$str°û â¢
}â¢ ä¢
,ä¢ ã¢
{ã¢ å¢
PackIconKindå¢ ò¢
.ò¢ ô¢
Markdownô¢ °¢
,°¢ ¢¢
$str¢¢ É£
}É£ Ñ£
,Ñ£ Ö£
{Ö£ Ü£
PackIconKindÜ£ í£
.í£ ì£
Markerì£ ô£
,ô£ ö£
$strö£ π•
}π• ∫•
,∫• ª•
{ª• º•
PackIconKindº• »•
.»• …•
MarkerCheck…• ‘•
,‘• ’•
$str’• âß
}âß äß
,äß ãß
{ãß åß
PackIconKindåß òß
.òß ôß
Martiniôß †ß
,†ß °ß
$str°ß Áß
}Áß Ëß
,Ëß Èß
{Èß Íß
PackIconKindÍß ˆß
.ˆß ˜ß

MaterialUi˜ß Å®
,Å® Ç®
$strÇ® Ó©
}Ó© Ô©
,Ô© ©
{© Ò©
PackIconKindÒ© ˝©
.˝© ˛©
MathCompass˛© â™
,â™ ä™
$strä™ ˛¨
}˛¨ ˇ¨
,ˇ¨ Ä≠
{Ä≠ Å≠
PackIconKindÅ≠ ç≠
.ç≠ é≠
Matrixé≠ î≠
,î≠ ï≠
$strï≠ É±
}É± Ñ±
,Ñ± Ö±
{Ö± Ü±
PackIconKindÜ± í±
.í± ì±
Maxcdnì± ô±
,ô± ö±
$strö± ¸≤
}¸≤ ˝≤
,˝≤ ˛≤
{˛≤ ˇ≤
PackIconKindˇ≤ ã≥
.ã≥ å≥

MedicalBagå≥ ñ≥
,ñ≥ ó≥
$stró≥ Õ¥
}Õ¥ Œ¥
,Œ¥ œ¥
{œ¥ –¥
PackIconKind–¥ ‹¥
.‹¥ ›¥
Medium›¥ „¥
,„¥ ‰¥
$str‰¥ ﬁ∑
}ﬁ∑ ﬂ∑
,ﬂ∑ ‡∑
{‡∑ ·∑
PackIconKind·∑ Ì∑
.Ì∑ Ó∑
MemoryÓ∑ Ù∑
,Ù∑ ı∑
$strı∑ …π
}…π  π
, π Àπ
{Àπ Ãπ
PackIconKindÃπ ÿπ
.ÿπ Ÿπ
MenuŸπ ›π
,›π ﬁπ
$strﬁπ é∫
}é∫ è∫
,è∫ ê∫
{ê∫ ë∫
PackIconKindë∫ ù∫
.ù∫ û∫
MenuDownû∫ ¶∫
,¶∫ ß∫
$strß∫ Ω∫
}Ω∫ æ∫
,æ∫ ø∫
{ø∫ ¿∫
PackIconKind¿∫ Ã∫
.Ã∫ Õ∫
MenuDownOutlineÕ∫ ‹∫
,‹∫ ›∫
$str›∫ ûª
}ûª üª
,üª †ª
{†ª °ª
PackIconKind°ª ≠ª
.≠ª Æª
MenuLeftÆª ∂ª
,∂ª ∑ª
$str∑ª Ãª
}Ãª Õª
,Õª Œª
{Œª œª
PackIconKindœª €ª
.€ª ‹ª
	MenuRight‹ª Âª
,Âª Êª
$strÊª ˝ª
}˝ª ˛ª
,˛ª ˇª
{ˇª Äº
PackIconKindÄº åº
.åº çº
MenuUpçº ìº
,ìº îº
$strîº ™º
}™º ´º
,´º ¨º
{¨º ≠º
PackIconKind≠º πº
.πº ∫º
MenuUpOutline∫º «º
,«º »º
$str»º äΩ
}äΩ ãΩ
,ãΩ åΩ
{åΩ çΩ
PackIconKindçΩ ôΩ
.ôΩ öΩ
MessageöΩ °Ω
,°Ω ¢Ω
$str¢Ω ÎΩ
}ÎΩ ÏΩ
,ÏΩ ÌΩ
{ÌΩ ÓΩ
PackIconKindÓΩ ˙Ω
.˙Ω ˚Ω
MessageAlert˚Ω áæ
,áæ àæ
$stràæ Óæ
}Óæ Ôæ
,Ôæ æ
{æ Òæ
PackIconKindÒæ ˝æ
.˝æ ˛æ
MessageBulleted˛æ çø
,çø éø
$stréø ≠¿
}≠¿ Æ¿
,Æ¿ Ø¿
{Ø¿ ∞¿
PackIconKind∞¿ º¿
.º¿ Ω¿"
MessageBulletedOffΩ¿ œ¿
,œ¿ –¿
$str–¿ î¬
}î¬ ï¬
,ï¬ ñ¬
{ñ¬ ó¬
PackIconKindó¬ £¬
.£¬ §¬
MessageDraw§¬ Ø¬
,Ø¬ ∞¬
$str∞¬ ˘√
}˘√ ˙√
,˙√ ˚√
{˚√ ¸√
PackIconKind¸√ àƒ
.àƒ âƒ
MessageImageâƒ ïƒ
,ïƒ ñƒ
$strñƒ Å≈
}Å≈ Ç≈
,Ç≈ É≈
{É≈ Ñ≈
PackIconKindÑ≈ ê≈
.ê≈ ë≈
MessageOutlineë≈ ü≈
,ü≈ †≈
$str†≈ ı≈
}ı≈ ˆ≈
,ˆ≈ ˜≈
{˜≈ ¯≈
PackIconKind¯≈ Ñ∆
.Ñ∆ Ö∆
MessagePlusÖ∆ ê∆
,ê∆ ë∆
$strë∆ ˝∆
}˝∆ ˛∆
,˛∆ ˇ∆
{ˇ∆ Ä«
PackIconKindÄ« å«
.å« ç«!
MessageProcessingç« û«
,û« ü«
$strü« è»
}è» ê»
,ê» ë»
{ë» í»
PackIconKindí» û»
.û» ü»
MessageReplyü» ´»
,´» ¨»
$str¨» ı»
}ı» ˆ»
,ˆ» ˜»
{˜» ¯»
PackIconKind¯» Ñ…
.Ñ… Ö… 
MessageReplyTextÖ… ï…
,ï… ñ…
$strñ… â 
}â  ä 
,ä  ã 
{ã  å 
PackIconKindå  ò 
.ò  ô 
MessageSettingsô  ® 
,®  © 
$str©  †À
}†À °À
,°À ¢À
{¢À £À
PackIconKind£À ØÀ
.ØÀ ∞À&
MessageSettingsVariant∞À ∆À
,∆À «À
$str«À Ï“
}Ï“ Ì“
,Ì“ Ó“
{Ó“ Ô“
PackIconKindÔ“ ˚“
.˚“ ¸“
MessageText¸“ á”
,á” à”
$strà” Ò”
}Ò” Ú”
,Ú” Û”
{Û” Ù”
PackIconKindÙ” Ä‘
.Ä‘ Å‘"
MessageTextOutlineÅ‘ ì‘
,ì‘ î‘
$strî‘ ë’
}ë’ í’
,í’ ì’
{ì’ î’
PackIconKindî’ †’
.†’ °’
MessageVideo°’ ≠’
,≠’ Æ’
$strÆ’ ò÷
}ò÷ ô÷
,ô÷ ö÷
{ö÷ õ÷
PackIconKindõ÷ ß÷
.ß÷ ®÷
Meteor®÷ Æ÷
,Æ÷ Ø÷
$strØ÷ Â€
}Â€ Ê€
,Ê€ Á€
{Á€ Ë€
PackIconKindË€ Ù€
.Ù€ ı€
	Metronomeı€ ˛€
,˛€ ˇ€
$strˇ€ äﬂ
}äﬂ ãﬂ
,ãﬂ åﬂ
{åﬂ çﬂ
PackIconKindçﬂ ôﬂ
.ôﬂ öﬂ
MetronomeTicköﬂ ßﬂ
,ßﬂ ®ﬂ
$str®ﬂ à·
}à· â·
,â· ä·
{ä· ã·
PackIconKindã· ó·
.ó· ò·
MicroSdò· ü·
,ü· †·
$str†· †‚
}†‚ °‚
,°‚ ¢‚
{¢‚ £‚
PackIconKind£‚ Ø‚
.Ø‚ ∞‚

Microphone∞‚ ∫‚
,∫‚ ª‚
$strª‚ Ú„
}Ú„ Û„
,Û„ Ù„
{Ù„ ı„
PackIconKindı„ Å‰
.Å‰ Ç‰
MicrophoneOffÇ‰ è‰
,è‰ ê‰
$strê‰ ÄÁ
}ÄÁ ÅÁ
,ÅÁ ÇÁ
{ÇÁ ÉÁ
PackIconKindÉÁ èÁ
.èÁ êÁ!
MicrophoneOutlineêÁ °Á
,°Á ¢Á
$str¢Á ¯È
}¯È ˘È
,˘È ˙È
{˙È ˚È
PackIconKind˚È áÍ
.áÍ àÍ"
MicrophoneSettingsàÍ öÍ
,öÍ õÍ
$strõÍ ñÏ
}ñÏ óÏ
,óÏ òÏ
{òÏ ôÏ
PackIconKindôÏ •Ï
.•Ï ¶Ï!
MicrophoneVariant¶Ï ∑Ï
,∑Ï ∏Ï
$str∏Ï ˝Ó
}˝Ó ˛Ó
,˛Ó ˇÓ
{ˇÓ ÄÔ
PackIconKindÄÔ åÔ
.åÔ çÔ$
MicrophoneVariantOffçÔ °Ô
,°Ô ¢Ô
$str¢Ô àÛ
}àÛ âÛ
,âÛ äÛ
{äÛ ãÛ
PackIconKindãÛ óÛ
.óÛ òÛ

MicroscopeòÛ ¢Û
,¢Û £Û
$str£Û Áı
}Áı Ëı
,Ëı Èı
{Èı Íı
PackIconKindÍı ˆı
.ˆı ˜ı
	Microsoft˜ı Äˆ
,Äˆ Åˆ
$strÅˆ ≈ˆ
}≈ˆ ∆ˆ
,∆ˆ «ˆ
{«ˆ »ˆ
PackIconKind»ˆ ‘ˆ
.‘ˆ ’ˆ
	Minecraft’ˆ ﬁˆ
,ﬁˆ ﬂˆ
$strﬂˆ Ë˜
}Ë˜ È˜
,È˜ Í˜
{Í˜ Î˜
PackIconKindÎ˜ ˜˜
.˜˜ ¯˜
Minus¯˜ ˝˜
,˝˜ ˛˜
$str˛˜ í¯
}í¯ ì¯
,ì¯ î¯
{î¯ ï¯
PackIconKindï¯ °¯
.°¯ ¢¯
MinusBox¢¯ ™¯
,™¯ ´¯
$str´¯ ê˘
}ê˘ ë˘
,ë˘ í˘
{í˘ ì˘
PackIconKindì˘ ü˘
.ü˘ †˘
MinusBoxOutline†˘ Ø˘
,Ø˘ ∞˘
$str∞˘ ¢˙
}¢˙ £˙
,£˙ §˙
{§˙ •˙
PackIconKind•˙ ±˙
.±˙ ≤˙
MinusCircle≤˙ Ω˙
,Ω˙ æ˙
$stræ˙ ö˚
}ö˚ õ˚
,õ˚ ú˚
{ú˚ ù˚
PackIconKindù˚ ©˚
.©˚ ™˚"
MinusCircleOutline™˚ º˚
,º˚ Ω˚
$strΩ˚ Û¸
}Û¸ Ù¸
,Ù¸ ı¸
{ı¸ ˆ¸
PackIconKindˆ¸ Ç˝
.Ç˝ É˝
MinusNetworkÉ˝ è˝
,è˝ ê˝
$strê˝ ‘˛
}‘˛ ’˛
,’˛ ÷˛
{÷˛ ◊˛
PackIconKind◊˛ „˛
.„˛ ‰˛
Mixcloud‰˛ Ï˛
,Ï˛ Ì˛
$strÌ˛ •â
}•â ¶â
,¶â ßâ
{ßâ ®â
PackIconKind®â ¥â
.¥â µâ
Mixerµâ ∫â
,∫â ªâ
$strªâ íç
}íç ìç
,ìç îç
{îç ïç
PackIconKindïç °ç
.°ç ¢ç
Monitor¢ç ©ç
,©ç ™ç
$str™ç •é
}•é ¶é
,¶é ßé
{ßé ®é
PackIconKind®é ¥é
.¥é µé
MonitorMultipleµé ƒé
,ƒé ≈é
$str≈é Ëè
}Ëè Èè
,Èè Íè
{Íè Îè
PackIconKindÎè ˜è
.˜è ¯è
More¯è ¸è
,¸è ˝è
$str˝è íì
}íì ìì
,ìì îì
{îì ïì
PackIconKindïì °ì
.°ì ¢ì
	Motorbike¢ì ´ì
,´ì ¨ì
$str¨ì åú
}åú çú
,çú éú
{éú èú
PackIconKindèú õú
.õú úú
Mouseúú °ú
,°ú ¢ú
$str¢ú óù
}óù òù
,òù ôù
{ôù öù
PackIconKindöù ¶ù
.¶ù ßù
MouseOffßù Øù
,Øù ∞ù
$str∞ù Õü
}Õü Œü
,Œü œü
{œü –ü
PackIconKind–ü ‹ü
.‹ü ›ü
MouseVariant›ü Èü
,Èü Íü
$strÍü Ù°
}Ù° ı°
,ı° ˆ°
{ˆ° ˜°
PackIconKind˜° É¢
.É¢ Ñ¢
MouseVariantOffÑ¢ ì¢
,ì¢ î¢
$strî¢ ≠•
}≠• Æ•
,Æ• Ø•
{Ø• ∞•
PackIconKind∞• º•
.º• Ω•

MoveResizeΩ• «•
,«• »•
$str»• …ß
}…ß  ß
, ß Àß
{Àß Ãß
PackIconKindÃß ÿß
.ÿß Ÿß!
MoveResizeVariantŸß Íß
,Íß Îß
$strÎß è©
}è© ê©
,ê© ë©
{ë© í©
PackIconKindí© û©
.û© ü©
Movieü© §©
,§© •©
$str•© ë™
}ë™ í™
,í™ ì™
{ì™ î™
PackIconKindî™ †™
.†™ °™
	MovieRoll°™ ™™
,™™ ´™
$str´™ Â∞
}Â∞ Ê∞
,Ê∞ Á∞
{Á∞ Ë∞
PackIconKindË∞ Ù∞
.Ù∞ ı∞
Multiplicationı∞ É±
,É± Ñ±
$strÑ± ó≤
}ó≤ ò≤
,ò≤ ô≤
{ô≤ ö≤
PackIconKindö≤ ¶≤
.¶≤ ß≤!
MultiplicationBoxß≤ ∏≤
,∏≤ π≤
$strπ≤ •¥
}•¥ ¶¥
,¶¥ ß¥
{ß¥ ®¥
PackIconKind®¥ ¥¥
.¥¥ µ¥
Mushroomµ¥ Ω¥
,Ω¥ æ¥
$stræ¥ ≤∑
}≤∑ ≥∑
,≥∑ ¥∑
{¥∑ µ∑
PackIconKindµ∑ ¡∑
.¡∑ ¬∑
MushroomOutline¬∑ —∑
,—∑ “∑
$str“∑ ∂ª
}∂ª ∑ª
,∑ª ∏ª
{∏ª πª
PackIconKindπª ≈ª
.≈ª ∆ª
Music∆ª Àª
,Àª Ãª
$strÃª ™Ω
}™Ω ´Ω
,´Ω ¨Ω
{¨Ω ≠Ω
PackIconKind≠Ω πΩ
.πΩ ∫Ω
MusicBox∫Ω ¬Ω
,¬Ω √Ω
$str√Ω Åø
}Åø Çø
,Çø Éø
{Éø Ñø
PackIconKindÑø êø
.êø ëø
MusicBoxOutlineëø †ø
,†ø °ø
$str°ø Ô¿
}Ô¿ ¿
,¿ Ò¿
{Ò¿ Ú¿
PackIconKindÚ¿ ˛¿
.˛¿ ˇ¿
MusicCircleˇ¿ ä¡
,ä¡ ã¡
$strã¡ À¬
}À¬ Ã¬
,Ã¬ Õ¬
{Õ¬ Œ¬
PackIconKindŒ¬ ⁄¬
.⁄¬ €¬
	MusicNote€¬ ‰¬
,‰¬ Â¬
$strÂ¬ Õ√
}Õ√ Œ√
,Œ√ œ√
{œ√ –√
PackIconKind–√ ‹√
.‹√ ›√"
MusicNoteBluetooth›√ Ô√
,Ô√ √
$str√ é∆
}é∆ è∆
,è∆ ê∆
{ê∆ ë∆
PackIconKindë∆ ù∆
.ù∆ û∆%
MusicNoteBluetoothOffû∆ ≥∆
,≥∆ ¥∆
$str¥∆ ¶…
}¶… ß…
,ß… ®…
{®… ©…
PackIconKind©… µ…
.µ… ∂…
MusicNoteEighth∂… ≈…
,≈… ∆…
$str∆… € 
}€  ‹ 
,‹  › 
{›  ﬁ 
PackIconKindﬁ  Í 
.Í  Î 
MusicNoteHalfÎ  ¯ 
,¯  ˘ 
$str˘  ÈÃ
}ÈÃ ÍÃ
,ÍÃ ÎÃ
{ÎÃ ÏÃ
PackIconKindÏÃ ¯Ã
.¯Ã ˘Ã
MusicNoteOff˘Ã ÖÕ
,ÖÕ ÜÕ
$strÜÕ ¿Œ
}¿Œ ¡Œ
,¡Œ ¬Œ
{¬Œ √Œ
PackIconKind√Œ œŒ
.œŒ –Œ 
MusicNoteQuarter–Œ ‡Œ
,‡Œ ·Œ
$str·Œ Òœ
}Òœ Úœ
,Úœ Ûœ
{Ûœ Ùœ
PackIconKindÙœ Ä–
.Ä– Å–"
MusicNoteSixteenthÅ– ì–
,ì– î–
$strî– ¥—
}¥— µ—
,µ— ∂—
{∂— ∑—
PackIconKind∑— √—
.√— ƒ—
MusicNoteWholeƒ— “—
,“— ”—
$str”— ≤”
}≤” ≥”
,≥” ¥”
{¥” µ”
PackIconKindµ” ¡”
.¡” ¬”
MusicOff¬”  ”
, ” À”
$strÀ” Ò’
}Ò’ Ú’
,Ú’ Û’
{Û’ Ù’
PackIconKindÙ’ Ä÷
.Ä÷ Å÷
NatureÅ÷ á÷
,á÷ à÷
$strà÷ †◊
}†◊ °◊
,°◊ ¢◊
{¢◊ £◊
PackIconKind£◊ Ø◊
.Ø◊ ∞◊
NaturePeople∞◊ º◊
,º◊ Ω◊
$strΩ◊ ›Ÿ
}›Ÿ ﬁŸ
,ﬁŸ ﬂŸ
{ﬂŸ ‡Ÿ
PackIconKind‡Ÿ ÏŸ
.ÏŸ ÌŸ

NavigationÌŸ ˜Ÿ
,˜Ÿ ¯Ÿ
$str¯Ÿ ±⁄
}±⁄ ≤⁄
,≤⁄ ≥⁄
{≥⁄ ¥⁄
PackIconKind¥⁄ ¿⁄
.¿⁄ ¡⁄
NearMe¡⁄ «⁄
,«⁄ »⁄
$str»⁄ ˚⁄
}˚⁄ ¸⁄
,¸⁄ ˝⁄
{˝⁄ ˛⁄
PackIconKind˛⁄ ä€
.ä€ ã€
Needleã€ ë€
,ë€ í€
$strí€ ≈›
}≈› ∆›
,∆› «›
{«› »›
PackIconKind»› ‘›
.‘› ’›
NestProtect’› ‡›
,‡› ·›
$str·› …ﬂ
}…ﬂ  ﬂ
, ﬂ Àﬂ
{Àﬂ Ãﬂ
PackIconKindÃﬂ ÿﬂ
.ÿﬂ Ÿﬂ
NestThermostatŸﬂ Áﬂ
,Áﬂ Ëﬂ
$strËﬂ ‰‚
}‰‚ Â‚
,Â‚ Ê‚
{Ê‚ Á‚
PackIconKindÁ‚ Û‚
.Û‚ Ù‚
NetflixÙ‚ ˚‚
,˚‚ ¸‚
$str¸‚ ˚„
}˚„ ¸„
,¸„ ˝„
{˝„ ˛„
PackIconKind˛„ ä‰
.ä‰ ã‰
Networkã‰ í‰
,í‰ ì‰
$strì‰ «Â
}«Â »Â
,»Â …Â
{…Â  Â
PackIconKind Â ÷Â
.÷Â ◊Â
NewBox◊Â ›Â
,›Â ﬁÂ
$strﬁÂ ùË
}ùË ûË
,ûË üË
{üË †Ë
PackIconKind†Ë ¨Ë
.¨Ë ≠Ë
	Newspaper≠Ë ∂Ë
,∂Ë ∑Ë
$str∑Ë ÜÍ
}ÜÍ áÍ
,áÍ àÍ
{àÍ âÍ
PackIconKindâÍ ïÍ
.ïÍ ñÍ
NfcñÍ ôÍ
,ôÍ öÍ
$ströÍ —Ò
}—Ò “Ò
,“Ò ”Ò
{”Ò ‘Ò
PackIconKind‘Ò ‡Ò
.‡Ò ·Ò
NfcTap·Ò ÁÒ
,ÁÒ ËÒ
$strËÒ ÁÛ
}ÁÛ ËÛ
,ËÛ ÈÛ
{ÈÛ ÍÛ
PackIconKindÍÛ ˆÛ
.ˆÛ ˜Û

NfcVariant˜Û ÅÙ
,ÅÙ ÇÙ
$strÇÙ Éˆ
}Éˆ Ñˆ
,Ñˆ Öˆ
{Öˆ Üˆ
PackIconKindÜˆ íˆ
.íˆ ìˆ
Ninjaìˆ òˆ
,òˆ ôˆ
$strôˆ ¥˙
}¥˙ µ˙
,µ˙ ∂˙
{∂˙ ∑˙
PackIconKind∑˙ √˙
.√˙ ƒ˙
NintendoSwitchƒ˙ “˙
,“˙ ”˙
$str”˙ È˛
}È˛ Í˛
,Í˛ Î˛
{Î˛ Ï˛
PackIconKindÏ˛ ¯˛
.¯˛ ˘˛
Nodejs˘˛ ˇ˛
,ˇ˛ Äˇ
$strÄˇ îä
}îä ïä
,ïä ñä
{ñä óä
PackIconKindóä £ä
.£ä §ä
Note§ä ®ä
,®ä ©ä
$str©ä Çã
}Çã Éã
,Éã Ñã
{Ñã Öã
PackIconKindÖã ëã
.ëã íã
NoteMultipleíã ûã
,ûã üã
$strüã úå
}úå ùå
,ùå ûå
{ûå üå
PackIconKindüå ´å
.´å ¨å#
NoteMultipleOutline¨å øå
,øå ¿å
$str¿å —ç
}—ç “ç
,“ç ”ç
{”ç ‘ç
PackIconKind‘ç ‡ç
.‡ç ·ç
NoteOutline·ç Ïç
,Ïç Ìç
$strÌç ‚é
}‚é „é
,„é ‰é
{‰é Âé
PackIconKindÂé Òé
.Òé Úé
NotePlusÚé ˙é
,˙é ˚é
$str˚é Çê
}Çê Éê
,Éê Ñê
{Ñê Öê
PackIconKindÖê ëê
.ëê íê
NotePlusOutlineíê °ê
,°ê ¢ê
$str¢ê Ωë
}Ωë æë
,æë øë
{øë ¿ë
PackIconKind¿ë Ãë
.Ãë Õë
NoteTextÕë ’ë
,’ë ÷ë
$str÷ë ◊í
}◊í ÿí
,ÿí Ÿí
{Ÿí ⁄í
PackIconKind⁄í Êí
.Êí Áí
NotebookÁí Ôí
,Ôí í
$strí Øî
}Øî ∞î
,∞î ±î
{±î ≤î
PackIconKind≤î æî
.æî øî$
NotificationClearAlløî ”î
,”î ‘î
$str‘î ˚î
}˚î ¸î
,¸î ˝î
{˝î ˛î
PackIconKind˛î äï
.äï ãï
Npmãï éï
,éï èï
$strèï ññ
}ññ óñ
,óñ òñ
{òñ ôñ
PackIconKindôñ •ñ
.•ñ ¶ñ
Nuke¶ñ ™ñ
,™ñ ´ñ
$str´ñ ®ô
}®ô ©ô
,©ô ™ô
{™ô ´ô
PackIconKind´ô ∑ô
.∑ô ∏ô
Null∏ô ºô
,ºô Ωô
$strΩô œú
}œú –ú
,–ú —ú
{—ú “ú
PackIconKind“ú ﬁú
.ﬁú ﬂú
Numericﬂú Êú
,Êú Áú
$strÁú ‹û
}‹û ›û
,›û ﬁû
{ﬁû ﬂû
PackIconKindﬂû Îû
.Îû Ïû
Numeric0BoxÏû ˜û
,˜û ¯û
$str¯û £†
}£† §†
,§† •†
{•† ¶†
PackIconKind¶† ≤†
.≤† ≥†*
Numeric0BoxMultipleOutline≥† Õ†
,Õ† Œ†
$strŒ† ¨¢
}¨¢ ≠¢
,≠¢ Æ¢
{Æ¢ Ø¢
PackIconKindØ¢ ª¢
.ª¢ º¢"
Numeric0BoxOutlineº¢ Œ¢
,Œ¢ œ¢
$strœ¢ ä§
}ä§ ã§
,ã§ å§
{å§ ç§
PackIconKindç§ ô§
.ô§ ö§
Numeric1Boxö§ •§
,•§ ¶§
$str¶§ á•
}á• à•
,à• â•
{â• ä•
PackIconKindä• ñ•
.ñ• ó•*
Numeric1BoxMultipleOutlineó• ±•
,±• ≤•
$str≤• ¬¶
}¬¶ √¶
,√¶ ƒ¶
{ƒ¶ ≈¶
PackIconKind≈¶ —¶
.—¶ “¶"
Numeric1BoxOutline“¶ ‰¶
,‰¶ Â¶
$strÂ¶ “ß
}“ß ”ß
,”ß ‘ß
{‘ß ’ß
PackIconKind’ß ·ß
.·ß ‚ß
Numeric2Box‚ß Ìß
,Ìß Óß
$strÓß ö©
}ö© õ©
,õ© ú©
{ú© ù©
PackIconKindù© ©©
.©© ™©*
Numeric2BoxMultipleOutline™© ƒ©
,ƒ© ≈©
$str≈© ô´
}ô´ ö´
,ö´ õ´
{õ´ ú´
PackIconKindú´ ®´
.®´ ©´"
Numeric2BoxOutline©´ ª´
,ª´ º´
$strº´ Ó¨
}Ó¨ Ô¨
,Ô¨ ¨
{¨ Ò¨
PackIconKindÒ¨ ˝¨
.˝¨ ˛¨
Numeric3Box˛¨ â≠
,â≠ ä≠
$strä≠ ÁÆ
}ÁÆ ËÆ
,ËÆ ÈÆ
{ÈÆ ÍÆ
PackIconKindÍÆ ˆÆ
.ˆÆ ˜Æ*
Numeric3BoxMultipleOutline˜Æ ëØ
,ëØ íØ
$stríØ à±
}à± â±
,â± ä±
{ä± ã±
PackIconKindã± ó±
.ó± ò±"
Numeric3BoxOutlineò± ™±
,™± ´±
$str´± Å≥
}Å≥ Ç≥
,Ç≥ É≥
{É≥ Ñ≥
PackIconKindÑ≥ ê≥
.ê≥ ë≥
Numeric4Boxë≥ ú≥
,ú≥ ù≥
$strù≥ â¥
}â¥ ä¥
,ä¥ ã¥
{ã¥ å¥
PackIconKindå¥ ò¥
.ò¥ ô¥*
Numeric4BoxMultipleOutlineô¥ ≥¥
,≥¥ ¥¥
$str¥¥ œµ
}œµ –µ
,–µ —µ
{—µ “µ
PackIconKind“µ ﬁµ
.ﬁµ ﬂµ"
Numeric4BoxOutlineﬂµ Òµ
,Òµ Úµ
$strÚµ Í∂
}Í∂ Î∂
,Î∂ Ï∂
{Ï∂ Ì∂
PackIconKindÌ∂ ˘∂
.˘∂ ˙∂
Numeric5Box˙∂ Ö∑
,Ö∑ Ü∑
$strÜ∑ û∏
}û∏ ü∏
,ü∏ †∏
{†∏ °∏
PackIconKind°∏ ≠∏
.≠∏ Æ∏*
Numeric5BoxMultipleOutlineÆ∏ »∏
,»∏ …∏
$str…∏ ê∫
}ê∫ ë∫
,ë∫ í∫
{í∫ ì∫
PackIconKindì∫ ü∫
.ü∫ †∫"
Numeric5BoxOutline†∫ ≤∫
,≤∫ ≥∫
$str≥∫ €ª
}€ª ‹ª
,‹ª ›ª
{›ª ﬁª
PackIconKindﬁª Íª
.Íª Îª
Numeric6BoxÎª ˆª
,ˆª ˜ª
$str˜ª ∏Ω
}∏Ω πΩ
,πΩ ∫Ω
{∫Ω ªΩ
PackIconKindªΩ «Ω
.«Ω »Ω*
Numeric6BoxMultipleOutline»Ω ‚Ω
,‚Ω „Ω
$str„Ω ’ø
}’ø ÷ø
,÷ø ◊ø
{◊ø ÿø
PackIconKindÿø ‰ø
.‰ø Âø"
Numeric6BoxOutlineÂø ˜ø
,˜ø ¯ø
$str¯ø »¡
}»¡ …¡
,…¡  ¡
{ ¡ À¡
PackIconKindÀ¡ ◊¡
.◊¡ ÿ¡
Numeric7Boxÿ¡ „¡
,„¡ ‰¡
$str‰¡ Œ¬
}Œ¬ œ¬
,œ¬ –¬
{–¬ —¬
PackIconKind—¬ ›¬
.›¬ ﬁ¬*
Numeric7BoxMultipleOutlineﬁ¬ ¯¬
,¯¬ ˘¬
$str˘¬ ëƒ
}ëƒ íƒ
,íƒ ìƒ
{ìƒ îƒ
PackIconKindîƒ †ƒ
.†ƒ °ƒ"
Numeric7BoxOutline°ƒ ≥ƒ
,≥ƒ ¥ƒ
$str¥ƒ ®≈
}®≈ ©≈
,©≈ ™≈
{™≈ ´≈
PackIconKind´≈ ∑≈
.∑≈ ∏≈
Numeric8Box∏≈ √≈
,√≈ ƒ≈
$strƒ≈ Ì«
}Ì« Ó«
,Ó« Ô«
{Ô« «
PackIconKind« ¸«
.¸« ˝«*
Numeric8BoxMultipleOutline˝« ó»
,ó» ò»
$strò» Ï 
}Ï  Ì 
,Ì  Ó 
{Ó  Ô 
PackIconKindÔ  ˚ 
.˚  ¸ "
Numeric8BoxOutline¸  éÀ
,éÀ èÀ
$strèÀ ¿Õ
}¿Õ ¡Õ
,¡Õ ¬Õ
{¬Õ √Õ
PackIconKind√Õ œÕ
.œÕ –Õ
Numeric9Box–Õ €Õ
,€Õ ‹Õ
$str‹Õ ùœ
}ùœ ûœ
,ûœ üœ
{üœ †œ
PackIconKind†œ ¨œ
.¨œ ≠œ*
Numeric9BoxMultipleOutline≠œ «œ
,«œ »œ
$str»œ ∑—
}∑— ∏—
,∏— π—
{π— ∫—
PackIconKind∫— ∆—
.∆— «—"
Numeric9BoxOutline«— Ÿ—
,Ÿ— ⁄—
$str⁄— •”
}•” ¶”
,¶” ß”
{ß” ®”
PackIconKind®” ¥”
.¥” µ”
Numeric9PlusBoxµ” ƒ”
,ƒ” ≈”
$str≈” ™’
}™’ ´’
,´’ ¨’
{¨’ ≠’
PackIconKind≠’ π’
.π’ ∫’.
Numeric9PlusBoxMultipleOutline∫’ ÿ’
,ÿ’ Ÿ’
$strŸ’ Â◊
}Â◊ Ê◊
,Ê◊ Á◊
{Á◊ Ë◊
PackIconKindË◊ Ù◊
.Ù◊ ı◊&
Numeric9PlusBoxOutlineı◊ ãÿ
,ãÿ åÿ
$stråÿ ˚Ÿ
}˚Ÿ ¸Ÿ
,¸Ÿ ˝Ÿ
{˝Ÿ ˛Ÿ
PackIconKind˛Ÿ ä⁄
.ä⁄ ã⁄
Nutã⁄ é⁄
,é⁄ è⁄
$strè⁄ ı‹
}ı‹ ˆ‹
,ˆ‹ ˜‹
{˜‹ ¯‹
PackIconKind¯‹ Ñ›
.Ñ› Ö›
	NutritionÖ› é›
,é› è›
$strè› Àﬁ
}Àﬁ Ãﬁ
,Ãﬁ Õﬁ
{Õﬁ Œﬁ
PackIconKindŒﬁ ⁄ﬁ
.⁄ﬁ €ﬁ
Oar€ﬁ ﬁﬁ
,ﬁﬁ ﬂﬁ
$strﬂﬁ ê‡
}ê‡ ë‡
,ë‡ í‡
{í‡ ì‡
PackIconKindì‡ ü‡
.ü‡ †‡
Octagon†‡ ß‡
,ß‡ ®‡
$str®‡ ‡‡
}‡‡ ·‡
,·‡ ‚‡
{‚‡ „‡
PackIconKind„‡ Ô‡
.Ô‡ ‡
OctagonOutline‡ ˛‡
,˛‡ ˇ‡
$strˇ‡ ˚·
}˚· ¸·
,¸· ˝·
{˝· ˛·
PackIconKind˛· ä‚
.ä‚ ã‚
Octagramã‚ ì‚
,ì‚ î‚
$strî‚ ø„
}ø„ ¿„
,¿„ ¡„
{¡„ ¬„
PackIconKind¬„ Œ„
.Œ„ œ„
OctagramOutlineœ„ ﬁ„
,ﬁ„ ﬂ„
$strﬂ„ üÊ
}üÊ †Ê
,†Ê °Ê
{°Ê ¢Ê
PackIconKind¢Ê ÆÊ
.ÆÊ ØÊ
OdnoklassnikiØÊ ºÊ
,ºÊ ΩÊ
$strΩÊ ∆Ï
}∆Ï «Ï
,«Ï »Ï
{»Ï …Ï
PackIconKind…Ï ’Ï
.’Ï ÷Ï
Office÷Ï ‹Ï
,‹Ï ›Ï
$str›Ï ®Ì
}®Ì ©Ì
,©Ì ™Ì
{™Ì ´Ì
PackIconKind´Ì ∑Ì
.∑Ì ∏Ì
Oil∏Ì ªÌ
,ªÌ ºÌ
$strºÌ €Ò
}€Ò ‹Ò
,‹Ò ›Ò
{›Ò ﬁÒ
PackIconKindﬁÒ ÍÒ
.ÍÒ ÎÒ
OilTemperatureÎÒ ˘Ò
,˘Ò ˙Ò
$str˙Ò ∂˝
}∂˝ ∑˝
,∑˝ ∏˝
{∏˝ π˝
PackIconKindπ˝ ≈˝
.≈˝ ∆˝
Omega∆˝ À˝
,À˝ Ã˝
$strÃ˝ ˙Ä
}˙Ä ˚Ä
,˚Ä ¸Ä
{¸Ä ˝Ä
PackIconKind˝Ä âÅ
.âÅ äÅ
OnedriveäÅ íÅ
,íÅ ìÅ
$strìÅ ∑Ü
}∑Ü ∏Ü
,∏Ü πÜ
{πÜ ∫Ü
PackIconKind∫Ü ∆Ü
.∆Ü «Ü
Onenote«Ü ŒÜ
,ŒÜ œÜ
$strœÜ ∑à
}∑à ∏à
,∏à πà
{πà ∫à
PackIconKind∫à ∆à
.∆à «à
Opacity«à Œà
,Œà œà
$strœà Áä
}Áä Ëä
,Ëä Èä
{Èä Íä
PackIconKindÍä ˆä
.ˆä ˜ä
	OpenInApp˜ä Äã
,Äã Åã
$strÅã Åå
}Åå Çå
,Çå Éå
{Éå Ñå
PackIconKindÑå êå
.êå ëå
	OpenInNewëå öå
,öå õå
$strõå °ç
}°ç ¢ç
,¢ç £ç
{£ç §ç
PackIconKind§ç ∞ç
.∞ç ±ç
Openid±ç ∑ç
,∑ç ∏ç
$str∏ç Õè
}Õè Œè
,Œè œè
{œè –è
PackIconKind–è ‹è
.‹è ›è
Opera›è ‚è
,‚è „è
$str„è ôí
}ôí öí
,öí õí
{õí úí
PackIconKindúí ®í
.®í ©í
Orbit©í Æí
,Æí Øí
$strØí Öñ
}Öñ Üñ
,Üñ áñ
{áñ àñ
PackIconKindàñ îñ
.îñ ïñ
Ornamentïñ ùñ
,ùñ ûñ
$strûñ òö
}òö ôö
,ôö öö
{öö õö
PackIconKindõö ßö
.ßö ®ö
OrnamentVariant®ö ∑ö
,∑ö ∏ö
$str∏ö •ü
}•ü ¶ü
,¶ü ßü
{ßü ®ü
PackIconKind®ü ¥ü
.¥ü µü
Owlµü ∏ü
,∏ü πü
$strπü á•
}á• à•
,à• â•
{â• ä•
PackIconKindä• ñ•
.ñ• ó•
Packageó• û•
,û• ü•
$strü• Äß
}Äß Åß
,Åß Çß
{Çß Éß
PackIconKindÉß èß
.èß êß
PackageDownêß õß
,õß úß
$strúß ê©
}ê© ë©
,ë© í©
{í© ì©
PackIconKindì© ü©
.ü© †©
	PackageUp†© ©©
,©© ™©
$str™© °´
}°´ ¢´
,¢´ £´
{£´ §´
PackIconKind§´ ∞´
.∞´ ±´
PackageVariant±´ ø´
,ø´ ¿´
$str¿´ ∂∞
}∂∞ ∑∞
,∑∞ ∏∞
{∏∞ π∞
PackIconKindπ∞ ≈∞
.≈∞ ∆∞$
PackageVariantClosed∆∞ ⁄∞
,⁄∞ €∞
$str€∞ •¥
}•¥ ¶¥
,¶¥ ß¥
{ß¥ ®¥
PackIconKind®¥ ¥¥
.¥¥ µ¥
	PageFirstµ¥ æ¥
,æ¥ ø¥
$strø¥ åµ
}åµ çµ
,çµ éµ
{éµ èµ
PackIconKindèµ õµ
.õµ úµ
PageLastúµ §µ
,§µ •µ
$str•µ Ôµ
}Ôµ µ
,µ Òµ
{Òµ Úµ
PackIconKindÚµ ˛µ
.˛µ ˇµ
PageLayoutBodyˇµ ç∂
,ç∂ é∂
$stré∂ È∂
}È∂ Í∂
,Í∂ Î∂
{Î∂ Ï∂
PackIconKindÏ∂ ¯∂
.¯∂ ˘∂ 
PageLayoutFooter˘∂ â∑
,â∑ ä∑
$strä∑ Á∑
}Á∑ Ë∑
,Ë∑ È∑
{È∑ Í∑
PackIconKindÍ∑ ˆ∑
.ˆ∑ ˜∑ 
PageLayoutHeader˜∑ á∏
,á∏ à∏
$strà∏ ‚∏
}‚∏ „∏
,„∏ ‰∏
{‰∏ Â∏
PackIconKindÂ∏ Ò∏
.Ò∏ Ú∏%
PageLayoutSidebarLeftÚ∏ áπ
,áπ àπ
$stràπ „π
}„π ‰π
,‰π Âπ
{Âπ Êπ
PackIconKindÊπ Úπ
.Úπ Ûπ&
PageLayoutSidebarRightÛπ â∫
,â∫ ä∫
$strä∫ Á∫
}Á∫ Ë∫
,Ë∫ È∫
{È∫ Í∫
PackIconKindÍ∫ ˆ∫
.ˆ∫ ˜∫
Palette˜∫ ˛∫
,˛∫ ˇ∫
$strˇ∫ ≠ø
}≠ø Æø
,Æø Øø
{Øø ∞ø
PackIconKind∞ø ºø
.ºø Ωø
PaletteAdvancedΩø Ãø
,Ãø Õø
$strÕø ˙¿
}˙¿ ˚¿
,˚¿ ¸¿
{¸¿ ˝¿
PackIconKind˝¿ â¡
.â¡ ä¡
Pandaä¡ è¡
,è¡ ê¡
$strê¡ †…
}†… °…
,°… ¢…
{¢… £…
PackIconKind£… Ø…
.Ø… ∞…
Pandora∞… ∑…
,∑… ∏…
$str∏… ÊÀ
}ÊÀ ÁÀ
,ÁÀ ËÀ
{ËÀ ÈÀ
PackIconKindÈÀ ıÀ
.ıÀ ˆÀ
PanoramaˆÀ ˛À
,˛À ˇÀ
$strˇÀ ÔÃ
}ÔÃ Ã
,Ã ÒÃ
{ÒÃ ÚÃ
PackIconKindÚÃ ˛Ã
.˛Ã ˇÃ
PanoramaFisheyeˇÃ éÕ
,éÕ èÕ
$strèÕ …Œ
}…Œ  Œ
, Œ ÀŒ
{ÀŒ ÃŒ
PackIconKindÃŒ ÿŒ
.ÿŒ ŸŒ"
PanoramaHorizontalŸŒ ÎŒ
,ÎŒ ÏŒ
$strÏŒ «“
}«“ »“
,»“ …“
{…“  “
PackIconKind “ ÷“
.÷“ ◊“ 
PanoramaVertical◊“ Á“
,Á“ Ë“
$strË“ ƒ÷
}ƒ÷ ≈÷
,≈÷ ∆÷
{∆÷ «÷
PackIconKind«÷ ”÷
.”÷ ‘÷!
PanoramaWideAngle‘÷ Â÷
,Â÷ Ê÷
$strÊ÷ ˝⁄
}˝⁄ ˛⁄
,˛⁄ ˇ⁄
{ˇ⁄ Ä€
PackIconKindÄ€ å€
.å€ ç€ 
PaperCutVerticalç€ ù€
,ù€ û€
$strû€ ”‡
}”‡ ‘‡
,‘‡ ’‡
{’‡ ÷‡
PackIconKind÷‡ ‚‡
.‚‡ „‡
	Paperclip„‡ Ï‡
,Ï‡ Ì‡
$strÌ‡ â„
}â„ ä„
,ä„ ã„
{ã„ å„
PackIconKindå„ ò„
.ò„ ô„
Parkingô„ †„
,†„ °„
$str°„ ê‰
}ê‰ ë‰
,ë‰ í‰
{í‰ ì‰
PackIconKindì‰ ü‰
.ü‰ †‰
Passport†‰ ®‰
,®‰ ©‰
$str©‰ îÏ
}îÏ ïÏ
,ïÏ ñÏ
{ñÏ óÏ
PackIconKindóÏ £Ï
.£Ï §Ï
Pause§Ï ©Ï
,©Ï ™Ï
$str™Ï  Ï
} Ï ÀÏ
,ÀÏ ÃÏ
{ÃÏ ÕÏ
PackIconKindÕÏ ŸÏ
.ŸÏ ⁄Ï
PauseCircle⁄Ï ÂÏ
,ÂÏ ÊÏ
$strÊÏ œÌ
}œÌ –Ì
,–Ì —Ì
{—Ì “Ì
PackIconKind“Ì ﬁÌ
.ﬁÌ ﬂÌ"
PauseCircleOutlineﬂÌ ÒÌ
,ÒÌ ÚÌ
$strÚÌ £Ô
}£Ô §Ô
,§Ô •Ô
{•Ô ¶Ô
PackIconKind¶Ô ≤Ô
.≤Ô ≥Ô
PauseOctagon≥Ô øÔ
,øÔ ¿Ô
$str¿Ô ¢
}¢ £
,£ §
{§ •
PackIconKind• ±
.± ≤#
PauseOctagonOutline≤ ≈
,≈ ∆
$str∆ ›Ò
}›Ò ﬁÒ
,ﬁÒ ﬂÒ
{ﬂÒ ‡Ò
PackIconKind‡Ò ÏÒ
.ÏÒ ÌÒ
PawÌÒ Ò
,Ò ÒÒ
$strÒÒ ˇ˜
}ˇ˜ Ä¯
,Ä¯ Å¯
{Å¯ Ç¯
PackIconKindÇ¯ é¯
.é¯ è¯
PawOffè¯ ï¯
,ï¯ ñ¯
$strñ¯ Ò˝
}Ò˝ Ú˝
,Ú˝ Û˝
{Û˝ Ù˝
PackIconKindÙ˝ Ä˛
.Ä˛ Å˛
PenÅ˛ Ñ˛
,Ñ˛ Ö˛
$strÖ˛ ‘Ä
}‘Ä ’Ä
,’Ä ÷Ä
{÷Ä ◊Ä
PackIconKind◊Ä „Ä
.„Ä ‰Ä
Pencil‰Ä ÍÄ
,ÍÄ ÎÄ
$strÎÄ ÄÇ
}ÄÇ ÅÇ
,ÅÇ ÇÇ
{ÇÇ ÉÇ
PackIconKindÉÇ èÇ
.èÇ êÇ
	PencilBoxêÇ ôÇ
,ôÇ öÇ
$ströÇ ëÑ
}ëÑ íÑ
,íÑ ìÑ
{ìÑ îÑ
PackIconKindîÑ †Ñ
.†Ñ °Ñ 
PencilBoxOutline°Ñ ±Ñ
,±Ñ ≤Ñ
$str≤Ñ πÜ
}πÜ ∫Ü
,∫Ü ªÜ
{ªÜ ºÜ
PackIconKindºÜ »Ü
.»Ü …Ü
PencilCircle…Ü ’Ü
,’Ü ÷Ü
$str÷Ü ˝à
}˝à ˛à
,˛à ˇà
{ˇà Äâ
PackIconKindÄâ åâ
.åâ çâ#
PencilCircleOutlineçâ †â
,†â °â
$str°â ‘ã
}‘ã ’ã
,’ã ÷ã
{÷ã ◊ã
PackIconKind◊ã „ã
.„ã ‰ã

PencilLock‰ã Óã
,Óã Ôã
$strÔã ÿé
}ÿé Ÿé
,Ÿé ⁄é
{⁄é €é
PackIconKind€é Áé
.Áé Ëé
	PencilOffËé Òé
,Òé Úé
$strÚé òë
}òë ôë
,ôë öë
{öë õë
PackIconKindõë ßë
.ßë ®ë
Pentagon®ë ∞ë
,∞ë ±ë
$str±ë ›ë
}›ë ﬁë
,ﬁë ﬂë
{ﬂë ‡ë
PackIconKind‡ë Ïë
.Ïë Ìë
PentagonOutlineÌë ¸ë
,¸ë ˝ë
$str˝ë ‘í
}‘í ’í
,’í ÷í
{÷í ◊í
PackIconKind◊í „í
.„í ‰í
Percent‰í Îí
,Îí Ïí
$strÏí õî
}õî úî
,úî ùî
{ùî ûî
PackIconKindûî ™î
.™î ´î 
PeriodicTableCo2´î ªî
,ªî ºî
$strºî «ñ
}«ñ »ñ
,»ñ …ñ
{…ñ  ñ
PackIconKind ñ ÷ñ
.÷ñ ◊ñ
	Periscope◊ñ ‡ñ
,‡ñ ·ñ
$str·ñ ïô
}ïô ñô
,ñô óô
{óô òô
PackIconKindòô §ô
.§ô •ô
Pharmacy•ô ≠ô
,≠ô Æô
$strÆô üö
}üö †ö
,†ö °ö
{°ö ¢ö
PackIconKind¢ö Æö
.Æö Øö
PhoneØö ¥ö
,¥ö µö
$strµö Œú
}Œú œú
,œú –ú
{–ú —ú
PackIconKind—ú ›ú
.›ú ﬁú
PhoneBluetoothﬁú Ïú
,Ïú Ìú
$strÌú ¨†
}¨† ≠†
,≠† Æ†
{Æ† Ø†
PackIconKindØ† ª†
.ª† º†
PhoneClassicº† »†
,»† …†
$str…† £¶
}£¶ §¶
,§¶ •¶
{•¶ ¶¶
PackIconKind¶¶ ≤¶
.≤¶ ≥¶
PhoneForward≥¶ ø¶
,ø¶ ¿¶
$str¿¶ Û®
}Û® Ù®
,Ù® ı®
{ı® ˆ®
PackIconKindˆ® Ç©
.Ç© É©
PhoneHangupÉ© é©
,é© è©
$strè© ö≠
}ö≠ õ≠
,õ≠ ú≠
{ú≠ ù≠
PackIconKindù≠ ©≠
.©≠ ™≠
PhoneInTalk™≠ µ≠
,µ≠ ∂≠
$str∂≠ ©∞
}©∞ ™∞
,™∞ ´∞
{´∞ ¨∞
PackIconKind¨∞ ∏∞
.∏∞ π∞
PhoneIncomingπ∞ ∆∞
,∆∞ «∞
$str«∞ Ü≥
}Ü≥ á≥
,á≥ à≥
{à≥ â≥
PackIconKindâ≥ ï≥
.ï≥ ñ≥
PhoneLockedñ≥ °≥
,°≥ ¢≥
$str¢≥ ˚∂
}˚∂ ¸∂
,¸∂ ˝∂
{˝∂ ˛∂
PackIconKind˛∂ ä∑
.ä∑ ã∑
PhoneLogã∑ ì∑
,ì∑ î∑
$strî∑ ˘π
}˘π ˙π
,˙π ˚π
{˚π ¸π
PackIconKind¸π à∫
.à∫ â∫

PhoneMinusâ∫ ì∫
,ì∫ î∫
$strî∫ Øº
}Øº ∞º
,∞º ±º
{±º ≤º
PackIconKind≤º æº
.æº øº
PhoneMissedøº  º
, º Àº
$strÀº †¡
}†¡ °¡
,°¡ ¢¡
{¢¡ £¡
PackIconKind£¡ Ø¡
.Ø¡ ∞¡
PhoneOutgoing∞¡ Ω¡
,Ω¡ æ¡
$stræ¡ ˝√
}˝√ ˛√
,˛√ ˇ√
{ˇ√ Äƒ
PackIconKindÄƒ åƒ
.åƒ çƒ
PhonePausedçƒ òƒ
,òƒ ôƒ
$strôƒ Õ∆
}Õ∆ Œ∆
,Œ∆ œ∆
{œ∆ –∆
PackIconKind–∆ ‹∆
.‹∆ ›∆
	PhonePlus›∆ Ê∆
,Ê∆ Á∆
$strÁ∆ ó…
}ó… ò…
,ò… ô…
{ô… ö…
PackIconKindö… ¶…
.¶… ß…
PhoneReturnß… ≤…
,≤… ≥…
$str≥… †Ã
}†Ã °Ã
,°Ã ¢Ã
{¢Ã £Ã
PackIconKind£Ã ØÃ
.ØÃ ∞Ã
PhoneSettings∞Ã ΩÃ
,ΩÃ æÃ
$stræÃ Äœ
}Äœ Åœ
,Åœ Çœ
{Çœ Éœ
PackIconKindÉœ èœ
.èœ êœ
	PhoneVoipêœ ôœ
,ôœ öœ
$ströœ ∏‘
}∏‘ π‘
,π‘ ∫‘
{∫‘ ª‘
PackIconKindª‘ «‘
.«‘ »‘
Pi»‘  ‘
, ‘ À‘
$strÀ‘ ¨’
}¨’ ≠’
,≠’ Æ’
{Æ’ Ø’
PackIconKindØ’ ª’
.ª’ º’
PiBoxº’ ¡’
,¡’ ¬’
$str¬’ Ô÷
}Ô÷ ÷
,÷ Ò÷
{Ò÷ Ú÷
PackIconKindÚ÷ ˛÷
.˛÷ ˇ÷
Pianoˇ÷ Ñ◊
,Ñ◊ Ö◊
$strÖ◊ ¢ÿ
}¢ÿ £ÿ
,£ÿ §ÿ
{§ÿ •ÿ
PackIconKind•ÿ ±ÿ
.±ÿ ≤ÿ
Pig≤ÿ µÿ
,µÿ ∂ÿ
$str∂ÿ Ü‡
}Ü‡ á‡
,á‡ à‡
{à‡ â‡
PackIconKindâ‡ ï‡
.ï‡ ñ‡
Pillñ‡ ö‡
,ö‡ õ‡
$strõ‡ ·‚
}·‚ ‚‚
,‚‚ „‚
{„‚ ‰‚
PackIconKind‰‚ ‚
.‚ Ò‚
PillarÒ‚ ˜‚
,˜‚ ¯‚
$str¯‚ ˘„
}˘„ ˙„
,˙„ ˚„
{˚„ ¸„
PackIconKind¸„ à‰
.à‰ â‰
Pinâ‰ å‰
,å‰ ç‰
$strç‰  ‰
} ‰ À‰
,À‰ Ã‰
{Ã‰ Õ‰
PackIconKindÕ‰ Ÿ‰
.Ÿ‰ ⁄‰
PinOff⁄‰ ‡‰
,‡‰ ·‰
$str·‰ ﬁÂ
}ﬁÂ ﬂÂ
,ﬂÂ ‡Â
{‡Â ·Â
PackIconKind·Â ÌÂ
.ÌÂ ÓÂ
PineTreeÓÂ ˆÂ
,ˆÂ ˜Â
$str˜Â ∏Ê
}∏Ê πÊ
,πÊ ∫Ê
{∫Ê ªÊ
PackIconKindªÊ «Ê
.«Ê »Ê
PineTreeBox»Ê ”Ê
,”Ê ‘Ê
$str‘Ê ‡Á
}‡Á ·Á
,·Á ‚Á
{‚Á „Á
PackIconKind„Á ÔÁ
.ÔÁ Á
	PinterestÁ ˘Á
,˘Á ˙Á
$str˙Á ≤Ì
}≤Ì ≥Ì
,≥Ì ¥Ì
{¥Ì µÌ
PackIconKindµÌ ¡Ì
.¡Ì ¬Ì
PinterestBox¬Ì ŒÌ
,ŒÌ œÌ
$strœÌ ≤Û
}≤Û ≥Û
,≥Û ¥Û
{¥Û µÛ
PackIconKindµÛ ¡Û
.¡Û ¬Û
Pipe¬Û ∆Û
,∆Û «Û
$str«Û ¨Ù
}¨Ù ≠Ù
,≠Ù ÆÙ
{ÆÙ ØÙ
PackIconKindØÙ ªÙ
.ªÙ ºÙ 
PipeDisconnectedºÙ ÃÙ
,ÃÙ ÕÙ
$strÕÙ ƒı
}ƒı ≈ı
,≈ı ∆ı
{∆ı «ı
PackIconKind«ı ”ı
.”ı ‘ı
Pistol‘ı ⁄ı
,⁄ı €ı
$str€ı Å¯
}Å¯ Ç¯
,Ç¯ É¯
{É¯ Ñ¯
PackIconKindÑ¯ ê¯
.ê¯ ë¯
Pizzaë¯ ñ¯
,ñ¯ ó¯
$stró¯ Ë˘
}Ë˘ È˘
,È˘ Í˘
{Í˘ Î˘
PackIconKindÎ˘ ˜˘
.˜˘ ¯˘
PlaneShield¯˘ É˙
,É˙ Ñ˙
$strÑ˙ ó¸
}ó¸ ò¸
,ò¸ ô¸
{ô¸ ö¸
PackIconKindö¸ ¶¸
.¶¸ ß¸
Playß¸ ´¸
,´¸ ¨¸
$str¨¸ Ã¸
}Ã¸ Õ¸
,Õ¸ Œ¸
{Œ¸ œ¸
PackIconKindœ¸ €¸
.€¸ ‹¸
PlayBoxOutline‹¸ Í¸
,Í¸ Î¸
$strÎ¸ ﬁ˝
}ﬁ˝ ﬂ˝
,ﬂ˝ ‡˝
{‡˝ ·˝
PackIconKind·˝ Ì˝
.Ì˝ Ó˝

PlayCircleÓ˝ ¯˝
,¯˝ ˘˝
$str˘˝ Ÿ˛
}Ÿ˛ ⁄˛
,⁄˛ €˛
{€˛ ‹˛
PackIconKind‹˛ Ë˛
.Ë˛ È˛!
PlayCircleOutlineÈ˛ ˙˛
,˙˛ ˚˛
$str˚˛ øÄ
}øÄ ¿Ä
,¿Ä ¡Ä
{¡Ä ¬Ä
PackIconKind¬Ä ŒÄ
.ŒÄ œÄ
	PlayPauseœÄ ÿÄ
,ÿÄ ŸÄ
$strŸÄ ÉÅ
}ÉÅ ÑÅ
,ÑÅ ÖÅ
{ÖÅ ÜÅ
PackIconKindÜÅ íÅ
.íÅ ìÅ$
PlayProtectedContentìÅ ßÅ
,ßÅ ®Å
$str®Å ±Ç
}±Ç ≤Ç
,≤Ç ≥Ç
{≥Ç ¥Ç
PackIconKind¥Ç ¿Ç
.¿Ç ¡Ç
PlaylistCheck¡Ç ŒÇ
,ŒÇ œÇ
$strœÇ ∑É
}∑É ∏É
,∏É πÉ
{πÉ ∫É
PackIconKind∫É ∆É
.∆É «É
PlaylistMinus«É ‘É
,‘É ’É
$str’É ëÑ
}ëÑ íÑ
,íÑ ìÑ
{ìÑ îÑ
PackIconKindîÑ †Ñ
.†Ñ °Ñ
PlaylistPlay°Ñ ≠Ñ
,≠Ñ ÆÑ
$strÆÑ ÛÑ
}ÛÑ ÙÑ
,ÙÑ ıÑ
{ıÑ ˆÑ
PackIconKindˆÑ ÇÖ
.ÇÖ ÉÖ
PlaylistPlusÉÖ èÖ
,èÖ êÖ
$strêÖ ‰Ö
}‰Ö ÂÖ
,ÂÖ ÊÖ
{ÊÖ ÁÖ
PackIconKindÁÖ ÛÖ
.ÛÖ ÙÖ
PlaylistRemoveÙÖ ÇÜ
,ÇÜ ÉÜ
$strÉÜ √á
}√á ƒá
,ƒá ≈á
{≈á ∆á
PackIconKind∆á “á
.“á ”á
Playstation”á ﬁá
,ﬁá ﬂá
$strﬂá çç
}çç éç
,éç èç
{èç êç
PackIconKindêç úç
.úç ùç
Plexùç °ç
,°ç ¢ç
$str¢ç ∑é
}∑é ∏é
,∏é πé
{πé ∫é
PackIconKind∫é ∆é
.∆é «é
Plus«é Àé
,Àé Ãé
$strÃé ˜é
}˜é ¯é
,¯é ˘é
{˘é ˙é
PackIconKind˙é Üè
.Üè áè
PlusBoxáè éè
,éè èè
$strèè ãê
}ãê åê
,åê çê
{çê éê
PackIconKindéê öê
.öê õê
PlusBoxOutlineõê ©ê
,©ê ™ê
$str™ê ≤ë
}≤ë ≥ë
,≥ë ¥ë
{¥ë µë
PackIconKindµë ¡ë
.¡ë ¬ë

PlusCircle¬ë Ãë
,Ãë Õë
$strÕë ¿í
}¿í ¡í
,¡í ¬í
{¬í √í
PackIconKind√í œí
.œí –í)
PlusCircleMultipleOutline–í Èí
,Èí Íí
$strÍí πï
}πï ∫ï
,∫ï ªï
{ªï ºï
PackIconKindºï »ï
.»ï …ï!
PlusCircleOutline…ï ⁄ï
,⁄ï €ï
$str€ï ¨ó
}¨ó ≠ó
,≠ó Æó
{Æó Øó
PackIconKindØó ªó
.ªó ºó
PlusNetworkºó «ó
,«ó »ó
$str»ó ¢ô
}¢ô £ô
,£ô §ô
{§ô •ô
PackIconKind•ô ±ô
.±ô ≤ô
PlusOne≤ô πô
,πô ∫ô
$str∫ô âö
}âö äö
,äö ãö
{ãö åö
PackIconKindåö òö
.òö ôö
PlusOutlineôö §ö
,§ö •ö
$str•ö Úö
}Úö Ûö
,Ûö Ùö
{Ùö ıö
PackIconKindıö Åõ
.Åõ Çõ
PocketÇõ àõ
,àõ âõ
$strâõ ¥ù
}¥ù µù
,µù ∂ù
{∂ù ∑ù
PackIconKind∑ù √ù
.√ù ƒù
Pokeballƒù Ãù
,Ãù Õù
$strÕù ‘†
}‘† ’†
,’† ÷†
{÷† ◊†
PackIconKind◊† „†
.„† ‰†
	PokerChip‰† Ì†
,Ì† Ó†
$strÓ† ˝•
}˝• ˛•
,˛• ˇ•
{ˇ• Ä¶
PackIconKindÄ¶ å¶
.å¶ ç¶
Polaroidç¶ ï¶
,ï¶ ñ¶
$strñ¶ Ò¶
}Ò¶ Ú¶
,Ú¶ Û¶
{Û¶ Ù¶
PackIconKindÙ¶ Äß
.Äß Åß
PollÅß Öß
,Öß Üß
$strÜß ∫ß
}∫ß ªß
,ªß ºß
{ºß Ωß
PackIconKindΩß …ß
.…ß  ß
PollBox ß —ß
,—ß “ß
$str“ß “®
}“® ”®
,”® ‘®
{‘® ’®
PackIconKind’® ·®
.·® ‚®
Polymer‚® È®
,È® Í®
$strÍ® √©
}√© ƒ©
,ƒ© ≈©
{≈© ∆©
PackIconKind∆© “©
.“© ”©
Pool”© ◊©
,◊© ÿ©
$strÿ© ∆≠
}∆≠ «≠
,«≠ »≠
{»≠ …≠
PackIconKind…≠ ’≠
.’≠ ÷≠
Popcorn÷≠ ›≠
,›≠ ﬁ≠
$strﬁ≠ ÿ±
}ÿ± Ÿ±
,Ÿ± ⁄±
{⁄± €±
PackIconKind€± Á±
.Á± Ë±
PotË± Î±
,Î± Ï±
$strÏ± ˇ≤
}ˇ≤ Ä≥
,Ä≥ Å≥
{Å≥ Ç≥
PackIconKindÇ≥ é≥
.é≥ è≥
PotMixè≥ ï≥
,ï≥ ñ≥
$strñ≥ Û≥
}Û≥ Ù≥
,Ù≥ ı≥
{ı≥ ˆ≥
PackIconKindˆ≥ Ç¥
.Ç¥ É¥
PoundÉ¥ à¥
,à¥ â¥
$strâ¥ Ùµ
}Ùµ ıµ
,ıµ ˆµ
{ˆµ ˜µ
PackIconKind˜µ É∂
.É∂ Ñ∂
PoundBoxÑ∂ å∂
,å∂ ç∂
$strç∂ ø∏
}ø∏ ¿∏
,¿∏ ¡∏
{¡∏ ¬∏
PackIconKind¬∏ Œ∏
.Œ∏ œ∏
Powerœ∏ ‘∏
,‘∏ ’∏
$str’∏ ¨∫
}¨∫ ≠∫
,≠∫ Æ∫
{Æ∫ Ø∫
PackIconKindØ∫ ª∫
.ª∫ º∫
	PowerPlugº∫ ≈∫
,≈∫ ∆∫
$str∆∫ úª
}úª ùª
,ùª ûª
{ûª üª
PackIconKindüª ´ª
.´ª ¨ª
PowerPlugOff¨ª ∏ª
,∏ª πª
$strπª íæ
}íæ ìæ
,ìæ îæ
{îæ ïæ
PackIconKindïæ °æ
.°æ ¢æ
PowerSettings¢æ Øæ
,Øæ ∞æ
$str∞æ µ¿
}µ¿ ∂¿
,∂¿ ∑¿
{∑¿ ∏¿
PackIconKind∏¿ ƒ¿
.ƒ¿ ≈¿
PowerSocket≈¿ –¿
,–¿ —¿
$str—¿ ¥¡
}¥¡ µ¡
,µ¡ ∂¡
{∂¡ ∑¡
PackIconKind∑¡ √¡
.√¡ ƒ¡
PowerSocketEuƒ¡ —¡
,—¡ “¡
$str“¡ Ãƒ
}Ãƒ Õƒ
,Õƒ Œƒ
{Œƒ œƒ
PackIconKindœƒ €ƒ
.€ƒ ‹ƒ
PowerSocketUk‹ƒ Èƒ
,Èƒ Íƒ
$strÍƒ ‰∆
}‰∆ Â∆
,Â∆ Ê∆
{Ê∆ Á∆
PackIconKindÁ∆ Û∆
.Û∆ Ù∆
PowerSocketUsÙ∆ Å«
,Å« Ç«
$strÇ« ¶…
}¶… ß…
,ß… ®…
{®… ©…
PackIconKind©… µ…
.µ… ∂…
Prescription∂… ¬…
,¬… √…
$str√… úÀ
}úÀ ùÀ
,ùÀ ûÀ
{ûÀ üÀ
PackIconKindüÀ ´À
.´À ¨À
Presentation¨À ∏À
,∏À πÀ
$strπÀ ØÃ
}ØÃ ∞Ã
,∞Ã ±Ã
{±Ã ≤Ã
PackIconKind≤Ã æÃ
.æÃ øÃ 
PresentationPlayøÃ œÃ
,œÃ –Ã
$str–Ã ñœ
}ñœ óœ
,óœ òœ
{òœ ôœ
PackIconKindôœ •œ
.•œ ¶œ
Printer¶œ ≠œ
,≠œ Æœ
$strÆœ  –
} – À–
,À– Ã–
{Ã– Õ–
PackIconKindÕ– Ÿ–
.Ÿ– ⁄–
	Printer3d⁄– „–
,„– ‰–
$str‰– Ä’
}Ä’ Å’
,Å’ Ç’
{Ç’ É’
PackIconKindÉ’ è’
.è’ ê’
PrinterAlertê’ ú’
,ú’ ù’
$strù’ ‡÷
}‡÷ ·÷
,·÷ ‚÷
{‚÷ „÷
PackIconKind„÷ Ô÷
.Ô÷ ÷
PrinterSettings÷ ˇ÷
,ˇ÷ Ä◊
$strÄ◊ ”ÿ
}”ÿ ‘ÿ
,‘ÿ ’ÿ
{’ÿ ÷ÿ
PackIconKind÷ÿ ‚ÿ
.‚ÿ „ÿ
PriorityHigh„ÿ Ôÿ
,Ôÿ ÿ
$strÿ ù⁄
}ù⁄ û⁄
,û⁄ ü⁄
{ü⁄ †⁄
PackIconKind†⁄ ¨⁄
.¨⁄ ≠⁄
PriorityLow≠⁄ ∏⁄
,∏⁄ π⁄
$strπ⁄ Á€
}Á€ Ë€
,Ë€ È€
{È€ Í€
PackIconKindÍ€ ˆ€
.ˆ€ ˜€#
ProfessionalHexagon˜€ ä‹
,ä‹ ã‹
$strã‹ ∞‚
}∞‚ ±‚
,±‚ ≤‚
{≤‚ ≥‚
PackIconKind≥‚ ø‚
.ø‚ ¿‚
	Projector¿‚ …‚
,…‚  ‚
$str ‚ äÊ
}äÊ ãÊ
,ãÊ åÊ
{åÊ çÊ
PackIconKindçÊ ôÊ
.ôÊ öÊ
ProjectorScreenöÊ ©Ê
,©Ê ™Ê
$str™Ê ÷Á
}÷Á ◊Á
,◊Á ÿÁ
{ÿÁ ŸÁ
PackIconKindŸÁ ÂÁ
.ÂÁ ÊÁ
PublishÊÁ ÌÁ
,ÌÁ ÓÁ
$strÓÁ õË
}õË úË
,úË ùË
{ùË ûË
PackIconKindûË ™Ë
.™Ë ´Ë
Pulse´Ë ∞Ë
,∞Ë ±Ë
$str±Ë úÈ
}úÈ ùÈ
,ùÈ ûÈ
{ûÈ üÈ
PackIconKindüÈ ´È
.´È ¨È
Puzzle¨È ≤È
,≤È ≥È
$str≥È ÈÎ
}ÈÎ ÍÎ
,ÍÎ ÎÎ
{ÎÎ ÏÎ
PackIconKindÏÎ ¯Î
.¯Î ˘Î
Qqchat˘Î ˇÎ
,ˇÎ ÄÏ
$strÄÏ ˇ
}ˇ ÄÒ
,ÄÒ ÅÒ
{ÅÒ ÇÒ
PackIconKindÇÒ éÒ
.éÒ èÒ
QrcodeèÒ ïÒ
,ïÒ ñÒ
$strñÒ ÅÛ
}ÅÛ ÇÛ
,ÇÛ ÉÛ
{ÉÛ ÑÛ
PackIconKindÑÛ êÛ
.êÛ ëÛ

QrcodeScanëÛ õÛ
,õÛ úÛ
$strúÛ òˆ
}òˆ ôˆ
,ôˆ öˆ
{öˆ õˆ
PackIconKindõˆ ßˆ
.ßˆ ®ˆ

Quadcopter®ˆ ≤ˆ
,≤ˆ ≥ˆ
$str≥ˆ ÚÉ
}ÚÉ ÛÉ
,ÛÉ ÙÉ
{ÙÉ ıÉ
PackIconKindıÉ ÅÑ
.ÅÑ ÇÑ
QualityHighÇÑ çÑ
,çÑ éÑ
$stréÑ äÜ
}äÜ ãÜ
,ãÜ åÜ
{åÜ çÜ
PackIconKindçÜ ôÜ
.ôÜ öÜ
	QuicktimeöÜ £Ü
,£Ü §Ü
$str§Ü äâ
}äâ ãâ
,ãâ åâ
{åâ çâ
PackIconKindçâ ôâ
.ôâ öâ
Radaröâ üâ
,üâ †â
$str†â Ùå
}Ùå ıå
,ıå ˆå
{ˆå ˜å
PackIconKind˜å Éç
.Éç Ñç
RadiatorÑç åç
,åç çç
$strçç Öí
}Öí Üí
,Üí áí
{áí àí
PackIconKindàí îí
.îí ïí
Radioïí öí
,öí õí
$strõí Ìì
}Ìì Óì
,Óì Ôì
{Ôì ì
PackIconKindì ¸ì
.¸ì ˝ì
RadioHandheld˝ì äî
,äî ãî
$strãî üï
}üï †ï
,†ï °ï
{°ï ¢ï
PackIconKind¢ï Æï
.Æï Øï

RadioTowerØï πï
,πï ∫ï
$str∫ï “ô
}“ô ”ô
,”ô ‘ô
{‘ô ’ô
PackIconKind’ô ·ô
.·ô ‚ô
Radioactive‚ô Ìô
,Ìô Óô
$strÓô …ú
}…ú  ú
, ú Àú
{Àú Ãú
PackIconKindÃú ÿú
.ÿú Ÿú
RadioboxBlankŸú Êú
,Êú Áú
$strÁú ˘ù
}˘ù ˙ù
,˙ù ˚ù
{˚ù ¸ù
PackIconKind¸ù àû
.àû âû
RadioboxMarkedâû óû
,óû òû
$stròû Ìü
}Ìü Óü
,Óü Ôü
{Ôü ü
PackIconKindü ¸ü
.¸ü ˝ü
Raspberrypi˝ü à†
,à† â†
$strâ† •¢
}•¢ ¶¢
,¶¢ ß¢
{ß¢ ®¢
PackIconKind®¢ ¥¢
.¥¢ µ¢
RayEndµ¢ ª¢
,ª¢ º¢
$strº¢ •£
}•£ ¶£
,¶£ ß£
{ß£ ®£
PackIconKind®£ ¥£
.¥£ µ£
RayEndArrowµ£ ¿£
,¿£ ¡£
$str¡£ ∂§
}∂§ ∑§
,∑§ ∏§
{∏§ π§
PackIconKindπ§ ≈§
.≈§ ∆§
RayStart∆§ Œ§
,Œ§ œ§
$strœ§ Ø•
}Ø• ∞•
,∞• ±•
{±• ≤•
PackIconKind≤• æ•
.æ• ø•
RayStartArrowø• Ã•
,Ã• Õ•
$strÕ• Ω¶
}Ω¶ æ¶
,æ¶ ø¶
{ø¶ ¿¶
PackIconKind¿¶ Ã¶
.Ã¶ Õ¶
RayStartEndÕ¶ ÿ¶
,ÿ¶ Ÿ¶
$strŸ¶ è®
}è® ê®
,ê® ë®
{ë® í®
PackIconKindí® û®
.û® ü®
	RayVertexü® ®®
,®® ©®
$str©® ±©
}±© ≤©
,≤© ≥©
{≥© ¥©
PackIconKind¥© ¿©
.¿© ¡©
React¡© ∆©
,∆© «©
$str«© ‹ª
}‹ª ›ª
,›ª ﬁª
{ﬁª ﬂª
PackIconKindﬂª Îª
.Îª Ïª
ReadÏª ª
,ª Òª
$strÒª ¥Ω
}¥Ω µΩ
,µΩ ∂Ω
{∂Ω ∑Ω
PackIconKind∑Ω √Ω
.√Ω ƒΩ
ReceiptƒΩ ÀΩ
,ÀΩ ÃΩ
$strÃΩ ¨ø
}¨ø ≠ø
,≠ø Æø
{Æø Øø
PackIconKindØø ªø
.ªø ºø
Recordºø ¬ø
,¬ø √ø
$str√ø ¢¿
}¢¿ £¿
,£¿ §¿
{§¿ •¿
PackIconKind•¿ ±¿
.±¿ ≤¿
	RecordRec≤¿ ª¿
,ª¿ º¿
$strº¿ ˇ¬
}ˇ¬ Ä√
,Ä√ Å√
{Å√ Ç√
PackIconKindÇ√ é√
.é√ è√
Recycleè√ ñ√
,ñ√ ó√
$stró√ É«
}É« Ñ«
,Ñ« Ö«
{Ö« Ü«
PackIconKindÜ« í«
.í« ì«
Redditì« ô«
,ô« ö«
$strö« ùÕ
}ùÕ ûÕ
,ûÕ üÕ
{üÕ †Õ
PackIconKind†Õ ¨Õ
.¨Õ ≠Õ
Redo≠Õ ±Õ
,±Õ ≤Õ
$str≤Õ —Œ
}—Œ “Œ
,“Œ ”Œ
{”Œ ‘Œ
PackIconKind‘Œ ‡Œ
.‡Œ ·Œ
RedoVariant·Œ ÏŒ
,ÏŒ ÌŒ
$strÌŒ ¢–
}¢– £–
,£– §–
{§– •–
PackIconKind•– ±–
.±– ≤–
Refresh≤– π–
,π– ∫–
$str∫– é“
}é“ è“
,è“ ê“
{ê“ ë“
PackIconKindë“ ù“
.ù“ û“
Regexû“ £“
,£“ §“
$str§“ Ä◊
}Ä◊ Å◊
,Å◊ Ç◊
{Ç◊ É◊
PackIconKindÉ◊ è◊
.è◊ ê◊
RelativeScaleê◊ ù◊
,ù◊ û◊
$strû◊ æÿ
}æÿ øÿ
,øÿ ¿ÿ
{¿ÿ ¡ÿ
PackIconKind¡ÿ Õÿ
.Õÿ Œÿ
ReloadŒÿ ‘ÿ
,‘ÿ ’ÿ
$str’ÿ ˚⁄
}˚⁄ ¸⁄
,¸⁄ ˝⁄
{˝⁄ ˛⁄
PackIconKind˛⁄ ä€
.ä€ ã€
Reminderã€ ì€
,ì€ î€
$strî€ ô‡
}ô‡ ö‡
,ö‡ õ‡
{õ‡ ú‡
PackIconKindú‡ ®‡
.®‡ ©‡
Remote©‡ Ø‡
,Ø‡ ∞‡
$str∞‡ «„
}«„ »„
,»„ …„
{…„  „
PackIconKind „ ÷„
.÷„ ◊„
	RenameBox◊„ ‡„
,‡„ ·„
$str·„ ∏Â
}∏Â πÂ
,πÂ ∫Â
{∫Â ªÂ
PackIconKindªÂ «Â
.«Â »Â!
ReorderHorizontal»Â ŸÂ
,ŸÂ ⁄Â
$str⁄Â ôÊ
}ôÊ öÊ
,öÊ õÊ
{õÊ úÊ
PackIconKindúÊ ®Ê
.®Ê ©Ê
ReorderVertical©Ê ∏Ê
,∏Ê πÊ
$strπÊ ˜Ê
}˜Ê ¯Ê
,¯Ê ˘Ê
{˘Ê ˙Ê
PackIconKind˙Ê ÜÁ
.ÜÁ áÁ
RepeatáÁ çÁ
,çÁ éÁ
$stréÁ —Á
}—Á “Á
,“Á ”Á
{”Á ‘Á
PackIconKind‘Á ‡Á
.‡Á ·Á
	RepeatOff·Á ÍÁ
,ÍÁ ÎÁ
$strÎÁ ÜÈ
}ÜÈ áÈ
,áÈ àÈ
{àÈ âÈ
PackIconKindâÈ ïÈ
.ïÈ ñÈ

RepeatOnceñÈ †È
,†È °È
$str°È ÄÍ
}ÄÍ ÅÍ
,ÅÍ ÇÍ
{ÇÍ ÉÍ
PackIconKindÉÍ èÍ
.èÍ êÍ
ReplayêÍ ñÍ
,ñÍ óÍ
$stróÍ çÎ
}çÎ éÎ
,éÎ èÎ
{èÎ êÎ
PackIconKindêÎ úÎ
.úÎ ùÎ
ReplyùÎ ¢Î
,¢Î £Î
$str£Î ÊÎ
}ÊÎ ÁÎ
,ÁÎ ËÎ
{ËÎ ÈÎ
PackIconKindÈÎ ıÎ
.ıÎ ˆÎ
ReplyAllˆÎ ˛Î
,˛Î ˇÎ
$strˇÎ ﬁÏ
}ﬁÏ ﬂÏ
,ﬂÏ ‡Ï
{‡Ï ·Ï
PackIconKind·Ï ÌÏ
.ÌÏ ÓÏ
ReproductionÓÏ ˙Ï
,˙Ï ˚Ï
$str˚Ï ∆Ò
}∆Ò «Ò
,«Ò »Ò
{»Ò …Ò
PackIconKind…Ò ’Ò
.’Ò ÷Ò!
ResizeBottomRight÷Ò ÁÒ
,ÁÒ ËÒ
$strËÒ ◊Ú
}◊Ú ÿÚ
,ÿÚ ŸÚ
{ŸÚ ⁄Ú
PackIconKind⁄Ú ÊÚ
.ÊÚ ÁÚ

ResponsiveÁÚ ÒÚ
,ÒÚ ÚÚ
$strÚÚ úˆ
}úˆ ùˆ
,ùˆ ûˆ
{ûˆ üˆ
PackIconKindüˆ ´ˆ
.´ˆ ¨ˆ
Restart¨ˆ ≥ˆ
,≥ˆ ¥ˆ
$str¥ˆ ±˘
}±˘ ≤˘
,≤˘ ≥˘
{≥˘ ¥˘
PackIconKind¥˘ ¿˘
.¿˘ ¡˘
Restore¡˘ »˘
,»˘ …˘
$str…˘ ∫˚
}∫˚ ª˚
,ª˚ º˚
{º˚ Ω˚
PackIconKindΩ˚ …˚
.…˚  ˚
Rewind ˚ –˚
,–˚ —˚
$str—˚ ˘˚
}˘˚ ˙˚
,˙˚ ˚˚
{˚˚ ¸˚
PackIconKind¸˚ à¸
.à¸ â¸
RewindOutlineâ¸ ñ¸
,ñ¸ ó¸
$stró¸ Ù¸
}Ù¸ ı¸
,ı¸ ˆ¸
{ˆ¸ ˜¸
PackIconKind˜¸ É˝
.É˝ Ñ˝
RhombusÑ˝ ã˝
,ã˝ å˝
$strå˝ ±˛
}±˛ ≤˛
,≤˛ ≥˛
{≥˛ ¥˛
PackIconKind¥˛ ¿˛
.¿˛ ¡˛
RhombusOutline¡˛ œ˛
,œ˛ –˛
$str–˛ õÄ
}õÄ úÄ
,úÄ ùÄ
{ùÄ ûÄ
PackIconKindûÄ ™Ä
.™Ä ´Ä
Ribbon´Ä ±Ä
,±Ä ≤Ä
$str≤Ä „Ç
}„Ç ‰Ç
,‰Ç ÂÇ
{ÂÇ ÊÇ
PackIconKindÊÇ ÚÇ
.ÚÇ ÛÇ
RiceÛÇ ˜Ç
,˜Ç ¯Ç
$str¯Ç àÖ
}àÖ âÖ
,âÖ äÖ
{äÖ ãÖ
PackIconKindãÖ óÖ
.óÖ òÖ
RingòÖ úÖ
,úÖ ùÖ
$strùÖ ˘Ü
}˘Ü ˙Ü
,˙Ü ˚Ü
{˚Ü ¸Ü
PackIconKind¸Ü àá
.àá âá
Roadâá çá
,çá éá
$stréá Àá
}Àá Ãá
,Ãá Õá
{Õá Œá
PackIconKindŒá ⁄á
.⁄á €á
RoadVariant€á Êá
,Êá Áá
$strÁá µâ
}µâ ∂â
,∂â ∑â
{∑â ∏â
PackIconKind∏â ƒâ
.ƒâ ≈â
Robot≈â  â
, â Àâ
$strÀâ ˇå
}ˇå Äç
,Äç Åç
{Åç Çç
PackIconKindÇç éç
.éç èç
Rocketèç ïç
,ïç ñç
$strñç ﬂê
}ﬂê ‡ê
,‡ê ·ê
{·ê ‚ê
PackIconKind‚ê Óê
.Óê Ôê
RoombaÔê ıê
,ıê ˆê
$strˆê µï
}µï ∂ï
,∂ï ∑ï
{∑ï ∏ï
PackIconKind∏ï ƒï
.ƒï ≈ï
Rotate3d≈ï Õï
,Õï Œï
$strŒï ≈ó
}≈ó ∆ó
,∆ó «ó
{«ó »ó
PackIconKind»ó ‘ó
.‘ó ’ó

RotateLeft’ó ﬂó
,ﬂó ‡ó
$str‡ó ˜ö
}˜ö ¯ö
,¯ö ˘ö
{˘ö ˙ö
PackIconKind˙ö Üõ
.Üõ áõ!
RotateLeftVariantáõ òõ
,òõ ôõ
$strôõ ‹ú
}‹ú ›ú
,›ú ﬁú
{ﬁú ﬂú
PackIconKindﬂú Îú
.Îú Ïú
RotateRightÏú ˜ú
,˜ú ¯ú
$str¯ú ö†
}ö† õ†
,õ† ú†
{ú† ù†
PackIconKindù† ©†
.©† ™†"
RotateRightVariant™† º†
,º† Ω†
$strΩ† ˇ°
}ˇ° Ä¢
,Ä¢ Å¢
{Å¢ Ç¢
PackIconKindÇ¢ é¢
.é¢ è¢
RoundedCornerè¢ ú¢
,ú¢ ù¢
$strù¢ ç§
}ç§ é§
,é§ è§
{è§ ê§
PackIconKindê§ ú§
.ú§ ù§
RouterWirelessù§ ´§
,´§ ¨§
$str¨§ ∂ß
}∂ß ∑ß
,∑ß ∏ß
{∏ß πß
PackIconKindπß ≈ß
.≈ß ∆ß
Routes∆ß Ãß
,Ãß Õß
$strÕß æ®
}æ® ø®
,ø® ¿®
{¿® ¡®
PackIconKind¡® Õ®
.Õ® Œ®
RowingŒ® ‘®
,‘® ’®
$str’® Î´
}Î´ Ï´
,Ï´ Ì´
{Ì´ Ó´
PackIconKindÓ´ ˙´
.˙´ ˚´
Rss˚´ ˛´
,˛´ ˇ´
$strˇ´ Û≠
}Û≠ Ù≠
,Ù≠ ı≠
{ı≠ ˆ≠
PackIconKindˆ≠ ÇÆ
.ÇÆ ÉÆ
RssBoxÉÆ âÆ
,âÆ äÆ
$sträÆ á∞
}á∞ à∞
,à∞ â∞
{â∞ ä∞
PackIconKindä∞ ñ∞
.ñ∞ ó∞
Ruleró∞ ú∞
,ú∞ ù∞
$strù∞ ”≤
}”≤ ‘≤
,‘≤ ’≤
{’≤ ÷≤
PackIconKind÷≤ ‚≤
.‚≤ „≤
Run„≤ Ê≤
,Ê≤ Á≤
$strÁ≤ ”µ
}”µ ‘µ
,‘µ ’µ
{’µ ÷µ
PackIconKind÷µ ‚µ
.‚µ „µ
RunFast„µ Íµ
,Íµ Îµ
$strÎµ ûπ
}ûπ üπ
,üπ †π
{†π °π
PackIconKind°π ≠π
.≠π Æπ
SaleÆπ ≤π
,≤π ≥π
$str≥π Ìº
}Ìº Óº
,Óº Ôº
{Ôº º
PackIconKindº ¸º
.¸º ˝º
Sass˝º ÅΩ
,ÅΩ ÇΩ
$strÇΩ ¬∆
}¬∆ √∆
,√∆ ƒ∆
{ƒ∆ ≈∆
PackIconKind≈∆ —∆
.—∆ “∆
	Satellite“∆ €∆
,€∆ ‹∆
$str‹∆ ê»
}ê» ë»
,ë» í»
{í» ì»
PackIconKindì» ü»
.ü» †» 
SatelliteVariant†» ∞»
,∞» ±»
$str±» òÃ
}òÃ ôÃ
,ôÃ öÃ
{öÃ õÃ
PackIconKindõÃ ßÃ
.ßÃ ®Ã
	Saxophone®Ã ±Ã
,±Ã ≤Ã
$str≤Ã ‚Œ
}‚Œ „Œ
,„Œ ‰Œ
{‰Œ ÂŒ
PackIconKindÂŒ ÒŒ
.ÒŒ ÚŒ
ScaleÚŒ ˜Œ
,˜Œ ¯Œ
$str¯Œ ∑“
}∑“ ∏“
,∏“ π“
{π“ ∫“
PackIconKind∫“ ∆“
.∆“ «“
ScaleBalance«“ ”“
,”“ ‘“
$str‘“ ‹’
}‹’ ›’
,›’ ﬁ’
{ﬁ’ ﬂ’
PackIconKindﬂ’ Î’
.Î’ Ï’
ScaleBathroomÏ’ ˘’
,˘’ ˙’
$str˙’ î◊
}î◊ ï◊
,ï◊ ñ◊
{ñ◊ ó◊
PackIconKindó◊ £◊
.£◊ §◊
Scanner§◊ ´◊
,´◊ ¨◊
$str¨◊ ∆ÿ
}∆ÿ «ÿ
,«ÿ »ÿ
{»ÿ …ÿ
PackIconKind…ÿ ’ÿ
.’ÿ ÷ÿ
School÷ÿ ‹ÿ
,‹ÿ ›ÿ
$str›ÿ ±Ÿ
}±Ÿ ≤Ÿ
,≤Ÿ ≥Ÿ
{≥Ÿ ¥Ÿ
PackIconKind¥Ÿ ¿Ÿ
.¿Ÿ ¡Ÿ
ScreenRotation¡Ÿ œŸ
,œŸ –Ÿ
$str–Ÿ ˚‹
}˚‹ ¸‹
,¸‹ ˝‹
{˝‹ ˛‹
PackIconKind˛‹ ä›
.ä› ã›"
ScreenRotationLockã› ù›
,ù› û›
$strû› €·
}€· ‹·
,‹· ›·
{›· ﬁ·
PackIconKindﬁ· Í·
.Í· Î·
ScrewdriverÎ· ˆ·
,ˆ· ˜·
$str˜· ›„
}›„ ﬁ„
,ﬁ„ ﬂ„
{ﬂ„ ‡„
PackIconKind‡„ Ï„
.Ï„ Ì„
ScriptÌ„ Û„
,Û„ Ù„
$strÙ„ ãÂ
}ãÂ åÂ
,åÂ çÂ
{çÂ éÂ
PackIconKindéÂ öÂ
.öÂ õÂ
SdõÂ ùÂ
,ùÂ ûÂ
$strûÂ äÊ
}äÊ ãÊ
,ãÊ åÊ
{åÊ çÊ
PackIconKindçÊ ôÊ
.ôÊ öÊ
SealöÊ ûÊ
,ûÊ üÊ
$strüÊ ΩË
}ΩË æË
,æË øË
{øË ¿Ë
PackIconKind¿Ë ÃË
.ÃË ÕË
	SearchWebÕË ÷Ë
,÷Ë ◊Ë
$str◊Ë ›
}› ﬁ
,ﬁ ﬂ
{ﬂ ‡
PackIconKind‡ Ï
.Ï Ì
SeatFlatÌ ı
,ı ˆ
$strˆ ¶Ú
}¶Ú ßÚ
,ßÚ ®Ú
{®Ú ©Ú
PackIconKind©Ú µÚ
.µÚ ∂Ú
SeatFlatAngled∂Ú ƒÚ
,ƒÚ ≈Ú
$str≈Ú ÃÙ
}ÃÙ ÕÙ
,ÕÙ ŒÙ
{ŒÙ œÙ
PackIconKindœÙ €Ù
.€Ù ‹Ù#
SeatIndividualSuite‹Ù ÔÙ
,ÔÙ Ù
$strÙ ›ı
}›ı ﬁı
,ﬁı ﬂı
{ﬂı ‡ı
PackIconKind‡ı Ïı
.Ïı Ìı 
SeatLegroomExtraÌı ˝ı
,˝ı ˛ı
$str˛ı ‚˜
}‚˜ „˜
,„˜ ‰˜
{‰˜ Â˜
PackIconKindÂ˜ Ò˜
.Ò˜ Ú˜!
SeatLegroomNormalÚ˜ É¯
,É¯ Ñ¯
$strÑ¯ ¶˘
}¶˘ ß˘
,ß˘ ®˘
{®˘ ©˘
PackIconKind©˘ µ˘
.µ˘ ∂˘"
SeatLegroomReduced∂˘ »˘
,»˘ …˘
$str…˘ à˚
}à˚ â˚
,â˚ ä˚
{ä˚ ã˚
PackIconKindã˚ ó˚
.ó˚ ò˚ 
SeatReclineExtraò˚ ®˚
,®˚ ©˚
$str©˚ ¯˛
}¯˛ ˘˛
,˘˛ ˙˛
{˙˛ ˚˛
PackIconKind˚˛ áˇ
.áˇ àˇ!
SeatReclineNormalàˇ ôˇ
,ôˇ öˇ
$ströˇ ´Ç
}´Ç ¨Ç
,¨Ç ≠Ç
{≠Ç ÆÇ
PackIconKindÆÇ ∫Ç
.∫Ç ªÇ
SecurityªÇ √Ç
,√Ç ƒÇ
$strƒÇ …É
}…É  É
, É ÀÉ
{ÀÉ ÃÉ
PackIconKindÃÉ ÿÉ
.ÿÉ ŸÉ
SecurityAccountŸÉ ËÉ
,ËÉ ÈÉ
$strÈÉ ≠Ü
}≠Ü ÆÜ
,ÆÜ ØÜ
{ØÜ ∞Ü
PackIconKind∞Ü ºÜ
.ºÜ ΩÜ
SecurityHomeΩÜ …Ü
,…Ü  Ü
$str Ü æá
}æá øá
,øá ¿á
{¿á ¡á
PackIconKind¡á Õá
.Õá Œá
SecurityNetworkŒá ›á
,›á ﬁá
$strﬁá Ãâ
}Ãâ Õâ
,Õâ Œâ
{Œâ œâ
PackIconKindœâ €â
.€â ‹â
Select‹â ‚â
,‚â „â
$str„â òå
}òå ôå
,ôå öå
{öå õå
PackIconKindõå ßå
.ßå ®å
	SelectAll®å ±å
,±å ≤å
$str≤å …é
}…é  é
, é Àé
{Àé Ãé
PackIconKindÃé ÿé
.ÿé Ÿé
SelectInverseŸé Êé
,Êé Áé
$strÁé àê
}àê âê
,âê äê
{äê ãê
PackIconKindãê óê
.óê òê
	SelectOffòê °ê
,°ê ¢ê
$str¢ê Œí
}Œí œí
,œí –í
{–í —í
PackIconKind—í ›í
.›í ﬁí
	Selectionﬁí Áí
,Áí Ëí
$strËí √î
}√î ƒî
,ƒî ≈î
{≈î ∆î
PackIconKind∆î “î
.“î ”î
SelectionOff”î ﬂî
,ﬂî ‡î
$str‡î Ûñ
}Ûñ Ùñ
,Ùñ ıñ
{ıñ ˆñ
PackIconKindˆñ Çó
.Çó Éó
SendÉó áó
,áó àó
$stràó ´ó
}´ó ¨ó
,¨ó ≠ó
{≠ó Æó
PackIconKindÆó ∫ó
.∫ó ªó

SendSecureªó ≈ó
,≈ó ∆ó
$str∆ó ™ô
}™ô ´ô
,´ô ¨ô
{¨ô ≠ô
PackIconKind≠ô πô
.πô ∫ô

SerialPort∫ô ƒô
,ƒô ≈ô
$str≈ô óö
}óö òö
,òö ôö
{ôö öö
PackIconKindöö ¶ö
.¶ö ßö
Serverßö ≠ö
,≠ö Æö
$strÆö Èú
}Èú Íú
,Íú Îú
{Îú Ïú
PackIconKindÏú ¯ú
.¯ú ˘ú
ServerMinus˘ú Ñù
,Ñù Öù
$strÖù ˘ù
}˘ù ˙ù
,˙ù ˚ù
{˚ù ¸ù
PackIconKind¸ù àû
.àû âû
ServerNetworkâû ñû
,ñû óû
$stróû …†
}…†  †
, † À†
{À† Ã†
PackIconKindÃ† ÿ†
.ÿ† Ÿ† 
ServerNetworkOffŸ† È†
,È† Í†
$strÍ† ´§
}´§ ¨§
,¨§ ≠§
{≠§ Æ§
PackIconKindÆ§ ∫§
.∫§ ª§
	ServerOffª§ ƒ§
,ƒ§ ≈§
$str≈§ â®
}â® ä®
,ä® ã®
{ã® å®
PackIconKindå® ò®
.ò® ô®

ServerPlusô® £®
,£® §®
$str§® ∞©
}∞© ±©
,±© ≤©
{≤© ≥©
PackIconKind≥© ø©
.ø© ¿©
ServerRemove¿© Ã©
,Ã© Õ©
$strÕ© ¢´
}¢´ £´
,£´ §´
{§´ •´
PackIconKind•´ ±´
.±´ ≤´
ServerSecurity≤´ ¿´
,¿´ ¡´
$str¡´ èØ
}èØ êØ
,êØ ëØ
{ëØ íØ
PackIconKindíØ ûØ
.ûØ üØ
SetAllüØ •Ø
,•Ø ¶Ø
$str¶Ø å≥
}å≥ ç≥
,ç≥ é≥
{é≥ è≥
PackIconKindè≥ õ≥
.õ≥ ú≥
	SetCenterú≥ •≥
,•≥ ¶≥
$str¶≥ Í∂
}Í∂ Î∂
,Î∂ Ï∂
{Ï∂ Ì∂
PackIconKindÌ∂ ˘∂
.˘∂ ˙∂
SetCenterRight˙∂ à∑
,à∑ â∑
$strâ∑ ª∫
}ª∫ º∫
,º∫ Ω∫
{Ω∫ æ∫
PackIconKindæ∫  ∫
. ∫ À∫
SetLeftÀ∫ “∫
,“∫ ”∫
$str”∫ Åæ
}Åæ Çæ
,Çæ Éæ
{Éæ Ñæ
PackIconKindÑæ êæ
.êæ ëæ
SetLeftCenterëæ ûæ
,ûæ üæ
$strüæ Œ¡
}Œ¡ œ¡
,œ¡ –¡
{–¡ —¡
PackIconKind—¡ ›¡
.›¡ ﬁ¡
SetLeftRightﬁ¡ Í¡
,Í¡ Î¡
$strÎ¡ áƒ
}áƒ àƒ
,àƒ âƒ
{âƒ äƒ
PackIconKindäƒ ñƒ
.ñƒ óƒ
SetNoneóƒ ûƒ
,ûƒ üƒ
$strüƒ —»
}—» “»
,“» ”»
{”» ‘»
PackIconKind‘» ‡»
.‡» ·»
SetRight·» È»
,È» Í»
$strÍ» ÎÀ
}ÎÀ ÏÀ
,ÏÀ ÌÀ
{ÌÀ ÓÀ
PackIconKindÓÀ ˙À
.˙À ˚À
Settings˚À ÉÃ
,ÉÃ ÑÃ
$strÑÃ ë”
}ë” í”
,í” ì”
{ì” î”
PackIconKindî” †”
.†” °”
SettingsBox°” ¨”
,¨” ≠”
$str≠” ò€
}ò€ ô€
,ô€ ö€
{ö€ õ€
PackIconKindõ€ ß€
.ß€ ®€
Shape®€ ≠€
,≠€ Æ€
$strÆ€ ∂‹
}∂‹ ∑‹
,∑‹ ∏‹
{∏‹ π‹
PackIconKindπ‹ ≈‹
.≈‹ ∆‹
ShapeCirclePlus∆‹ ’‹
,’‹ ÷‹
$str÷‹ Â›
}Â› Ê›
,Ê› Á›
{Á› Ë›
PackIconKindË› Ù›
.Ù› ı›
ShapeOutlineı› Åﬁ
,Åﬁ Çﬁ
$strÇﬁ ù‡
}ù‡ û‡
,û‡ ü‡
{ü‡ †‡
PackIconKind†‡ ¨‡
.¨‡ ≠‡
	ShapePlus≠‡ ∂‡
,∂‡ ∑‡
$str∑‡ ÷·
}÷· ◊·
,◊· ÿ·
{ÿ· Ÿ·
PackIconKindŸ· Â·
.Â· Ê· 
ShapePolygonPlusÊ· ˆ·
,ˆ· ˜·
$str˜· ‚‚
}‚‚ „‚
,„‚ ‰‚
{‰‚ Â‚
PackIconKindÂ‚ Ò‚
.Ò‚ Ú‚"
ShapeRectanglePlusÚ‚ Ñ„
,Ñ„ Ö„
$strÖ„ Ã„
}Ã„ Õ„
,Õ„ Œ„
{Œ„ œ„
PackIconKindœ„ €„
.€„ ‹„
ShapeSquarePlus‹„ Î„
,Î„ Ï„
$strÏ„ ≥‰
}≥‰ ¥‰
,¥‰ µ‰
{µ‰ ∂‰
PackIconKind∂‰ ¬‰
.¬‰ √‰
Share√‰ »‰
,»‰ …‰
$str…‰ àÂ
}àÂ âÂ
,âÂ äÂ
{äÂ ãÂ
PackIconKindãÂ óÂ
.óÂ òÂ
ShareVariantòÂ §Â
,§Â •Â
$str•Â ·Ë
}·Ë ‚Ë
,‚Ë „Ë
{„Ë ‰Ë
PackIconKind‰Ë Ë
.Ë ÒË
ShieldÒË ˜Ë
,˜Ë ¯Ë
$str¯Ë ¬È
}¬È √È
,√È ƒÈ
{ƒÈ ≈È
PackIconKind≈È —È
.—È “È
ShieldHalfFull“È ‡È
,‡È ·È
$str·È ‹Í
}‹Í ›Í
,›Í ﬁÍ
{ﬁÍ ﬂÍ
PackIconKindﬂÍ ÎÍ
.ÎÍ ÏÍ
ShieldOutlineÏÍ ˘Í
,˘Í ˙Í
$str˙Í îÏ
}îÏ ïÏ
,ïÏ ñÏ
{ñÏ óÏ
PackIconKindóÏ £Ï
.£Ï §Ï
	ShipWheel§Ï ≠Ï
,≠Ï ÆÏ
$strÆÏ œˆ
}œˆ –ˆ
,–ˆ —ˆ
{—ˆ “ˆ
PackIconKind“ˆ ﬁˆ
.ﬁˆ ﬂˆ
Shoppingﬂˆ Áˆ
,Áˆ Ëˆ
$strËˆ Ã¯
}Ã¯ Õ¯
,Õ¯ Œ¯
{Œ¯ œ¯
PackIconKindœ¯ €¯
.€¯ ‹¯
ShoppingMusic‹¯ È¯
,È¯ Í¯
$strÍ¯ õ˙
}õ˙ ú˙
,ú˙ ù˙
{ù˙ û˙
PackIconKindû˙ ™˙
.™˙ ´˙
Shovel´˙ ±˙
,±˙ ≤˙
$str≤˙ ˆ¸
}ˆ¸ ˜¸
,˜¸ ¯¸
{¯¸ ˘¸
PackIconKind˘¸ Ö˝
.Ö˝ Ü˝
	ShovelOffÜ˝ è˝
,è˝ ê˝
$strê˝ †Ä 
}†Ä  °Ä 
,°Ä  ¢Ä 
{¢Ä  £Ä 
PackIconKind£Ä  ØÄ 
.ØÄ  ∞Ä 
Shredder∞Ä  ∏Ä 
,∏Ä  πÄ 
$strπÄ  ÉÇ 
}ÉÇ  ÑÇ 
,ÑÇ  ÖÇ 
{ÖÇ  ÜÇ 
PackIconKindÜÇ  íÇ 
.íÇ  ìÇ 
ShuffleìÇ  öÇ 
,öÇ  õÇ 
$strõÇ  œÉ 
}œÉ  –É 
,–É  —É 
{—É  “É 
PackIconKind“É  ﬁÉ 
.ﬁÉ  ﬂÉ 
ShuffleDisabledﬂÉ  ÓÉ 
,ÓÉ  ÔÉ 
$strÔÉ  ≠Ñ 
}≠Ñ  ÆÑ 
,ÆÑ  ØÑ 
{ØÑ  ∞Ñ 
PackIconKind∞Ñ  ºÑ 
.ºÑ  ΩÑ 
ShuffleVariantΩÑ  ÀÑ 
,ÀÑ  ÃÑ 
$strÃÑ  ÛÖ 
}ÛÖ  ÙÖ 
,ÙÖ  ıÖ 
{ıÖ  ˆÖ 
PackIconKindˆÖ  ÇÜ 
.ÇÜ  ÉÜ 
SigmaÉÜ  àÜ 
,àÜ  âÜ 
$strâÜ  ‘Ü 
}‘Ü  ’Ü 
,’Ü  ÷Ü 
{÷Ü  ◊Ü 
PackIconKind◊Ü  „Ü 
.„Ü  ‰Ü 

SigmaLower‰Ü  ÓÜ 
,ÓÜ  ÔÜ 
$strÔÜ  æà 
}æà  øà 
,øà  ¿à 
{¿à  ¡à 
PackIconKind¡à  Õà 
.Õà  Œà 
SignCautionŒà  Ÿà 
,Ÿà  ⁄à 
$str⁄à  Üä 
}Üä  áä 
,áä  àä 
{àä  âä 
PackIconKindâä  ïä 
.ïä  ñä 
SignDirectionñä  £ä 
,£ä  §ä 
$str§ä  ãã 
}ãã  åã 
,åã  çã 
{çã  éã 
PackIconKindéã  öã 
.öã  õã 
SignTextõã  £ã 
,£ã  §ã 
$str§ã  Ãå 
}Ãå  Õå 
,Õå  Œå 
{Œå  œå 
PackIconKindœå  €å 
.€å  ‹å 
Signal‹å  ‚å 
,‚å  „å 
$str„å  ûç 
}ûç  üç 
,üç  †ç 
{†ç  °ç 
PackIconKind°ç  ≠ç 
.≠ç  Æç 
Signal2gÆç  ∂ç 
,∂ç  ∑ç 
$str∑ç  Äè 
}Äè  Åè 
,Åè  Çè 
{Çè  Éè 
PackIconKindÉè  èè 
.èè  êè 
Signal3gêè  òè 
,òè  ôè 
$strôè  âë 
}âë  äë 
,äë  ãë 
{ãë  åë 
PackIconKindåë  òë 
.òë  ôë 
Signal4gôë  °ë 
,°ë  ¢ë 
$str¢ë  ªí 
}ªí  ºí 
,ºí  Ωí 
{Ωí  æí 
PackIconKindæí   í 
. í  Àí 

SignalHspaÀí  ’í 
,’í  ÷í 
$str÷í  úì 
}úì  ùì 
,ùì  ûì 
{ûì  üì 
PackIconKindüì  ´ì 
.´ì  ¨ì 
SignalHspaPlus¨ì  ∫ì 
,∫ì  ªì 
$strªì  ñî 
}ñî  óî 
,óî  òî 
{òî  ôî 
PackIconKindôî  •î 
.•î  ¶î 
	SignalOff¶î  Øî 
,Øî  ∞î 
$str∞î  «ï 
}«ï  »ï 
,»ï  …ï 
{…ï   ï 
PackIconKind ï  ÷ï 
.÷ï  ◊ï 
SignalVariant◊ï  ‰ï 
,‰ï  Âï 
$strÂï  óó 
}óó  òó 
,òó  ôó 
{ôó  öó 
PackIconKindöó  ¶ó 
.¶ó  ßó 

Silverwareßó  ±ó 
,±ó  ≤ó 
$str≤ó  Ÿô 
}Ÿô  ⁄ô 
,⁄ô  €ô 
{€ô  ‹ô 
PackIconKind‹ô  Ëô 
.Ëô  Èô 
SilverwareForkÈô  ˜ô 
,˜ô  ¯ô 
$str¯ô  Òõ 
}Òõ  Úõ 
,Úõ  Ûõ 
{Ûõ  Ùõ 
PackIconKindÙõ  Äú 
.Äú  Åú 
SilverwareSpoonÅú  êú 
,êú  ëú 
$strëú  »ù 
}»ù  …ù 
,…ù   ù 
{ ù  Àù 
PackIconKindÀù  ◊ù 
.◊ù  ÿù !
SilverwareVariantÿù  Èù 
,Èù  Íù 
$strÍù  —† 
}—†  “† 
,“†  ”† 
{”†  ‘† 
PackIconKind‘†  ‡† 
.‡†  ·† 
Sim·†  ‰† 
,‰†  Â† 
$strÂ†  ó¢ 
}ó¢  ò¢ 
,ò¢  ô¢ 
{ô¢  ö¢ 
PackIconKindö¢  ¶¢ 
.¶¢  ß¢ 
SimAlertß¢  Ø¢ 
,Ø¢  ∞¢ 
$str∞¢  í£ 
}í£  ì£ 
,ì£  î£ 
{î£  ï£ 
PackIconKindï£  °£ 
.°£  ¢£ 
SimOff¢£  ®£ 
,®£  ©£ 
$str©£   § 
} §  À§ 
,À§  Ã§ 
{Ã§  Õ§ 
PackIconKindÕ§  Ÿ§ 
.Ÿ§  ⁄§ 
Sitemap⁄§  ·§ 
,·§  ‚§ 
$str‚§  Ì• 
}Ì•  Ó• 
,Ó•  Ô• 
{Ô•  • 
PackIconKind•  ¸• 
.¸•  ˝• 
SkipBackward˝•  â¶ 
,â¶  ä¶ 
$strä¶  ≤¶ 
}≤¶  ≥¶ 
,≥¶  ¥¶ 
{¥¶  µ¶ 
PackIconKindµ¶  ¡¶ 
.¡¶  ¬¶ 
SkipForward¬¶  Õ¶ 
,Õ¶  Œ¶ 
$strŒ¶  ¯¶ 
}¯¶  ˘¶ 
,˘¶  ˙¶ 
{˙¶  ˚¶ 
PackIconKind˚¶  áß 
.áß  àß 
SkipNextàß  êß 
,êß  ëß 
$strëß  ∂ß 
}∂ß  ∑ß 
,∑ß  ∏ß 
{∏ß  πß 
PackIconKindπß  ≈ß 
.≈ß  ∆ß 
SkipNextCircle∆ß  ‘ß 
,‘ß  ’ß 
$str’ß  ø® 
}ø®  ¿® 
,¿®  ¡® 
{¡®  ¬® 
PackIconKind¬®  Œ® 
.Œ®  œ® %
SkipNextCircleOutlineœ®  ‰® 
,‰®  Â® 
$strÂ®  ß™ 
}ß™  ®™ 
,®™  ©™ 
{©™  ™™ 
PackIconKind™™  ∂™ 
.∂™  ∑™ 
SkipPrevious∑™  √™ 
,√™  ƒ™ 
$strƒ™  Î™ 
}Î™  Ï™ 
,Ï™  Ì™ 
{Ì™  Ó™ 
PackIconKindÓ™  ˙™ 
.˙™  ˚™ "
SkipPreviousCircle˚™  ç´ 
,ç´  é´ 
$stré´  ı´ 
}ı´  ˆ´ 
,ˆ´  ˜´ 
{˜´  ¯´ 
PackIconKind¯´  Ñ¨ 
.Ñ¨  Ö¨ )
SkipPreviousCircleOutlineÖ¨  û¨ 
,û¨  ü¨ 
$strü¨  ·≠ 
}·≠  ‚≠ 
,‚≠  „≠ 
{„≠  ‰≠ 
PackIconKind‰≠  ≠ 
.≠  Ò≠ 
SkullÒ≠  ˆ≠ 
,ˆ≠  ˜≠ 
$str˜≠  î∞ 
}î∞  ï∞ 
,ï∞  ñ∞ 
{ñ∞  ó∞ 
PackIconKindó∞  £∞ 
.£∞  §∞ 
Skype§∞  ©∞ 
,©∞  ™∞ 
$str™∞  ó∂ 
}ó∂  ò∂ 
,ò∂  ô∂ 
{ô∂  ö∂ 
PackIconKindö∂  ¶∂ 
.¶∂  ß∂ 
SkypeBusinessß∂  ¥∂ 
,¥∂  µ∂ 
$strµ∂  ¨æ 
}¨æ  ≠æ 
,≠æ  Ææ 
{Ææ  Øæ 
PackIconKindØæ  ªæ 
.ªæ  ºæ 
Slackºæ  ¡æ 
,¡æ  ¬æ 
$str¬æ  å∆ 
}å∆  ç∆ 
,ç∆  é∆ 
{é∆  è∆ 
PackIconKindè∆  õ∆ 
.õ∆  ú∆ 
Sleepú∆  °∆ 
,°∆  ¢∆ 
$str¢∆  ®« 
}®«  ©« 
,©«  ™« 
{™«  ´« 
PackIconKind´«  ∑« 
.∑«  ∏« 
SleepOff∏«  ¿« 
,¿«  ¡« 
$str¡«  ˙» 
}˙»  ˚» 
,˚»  ¸» 
{¸»  ˝» 
PackIconKind˝»  â… 
.â…  ä… 
Smokingä…  ë… 
,ë…  í… 
$strí…  ÇÕ 
}ÇÕ  ÉÕ 
,ÉÕ  ÑÕ 
{ÑÕ  ÖÕ 
PackIconKindÖÕ  ëÕ 
.ëÕ  íÕ 

SmokingOffíÕ  úÕ 
,úÕ  ùÕ 
$strùÕ  Å— 
}Å—  Ç— 
,Ç—  É— 
{É—  Ñ— 
PackIconKindÑ—  ê— 
.ê—  ë— 
Snapchatë—  ô— 
,ô—  ö— 
$strö—  ÓŸ 
}ÓŸ  ÔŸ 
,ÔŸ  Ÿ 
{Ÿ  ÒŸ 
PackIconKindÒŸ  ˝Ÿ 
.˝Ÿ  ˛Ÿ 
	Snowflake˛Ÿ  á⁄ 
,á⁄  à⁄ 
$strà⁄  ⁄ﬁ 
}⁄ﬁ  €ﬁ 
,€ﬁ  ‹ﬁ 
{‹ﬁ  ›ﬁ 
PackIconKind›ﬁ  Èﬁ 
.Èﬁ  Íﬁ 
SnowmanÍﬁ  Òﬁ 
,Òﬁ  Úﬁ 
$strÚﬁ  π„ 
}π„  ∫„ 
,∫„  ª„ 
{ª„  º„ 
PackIconKindº„  »„ 
.»„  …„ 
Soccer…„  œ„ 
,œ„  –„ 
$str–„  ïÈ 
}ïÈ  ñÈ 
,ñÈ  óÈ 
{óÈ  òÈ 
PackIconKindòÈ  §È 
.§È  •È 
SoccerField•È  ∞È 
,∞È  ±È 
$str±È  ﬂÏ 
}ﬂÏ  ‡Ï 
,‡Ï  ·Ï 
{·Ï  ‚Ï 
PackIconKind‚Ï  ÓÏ 
.ÓÏ  ÔÏ 
SofaÔÏ  ÛÏ 
,ÛÏ  ÙÏ 
$strÙÏ  ’Ó 
}’Ó  ÷Ó 
,÷Ó  ◊Ó 
{◊Ó  ÿÓ 
PackIconKindÿÓ  ‰Ó 
.‰Ó  ÂÓ 
SolidÂÓ  ÍÓ 
,ÍÓ  ÎÓ 
$strÎÓ  ˘Ó 
}˘Ó  ˙Ó 
,˙Ó  ˚Ó 
{˚Ó  ¸Ó 
PackIconKind¸Ó  àÔ 
.àÔ  âÔ 
SortâÔ  çÔ 
,çÔ  éÔ 
$stréÔ  ÙÔ 
}ÙÔ  ıÔ 
,ıÔ  ˆÔ 
{ˆÔ  ˜Ô 
PackIconKind˜Ô  É 
.É  Ñ  
SortAlphabeticalÑ  î 
,î  ï 
$strï  ØÚ 
}ØÚ  ∞Ú 
,∞Ú  ±Ú 
{±Ú  ≤Ú 
PackIconKind≤Ú  æÚ 
.æÚ  øÚ 
SortAscendingøÚ  ÃÚ 
,ÃÚ  ÕÚ 
$strÕÚ  †Û 
}†Û  °Û 
,°Û  ¢Û 
{¢Û  £Û 
PackIconKind£Û  ØÛ 
.ØÛ  ∞Û 
SortDescending∞Û  æÛ 
,æÛ  øÛ 
$strøÛ  ïÙ 
}ïÙ  ñÙ 
,ñÙ  óÙ 
{óÙ  òÙ 
PackIconKindòÙ  §Ù 
.§Ù  •Ù 
SortNumeric•Ù  ∞Ù 
,∞Ù  ±Ù 
$str±Ù  ˘˛ 
}˘˛  ˙˛ 
,˙˛  ˚˛ 
{˚˛  ¸˛ 
PackIconKind¸˛  àˇ 
.àˇ  âˇ 
SortVariantâˇ  îˇ 
,îˇ  ïˇ 
$strïˇ  øˇ 
}øˇ  ¿ˇ 
,¿ˇ  ¡ˇ 
{¡ˇ  ¬ˇ 
PackIconKind¬ˇ  Œˇ 
.Œˇ  œˇ 

Soundcloudœˇ  Ÿˇ 
,Ÿˇ  ⁄ˇ 
$str⁄ˇ  ˝Ñ!
}˝Ñ! ˛Ñ!
,˛Ñ! ˇÑ!
{ˇÑ! ÄÖ!
PackIconKindÄÖ! åÖ!
.åÖ! çÖ!
SourceBranchçÖ! ôÖ!
,ôÖ! öÖ!
$ströÖ! œâ!
}œâ! –â!
,–â! —â!
{—â! “â!
PackIconKind“â! ﬁâ!
.ﬁâ! ﬂâ!
SourceCommitﬂâ! Îâ!
,Îâ! Ïâ!
$strÏâ! ≤ã!
}≤ã! ≥ã!
,≥ã! ¥ã!
{¥ã! µã!
PackIconKindµã! ¡ã!
.¡ã! ¬ã!
SourceCommitEnd¬ã! —ã!
,—ã! “ã!
$str“ã! ˜å!
}˜å! ¯å!
,¯å! ˘å!
{˘å! ˙å!
PackIconKind˙å! Üç!
.Üç! áç!$
SourceCommitEndLocaláç! õç!
,õç! úç!
$strúç! ¥é!
}¥é! µé!
,µé! ∂é!
{∂é! ∑é!
PackIconKind∑é! √é!
.√é! ƒé!!
SourceCommitLocalƒé! ’é!
,’é! ÷é!
$str÷é! Äê!
}Äê! Åê!
,Åê! Çê!
{Çê! Éê!
PackIconKindÉê! èê!
.èê! êê!%
SourceCommitNextLocalêê! •ê!
,•ê! ¶ê!
$str¶ê! ›ë!
}›ë! ﬁë!
,ﬁë! ﬂë!
{ﬂë! ‡ë!
PackIconKind‡ë! Ïë!
.Ïë! Ìë!!
SourceCommitStartÌë! ˛ë!
,˛ë! ˇë!
$strˇë! ©ì!
}©ì! ™ì!
,™ì! ´ì!
{´ì! ¨ì!
PackIconKind¨ì! ∏ì!
.∏ì! πì!*
SourceCommitStartNextLocalπì! ”ì!
,”ì! ‘ì!
$str‘ì! Ôî!
}Ôî! î!
,î! Òî!
{Òî! Úî!
PackIconKindÚî! ˛î!
.˛î! ˇî!

SourceForkˇî! âï!
,âï! äï!
$sträï! Íö!
}Íö! Îö!
,Îö! Ïö!
{Ïö! Ìö!
PackIconKindÌö! ˘ö!
.˘ö! ˙ö!
SourceMerge˙ö! Öõ!
,Öõ! Üõ!
$strÜõ! ñü!
}ñü! óü!
,óü! òü!
{òü! ôü!
PackIconKindôü! •ü!
.•ü! ¶ü!

SourcePull¶ü! ∞ü!
,∞ü! ±ü!
$str±ü! ¥£!
}¥£! µ£!
,µ£! ∂£!
{∂£! ∑£!
PackIconKind∑£! √£!
.√£! ƒ£!
SoySauceƒ£! Ã£!
,Ã£! Õ£!
$strÕ£! Â•!
}Â•! Ê•!
,Ê•! Á•!
{Á•! Ë•!
PackIconKindË•! Ù•!
.Ù•! ı•!
Speakerı•! ¸•!
,¸•! ˝•!
$str˝•! ™®!
}™®! ´®!
,´®! ¨®!
{¨®! ≠®!
PackIconKind≠®! π®!
.π®! ∫®!

SpeakerOff∫®! ƒ®!
,ƒ®! ≈®!
$str≈®! ¸´!
}¸´! ˝´!
,˝´! ˛´!
{˛´! ˇ´!
PackIconKindˇ´! ã¨!
.ã¨! å¨!
SpeakerWirelesså¨! õ¨!
,õ¨! ú¨!
$strú¨! ÿ∞!
}ÿ∞! Ÿ∞!
,Ÿ∞! ⁄∞!
{⁄∞! €∞!
PackIconKind€∞! Á∞!
.Á∞! Ë∞!
SpeedometerË∞! Û∞!
,Û∞! Ù∞!
$strÙ∞! ãµ!
}ãµ! åµ!
,åµ! çµ!
{çµ! éµ!
PackIconKindéµ! öµ!
.öµ! õµ!

Spellcheckõµ! •µ!
,•µ! ¶µ!
$str¶µ! ª∂!
}ª∂! º∂!
,º∂! Ω∂!
{Ω∂! æ∂!
PackIconKindæ∂!  ∂!
. ∂! À∂!
SpotifyÀ∂! “∂!
,“∂! ”∂!
$str”∂! ‡ª!
}‡ª! ·ª!
,·ª! ‚ª!
{‚ª! „ª!
PackIconKind„ª! Ôª!
.Ôª! ª!
	Spotlightª! ˘ª!
,˘ª! ˙ª!
$str˙ª! ±ø!
}±ø! ≤ø!
,≤ø! ≥ø!
{≥ø! ¥ø!
PackIconKind¥ø! ¿ø!
.¿ø! ¡ø!
SpotlightBeam¡ø! Œø!
,Œø! œø!
$strœø! Ó¡!
}Ó¡! Ô¡!
,Ô¡! ¡!
{¡! Ò¡!
PackIconKindÒ¡! ˝¡!
.˝¡! ˛¡!
Spray˛¡! É¬!
,É¬! Ñ¬!
$strÑ¬! ƒ√!
}ƒ√! ≈√!
,≈√! ∆√!
{∆√! «√!
PackIconKind«√! ”√!
.”√! ‘√!
Square‘√! ⁄√!
,⁄√! €√!
$str€√! È√!
}È√! Í√!
,Í√! Î√!
{Î√! Ï√!
PackIconKindÏ√! ¯√!
.¯√! ˘√!
	SquareInc˘√! Çƒ!
,Çƒ! Éƒ!
$strÉƒ! Ü∆!
}Ü∆! á∆!
,á∆! à∆!
{à∆! â∆!
PackIconKindâ∆! ï∆!
.ï∆! ñ∆!
SquareIncCashñ∆! £∆!
,£∆! §∆!
$str§∆! ãÀ!
}ãÀ! åÀ!
,åÀ! çÀ!
{çÀ! éÀ!
PackIconKindéÀ! öÀ!
.öÀ! õÀ!
SquareOutlineõÀ! ®À!
,®À! ©À!
$str©À! »À!
}»À! …À!
,…À!  À!
{ À! ÀÀ!
PackIconKindÀÀ! ◊À!
.◊À! ÿÀ!

SquareRootÿÀ! ‚À!
,‚À! „À!
$str„À! ¥Õ!
}¥Õ! µÕ!
,µÕ! ∂Õ!
{∂Õ! ∑Õ!
PackIconKind∑Õ! √Õ!
.√Õ! ƒÕ!
StackOverflowƒÕ! —Õ!
,—Õ! “Õ!
$str“Õ! É–!
}É–! Ñ–!
,Ñ–! Ö–!
{Ö–! Ü–!
PackIconKindÜ–! í–!
.í–! ì–!
Stackexchangeì–! †–!
,†–! °–!
$str°–! ‰—!
}‰—! Â—!
,Â—! Ê—!
{Ê—! Á—!
PackIconKindÁ—! Û—!
.Û—! Ù—!
StadiumÙ—! ˚—!
,˚—! ¸—!
$str¸—! ¨’!
}¨’! ≠’!
,≠’! Æ’!
{Æ’! Ø’!
PackIconKindØ’! ª’!
.ª’! º’!
Stairsº’! ¬’!
,¬’! √’!
$str√’! ˆ’!
}ˆ’! ˜’!
,˜’! ¯’!
{¯’! ˘’!
PackIconKind˘’! Ö÷!
.Ö÷! Ü÷!"
StandardDefinitionÜ÷! ò÷!
,ò÷! ô÷!
$strô÷! ⁄◊!
}⁄◊! €◊!
,€◊! ‹◊!
{‹◊! ›◊!
PackIconKind›◊! È◊!
.È◊! Í◊!
StarÍ◊! Ó◊!
,Ó◊! Ô◊!
$strÔ◊! ’ÿ!
}’ÿ! ÷ÿ!
,÷ÿ! ◊ÿ!
{◊ÿ! ÿÿ!
PackIconKindÿÿ! ‰ÿ!
.‰ÿ! Âÿ!

StarCircleÂÿ! Ôÿ!
,Ôÿ! ÿ!
$strÿ! ©⁄!
}©⁄! ™⁄!
,™⁄! ´⁄!
{´⁄! ¨⁄!
PackIconKind¨⁄! ∏⁄!
.∏⁄! π⁄!
StarHalfπ⁄! ¡⁄!
,¡⁄! ¬⁄!
$str¬⁄! ‚€!
}‚€! „€!
,„€! ‰€!
{‰€! Â€!
PackIconKindÂ€! Ò€!
.Ò€! Ú€!
StarOffÚ€! ˘€!
,˘€! ˙€!
$str˙€! ú›!
}ú›! ù›!
,ù›! û›!
{û›! ü›!
PackIconKindü›! ´›!
.´›! ¨›!
StarOutline¨›! ∑›!
,∑›! ∏›!
$str∏›! âﬂ!
}âﬂ! äﬂ!
,äﬂ! ãﬂ!
{ãﬂ! åﬂ!
PackIconKindåﬂ! òﬂ!
.òﬂ! ôﬂ!
Steamôﬂ! ûﬂ!
,ûﬂ! üﬂ!
$strüﬂ! ¥Á!
}¥Á! µÁ!
,µÁ! ∂Á!
{∂Á! ∑Á!
PackIconKind∑Á! √Á!
.√Á! ƒÁ!
SteeringƒÁ! ÃÁ!
,ÃÁ! ÕÁ!
$strÕÁ! ÔÈ!
}ÔÈ! È!
,È! ÒÈ!
{ÒÈ! ÚÈ!
PackIconKindÚÈ! ˛È!
.˛È! ˇÈ!
StepBackwardˇÈ! ãÍ!
,ãÍ! åÍ!
$stråÍ! ®Í!
}®Í! ©Í!
,©Í! ™Í!
{™Í! ´Í!
PackIconKind´Í! ∑Í!
.∑Í! ∏Í!
StepBackward2∏Í! ≈Í!
,≈Í! ∆Í!
$str∆Í! ˚Í!
}˚Í! ¸Í!
,¸Í! ˝Í!
{˝Í! ˛Í!
PackIconKind˛Í! äÎ!
.äÎ! ãÎ!
StepForwardãÎ! ñÎ!
,ñÎ! óÎ!
$stróÎ! ≤Î!
}≤Î! ≥Î!
,≥Î! ¥Î!
{¥Î! µÎ!
PackIconKindµÎ! ¡Î!
.¡Î! ¬Î!
StepForward2¬Î! ŒÎ!
,ŒÎ! œÎ!
$strœÎ! ÄÏ!
}ÄÏ! ÅÏ!
,ÅÏ! ÇÏ!
{ÇÏ! ÉÏ!
PackIconKindÉÏ! èÏ!
.èÏ! êÏ!
StethoscopeêÏ! õÏ!
,õÏ! úÏ!
$strúÏ! ∞Ô!
}∞Ô! ±Ô!
,±Ô! ≤Ô!
{≤Ô! ≥Ô!
PackIconKind≥Ô! øÔ!
.øÔ! ¿Ô!
Sticker¿Ô! «Ô!
,«Ô! »Ô!
$str»Ô! ≤Û!
}≤Û! ≥Û!
,≥Û! ¥Û!
{¥Û! µÛ!
PackIconKindµÛ! ¡Û!
.¡Û! ¬Û!
StickerEmoji¬Û! ŒÛ!
,ŒÛ! œÛ!
$strœÛ! ‡¯!
}‡¯! ·¯!
,·¯! ‚¯!
{‚¯! „¯!
PackIconKind„¯! Ô¯!
.Ô¯! ¯!
Stocking¯! ¯¯!
,¯¯! ˘¯!
$str˘¯! À˙!
}À˙! Ã˙!
,Ã˙! Õ˙!
{Õ˙! Œ˙!
PackIconKindŒ˙! ⁄˙!
.⁄˙! €˙!
Stop€˙! ﬂ˙!
,ﬂ˙! ‡˙!
$str‡˙! Û˙!
}Û˙! Ù˙!
,Ù˙! ı˙!
{ı˙! ˆ˙!
PackIconKindˆ˙! Ç˚!
.Ç˚! É˚!

StopCircleÉ˚! ç˚!
,ç˚! é˚!
$stré˚! Á˚!
}Á˚! Ë˚!
,Ë˚! È˚!
{È˚! Í˚!
PackIconKindÍ˚! ˆ˚!
.ˆ˚! ˜˚!!
StopCircleOutline˜˚! à¸!
,à¸! â¸!
$strâ¸! Ω˝!
}Ω˝! æ˝!
,æ˝! ø˝!
{ø˝! ¿˝!
PackIconKind¿˝! Ã˝!
.Ã˝! Õ˝!
StoreÕ˝! “˝!
,“˝! ”˝!
$str”˝! °˛!
}°˛! ¢˛!
,¢˛! £˛!
{£˛! §˛!
PackIconKind§˛! ∞˛!
.∞˛! ±˛!
Store24Hour±˛! º˛!
,º˛! Ω˛!
$strΩ˛! £ˇ!
}£ˇ! §ˇ!
,§ˇ! •ˇ!
{•ˇ! ¶ˇ!
PackIconKind¶ˇ! ≤ˇ!
.≤ˇ! ≥ˇ!
Stove≥ˇ! ∏ˇ!
,∏ˇ! πˇ!
$strπˇ! ÓÇ"
}ÓÇ" ÔÇ"
,ÔÇ" Ç"
{Ç" ÒÇ"
PackIconKindÒÇ" ˝Ç"
.˝Ç" ˛Ç"%
SubdirectoryArrowLeft˛Ç" ìÉ"
,ìÉ" îÉ"
$strîÉ" ‹É"
}‹É" ›É"
,›É" ﬁÉ"
{ﬁÉ" ﬂÉ"
PackIconKindﬂÉ" ÎÉ"
.ÎÉ" ÏÉ"&
SubdirectoryArrowRightÏÉ" ÇÑ"
,ÇÑ" ÉÑ"
$strÉÑ" ÕÑ"
}ÕÑ" ŒÑ"
,ŒÑ" œÑ"
{œÑ" –Ñ"
PackIconKind–Ñ" ‹Ñ"
.‹Ñ" ›Ñ"
Subway›Ñ" „Ñ"
,„Ñ" ‰Ñ"
$str‰Ñ" Æà"
}Æà" Øà"
,Øà" ∞à"
{∞à" ±à"
PackIconKind±à" Ωà"
.Ωà" æà"
SubwayVariantæà" Àà"
,Àà" Ãà"
$strÃà" õã"
}õã" úã"
,úã" ùã"
{ùã" ûã"
PackIconKindûã" ™ã"
.™ã" ´ã"
Summit´ã" ±ã"
,±ã" ≤ã"
$str≤ã" Ôã"
}Ôã" ã"
,ã" Òã"
{Òã" Úã"
PackIconKindÚã" ˛ã"
.˛ã" ˇã"

Sunglassesˇã" âå"
,âå" äå"
$sträå" Èè"
}Èè" Íè"
,Íè" Îè"
{Îè" Ïè"
PackIconKindÏè" ¯è"
.¯è" ˘è"
SurroundSound˘è" Üê"
,Üê" áê"
$stráê" ˙ì"
}˙ì" ˚ì"
,˚ì" ¸ì"
{¸ì" ˝ì"
PackIconKind˝ì" âî"
.âî" äî"
SurroundSound20äî" ôî"
,ôî" öî"
$ströî" åñ"
}åñ" çñ"
,çñ" éñ"
{éñ" èñ"
PackIconKindèñ" õñ"
.õñ" úñ"
SurroundSound31úñ" ´ñ"
,´ñ" ¨ñ"
$str¨ñ" ◊ó"
}◊ó" ÿó"
,ÿó" Ÿó"
{Ÿó" ⁄ó"
PackIconKind⁄ó" Êó"
.Êó" Áó"
SurroundSound51Áó" ˆó"
,ˆó" ˜ó"
$str˜ó" ¥ô"
}¥ô" µô"
,µô" ∂ô"
{∂ô" ∑ô"
PackIconKind∑ô" √ô"
.√ô" ƒô"
SurroundSound71ƒô" ”ô"
,”ô" ‘ô"
$str‘ô" ⁄ö"
}⁄ö" €ö"
,€ö" ‹ö"
{‹ö" ›ö"
PackIconKind›ö" Èö"
.Èö" Íö"
SvgÍö" Ìö"
,Ìö" Óö"
$strÓö" °"
}°" Ò°"
,Ò°" Ú°"
{Ú°" Û°"
PackIconKindÛ°" ˇ°"
.ˇ°" Ä¢"
SwapHorizontalÄ¢" é¢"
,é¢" è¢"
$strè¢" «¢"
}«¢" »¢"
,»¢" …¢"
{…¢"  ¢"
PackIconKind ¢" ÷¢"
.÷¢" ◊¢"
SwapVertical◊¢" „¢"
,„¢" ‰¢"
$str‰¢" ù£"
}ù£" û£"
,û£" ü£"
{ü£" †£"
PackIconKind†£" ¨£"
.¨£" ≠£"
Swim≠£" ±£"
,±£" ≤£"
$str≤£" Ï¶"
}Ï¶" Ì¶"
,Ì¶" Ó¶"
{Ó¶" Ô¶"
PackIconKindÔ¶" ˚¶"
.˚¶" ¸¶"
Switch¸¶" Çß"
,Çß" Éß"
$strÉß" Ì®"
}Ì®" Ó®"
,Ó®" Ô®"
{Ô®" ®"
PackIconKind®" ¸®"
.¸®" ˝®"
Sword˝®" Ç©"
,Ç©" É©"
$strÉ©" Ò™"
}Ò™" Ú™"
,Ú™" Û™"
{Û™" Ù™"
PackIconKindÙ™" Ä´"
.Ä´" Å´"

SwordCrossÅ´" ã´"
,ã´" å´"
$strå´" ŸÆ"
}ŸÆ" ⁄Æ"
,⁄Æ" €Æ"
{€Æ" ‹Æ"
PackIconKind‹Æ" ËÆ"
.ËÆ" ÈÆ"
SyncÈÆ" ÌÆ"
,ÌÆ" ÓÆ"
$strÓÆ" “∞"
}“∞" ”∞"
,”∞" ‘∞"
{‘∞" ’∞"
PackIconKind’∞" ·∞"
.·∞" ‚∞"
	SyncAlert‚∞" Î∞"
,Î∞" Ï∞"
$strÏ∞" ö≥"
}ö≥" õ≥"
,õ≥" ú≥"
{ú≥" ù≥"
PackIconKindù≥" ©≥"
.©≥" ™≥"
SyncOff™≥" ±≥"
,±≥" ≤≥"
$str≤≥" •∑"
}•∑" ¶∑"
,¶∑" ß∑"
{ß∑" ®∑"
PackIconKind®∑" ¥∑"
.¥∑" µ∑"
Tabµ∑" ∏∑"
,∏∑" π∑"
$strπ∑" û∏"
}û∏" ü∏"
,ü∏" †∏"
{†∏" °∏"
PackIconKind°∏" ≠∏"
.≠∏" Æ∏"
TabPlusÆ∏" µ∏"
,µ∏" ∂∏"
$str∂∏" ƒπ"
}ƒπ" ≈π"
,≈π" ∆π"
{∆π" «π"
PackIconKind«π" ”π"
.”π" ‘π"
TabUnselected‘π" ·π"
,·π" ‚π"
$str‚π"  ª"
} ª" Àª"
,Àª" Ãª"
{Ãª" Õª"
PackIconKindÕª" Ÿª"
.Ÿª" ⁄ª"
Table⁄ª" ﬂª"
,ﬂª" ‡ª"
$str‡ª" Ìº"
}Ìº" Óº"
,Óº" Ôº"
{Ôº" º"
PackIconKindº" ¸º"
.¸º" ˝º"
TableColumn˝º" àΩ"
,àΩ" âΩ"
$strâΩ" Éæ"
}Éæ" Ñæ"
,Ñæ" Öæ"
{Öæ" Üæ"
PackIconKindÜæ" íæ"
.íæ" ìæ"$
TableColumnPlusAfterìæ" ßæ"
,ßæ" ®æ"
$str®æ" Øø"
}Øø" ∞ø"
,∞ø" ±ø"
{±ø" ≤ø"
PackIconKind≤ø" æø"
.æø" øø"%
TableColumnPlusBeforeøø" ‘ø"
,‘ø" ’ø"
$str’ø" ‹¿"
}‹¿" ›¿"
,›¿" ﬁ¿"
{ﬁ¿" ﬂ¿"
PackIconKindﬂ¿" Î¿"
.Î¿" Ï¿"!
TableColumnRemoveÏ¿" ˝¿"
,˝¿" ˛¿"
$str˛¿" È¬"
}È¬" Í¬"
,Í¬" Î¬"
{Î¬" Ï¬"
PackIconKindÏ¬" ¯¬"
.¯¬" ˘¬" 
TableColumnWidth˘¬" â√"
,â√" ä√"
$strä√" ∂ƒ"
}∂ƒ" ∑ƒ"
,∑ƒ" ∏ƒ"
{∏ƒ" πƒ"
PackIconKindπƒ" ≈ƒ"
.≈ƒ" ∆ƒ"
	TableEdit∆ƒ" œƒ"
,œƒ" –ƒ"
$str–ƒ" à«"
}à«" â«"
,â«" ä«"
{ä«" ã«"
PackIconKindã«" ó«"
.ó«" ò«"

TableLargeò«" ¢«"
,¢«" £«"
$str£«" Ñ…"
}Ñ…" Ö…"
,Ö…" Ü…"
{Ü…" á…"
PackIconKindá…" ì…"
.ì…" î…"
TableOfContentsî…" £…"
,£…" §…"
$str§…" á "
}á " à "
,à " â "
{â " ä "
PackIconKindä " ñ "
.ñ " ó "
TableRowó " ü "
,ü " † "
$str† " §À"
}§À" •À"
,•À" ¶À"
{¶À" ßÀ"
PackIconKindßÀ" ≥À"
.≥À" ¥À"
TableRowHeight¥À" ¬À"
,¬À" √À"
$str√À" ÍÃ"
}ÍÃ" ÎÃ"
,ÎÃ" ÏÃ"
{ÏÃ" ÌÃ"
PackIconKindÌÃ" ˘Ã"
.˘Ã" ˙Ã"!
TableRowPlusAfter˙Ã" ãÕ"
,ãÕ" åÕ"
$stråÕ" ≥Œ"
}≥Œ" ¥Œ"
,¥Œ" µŒ"
{µŒ" ∂Œ"
PackIconKind∂Œ" ¬Œ"
.¬Œ" √Œ""
TableRowPlusBefore√Œ" ’Œ"
,’Œ" ÷Œ"
$str÷Œ" Ç–"
}Ç–" É–"
,É–" Ñ–"
{Ñ–" Ö–"
PackIconKindÖ–" ë–"
.ë–" í–"
TableRowRemoveí–" †–"
,†–" °–"
$str°–" á“"
}á“" à“"
,à“" â“"
{â“" ä“"
PackIconKindä“" ñ“"
.ñ“" ó“"
TableSettingsó“" §“"
,§“" •“"
$str•“" Â”"
}Â”" Ê”"
,Ê”" Á”"
{Á”" Ë”"
PackIconKindË”" Ù”"
.Ù”" ı”"
Tabletı”" ˚”"
,˚”" ¸”"
$str¸”" ‡‘"
}‡‘" ·‘"
,·‘" ‚‘"
{‚‘" „‘"
PackIconKind„‘" Ô‘"
.Ô‘" ‘"
TabletAndroid‘" ˝‘"
,˝‘" ˛‘"
$str˛‘" Ò’"
}Ò’" Ú’"
,Ú’" Û’"
{Û’" Ù’"
PackIconKindÙ’" Ä÷"
.Ä÷" Å÷"

TabletIpadÅ÷" ã÷"
,ã÷" å÷"
$strå÷" È◊"
}È◊" Í◊"
,Í◊" Î◊"
{Î◊" Ï◊"
PackIconKindÏ◊" ¯◊"
.¯◊" ˘◊"
Taco˘◊" ˝◊"
,˝◊" ˛◊"
$str˛◊" ú⁄"
}ú⁄" ù⁄"
,ù⁄" û⁄"
{û⁄" ü⁄"
PackIconKindü⁄" ´⁄"
.´⁄" ¨⁄"
Tag¨⁄" Ø⁄"
,Ø⁄" ∞⁄"
$str∞⁄" ˝‹"
}˝‹" ˛‹"
,˛‹" ˇ‹"
{ˇ‹" Ä›"
PackIconKindÄ›" å›"
.å›" ç›"
TagFacesç›" ï›"
,ï›" ñ›"
$strñ›" Í‡"
}Í‡" Î‡"
,Î‡" Ï‡"
{Ï‡" Ì‡"
PackIconKindÌ‡" ˘‡"
.˘‡" ˙‡"
TagHeart˙‡" Ç·"
,Ç·" É·"
$strÉ·" ¶Â"
}¶Â" ßÂ"
,ßÂ" ®Â"
{®Â" ©Â"
PackIconKind©Â" µÂ"
.µÂ" ∂Â"
TagMultiple∂Â" ¡Â"
,¡Â" ¬Â"
$str¬Â" ïÈ"
}ïÈ" ñÈ"
,ñÈ" óÈ"
{óÈ" òÈ"
PackIconKindòÈ" §È"
.§È" •È"

TagOutline•È" ØÈ"
,ØÈ" ∞È"
$str∞È" °Ï"
}°Ï" ¢Ï"
,¢Ï" £Ï"
{£Ï" §Ï"
PackIconKind§Ï" ∞Ï"
.∞Ï" ±Ï"
TagPlus±Ï" ∏Ï"
,∏Ï" πÏ"
$strπÏ" ÛÔ"
}ÛÔ" ÙÔ"
,ÙÔ" ıÔ"
{ıÔ" ˆÔ"
PackIconKindˆÔ" Ç"
.Ç" É"
	TagRemoveÉ" å"
,å" ç"
$strç" •Ù"
}•Ù" ¶Ù"
,¶Ù" ßÙ"
{ßÙ" ®Ù"
PackIconKind®Ù" ¥Ù"
.¥Ù" µÙ"
TagTextOutlineµÙ" √Ù"
,√Ù" ƒÙ"
$strƒÙ" ì¯"
}ì¯" î¯"
,î¯" ï¯"
{ï¯" ñ¯"
PackIconKindñ¯" ¢¯"
.¢¯" £¯"
Target£¯" ©¯"
,©¯" ™¯"
$str™¯" π˚"
}π˚" ∫˚"
,∫˚" ª˚"
{ª˚" º˚"
PackIconKindº˚" »˚"
.»˚" …˚"
Taxi…˚" Õ˚"
,Õ˚" Œ˚"
$strŒ˚"  ˛"
} ˛" À˛"
,À˛" Ã˛"
{Ã˛" Õ˛"
PackIconKindÕ˛" Ÿ˛"
.Ÿ˛" ⁄˛"

Teamviewer⁄˛" ‰˛"
,‰˛" Â˛"
$strÂ˛" ©Ä#
}©Ä# ™Ä#
,™Ä# ´Ä#
{´Ä# ¨Ä#
PackIconKind¨Ä# ∏Ä#
.∏Ä# πÄ#
TelegramπÄ# ¡Ä#
,¡Ä# ¬Ä#
$str¬Ä# ÕÇ#
}ÕÇ# ŒÇ#
,ŒÇ# œÇ#
{œÇ# –Ç#
PackIconKind–Ç# ‹Ç#
.‹Ç# ›Ç#

Television›Ç# ÁÇ#
,ÁÇ# ËÇ#
$strËÇ# ◊É#
}◊É# ÿÉ#
,ÿÉ# ŸÉ#
{ŸÉ# ⁄É#
PackIconKind⁄É# ÊÉ#
.ÊÉ# ÁÉ#
TelevisionBoxÁÉ# ÙÉ#
,ÙÉ# ıÉ#
$strıÉ# ÄÖ#
}ÄÖ# ÅÖ#
,ÅÖ# ÇÖ#
{ÇÖ# ÉÖ#
PackIconKindÉÖ# èÖ#
.èÖ# êÖ#!
TelevisionClassicêÖ# °Ö#
,°Ö# ¢Ö#
$str¢Ö# Ôá#
}Ôá# á#
,á# Òá#
{Òá# Úá#
PackIconKindÚá# ˛á#
.˛á# ˇá#$
TelevisionClassicOffˇá# ìà#
,ìà# îà#
$strîà# Ωã#
}Ωã# æã#
,æã# øã#
{øã# ¿ã#
PackIconKind¿ã# Ãã#
.Ãã# Õã#
TelevisionGuideÕã# ‹ã#
,‹ã# ›ã#
$str›ã# Öç#
}Öç# Üç#
,Üç# áç#
{áç# àç#
PackIconKindàç# îç#
.îç# ïç#
TelevisionOffïç# ¢ç#
,¢ç# £ç#
$str£ç# ˛é#
}˛é# ˇé#
,ˇé# Äè#
{Äè# Åè#
PackIconKindÅè# çè#
.çè# éè#"
TemperatureCelsiuséè# †è#
,†è# °è#
$str°è# Äí#
}Äí# Åí#
,Åí# Çí#
{Çí# Éí#
PackIconKindÉí# èí#
.èí# êí#%
TemperatureFahrenheitêí# •í#
,•í# ¶í#
$str¶í# √ì#
}√ì# ƒì#
,ƒì# ≈ì#
{≈ì# ∆ì#
PackIconKind∆ì# “ì#
.“ì# ”ì#!
TemperatureKelvin”ì# ‰ì#
,‰ì# Âì#
$strÂì# Æî#
}Æî# Øî#
,Øî# ∞î#
{∞î# ±î#
PackIconKind±î# Ωî#
.Ωî# æî#
Tennisæî# ƒî#
,ƒî# ≈î#
$str≈î# ¸ó#
}¸ó# ˝ó#
,˝ó# ˛ó#
{˛ó# ˇó#
PackIconKindˇó# ãò#
.ãò# åò#
Tentåò# êò#
,êò# ëò#
$strëò# úô#
}úô# ùô#
,ùô# ûô#
{ûô# üô#
PackIconKindüô# ´ô#
.´ô# ¨ô#
Terrain¨ô# ≥ô#
,≥ô# ¥ô#
$str¥ô# ˘ô#
}˘ô# ˙ô#
,˙ô# ˚ô#
{˚ô# ¸ô#
PackIconKind¸ô# àö#
.àö# âö#
TestTubeâö# ëö#
,ëö# íö#
$stríö# îú#
}îú# ïú#
,ïú# ñú#
{ñú# óú#
PackIconKindóú# £ú#
.£ú# §ú#

TextShadow§ú# Æú#
,Æú# Øú#
$strØú# æù#
}æù# øù#
,øù# ¿ù#
{¿ù# ¡ù#
PackIconKind¡ù# Õù#
.Õù# Œù#
TextToSpeechŒù# ⁄ù#
,⁄ù# €ù#
$str€ù# Å†#
}Å†# Ç†#
,Ç†# É†#
{É†# Ñ†#
PackIconKindÑ†# ê†#
.ê†# ë†#
TextToSpeechOffë†# ††#
,††# °†#
$str°†# Ô¢#
}Ô¢# ¢#
,¢# Ò¢#
{Ò¢# Ú¢#
PackIconKindÚ¢# ˛¢#
.˛¢# ˇ¢#
Textboxˇ¢# Ü£#
,Ü£# á£#
$strá£# ä•#
}ä•# ã•#
,ã•# å•#
{å•# ç•#
PackIconKindç•# ô•#
.ô•# ö•#
TextboxPasswordö•# ©•#
,©•# ™•#
$str™•# ˘®#
}˘®# ˙®#
,˙®# ˚®#
{˚®# ¸®#
PackIconKind¸®# à©#
.à©# â©#
Textureâ©# ê©#
,ê©# ë©#
$strë©# Æ´#
}Æ´# Ø´#
,Ø´# ∞´#
{∞´# ±´#
PackIconKind±´# Ω´#
.Ω´# æ´#
Theateræ´# ≈´#
,≈´# ∆´#
$str∆´# ‘≠#
}‘≠# ’≠#
,’≠# ÷≠#
{÷≠# ◊≠#
PackIconKind◊≠# „≠#
.„≠# ‰≠#
ThemeLightDark‰≠# Ú≠#
,Ú≠# Û≠#
$strÛ≠# Ö≥#
}Ö≥# Ü≥#
,Ü≥# á≥#
{á≥# à≥#
PackIconKindà≥# î≥#
.î≥# ï≥#
Thermometerï≥# †≥#
,†≥# °≥#
$str°≥# Öµ#
}Öµ# Üµ#
,Üµ# áµ#
{áµ# àµ#
PackIconKindàµ# îµ#
.îµ# ïµ# 
ThermometerLinesïµ# •µ#
,•µ# ¶µ#
$str¶µ# »∏#
}»∏# …∏#
,…∏#  ∏#
{ ∏# À∏#
PackIconKindÀ∏# ◊∏#
.◊∏# ÿ∏#
ThermostatBoxÿ∏# Â∏#
,Â∏# Ê∏#
$strÊ∏# ·ª#
}·ª# ‚ª#
,‚ª# „ª#
{„ª# ‰ª#
PackIconKind‰ª# ª#
.ª# Òª#
ThoughtBubbleÒª# ˛ª#
,˛ª# ˇª#
$strˇª# é¿#
}é¿# è¿#
,è¿# ê¿#
{ê¿# ë¿#
PackIconKindë¿# ù¿#
.ù¿# û¿#$
ThoughtBubbleOutlineû¿# ≤¿#
,≤¿# ≥¿#
$str≥¿# Â»#
}Â»# Ê»#
,Ê»# Á»#
{Á»# Ë»#
PackIconKindË»# Ù»#
.Ù»# ı»#
	ThumbDownı»# ˛»#
,˛»# ˇ»#
$strˇ»# ˙ #
}˙ # ˚ #
,˚ # ¸ #
{¸ # ˝ #
PackIconKind˝ # âÀ#
.âÀ# äÀ# 
ThumbDownOutlineäÀ# öÀ#
,öÀ# õÀ#
$strõÀ# ≤Õ#
}≤Õ# ≥Õ#
,≥Õ# ¥Õ#
{¥Õ# µÕ#
PackIconKindµÕ# ¡Õ#
.¡Õ# ¬Õ#
ThumbUp¬Õ# …Õ#
,…Õ#  Õ#
$str Õ# Àœ#
}Àœ# Ãœ#
,Ãœ# Õœ#
{Õœ# Œœ#
PackIconKindŒœ# ⁄œ#
.⁄œ# €œ#
ThumbUpOutline€œ# Èœ#
,Èœ# Íœ#
$strÍœ# Ç“#
}Ç“# É“#
,É“# Ñ“#
{Ñ“# Ö“#
PackIconKindÖ“# ë“#
.ë“# í“#
ThumbsUpDowní“# û“#
,û“# ü“#
$strü“# ÿ’#
}ÿ’# Ÿ’#
,Ÿ’# ⁄’#
{⁄’# €’#
PackIconKind€’# Á’#
.Á’# Ë’#
TicketË’# Ó’#
,Ó’# Ô’#
$strÔ’# Û◊#
}Û◊# Ù◊#
,Ù◊# ı◊#
{ı◊# ˆ◊#
PackIconKindˆ◊# Çÿ#
.Çÿ# Éÿ#
TicketAccountÉÿ# êÿ#
,êÿ# ëÿ#
$strëÿ# Â⁄#
}Â⁄# Ê⁄#
,Ê⁄# Á⁄#
{Á⁄# Ë⁄#
PackIconKindË⁄# Ù⁄#
.Ù⁄# ı⁄#"
TicketConfirmationı⁄# á€#
,á€# à€#
$strà€# ‰‹#
}‰‹# Â‹#
,Â‹# Ê‹#
{Ê‹# Á‹#
PackIconKindÁ‹# Û‹#
.Û‹# Ù‹#
TicketPercentÙ‹# Å›#
,Å›# Ç›#
$strÇ›# —‡#
}—‡# “‡#
,“‡# ”‡#
{”‡# ‘‡#
PackIconKind‘‡# ‡‡#
.‡‡# ·‡#
Tie·‡# ‰‡#
,‰‡# Â‡#
$strÂ‡# å·#
}å·# ç·#
,ç·# é·#
{é·# è·#
PackIconKindè·# õ·#
.õ·# ú·#
Tildeú·# °·#
,°·# ¢·#
$str¢·# ≠‚#
}≠‚# Æ‚#
,Æ‚# Ø‚#
{Ø‚# ∞‚#
PackIconKind∞‚# º‚#
.º‚# Ω‚#
	TimelapseΩ‚# ∆‚#
,∆‚# «‚#
$str«‚# Õ‰#
}Õ‰# Œ‰#
,Œ‰# œ‰#
{œ‰# –‰#
PackIconKind–‰# ‹‰#
.‹‰# ›‰#
Timer›‰# ‚‰#
,‚‰# „‰#
$str„‰# ÍÊ#
}ÍÊ# ÎÊ#
,ÎÊ# ÏÊ#
{ÏÊ# ÌÊ#
PackIconKindÌÊ# ˘Ê#
.˘Ê# ˙Ê#
Timer10˙Ê# ÅÁ#
,ÅÁ# ÇÁ#
$strÇÁ# “˚#
}“˚# ”˚#
,”˚# ‘˚#
{‘˚# ’˚#
PackIconKind’˚# ·˚#
.·˚# ‚˚#
Timer3‚˚# Ë˚#
,Ë˚# È˚#
$strÈ˚# çì$
}çì$ éì$
,éì$ èì$
{èì$ êì$
PackIconKindêì$ úì$
.úì$ ùì$
TimerOffùì$ •ì$
,•ì$ ¶ì$
$str¶ì$ êó$
}êó$ ëó$
,ëó$ íó$
{íó$ ìó$
PackIconKindìó$ üó$
.üó$ †ó$
	TimerSand†ó$ ©ó$
,©ó$ ™ó$
$str™ó$  ò$
} ò$ Àò$
,Àò$ Ãò$
{Ãò$ Õò$
PackIconKindÕò$ Ÿò$
.Ÿò$ ⁄ò$
TimerSandEmpty⁄ò$ Ëò$
,Ëò$ Èò$
$strÈò$ Íô$
}Íô$ Îô$
,Îô$ Ïô$
{Ïô$ Ìô$
PackIconKindÌô$ ˘ô$
.˘ô$ ˙ô$
TimerSandFull˙ô$ áö$
,áö$ àö$
$stràö$ »ö$
}»ö$ …ö$
,…ö$  ö$
{ ö$ Àö$
PackIconKindÀö$ ◊ö$
.◊ö$ ÿö$
	Timetableÿö$ ·ö$
,·ö$ ‚ö$
$str‚ö$ ãû$
}ãû$ åû$
,åû$ çû$
{çû$ éû$
PackIconKindéû$ öû$
.öû$ õû$
ToggleSwitchõû$ ßû$
,ßû$ ®û$
$str®û$ öü$
}öü$ õü$
,õü$ úü$
{úü$ ùü$
PackIconKindùü$ ©ü$
.©ü$ ™ü$
ToggleSwitchOff™ü$ πü$
,πü$ ∫ü$
$str∫ü$ Ï†$
}Ï†$ Ì†$
,Ì†$ Ó†$
{Ó†$ Ô†$
PackIconKindÔ†$ ˚†$
.˚†$ ¸†$
Tooltip¸†$ É°$
,É°$ Ñ°$
$strÑ°$ ﬂ°$
}ﬂ°$ ‡°$
,‡°$ ·°$
{·°$ ‚°$
PackIconKind‚°$ Ó°$
.Ó°$ Ô°$
TooltipEditÔ°$ ˙°$
,˙°$ ˚°$
$str˚°$ €£$
}€£$ ‹£$
,‹£$ ›£$
{›£$ ﬁ£$
PackIconKindﬁ£$ Í£$
.Í£$ Î£$
TooltipImageÎ£$ ˜£$
,˜£$ ¯£$
$str¯£$ ™•$
}™•$ ´•$
,´•$ ¨•$
{¨•$ ≠•$
PackIconKind≠•$ π•$
.π•$ ∫•$
TooltipOutline∫•$ »•$
,»•$ …•$
$str…•$ …¶$
}…¶$  ¶$
, ¶$ À¶$
{À¶$ Ã¶$
PackIconKindÃ¶$ ÿ¶$
.ÿ¶$ Ÿ¶$"
TooltipOutlinePlusŸ¶$ Î¶$
,Î¶$ Ï¶$
$strÏ¶$ ë®$
}ë®$ í®$
,í®$ ì®$
{ì®$ î®$
PackIconKindî®$ †®$
.†®$ °®$
TooltipText°®$ ¨®$
,¨®$ ≠®$
$str≠®$ ≥©$
}≥©$ ¥©$
,¥©$ µ©$
{µ©$ ∂©$
PackIconKind∂©$ ¬©$
.¬©$ √©$
Tooth√©$ »©$
,»©$ …©$
$str…©$ †≠$
}†≠$ °≠$
,°≠$ ¢≠$
{¢≠$ £≠$
PackIconKind£≠$ Ø≠$
.Ø≠$ ∞≠$
Tor∞≠$ ≥≠$
,≥≠$ ¥≠$
$str¥≠$ Í±$
}Í±$ Î±$
,Î±$ Ï±$
{Ï±$ Ì±$
PackIconKindÌ±$ ˘±$
.˘±$ ˙±$

TowerBeach˙±$ Ñ≤$
,Ñ≤$ Ö≤$
$strÖ≤$ ı≥$
}ı≥$ ˆ≥$
,ˆ≥$ ˜≥$
{˜≥$ ¯≥$
PackIconKind¯≥$ Ñ¥$
.Ñ¥$ Ö¥$
	TowerFireÖ¥$ é¥$
,é¥$ è¥$
$strè¥$ Ñ∂$
}Ñ∂$ Ö∂$
,Ö∂$ Ü∂$
{Ü∂$ á∂$
PackIconKindá∂$ ì∂$
.ì∂$ î∂$
Towingî∂$ ö∂$
,ö∂$ õ∂$
$strõ∂$ ÷º$
}÷º$ ◊º$
,◊º$ ÿº$
{ÿº$ Ÿº$
PackIconKindŸº$ Âº$
.Âº$ Êº$
TrackpadÊº$ Óº$
,Óº$ Ôº$
$strÔº$ ÏΩ$
}ÏΩ$ ÌΩ$
,ÌΩ$ ÓΩ$
{ÓΩ$ ÔΩ$
PackIconKindÔΩ$ ˚Ω$
.˚Ω$ ¸Ω$
Tractor¸Ω$ Éæ$
,Éæ$ Ñæ$
$strÑæ$ Ï¡$
}Ï¡$ Ì¡$
,Ì¡$ Ó¡$
{Ó¡$ Ô¡$
PackIconKindÔ¡$ ˚¡$
.˚¡$ ¸¡$
TrafficLight¸¡$ à¬$
,à¬$ â¬$
$strâ¬$ í∆$
}í∆$ ì∆$
,ì∆$ î∆$
{î∆$ ï∆$
PackIconKindï∆$ °∆$
.°∆$ ¢∆$
Train¢∆$ ß∆$
,ß∆$ ®∆$
$str®∆$ Ö»$
}Ö»$ Ü»$
,Ü»$ á»$
{á»$ à»$
PackIconKindà»$ î»$
.î»$ ï»$
Tramï»$ ô»$
,ô»$ ö»$
$strö»$ › $
}› $ ﬁ $
,ﬁ $ ﬂ $
{ﬂ $ ‡ $
PackIconKind‡ $ Ï $
.Ï $ Ì $

TranscribeÌ $ ˜ $
,˜ $ ¯ $
$str¯ $ ’Ã$
}’Ã$ ÷Ã$
,÷Ã$ ◊Ã$
{◊Ã$ ÿÃ$
PackIconKindÿÃ$ ‰Ã$
.‰Ã$ ÂÃ$
TranscribeCloseÂÃ$ ÙÃ$
,ÙÃ$ ıÃ$
$strıÃ$ ‹Œ$
}‹Œ$ ›Œ$
,›Œ$ ﬁŒ$
{ﬁŒ$ ﬂŒ$
PackIconKindﬂŒ$ ÎŒ$
.ÎŒ$ ÏŒ$
TransferÏŒ$ ÙŒ$
,ÙŒ$ ıŒ$
$strıŒ$ ¬œ$
}¬œ$ √œ$
,√œ$ ƒœ$
{ƒœ$ ≈œ$
PackIconKind≈œ$ —œ$
.—œ$ “œ$
TransitTransfer“œ$ ·œ$
,·œ$ ‚œ$
$str‚œ$ ‚“$
}‚“$ „“$
,„“$ ‰“$
{‰“$ Â“$
PackIconKindÂ“$ Ò“$
.Ò“$ Ú“$
	TranslateÚ“$ ˚“$
,˚“$ ¸“$
$str¸“$ º’$
}º’$ Ω’$
,Ω’$ æ’$
{æ’$ ø’$
PackIconKindø’$ À’$
.À’$ Ã’$
TreasureChestÃ’$ Ÿ’$
,Ÿ’$ ⁄’$
$str⁄’$ Ã÷$
}Ã÷$ Õ÷$
,Õ÷$ Œ÷$
{Œ÷$ œ÷$
PackIconKindœ÷$ €÷$
.€÷$ ‹÷$
Tree‹÷$ ‡÷$
,‡÷$ ·÷$
$str·÷$ ‹ÿ$
}‹ÿ$ ›ÿ$
,›ÿ$ ﬁÿ$
{ﬁÿ$ ﬂÿ$
PackIconKindﬂÿ$ Îÿ$
.Îÿ$ Ïÿ$
TrelloÏÿ$ Úÿ$
,Úÿ$ Ûÿ$
$strÛÿ$ ¸€$
}¸€$ ˝€$
,˝€$ ˛€$
{˛€$ ˇ€$
PackIconKindˇ€$ ã‹$
.ã‹$ å‹$
TrendingDownå‹$ ò‹$
,ò‹$ ô‹$
$strô‹$ ˚‹$
}˚‹$ ¸‹$
,¸‹$ ˝‹$
{˝‹$ ˛‹$
PackIconKind˛‹$ ä›$
.ä›$ ã›$
TrendingNeutralã›$ ö›$
,ö›$ õ›$
$strõ›$ Ω›$
}Ω›$ æ›$
,æ›$ ø›$
{ø›$ ¿›$
PackIconKind¿›$ Ã›$
.Ã›$ Õ›$

TrendingUpÕ›$ ◊›$
,◊›$ ÿ›$
$strÿ›$ ∏ﬁ$
}∏ﬁ$ πﬁ$
,πﬁ$ ∫ﬁ$
{∫ﬁ$ ªﬁ$
PackIconKindªﬁ$ «ﬁ$
.«ﬁ$ »ﬁ$
Triangle»ﬁ$ –ﬁ$
,–ﬁ$ —ﬁ$
$str—ﬁ$ ‡ﬁ$
}‡ﬁ$ ·ﬁ$
,·ﬁ$ ‚ﬁ$
{‚ﬁ$ „ﬁ$
PackIconKind„ﬁ$ Ôﬁ$
.Ôﬁ$ ﬁ$
TriangleOutlineﬁ$ ˇﬁ$
,ˇﬁ$ Äﬂ$
$strÄﬂ$ ¢ﬂ$
}¢ﬂ$ £ﬂ$
,£ﬂ$ §ﬂ$
{§ﬂ$ •ﬂ$
PackIconKind•ﬂ$ ±ﬂ$
.±ﬂ$ ≤ﬂ$
Trophy≤ﬂ$ ∏ﬂ$
,∏ﬂ$ πﬂ$
$strπﬂ$ „·$
}„·$ ‰·$
,‰·$ Â·$
{Â·$ Ê·$
PackIconKindÊ·$ Ú·$
.Ú·$ Û·$
TrophyAwardÛ·$ ˛·$
,˛·$ ˇ·$
$strˇ·$ ®„$
}®„$ ©„$
,©„$ ™„$
{™„$ ´„$
PackIconKind´„$ ∑„$
.∑„$ ∏„$
TrophyOutline∏„$ ≈„$
,≈„$ ∆„$
$str∆„$ ˜Â$
}˜Â$ ¯Â$
,¯Â$ ˘Â$
{˘Â$ ˙Â$
PackIconKind˙Â$ ÜÊ$
.ÜÊ$ áÊ$
TrophyVariantáÊ$ îÊ$
,îÊ$ ïÊ$
$strïÊ$ ©Ë$
}©Ë$ ™Ë$
,™Ë$ ´Ë$
{´Ë$ ¨Ë$
PackIconKind¨Ë$ ∏Ë$
.∏Ë$ πË$$
TrophyVariantOutlineπË$ ÕË$
,ÕË$ ŒË$
$strŒË$ ◊Í$
}◊Í$ ÿÍ$
,ÿÍ$ ŸÍ$
{ŸÍ$ ⁄Í$
PackIconKind⁄Í$ ÊÍ$
.ÊÍ$ ÁÍ$
TruckÁÍ$ ÏÍ$
,ÏÍ$ ÌÍ$
$strÌÍ$ ≥Ì$
}≥Ì$ ¥Ì$
,¥Ì$ µÌ$
{µÌ$ ∂Ì$
PackIconKind∂Ì$ ¬Ì$
.¬Ì$ √Ì$
TruckDelivery√Ì$ –Ì$
,–Ì$ —Ì$
$str—Ì$ ™$
}™$ ´$
,´$ ¨$
{¨$ ≠$
PackIconKind≠$ π$
.π$ ∫$
	TruckFast∫$ √$
,√$ ƒ$
$strƒ$ ŒÛ$
}ŒÛ$ œÛ$
,œÛ$ –Û$
{–Û$ —Û$
PackIconKind—Û$ ›Û$
.›Û$ ﬁÛ$
TruckTrailerﬁÛ$ ÍÛ$
,ÍÛ$ ÎÛ$
$strÎÛ$ Éı$
}Éı$ Ñı$
,Ñı$ Öı$
{Öı$ Üı$
PackIconKindÜı$ íı$
.íı$ ìı$

TshirtCrewìı$ ùı$
,ùı$ ûı$
$strûı$ œ¯$
}œ¯$ –¯$
,–¯$ —¯$
{—¯$ “¯$
PackIconKind“¯$ ﬁ¯$
.ﬁ¯$ ﬂ¯$
TshirtVﬂ¯$ Ê¯$
,Ê¯$ Á¯$
$strÁ¯$ Ú˚$
}Ú˚$ Û˚$
,Û˚$ Ù˚$
{Ù˚$ ı˚$
PackIconKindı˚$ Å¸$
.Å¸$ Ç¸$
TumblrÇ¸$ à¸$
,à¸$ â¸$
$strâ¸$ Ô˝$
}Ô˝$ ˝$
,˝$ Ò˝$
{Ò˝$ Ú˝$
PackIconKindÚ˝$ ˛˝$
.˛˝$ ˇ˝$
TumblrReblogˇ˝$ ã˛$
,ã˛$ å˛$
$strå˛$ ïˇ$
}ïˇ$ ñˇ$
,ñˇ$ óˇ$
{óˇ$ òˇ$
PackIconKindòˇ$ §ˇ$
.§ˇ$ •ˇ$
Tune•ˇ$ ©ˇ$
,©ˇ$ ™ˇ$
$str™ˇ$ ©Ä%
}©Ä% ™Ä%
,™Ä% ´Ä%
{´Ä% ¨Ä%
PackIconKind¨Ä% ∏Ä%
.∏Ä% πÄ%
TuneVerticalπÄ% ≈Ä%
,≈Ä% ∆Ä%
$str∆Ä% ÆÅ%
}ÆÅ% ØÅ%
,ØÅ% ∞Å%
{∞Å% ±Å%
PackIconKind±Å% ΩÅ%
.ΩÅ% æÅ%
TwitchæÅ% ƒÅ%
,ƒÅ% ≈Å%
$str≈Å% ØÇ%
}ØÇ% ∞Ç%
,∞Ç% ±Ç%
{±Ç% ≤Ç%
PackIconKind≤Ç% æÇ%
.æÇ% øÇ%
TwitterøÇ% ∆Ç%
,∆Ç% «Ç%
$str«Ç% Àá%
}Àá% Ãá%
,Ãá% Õá%
{Õá% Œá%
PackIconKindŒá% ⁄á%
.⁄á% €á%

TwitterBox€á% Âá%
,Âá% Êá%
$strÊá% ˘ã%
}˘ã% ˙ã%
,˙ã% ˚ã%
{˚ã% ¸ã%
PackIconKind¸ã% àå%
.àå% âå%
TwitterCircleâå% ñå%
,ñå% óå%
$stróå% ´ê%
}´ê% ¨ê%
,¨ê% ≠ê%
{≠ê% Æê%
PackIconKindÆê% ∫ê%
.∫ê% ªê%
TwitterRetweetªê% …ê%
,…ê%  ê%
$str ê% ’ë%
}’ë% ÷ë%
,÷ë% ◊ë%
{◊ë% ÿë%
PackIconKindÿë% ‰ë%
.‰ë% Âë%
UberÂë% Èë%
,Èë% Íë%
$strÍë% µì%
}µì% ∂ì%
,∂ì% ∑ì%
{∑ì% ∏ì%
PackIconKind∏ì% ƒì%
.ƒì% ≈ì%
Ubuntu≈ì% Àì%
,Àì% Ãì%
$strÃì% ìù%
}ìù% îù%
,îù% ïù%
{ïù% ñù%
PackIconKindñù% ¢ù%
.¢ù% £ù%#
UltraHighDefinition£ù% ∂ù%
,∂ù% ∑ù%
$str∑ù% èü%
}èü% êü%
,êü% ëü%
{ëü% íü%
PackIconKindíü% ûü%
.ûü% üü%
Umbracoüü% ¶ü%
,¶ü% ßü%
$strßü% ì¢%
}ì¢% î¢%
,î¢% ï¢%
{ï¢% ñ¢%
PackIconKindñ¢% ¢¢%
.¢¢% £¢%
Umbrella£¢% ´¢%
,´¢% ¨¢%
$str¨¢% ü£%
}ü£% †£%
,†£% °£%
{°£% ¢£%
PackIconKind¢£% Æ£%
.Æ£% Ø£%
UmbrellaOutlineØ£% æ£%
,æ£% ø£%
$strø£% Í§%
}Í§% Î§%
,Î§% Ï§%
{Ï§% Ì§%
PackIconKindÌ§% ˘§%
.˘§% ˙§%
Undo˙§% ˛§%
,˛§% ˇ§%
$strˇ§% õ¶%
}õ¶% ú¶%
,ú¶% ù¶%
{ù¶% û¶%
PackIconKindû¶% ™¶%
.™¶% ´¶%
UndoVariant´¶% ∂¶%
,∂¶% ∑¶%
$str∑¶% Íß%
}Íß% Îß%
,Îß% Ïß%
{Ïß% Ìß%
PackIconKindÌß% ˘ß%
.˘ß% ˙ß%$
UnfoldLessHorizontal˙ß% é®%
,é®% è®%
$strè®% Ü©%
}Ü©% á©%
,á©% à©%
{à©% â©%
PackIconKindâ©% ï©%
.ï©% ñ©%"
UnfoldLessVerticalñ©% ®©%
,®©% ©©%
$str©©% ´™%
}´™% ¨™%
,¨™% ≠™%
{≠™% Æ™%
PackIconKindÆ™% ∫™%
.∫™% ª™%$
UnfoldMoreHorizontalª™% œ™%
,œ™% –™%
$str–™% √´%
}√´% ƒ´%
,ƒ´% ≈´%
{≈´% ∆´%
PackIconKind∆´% “´%
.“´% ”´%"
UnfoldMoreVertical”´% Â´%
,Â´% Ê´%
$strÊ´% ‚¨%
}‚¨% „¨%
,„¨% ‰¨%
{‰¨% Â¨%
PackIconKindÂ¨% Ò¨%
.Ò¨% Ú¨%
UngroupÚ¨% ˘¨%
,˘¨% ˙¨%
$str˙¨% “Æ%
}“Æ% ”Æ%
,”Æ% ‘Æ%
{‘Æ% ’Æ%
PackIconKind’Æ% ·Æ%
.·Æ% ‚Æ%
Unity‚Æ% ÁÆ%
,ÁÆ% ËÆ%
$strËÆ% È∞%
}È∞% Í∞%
,Í∞% Î∞%
{Î∞% Ï∞%
PackIconKindÏ∞% ¯∞%
.¯∞% ˘∞%
Untappd˘∞% Ä±%
,Ä±% Å±%
$strÅ±% ∫π%
}∫π% ªπ%
,ªπ% ºπ%
{ºπ% Ωπ%
PackIconKindΩπ% …π%
.…π%  π%
Update π% –π%
,–π% —π%
$str—π% †º%
}†º% °º%
,°º% ¢º%
{¢º% £º%
PackIconKind£º% Øº%
.Øº% ∞º%
Upload∞º% ∂º%
,∂º% ∑º%
$str∑º% Áº%
}Áº% Ëº%
,Ëº% Èº%
{Èº% Íº%
PackIconKindÍº% ˆº%
.ˆº% ˜º%
UploadMultiple˜º% ÖΩ%
,ÖΩ% ÜΩ%
$strÜΩ% ≈Ω%
}≈Ω% ∆Ω%
,∆Ω% «Ω%
{«Ω% »Ω%
PackIconKind»Ω% ‘Ω%
.‘Ω% ’Ω%
UploadNetwork’Ω% ‚Ω%
,‚Ω% „Ω%
$str„Ω% Ωø%
}Ωø% æø%
,æø% øø%
{øø% ¿ø%
PackIconKind¿ø% Ãø%
.Ãø% Õø%
UsbÕø% –ø%
,–ø% —ø%
$str—ø% ä¬%
}ä¬% ã¬%
,ã¬% å¬%
{å¬% ç¬%
PackIconKindç¬% ô¬%
.ô¬% ö¬%
VanPassengerö¬% ¶¬%
,¶¬% ß¬%
$strß¬% •≈%
}•≈% ¶≈%
,¶≈% ß≈%
{ß≈% ®≈%
PackIconKind®≈% ¥≈%
.¥≈% µ≈%

VanUtilityµ≈% ø≈%
,ø≈% ¿≈%
$str¿≈% õ»%
}õ»% ú»%
,ú»% ù»%
{ù»% û»%
PackIconKindû»% ™»%
.™»% ´»%
Vanish´»% ±»%
,±»% ≤»%
$str≤»% ” %
}” % ‘ %
,‘ % ’ %
{’ % ÷ %
PackIconKind÷ % ‚ %
.‚ % „ %"
VectorArrangeAbove„ % ı %
,ı % ˆ %
$strˆ % ÚÃ%
}ÚÃ% ÛÃ%
,ÛÃ% ÙÃ%
{ÙÃ% ıÃ%
PackIconKindıÃ% ÅÕ%
.ÅÕ% ÇÕ%"
VectorArrangeBelowÇÕ% îÕ%
,îÕ% ïÕ%
$strïÕ% âœ%
}âœ% äœ%
,äœ% ãœ%
{ãœ% åœ%
PackIconKindåœ% òœ%
.òœ% ôœ%
VectorCircleôœ% •œ%
,•œ% ¶œ%
$str¶œ% ¨“%
}¨“% ≠“%
,≠“% Æ“%
{Æ“% Ø“%
PackIconKindØ“% ª“%
.ª“% º“%#
VectorCircleVariantº“% œ“%
,œ“% –“%
$str–“% æ‘%
}æ‘% ø‘%
,ø‘% ¿‘%
{¿‘% ¡‘%
PackIconKind¡‘% Õ‘%
.Õ‘% Œ‘%
VectorCombineŒ‘% €‘%
,€‘% ‹‘%
$str‹‘% –◊%
}–◊% —◊%
,—◊% “◊%
{“◊% ”◊%
PackIconKind”◊% ﬂ◊%
.ﬂ◊% ‡◊%
VectorCurve‡◊% Î◊%
,Î◊% Ï◊%
$strÏ◊% «‹%
}«‹% »‹%
,»‹% …‹%
{…‹%  ‹%
PackIconKind ‹% ÷‹%
.÷‹% ◊‹% 
VectorDifference◊‹% Á‹%
,Á‹% Ë‹%
$strË‹% ¢ﬂ%
}¢ﬂ% £ﬂ%
,£ﬂ% §ﬂ%
{§ﬂ% •ﬂ%
PackIconKind•ﬂ% ±ﬂ%
.±ﬂ% ≤ﬂ%"
VectorDifferenceAb≤ﬂ% ƒﬂ%
,ƒﬂ% ≈ﬂ%
$str≈ﬂ% î‚%
}î‚% ï‚%
,ï‚% ñ‚%
{ñ‚% ó‚%
PackIconKindó‚% £‚%
.£‚% §‚%"
VectorDifferenceBa§‚% ∂‚%
,∂‚% ∑‚%
$str∑‚% êÂ%
}êÂ% ëÂ%
,ëÂ% íÂ%
{íÂ% ìÂ%
PackIconKindìÂ% üÂ%
.üÂ% †Â%
VectorEllipse†Â% ≠Â%
,≠Â% ÆÂ%
$strÆÂ% ÷Á%
}÷Á% ◊Á%
,◊Á% ÿÁ%
{ÿÁ% ŸÁ%
PackIconKindŸÁ% ÂÁ%
.ÂÁ% ÊÁ%"
VectorIntersectionÊÁ% ¯Á%
,¯Á% ˘Á%
$str˘Á% ”Î%
}”Î% ‘Î%
,‘Î% ’Î%
{’Î% ÷Î%
PackIconKind÷Î% ‚Î%
.‚Î% „Î%

VectorLine„Î% ÌÎ%
,ÌÎ% ÓÎ%
$strÓÎ% µÏ%
}µÏ% ∂Ï%
,∂Ï% ∑Ï%
{∑Ï% ∏Ï%
PackIconKind∏Ï% ƒÏ%
.ƒÏ% ≈Ï%
VectorPoint≈Ï% –Ï%
,–Ï% —Ï%
$str—Ï% †Ì%
}†Ì% °Ì%
,°Ì% ¢Ì%
{¢Ì% £Ì%
PackIconKind£Ì% ØÌ%
.ØÌ% ∞Ì%
VectorPolygon∞Ì% ΩÌ%
,ΩÌ% æÌ%
$stræÌ% ®Ô%
}®Ô% ©Ô%
,©Ô% ™Ô%
{™Ô% ´Ô%
PackIconKind´Ô% ∑Ô%
.∑Ô% ∏Ô%
VectorPolyline∏Ô% ∆Ô%
,∆Ô% «Ô%
$str«Ô% ˆ%
}ˆ% ˜%
,˜% ¯%
{¯% ˘%
PackIconKind˘% ÖÒ%
.ÖÒ% ÜÒ%
VectorRadiusÜÒ% íÒ%
,íÒ% ìÒ%
$strìÒ% áÚ%
}áÚ% àÚ%
,àÚ% âÚ%
{âÚ% äÚ%
PackIconKindäÚ% ñÚ%
.ñÚ% óÚ%
VectorRectangleóÚ% ¶Ú%
,¶Ú% ßÚ%
$strßÚ% ƒÛ%
}ƒÛ% ≈Û%
,≈Û% ∆Û%
{∆Û% «Û%
PackIconKind«Û% ”Û%
.”Û% ‘Û%
VectorSelection‘Û% „Û%
,„Û% ‰Û%
$str‰Û% Îˆ%
}Îˆ% Ïˆ%
,Ïˆ% Ìˆ%
{Ìˆ% Óˆ%
PackIconKindÓˆ% ˙ˆ%
.˙ˆ% ˚ˆ%
VectorSquare˚ˆ% á˜%
,á˜% à˜%
$strà˜% †¯%
}†¯% °¯%
,°¯% ¢¯%
{¢¯% £¯%
PackIconKind£¯% Ø¯%
.Ø¯% ∞¯%
VectorTriangle∞¯% æ¯%
,æ¯% ø¯%
$strø¯% ¡˘%
}¡˘% ¬˘%
,¬˘% √˘%
{√˘% ƒ˘%
PackIconKindƒ˘% –˘%
.–˘% —˘%
VectorUnion—˘% ‹˘%
,‹˘% ›˘%
$str›˘% é˚%
}é˚% è˚%
,è˚% ê˚%
{ê˚% ë˚%
PackIconKindë˚% ù˚%
.ù˚% û˚%
Venmoû˚% £˚%
,£˚% §˚%
$str§˚% ÿ¸%
}ÿ¸% Ÿ¸%
,Ÿ¸% ⁄¸%
{⁄¸% €¸%
PackIconKind€¸% Á¸%
.Á¸% Ë¸%
VerifiedË¸% ¸%
,¸% Ò¸%
$strÒ¸% Í˝%
}Í˝% Î˝%
,Î˝% Ï˝%
{Ï˝% Ì˝%
PackIconKindÌ˝% ˘˝%
.˘˝% ˙˝%
Vibrate˙˝% Å˛%
,Å˛% Ç˛%
$strÇ˛% ≥ˇ%
}≥ˇ% ¥ˇ%
,¥ˇ% µˇ%
{µˇ% ∂ˇ%
PackIconKind∂ˇ% ¬ˇ%
.¬ˇ% √ˇ%
Video√ˇ% »ˇ%
,»ˇ% …ˇ%
$str…ˇ% ≥Ä&
}≥Ä& ¥Ä&
,¥Ä& µÄ&
{µÄ& ∂Ä&
PackIconKind∂Ä& ¬Ä&
.¬Ä& √Ä&
Video3d√Ä&  Ä&
, Ä& ÀÄ&
$strÀÄ& ÌÅ&
}ÌÅ& ÓÅ&
,ÓÅ& ÔÅ&
{ÔÅ& Å&
PackIconKindÅ& ¸Å&
.¸Å& ˝Å&

Video4kBox˝Å& áÇ&
,áÇ& àÇ&
$stràÇ& ÈÉ&
}ÈÉ& ÍÉ&
,ÍÉ& ÎÉ&
{ÎÉ& ÏÉ&
PackIconKindÏÉ& ¯É&
.¯É& ˘É&!
VideoInputAntenna˘É& äÑ&
,äÑ& ãÑ&
$strãÑ& ÃÜ&
}ÃÜ& ÕÜ&
,ÕÜ& ŒÜ&
{ŒÜ& œÜ&
PackIconKindœÜ& €Ü&
.€Ü& ‹Ü&#
VideoInputComponent‹Ü& ÔÜ&
,ÔÜ& Ü&
$strÜ& Úâ&
}Úâ& Ûâ&
,Ûâ& Ùâ&
{Ùâ& ıâ&
PackIconKindıâ& Åä&
.Åä& Çä&
VideoInputHdmiÇä& êä&
,êä& ëä&
$strëä& ˚ä&
}˚ä& ¸ä&
,¸ä& ˝ä&
{˝ä& ˛ä&
PackIconKind˛ä& äã&
.äã& ãã& 
VideoInputSvideoãã& õã&
,õã& úã&
$strúã& °ê&
}°ê& ¢ê&
,¢ê& £ê&
{£ê& §ê&
PackIconKind§ê& ∞ê&
.∞ê& ±ê&
VideoOff±ê& πê&
,πê& ∫ê&
$str∫ê& €ë&
}€ë& ‹ë&
,‹ë& ›ë&
{›ë& ﬁë&
PackIconKindﬁë& Íë&
.Íë& Îë&
VideoSwitchÎë& ˆë&
,ˆë& ˜ë&
$str˜ë& êì&
}êì& ëì&
,ëì& íì&
{íì& ìì&
PackIconKindìì& üì&
.üì& †ì&

ViewAgenda†ì& ™ì&
,™ì& ´ì&
$str´ì& »î&
}»î& …î&
,…î&  î&
{ î& Àî&
PackIconKindÀî& ◊î&
.◊î& ÿî&
	ViewArrayÿî& ·î&
,·î& ‚î&
$str‚î& åï&
}åï& çï&
,çï& éï&
{éï& èï&
PackIconKindèï& õï&
.õï& úï&
ViewCarouselúï& ®ï&
,®ï& ©ï&
$str©ï& ”ï&
}”ï& ‘ï&
,‘ï& ’ï&
{’ï& ÷ï&
PackIconKind÷ï& ‚ï&
.‚ï& „ï&

ViewColumn„ï& Ìï&
,Ìï& Óï&
$strÓï& öñ&
}öñ& õñ&
,õñ& úñ&
{úñ& ùñ&
PackIconKindùñ& ©ñ&
.©ñ& ™ñ&
ViewDashboard™ñ& ∑ñ&
,∑ñ& ∏ñ&
$str∏ñ& Úñ&
}Úñ& Ûñ&
,Ûñ& Ùñ&
{Ùñ& ıñ&
PackIconKindıñ& Åó&
.Åó& Çó&$
ViewDashboardVariantÇó& ñó&
,ñó& óó&
$stróó& Áó&
}Áó& Ëó&
,Ëó& Èó&
{Èó& Íó&
PackIconKindÍó& ˆó&
.ˆó& ˜ó&
ViewDay˜ó& ˛ó&
,˛ó& ˇó&
$strˇó& Ëò&
}Ëò& Èò&
,Èò& Íò&
{Íò& Îò&
PackIconKindÎò& ˜ò&
.˜ò& ¯ò&
ViewGrid¯ò& Äô&
,Äô& Åô&
$strÅô& ∏ô&
}∏ô& πô&
,πô& ∫ô&
{∫ô& ªô&
PackIconKindªô& «ô&
.«ô& »ô&
ViewHeadline»ô& ‘ô&
,‘ô& ’ô&
$str’ô& åö&
}åö& çö&
,çö& éö&
{éö& èö&
PackIconKindèö& õö&
.õö& úö&
ViewListúö& §ö&
,§ö& •ö&
$str•ö& Úö&
}Úö& Ûö&
,Ûö& Ùö&
{Ùö& ıö&
PackIconKindıö& Åõ&
.Åõ& Çõ&

ViewModuleÇõ& åõ&
,åõ& çõ&
$strçõ& „õ&
}„õ& ‰õ&
,‰õ& Âõ&
{Âõ& Êõ&
PackIconKindÊõ& Úõ&
.Úõ& Ûõ&
ViewParallelÛõ& ˇõ&
,ˇõ& Äú&
$strÄú& ≥ú&
}≥ú& ¥ú&
,¥ú& µú&
{µú& ∂ú&
PackIconKind∂ú& ¬ú&
.¬ú& √ú&
	ViewQuilt√ú& Ãú&
,Ãú& Õú&
$strÕú& âù&
}âù& äù&
,äù& ãù&
{ãù& åù&
PackIconKindåù& òù&
.òù& ôù&
ViewSequentialôù& ßù&
,ßù& ®ù&
$str®ù& ÿù&
}ÿù& Ÿù&
,Ÿù& ⁄ù&
{⁄ù& €ù&
PackIconKind€ù& Áù&
.Áù& Ëù&

ViewStreamËù& Úù&
,Úù& Ûù&
$strÛù& íû&
}íû& ìû&
,ìû& îû&
{îû& ïû&
PackIconKindïû& °û&
.°û& ¢û&
ViewWeek¢û& ™û&
,™û& ´û&
$str´û& ê†&
}ê†& ë†&
,ë†& í†&
{í†& ì†&
PackIconKindì†& ü†&
.ü†& ††&
Vimeo††& •†&
,•†& ¶†&
$str¶†& «§&
}«§& »§&
,»§& …§&
{…§&  §&
PackIconKind §& ÷§&
.÷§& ◊§&
Violin◊§& ›§&
,›§& ﬁ§&
$strﬁ§& ﬂß&
}ﬂß& ‡ß&
,‡ß& ·ß&
{·ß& ‚ß&
PackIconKind‚ß& Óß&
.Óß& Ôß&
VisualstudioÔß& ˚ß&
,˚ß& ¸ß&
$str¸ß& É©&
}É©& Ñ©&
,Ñ©& Ö©&
{Ö©& Ü©&
PackIconKindÜ©& í©&
.í©& ì©&
Vkì©& ï©&
,ï©& ñ©&
$strñ©& ﬁ∞&
}ﬁ∞& ﬂ∞&
,ﬂ∞& ‡∞&
{‡∞& ·∞&
PackIconKind·∞& Ì∞&
.Ì∞& Ó∞&
VkBoxÓ∞& Û∞&
,Û∞& Ù∞&
$strÙ∞& ëπ&
}ëπ& íπ&
,íπ& ìπ&
{ìπ& îπ&
PackIconKindîπ& †π&
.†π& °π&
VkCircle°π& ©π&
,©π& ™π&
$str™π& »¡&
}»¡& …¡&
,…¡&  ¡&
{ ¡& À¡&
PackIconKindÀ¡& ◊¡&
.◊¡& ÿ¡&
Vlcÿ¡& €¡&
,€¡& ‹¡&
$str‹¡& ´∆&
}´∆& ¨∆&
,¨∆& ≠∆&
{≠∆& Æ∆&
PackIconKindÆ∆& ∫∆&
.∫∆& ª∆&
Voiceª∆& ¿∆&
,¿∆& ¡∆&
$str¡∆& ˝»&
}˝»& ˛»&
,˛»& ˇ»&
{ˇ»& Ä…&
PackIconKindÄ…& å…&
.å…& ç…&
	Voicemailç…& ñ…&
,ñ…& ó…&
$stró…& ûÃ&
}ûÃ& üÃ&
,üÃ& †Ã&
{†Ã& °Ã&
PackIconKind°Ã& ≠Ã&
.≠Ã& ÆÃ&

VolumeHighÆÃ& ∏Ã&
,∏Ã& πÃ&
$strπÃ& íŒ&
}íŒ& ìŒ&
,ìŒ& îŒ&
{îŒ& ïŒ&
PackIconKindïŒ& °Œ&
.°Œ& ¢Œ&
	VolumeLow¢Œ& ´Œ&
,´Œ& ¨Œ&
$str¨Œ& »Œ&
}»Œ& …Œ&
,…Œ&  Œ&
{ Œ& ÀŒ&
PackIconKindÀŒ& ◊Œ&
.◊Œ& ÿŒ&
VolumeMediumÿŒ& ‰Œ&
,‰Œ& ÂŒ&
$strÂŒ& √œ&
}√œ& ƒœ&
,ƒœ& ≈œ&
{≈œ& ∆œ&
PackIconKind∆œ& “œ&
.“œ& ”œ&
VolumeMinus”œ& ﬁœ&
,ﬁœ& ﬂœ&
$strﬂœ& ã–&
}ã–& å–&
,å–& ç–&
{ç–& é–&
PackIconKindé–& ö–&
.ö–& õ–&

VolumeMuteõ–& •–&
,•–& ¶–&
$str¶–& ±—&
}±—& ≤—&
,≤—& ≥—&
{≥—& ¥—&
PackIconKind¥—& ¿—&
.¿—& ¡—&
	VolumeOff¡—&  —&
, —& À—&
$strÀ—& ’‘&
}’‘& ÷‘&
,÷‘& ◊‘&
{◊‘& ÿ‘&
PackIconKindÿ‘& ‰‘&
.‰‘& Â‘&

VolumePlusÂ‘& Ô‘&
,Ô‘& ‘&
$str‘& ≥’&
}≥’& ¥’&
,¥’& µ’&
{µ’& ∂’&
PackIconKind∂’& ¬’&
.¬’& √’&
Vpn√’& ∆’&
,∆’& «’&
$str«’& ”⁄&
}”⁄& ‘⁄&
,‘⁄& ’⁄&
{’⁄& ÷⁄&
PackIconKind÷⁄& ‚⁄&
.‚⁄& „⁄&
Vuejs„⁄& Ë⁄&
,Ë⁄& È⁄&
$strÈ⁄& ª€&
}ª€& º€&
,º€& Ω€&
{Ω€& æ€&
PackIconKindæ€&  €&
. €& À€&
WalkÀ€& œ€&
,œ€& –€&
$str–€& Ì›&
}Ì›& Ó›&
,Ó›& Ô›&
{Ô›& ›&
PackIconKind›& ¸›&
.¸›& ˝›&
Wall˝›& Åﬁ&
,Åﬁ& Çﬁ&
$strÇﬁ& Ùﬁ&
}Ùﬁ& ıﬁ&
,ıﬁ& ˆﬁ&
{ˆﬁ& ˜ﬁ&
PackIconKind˜ﬁ& Éﬂ&
.Éﬂ& Ñﬂ&
WalletÑﬂ& äﬂ&
,äﬂ& ãﬂ&
$strãﬂ& ˘‡&
}˘‡& ˙‡&
,˙‡& ˚‡&
{˚‡& ¸‡&
PackIconKind¸‡& à·&
.à·& â·&
WalletGiftcardâ·& ó·&
,ó·& ò·&
$strò·& Û‰&
}Û‰& Ù‰&
,Ù‰& ı‰&
{ı‰& ˆ‰&
PackIconKindˆ‰& ÇÂ&
.ÇÂ& ÉÂ& 
WalletMembershipÉÂ& ìÂ&
,ìÂ& îÂ&
$strîÂ& ©Ê&
}©Ê& ™Ê&
,™Ê& ´Ê&
{´Ê& ¨Ê&
PackIconKind¨Ê& ∏Ê&
.∏Ê& πÊ&
WalletTravelπÊ& ≈Ê&
,≈Ê& ∆Ê&
$str∆Ê& ñË&
}ñË& óË&
,óË& òË&
{òË& ôË&
PackIconKindôË& •Ë&
.•Ë& ¶Ë&
Wan¶Ë& ©Ë&
,©Ë& ™Ë&
$str™Ë& †&
}†& °&
,°& ¢&
{¢& £&
PackIconKind£& Ø&
.Ø& ∞&
WashingMachine∞& æ&
,æ& ø&
$strø& ™Û&
}™Û& ´Û&
,´Û& ¨Û&
{¨Û& ≠Û&
PackIconKind≠Û& πÛ&
.πÛ& ∫Û&
Watch∫Û& øÛ&
,øÛ& ¿Û&
$str¿Û& ûı&
}ûı& üı&
,üı& †ı&
{†ı& °ı&
PackIconKind°ı& ≠ı&
.≠ı& Æı&
WatchExportÆı& πı&
,πı& ∫ı&
$str∫ı& Â˜&
}Â˜& Ê˜&
,Ê˜& Á˜&
{Á˜& Ë˜&
PackIconKindË˜& Ù˜&
.Ù˜& ı˜&
WatchImportı˜& Ä¯&
,Ä¯& Å¯&
$strÅ¯& §˙&
}§˙& •˙&
,•˙& ¶˙&
{¶˙& ß˙&
PackIconKindß˙& ≥˙&
.≥˙& ¥˙&
WatchVibrate¥˙& ¿˙&
,¿˙& ¡˙&
$str¡˙& µ˝&
}µ˝& ∂˝&
,∂˝& ∑˝&
{∑˝& ∏˝&
PackIconKind∏˝& ƒ˝&
.ƒ˝& ≈˝&
Water≈˝&  ˝&
, ˝& À˝&
$strÀ˝& ú˛&
}ú˛& ù˛&
,ù˛& û˛&
{û˛& ü˛&
PackIconKindü˛& ´˛&
.´˛& ¨˛&
WaterOff¨˛& ¥˛&
,¥˛& µ˛&
$strµ˛& ∞Ä'
}∞Ä' ±Ä'
,±Ä' ≤Ä'
{≤Ä' ≥Ä'
PackIconKind≥Ä' øÄ'
.øÄ' ¿Ä'
WaterPercent¿Ä' ÃÄ'
,ÃÄ' ÕÄ'
$strÕÄ' ≥É'
}≥É' ¥É'
,¥É' µÉ'
{µÉ' ∂É'
PackIconKind∂É' ¬É'
.¬É' √É'
	WaterPump√É' ÃÉ'
,ÃÉ' ÕÉ'
$strÕÉ' ˇÖ'
}ˇÖ' ÄÜ'
,ÄÜ' ÅÜ'
{ÅÜ' ÇÜ'
PackIconKindÇÜ' éÜ'
.éÜ' èÜ'
	WatermarkèÜ' òÜ'
,òÜ' ôÜ'
$strôÜ' ˘Ü'
}˘Ü' ˙Ü'
,˙Ü' ˚Ü'
{˚Ü' ¸Ü'
PackIconKind¸Ü' àá'
.àá' âá'
Wavesâá' éá'
,éá' èá'
$strèá' ›ä'
}›ä' ﬁä'
,ﬁä' ﬂä'
{ﬂä' ‡ä'
PackIconKind‡ä' Ïä'
.Ïä' Ìä'
WeatherCloudyÌä' ˙ä'
,˙ä' ˚ä'
$str˚ä' áç'
}áç' àç'
,àç' âç'
{âç' äç'
PackIconKindäç' ñç'
.ñç' óç'

WeatherFogóç' °ç'
,°ç' ¢ç'
$str¢ç' ±ë'
}±ë' ≤ë'
,≤ë' ≥ë'
{≥ë' ¥ë'
PackIconKind¥ë' ¿ë'
.¿ë' ¡ë'
WeatherHail¡ë' Ãë'
,Ãë' Õë'
$strÕë' èñ'
}èñ' êñ'
,êñ' ëñ'
{ëñ' íñ'
PackIconKindíñ' ûñ'
.ûñ' üñ' 
WeatherLightningüñ' Øñ'
,Øñ' ∞ñ'
$str∞ñ' ùô'
}ùô' ûô'
,ûô' üô'
{üô' †ô'
PackIconKind†ô' ¨ô'
.¨ô' ≠ô'%
WeatherLightningRainy≠ô' ¬ô'
,¬ô' √ô'
$str√ô' Èù'
}Èù' Íù'
,Íù' Îù'
{Îù' Ïù'
PackIconKindÏù' ¯ù'
.¯ù' ˘ù'
WeatherNight˘ù' Öû'
,Öû' Üû'
$strÜû' Ä£'
}Ä£' Å£'
,Å£' Ç£'
{Ç£' É£'
PackIconKindÉ£' è£'
.è£' ê£'#
WeatherPartlycloudyê£' ££'
,££' §£'
$str§£' Ä™'
}Ä™' Å™'
,Å™' Ç™'
{Ç™' É™'
PackIconKindÉ™' è™'
.è™' ê™'
WeatherPouringê™' û™'
,û™' ü™'
$strü™' ∞±'
}∞±' ±±'
,±±' ≤±'
{≤±' ≥±'
PackIconKind≥±' ø±'
.ø±' ¿±'
WeatherRainy¿±' Ã±'
,Ã±' Õ±'
$strÕ±' ±∂'
}±∂' ≤∂'
,≤∂' ≥∂'
{≥∂' ¥∂'
PackIconKind¥∂' ¿∂'
.¿∂' ¡∂'
WeatherSnowy¡∂' Õ∂'
,Õ∂' Œ∂'
$strŒ∂' ∞Ω'
}∞Ω' ±Ω'
,±Ω' ≤Ω'
{≤Ω' ≥Ω'
PackIconKind≥Ω' øΩ'
.øΩ' ¿Ω'!
WeatherSnowyRainy¿Ω' —Ω'
,—Ω' “Ω'
$str“Ω' ≈≈'
}≈≈' ∆≈'
,∆≈' «≈'
{«≈' »≈'
PackIconKind»≈' ‘≈'
.‘≈' ’≈'
WeatherSunny’≈' ·≈'
,·≈' ‚≈'
$str‚≈' È '
}È ' Í '
,Í ' Î '
{Î ' Ï '
PackIconKindÏ ' ¯ '
.¯ ' ˘ '
WeatherSunset˘ ' ÜÀ'
,ÜÀ' áÀ'
$stráÀ' ùœ'
}ùœ' ûœ'
,ûœ' üœ'
{üœ' †œ'
PackIconKind†œ' ¨œ'
.¨œ' ≠œ'!
WeatherSunsetDown≠œ' æœ'
,æœ' øœ'
$strøœ' ∫‘'
}∫‘' ª‘'
,ª‘' º‘'
{º‘' Ω‘'
PackIconKindΩ‘' …‘'
.…‘'  ‘'
WeatherSunsetUp ‘' Ÿ‘'
,Ÿ‘' ⁄‘'
$str⁄‘' “Ÿ'
}“Ÿ' ”Ÿ'
,”Ÿ' ‘Ÿ'
{‘Ÿ' ’Ÿ'
PackIconKind’Ÿ' ·Ÿ'
.·Ÿ' ‚Ÿ'
WeatherWindy‚Ÿ' ÓŸ'
,ÓŸ' ÔŸ'
$strÔŸ' âﬂ'
}âﬂ' äﬂ'
,äﬂ' ãﬂ'
{ãﬂ' åﬂ'
PackIconKindåﬂ' òﬂ'
.òﬂ' ôﬂ'#
WeatherWindyVariantôﬂ' ¨ﬂ'
,¨ﬂ' ≠ﬂ'
$str≠ﬂ' ±„'
}±„' ≤„'
,≤„' ≥„'
{≥„' ¥„'
PackIconKind¥„' ¿„'
.¿„' ¡„'
Web¡„' ƒ„'
,ƒ„' ≈„'
$str≈„' €Í'
}€Í' ‹Í'
,‹Í' ›Í'
{›Í' ﬁÍ'
PackIconKindﬁÍ' ÍÍ'
.ÍÍ' ÎÍ'
WebcamÎÍ' ÒÍ'
,ÒÍ' ÚÍ'
$strÚÍ' ÊÌ'
}ÊÌ' ÁÌ'
,ÁÌ' ËÌ'
{ËÌ' ÈÌ'
PackIconKindÈÌ' ıÌ'
.ıÌ' ˆÌ'
WebhookˆÌ' ˝Ì'
,˝Ì' ˛Ì'
$str˛Ì' Ô¯'
}Ô¯' ¯'
,¯' Ò¯'
{Ò¯' Ú¯'
PackIconKindÚ¯' ˛¯'
.˛¯' ˇ¯'
Webpackˇ¯' Ü˘'
,Ü˘' á˘'
$strá˘' ‘¸'
}‘¸' ’¸'
,’¸' ÷¸'
{÷¸' ◊¸'
PackIconKind◊¸' „¸'
.„¸' ‰¸'
Wechat‰¸' Í¸'
,Í¸' Î¸'
$strÎ¸' ãÇ(
}ãÇ( åÇ(
,åÇ( çÇ(
{çÇ( éÇ(
PackIconKindéÇ( öÇ(
.öÇ( õÇ(
WeightõÇ( °Ç(
,°Ç( ¢Ç(
$str¢Ç( œÑ(
}œÑ( –Ñ(
,–Ñ( —Ñ(
{—Ñ( “Ñ(
PackIconKind“Ñ( ﬁÑ(
.ﬁÑ( ﬂÑ(
WeightKilogramﬂÑ( ÌÑ(
,ÌÑ( ÓÑ(
$strÓÑ( ∫å(
}∫å( ªå(
,ªå( ºå(
{ºå( Ωå(
PackIconKindΩå( …å(
.…å(  å(
Whatsapp å( “å(
,“å( ”å(
$str”å( ˆí(
}ˆí( ˜í(
,˜í( ¯í(
{¯í( ˘í(
PackIconKind˘í( Öì(
.Öì( Üì('
WheelchairAccessibilityÜì( ùì(
,ùì( ûì(
$strûì( µô(
}µô( ∂ô(
,∂ô( ∑ô(
{∑ô( ∏ô(
PackIconKind∏ô( ƒô(
.ƒô( ≈ô( 
WhiteBalanceAuto≈ô( ’ô(
,’ô( ÷ô(
$str÷ô( ‘õ(
}‘õ( ’õ(
,’õ( ÷õ(
{÷õ( ◊õ(
PackIconKind◊õ( „õ(
.„õ( ‰õ((
WhiteBalanceIncandescent‰õ( ¸õ(
,¸õ( ˝õ(
$str˝õ( £û(
}£û( §û(
,§û( •û(
{•û( ¶û(
PackIconKind¶û( ≤û(
.≤û( ≥û(&
WhiteBalanceIridescent≥û( …û(
,…û(  û(
$str û( Ÿ†(
}Ÿ†( ⁄†(
,⁄†( €†(
{€†( ‹†(
PackIconKind‹†( Ë†(
.Ë†( È†(!
WhiteBalanceSunnyÈ†( ˙†(
,˙†( ˚†(
$str˚†( Ò£(
}Ò£( Ú£(
,Ú£( Û£(
{Û£( Ù£(
PackIconKindÙ£( Ä§(
.Ä§( Å§(
WidgetsÅ§( à§(
,à§( â§(
$strâ§( Ë§(
}Ë§( È§(
,È§( Í§(
{Í§( Î§(
PackIconKindÎ§( ˜§(
.˜§( ¯§(
Wifi¯§( ¸§(
,¸§( ˝§(
$str˝§( πß(
}πß( ∫ß(
,∫ß( ªß(
{ªß( ºß(
PackIconKindºß( »ß(
.»ß( …ß(
WifiOff…ß( –ß(
,–ß( —ß(
$str—ß( ß´(
}ß´( ®´(
,®´( ©´(
{©´( ™´(
PackIconKind™´( ∂´(
.∂´( ∑´(
Wii∑´( ∫´(
,∫´( ª´(
$strª´( ó∞(
}ó∞( ò∞(
,ò∞( ô∞(
{ô∞( ö∞(
PackIconKindö∞( ¶∞(
.¶∞( ß∞(
Wiiuß∞( ´∞(
,´∞( ¨∞(
$str¨∞( ¶≤(
}¶≤( ß≤(
,ß≤( ®≤(
{®≤( ©≤(
PackIconKind©≤( µ≤(
.µ≤( ∂≤(
	Wikipedia∂≤( ø≤(
,ø≤( ¿≤(
$str¿≤( Ò∏(
}Ò∏( Ú∏(
,Ú∏( Û∏(
{Û∏( Ù∏(
PackIconKindÙ∏( Äπ(
.Äπ( Åπ(
WindowCloseÅπ( åπ(
,åπ( çπ(
$strçπ( ˝π(
}˝π( ˛π(
,˛π( ˇπ(
{ˇπ( Ä∫(
PackIconKindÄ∫( å∫(
.å∫( ç∫(
WindowClosedç∫( ô∫(
,ô∫( ö∫(
$strö∫( íª(
}íª( ìª(
,ìª( îª(
{îª( ïª(
PackIconKindïª( °ª(
.°ª( ¢ª(
WindowMaximize¢ª( ∞ª(
,∞ª( ±ª(
$str±ª( –ª(
}–ª( —ª(
,—ª( “ª(
{“ª( ”ª(
PackIconKind”ª( ﬂª(
.ﬂª( ‡ª(
WindowMinimize‡ª( Óª(
,Óª( Ôª(
$strÔª( ˇª(
}ˇª( Äº(
,Äº( Åº(
{Åº( Çº(
PackIconKindÇº( éº(
.éº( èº(

WindowOpenèº( ôº(
,ôº( öº(
$ströº( üΩ(
}üΩ( †Ω(
,†Ω( °Ω(
{°Ω( ¢Ω(
PackIconKind¢Ω( ÆΩ(
.ÆΩ( ØΩ(
WindowRestoreØΩ( ºΩ(
,ºΩ( ΩΩ(
$strΩΩ( ˝Ω(
}˝Ω( ˛Ω(
,˛Ω( ˇΩ(
{ˇΩ( Äæ(
PackIconKindÄæ( åæ(
.åæ( çæ(
Windowsçæ( îæ(
,îæ( ïæ(
$strïæ( ëø(
}ëø( íø(
,íø( ìø(
{ìø( îø(
PackIconKindîø( †ø(
.†ø( °ø(
	Wordpress°ø( ™ø(
,™ø( ´ø(
$str´ø( Ñ«(
}Ñ«( Ö«(
,Ö«( Ü«(
{Ü«( á«(
PackIconKindá«( ì«(
.ì«( î«(
Workerî«( ö«(
,ö«( õ«(
$strõ«( ±…(
}±…( ≤…(
,≤…( ≥…(
{≥…( ¥…(
PackIconKind¥…( ¿…(
.¿…( ¡…(
Wrap¡…( ≈…(
,≈…( ∆…(
$str∆…( „ (
}„ ( ‰ (
,‰ ( Â (
{Â ( Ê (
PackIconKindÊ ( Ú (
.Ú ( Û (
WrenchÛ ( ˘ (
,˘ ( ˙ (
$str˙ ( ÀÃ(
}ÀÃ( ÃÃ(
,ÃÃ( ÕÃ(
{ÕÃ( ŒÃ(
PackIconKindŒÃ( ⁄Ã(
.⁄Ã( €Ã(

Wunderlist€Ã( ÂÃ(
,ÂÃ( ÊÃ(
$strÊÃ( »Œ(
}»Œ( …Œ(
,…Œ(  Œ(
{ Œ( ÀŒ(
PackIconKindÀŒ( ◊Œ(
.◊Œ( ÿŒ(
XamarinÿŒ( ﬂŒ(
,ﬂŒ( ‡Œ(
$str‡Œ( —“(
}—“( ““(
,““( ”“(
{”“( ‘“(
PackIconKind‘“( ‡“(
.‡“( ·“(
XamarinOutline·“( Ô“(
,Ô“( “(
$str“( ¯ÿ(
}¯ÿ( ˘ÿ(
,˘ÿ( ˙ÿ(
{˙ÿ( ˚ÿ(
PackIconKind˚ÿ( áŸ(
.áŸ( àŸ(
XamlàŸ( åŸ(
,åŸ( çŸ(
$strçŸ( ¨⁄(
}¨⁄( ≠⁄(
,≠⁄( Æ⁄(
{Æ⁄( Ø⁄(
PackIconKindØ⁄( ª⁄(
.ª⁄( º⁄(
Xboxº⁄( ¿⁄(
,¿⁄( ¡⁄(
$str¡⁄( º·(
}º·( Ω·(
,Ω·( æ·(
{æ·( ø·(
PackIconKindø·( À·(
.À·( Ã·(
XboxControllerÃ·( ⁄·(
,⁄·( €·(
$str€·( ·„(
}·„( ‚„(
,‚„( „„(
{„„( ‰„(
PackIconKind‰„( „(
.„( Ò„(*
XboxControllerBatteryAlertÒ„( ã‰(
,ã‰( å‰(
$strå‰( ÏÊ(
}ÏÊ( ÌÊ(
,ÌÊ( ÓÊ(
{ÓÊ( ÔÊ(
PackIconKindÔÊ( ˚Ê(
.˚Ê( ¸Ê(*
XboxControllerBatteryEmpty¸Ê( ñÁ(
,ñÁ( óÁ(
$stróÁ( ’È(
}’È( ÷È(
,÷È( ◊È(
{◊È( ÿÈ(
PackIconKindÿÈ( ‰È(
.‰È( ÂÈ()
XboxControllerBatteryFullÂÈ( ˛È(
,˛È( ˇÈ(
$strˇÈ( ¨Ï(
}¨Ï( ≠Ï(
,≠Ï( ÆÏ(
{ÆÏ( ØÏ(
PackIconKindØÏ( ªÏ(
.ªÏ( ºÏ((
XboxControllerBatteryLowºÏ( ‘Ï(
,‘Ï( ’Ï(
$str’Ï( ìÔ(
}ìÔ( îÔ(
,îÔ( ïÔ(
{ïÔ( ñÔ(
PackIconKindñÔ( ¢Ô(
.¢Ô( £Ô(+
XboxControllerBatteryMedium£Ô( æÔ(
,æÔ( øÔ(
$strøÔ( ˝Ò(
}˝Ò( ˛Ò(
,˛Ò( ˇÒ(
{ˇÒ( ÄÚ(
PackIconKindÄÚ( åÚ(
.åÚ( çÚ(,
XboxControllerBatteryUnknownçÚ( ©Ú(
,©Ú( ™Ú(
$str™Ú( â˘(
}â˘( ä˘(
,ä˘( ã˘(
{ã˘( å˘(
PackIconKindå˘( ò˘(
.ò˘( ô˘(!
XboxControllerOffô˘( ™˘(
,™˘( ´˘(
$str´˘( “˚(
}“˚( ”˚(
,”˚( ‘˚(
{‘˚( ’˚(
PackIconKind’˚( ·˚(
.·˚( ‚˚(
Xda‚˚( Â˚(
,Â˚( Ê˚(
$strÊ˚( ≥˛(
}≥˛( ¥˛(
,¥˛( µ˛(
{µ˛( ∂˛(
PackIconKind∂˛( ¬˛(
.¬˛( √˛(
Xing√˛( «˛(
,«˛( »˛(
$str»˛( –Ç)
}–Ç) —Ç)
,—Ç) “Ç)
{“Ç) ”Ç)
PackIconKind”Ç) ﬂÇ)
.ﬂÇ) ‡Ç)
XingBox‡Ç) ÁÇ)
,ÁÇ) ËÇ)
$strËÇ) Îá)
}Îá) Ïá)
,Ïá) Ìá)
{Ìá) Óá)
PackIconKindÓá) ˙á)
.˙á) ˚á)

XingCircle˚á) Öà)
,Öà) Üà)
$strÜà) „å)
}„å) ‰å)
,‰å) Âå)
{Âå) Êå)
PackIconKindÊå) Úå)
.Úå) Ûå)
XmlÛå) ˆå)
,ˆå) ˜å)
$str˜å) êé)
}êé) ëé)
,ëé) íé)
{íé) ìé)
PackIconKindìé) üé)
.üé) †é)
Xmpp†é) §é)
,§é) •é)
$str•é) ¬ê)
}¬ê) √ê)
,√ê) ƒê)
{ƒê) ≈ê)
PackIconKind≈ê) —ê)
.—ê) “ê)
Yammer“ê) ÿê)
,ÿê) Ÿê)
$strŸê) éó)
}éó) èó)
,èó) êó)
{êó) ëó)
PackIconKindëó) ùó)
.ùó) ûó)
Yeastûó) £ó)
,£ó) §ó)
$str§ó) òõ)
}òõ) ôõ)
,ôõ) öõ)
{öõ) õõ)
PackIconKindõõ) ßõ)
.ßõ) ®õ)
Yelp®õ) ¨õ)
,¨õ) ≠õ)
$str≠õ) ©£)
}©£) ™£)
,™£) ´£)
{´£) ¨£)
PackIconKind¨£) ∏£)
.∏£) π£)
YinYangπ£) ¿£)
,¿£) ¡£)
$str¡£) ´¶)
}´¶) ¨¶)
,¨¶) ≠¶)
{≠¶) Æ¶)
PackIconKindÆ¶) ∫¶)
.∫¶) ª¶)$
YoutubeCreatorStudioª¶) œ¶)
,œ¶) –¶)
$str–¶) Ù¨)
}Ù¨) ı¨)
,ı¨) ˆ¨)
{ˆ¨) ˜¨)
PackIconKind˜¨) É≠)
.É≠) Ñ≠)
YoutubeGamingÑ≠) ë≠)
,ë≠) í≠)
$strí≠) Œ∞)
}Œ∞) œ∞)
,œ∞) –∞)
{–∞) —∞)
PackIconKind—∞) ›∞)
.›∞) ﬁ∞)
YoutubePlayﬁ∞) È∞)
,È∞) Í∞)
$strÍ∞) ≈≤)
}≈≤) ∆≤)
,∆≤) «≤)
{«≤) »≤)
PackIconKind»≤) ‘≤)
.‘≤) ’≤)
	YoutubeTv’≤) ﬁ≤)
,ﬁ≤) ﬂ≤)
$strﬂ≤) Äµ)
}Äµ) Åµ)
,Åµ) Çµ)
{Çµ) Éµ)
PackIconKindÉµ) èµ)
.èµ) êµ)
ZipBoxêµ) ñµ)
,ñµ) óµ)
$stróµ) ∑∂)
}∑∂) ∏∂)
}∏∂) π∂)
;π∂) ∫∂)
} 
} ©ﬂ
SD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\PackIconKind.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

enum 
PackIconKind 
{ 
AccessPoint 
, 
AccessPointNetwork 
, 
Account 
, 
AccountAlert 
, 

AccountBox 
, 
AccountBoxOutline 
, 
AccountCardDetails 
, 
AccountCheck 
, 
AccountCircle 
, 
AccountConvert 
, 
AccountEdit 
, 

AccountKey 
, 
AccountLocation 
, 
AccountMinus 
, 
AccountMultiple 
,  
AccountMultipleMinus 
, "
AccountMultipleOutline   
,   
AccountMultiplePlus!! 
,!! &
AccountMultiplePlusOutline"" "
,""" #
AccountNetwork## 
,## 

AccountOff$$ 
,$$ 
AccountOutline%% 
,%% 
AccountPlus&& 
,&& 
AccountPlusOutline'' 
,'' 
AccountRemove(( 
,(( 
AccountSearch)) 
,)) 
AccountSettings** 
,** "
AccountSettingsVariant++ 
,++ 
AccountStar,, 
,,, 
AccountSwitch-- 
,-- 
Adjust.. 
,.. 
AirConditioner// 
,// 

Airballoon00 
,00 
Airplane11 
,11 
AirplaneLanding22 
,22 
AirplaneOff33 
,33 
AirplaneTakeoff44 
,44 
Airplay55 
,55 
Alarm66 
,66 
	AlarmBell77 
,77 

AlarmCheck88 
,88 

AlarmLight99 
,99 
AlarmMultiple:: 
,:: 
AlarmOff;; 
,;; 
	AlarmPlus<< 
,<< 
AlarmSnooze== 
,== 
Album>> 
,>> 
Alert?? 
,?? 
AlertBox@@ 
,@@ 
AlertCircleAA 
,AA 
AlertCircleOutlineBB 
,BB 
AlertDecagramCC 
,CC 
AlertOctagonDD 
,DD 
AlertOctagramEE 
,EE 
AlertOutlineFF 
,FF 
AllInclusiveGG 
,GG 
AlloHH 
,HH 
AlphaII 
,II 
AlphabeticalJJ 
,JJ 
	AltimeterKK 
,KK 
AmazonLL 
,LL 
AmazonClouddriveMM 
,MM 
	AmbulanceNN 
,NN 
	AmplifierOO 
,OO 
AnchorPP 
,PP 
AndroidQQ 
,QQ 
AndroidDebugBridgeRR 
,RR 
AndroidHeadSS 
,SS 
AndroidStudioTT 
,TT 
AngularUU 
,UU 
	AngularjsVV 
,VV 
	AnimationWW 
,WW 
AppleXX 
,XX 
AppleFinderYY 
,YY 
AppleIosZZ 
,ZZ 
AppleKeyboardCaps[[ 
,[[  
AppleKeyboardCommand\\ 
,\\  
AppleKeyboardControl]] 
,]] 
AppleKeyboardOption^^ 
,^^ 
AppleKeyboardShift__ 
,__ 
AppleMobileme`` 
,`` 
AppleSafariaa 
,aa 
Applicationbb 
,bb 
Approvalcc 
,cc 
Appsdd 
,dd 
Archiveee 
,ee 
ArrangeBringForwardff 
,ff 
ArrangeBringToFrontgg 
,gg 
ArrangeSendBackwardhh 
,hh 
ArrangeSendToBackii 
,ii 
ArrowAlljj 
,jj 
ArrowBottomLeftkk 
,kk 
ArrowBottomRightll 
,ll 
ArrowCollapsemm 
,mm 
ArrowCollapseAllnn 
,nn 
ArrowCollapseDownoo 
,oo 
ArrowCollapseLeftpp 
,pp 
ArrowCollapseRightqq 
,qq 
ArrowCollapseUprr 
,rr 
	ArrowDownss 
,ss 
ArrowDownBoldtt 
,tt 
ArrowDownBoldBoxuu 
,uu #
ArrowDownBoldBoxOutlinevv 
,vv  
ArrowDownBoldCircleww 
,ww &
ArrowDownBoldCircleOutlinexx "
,xx" #'
ArrowDownBoldHexagonOutlineyy #
,yy# $
ArrowDownBoxzz 
,zz 
ArrowDownDropCircle{{ 
,{{ &
ArrowDownDropCircleOutline|| "
,||" #
ArrowDownThick}} 
,}} 
ArrowExpand~~ 
,~~ 
ArrowExpandAll 
, 
ArrowExpandDown
ÄÄ 
,
ÄÄ 
ArrowExpandLeft
ÅÅ 
,
ÅÅ 
ArrowExpandRight
ÇÇ 
,
ÇÇ 
ArrowExpandUp
ÉÉ 
,
ÉÉ 
	ArrowLeft
ÑÑ 
,
ÑÑ 
ArrowLeftBold
ÖÖ 
,
ÖÖ 
ArrowLeftBoldBox
ÜÜ 
,
ÜÜ %
ArrowLeftBoldBoxOutline
áá 
,
áá  !
ArrowLeftBoldCircle
àà 
,
àà (
ArrowLeftBoldCircleOutline
ââ "
,
ââ" #)
ArrowLeftBoldHexagonOutline
ää #
,
ää# $
ArrowLeftBox
ãã 
,
ãã !
ArrowLeftDropCircle
åå 
,
åå (
ArrowLeftDropCircleOutline
çç "
,
çç" #
ArrowLeftThick
éé 
,
éé 

ArrowRight
èè 
,
èè 
ArrowRightBold
êê 
,
êê 
ArrowRightBoldBox
ëë 
,
ëë &
ArrowRightBoldBoxOutline
íí  
,
íí  !"
ArrowRightBoldCircle
ìì 
,
ìì )
ArrowRightBoldCircleOutline
îî #
,
îî# $*
ArrowRightBoldHexagonOutline
ïï $
,
ïï$ %
ArrowRightBox
ññ 
,
ññ "
ArrowRightDropCircle
óó 
,
óó )
ArrowRightDropCircleOutline
òò #
,
òò# $
ArrowRightThick
ôô 
,
ôô 
ArrowTopLeft
öö 
,
öö 
ArrowTopRight
õõ 
,
õõ 
ArrowUp
úú 
,
úú 
ArrowUpBold
ùù 
,
ùù 
ArrowUpBoldBox
ûû 
,
ûû #
ArrowUpBoldBoxOutline
üü 
,
üü 
ArrowUpBoldCircle
†† 
,
†† &
ArrowUpBoldCircleOutline
°°  
,
°°  !'
ArrowUpBoldHexagonOutline
¢¢ !
,
¢¢! "

ArrowUpBox
££ 
,
££ 
ArrowUpDropCircle
§§ 
,
§§ &
ArrowUpDropCircleOutline
••  
,
••  !
ArrowUpThick
¶¶ 
,
¶¶ 
Artist
ßß 
,
ßß 
	Assistant
®® 
,
®® 
Asterisk
©© 
,
©© 
At
™™ 

,
™™
 
	Atlassian
´´ 
,
´´ 
Atom
¨¨ 
,
¨¨ 

Attachment
≠≠ 
,
≠≠ 
	Audiobook
ÆÆ 
,
ÆÆ 
AutoFix
ØØ 
,
ØØ 

AutoUpload
∞∞ 
,
∞∞ 
	Autorenew
±± 
,
±± 
AvTimer
≤≤ 
,
≤≤ 
Azure
≥≥ 
,
≥≥ 
Baby
¥¥ 
,
¥¥ 
	BabyBuggy
µµ 
,
µµ 

Backburger
∂∂ 
,
∂∂ 
	Backspace
∑∑ 
,
∑∑ 
BackupRestore
∏∏ 
,
∏∏ 
Bandcamp
ππ 
,
ππ 
Bank
∫∫ 
,
∫∫ 
Barcode
ªª 
,
ªª 
BarcodeScan
ºº 
,
ºº 
Barley
ΩΩ 
,
ΩΩ 
Barrel
ææ 
,
ææ 
Basecamp
øø 
,
øø 
Basket
¿¿ 
,
¿¿ 

BasketFill
¡¡ 
,
¡¡ 
BasketUnfill
¬¬ 
,
¬¬ 

Basketball
√√ 
,
√√ 
Battery
ƒƒ 
,
ƒƒ 
	Battery10
≈≈ 
,
≈≈ 
	Battery20
∆∆ 
,
∆∆ 
	Battery30
«« 
,
«« 
	Battery40
»» 
,
»» 
	Battery50
…… 
,
…… 
	Battery60
   
,
   
	Battery70
ÀÀ 
,
ÀÀ 
	Battery80
ÃÃ 
,
ÃÃ 
	Battery90
ÕÕ 
,
ÕÕ 
BatteryAlert
ŒŒ 
,
ŒŒ 
BatteryCharging
œœ 
,
œœ  
BatteryCharging100
–– 
,
–– 
BatteryCharging20
—— 
,
—— 
BatteryCharging30
““ 
,
““ 
BatteryCharging40
”” 
,
”” 
BatteryCharging60
‘‘ 
,
‘‘ 
BatteryCharging80
’’ 
,
’’ 
BatteryCharging90
÷÷ 
,
÷÷ %
BatteryChargingWireless
◊◊ 
,
◊◊  '
BatteryChargingWireless10
ÿÿ !
,
ÿÿ! "'
BatteryChargingWireless20
ŸŸ !
,
ŸŸ! "'
BatteryChargingWireless30
⁄⁄ !
,
⁄⁄! "'
BatteryChargingWireless40
€€ !
,
€€! "'
BatteryChargingWireless50
‹‹ !
,
‹‹! "'
BatteryChargingWireless60
›› !
,
››! "'
BatteryChargingWireless70
ﬁﬁ !
,
ﬁﬁ! "'
BatteryChargingWireless80
ﬂﬂ !
,
ﬂﬂ! "'
BatteryChargingWireless90
‡‡ !
,
‡‡! "*
BatteryChargingWirelessAlert
·· $
,
··$ %,
BatteryChargingWirelessOutline
‚‚ &
,
‚‚& '
BatteryMinus
„„ 
,
„„ 
BatteryNegative
‰‰ 
,
‰‰ 
BatteryOutline
ÂÂ 
,
ÂÂ 
BatteryPlus
ÊÊ 
,
ÊÊ 
BatteryPositive
ÁÁ 
,
ÁÁ 
BatteryUnknown
ËË 
,
ËË 
Beach
ÈÈ 
,
ÈÈ 
Beaker
ÍÍ 
,
ÍÍ 
Beats
ÎÎ 
,
ÎÎ 
Beer
ÏÏ 
,
ÏÏ 
Behance
ÌÌ 
,
ÌÌ 
Bell
ÓÓ 
,
ÓÓ 
BellOff
ÔÔ 
,
ÔÔ 
BellOutline
 
,
 
BellPlus
ÒÒ 
,
ÒÒ 
BellRing
ÚÚ 
,
ÚÚ 
BellRingOutline
ÛÛ 
,
ÛÛ 
	BellSleep
ÙÙ 
,
ÙÙ 
Beta
ıı 
,
ıı 
Bible
ˆˆ 
,
ˆˆ 
Bike
˜˜ 
,
˜˜ 
Bing
¯¯ 
,
¯¯ 

Binoculars
˘˘ 
,
˘˘ 
Bio
˙˙ 
,
˙˙ 
	Biohazard
˚˚ 
,
˚˚ 
	Bitbucket
¸¸ 
,
¸¸ 
Bitcoin
˝˝ 
,
˝˝ 
	BlackMesa
˛˛ 
,
˛˛ 

Blackberry
ˇˇ 
,
ˇˇ 
Blender
ÄÄ 
,
ÄÄ 
Blinds
ÅÅ 
,
ÅÅ 
BlockHelper
ÇÇ 
,
ÇÇ 
Blogger
ÉÉ 
,
ÉÉ 
	Bluetooth
ÑÑ 
,
ÑÑ 
BluetoothAudio
ÖÖ 
,
ÖÖ 
BluetoothConnect
ÜÜ 
,
ÜÜ 
BluetoothOff
áá 
,
áá 
BluetoothSettings
àà 
,
àà 
BluetoothTransfer
ââ 
,
ââ 
Blur
ää 
,
ää 

BlurLinear
ãã 
,
ãã 
BlurOff
åå 
,
åå 

BlurRadial
çç 
,
çç 
Bomb
éé 
,
éé 
BombOff
èè 
,
èè 
Bone
êê 
,
êê 
Book
ëë 
,
ëë 
	BookMinus
íí 
,
íí 
BookMultiple
ìì 
,
ìì !
BookMultipleVariant
îî 
,
îî 
BookOpen
ïï 
,
ïï !
BookOpenPageVariant
ññ 
,
ññ 
BookOpenVariant
óó 
,
óó 
BookPlus
òò 
,
òò 

BookSecure
ôô 
,
ôô 
BookUnsecure
öö 
,
öö 
BookVariant
õõ 
,
õõ 
Bookmark
úú 
,
úú 
BookmarkCheck
ùù 
,
ùù 
BookmarkMusic
ûû 
,
ûû 
BookmarkOutline
üü 
,
üü 
BookmarkPlus
†† 
,
†† !
BookmarkPlusOutline
°° 
,
°° 
BookmarkRemove
¢¢ 
,
¢¢ 
Boombox
££ 
,
££ 
	Bootstrap
§§ 
,
§§ 
	BorderAll
•• 
,
•• 
BorderBottom
¶¶ 
,
¶¶ 
BorderColor
ßß 
,
ßß 
BorderHorizontal
®® 
,
®® 
BorderInside
©© 
,
©© 

BorderLeft
™™ 
,
™™ 

BorderNone
´´ 
,
´´ 
BorderOutside
¨¨ 
,
¨¨ 
BorderRight
≠≠ 
,
≠≠ 
BorderStyle
ÆÆ 
,
ÆÆ 
	BorderTop
ØØ 
,
ØØ 
BorderVertical
∞∞ 
,
∞∞ 
BowTie
±± 
,
±± 
Bowl
≤≤ 
,
≤≤ 
Bowling
≥≥ 
,
≥≥ 
Box
¥¥ 
,
¥¥ 
	BoxCutter
µµ 
,
µµ 
	BoxShadow
∂∂ 
,
∂∂ 
Bridge
∑∑ 
,
∑∑ 
	Briefcase
∏∏ 
,
∏∏ 
BriefcaseCheck
ππ 
,
ππ 
BriefcaseDownload
∫∫ 
,
∫∫ 
BriefcaseOutline
ªª 
,
ªª 
BriefcaseUpload
ºº 
,
ºº 
Brightness1
ΩΩ 
,
ΩΩ 
Brightness2
ææ 
,
ææ 
Brightness3
øø 
,
øø 
Brightness4
¿¿ 
,
¿¿ 
Brightness5
¡¡ 
,
¡¡ 
Brightness6
¬¬ 
,
¬¬ 
Brightness7
√√ 
,
√√ 
BrightnessAuto
ƒƒ 
,
ƒƒ 
Broom
≈≈ 
,
≈≈ 
Brush
∆∆ 
,
∆∆ 
Buffer
«« 
,
«« 
Bug
»» 
,
»» 
BulletinBoard
…… 
,
…… 
Bullhorn
   
,
   
Bullseye
ÀÀ 
,
ÀÀ 
Bus
ÃÃ 
,
ÃÃ 
BusArticulatedEnd
ÕÕ 
,
ÕÕ !
BusArticulatedFront
ŒŒ 
,
ŒŒ 
BusDoubleDecker
œœ 
,
œœ 
	BusSchool
–– 
,
–– 
BusSide
—— 
,
—— 
Cached
““ 
,
““ 
Cake
”” 
,
”” 
CakeLayered
‘‘ 
,
‘‘ 
CakeVariant
’’ 
,
’’ 

Calculator
÷÷ 
,
÷÷ 
Calendar
◊◊ 
,
◊◊ 
CalendarBlank
ÿÿ 
,
ÿÿ 
CalendarCheck
ŸŸ 
,
ŸŸ 
CalendarClock
⁄⁄ 
,
⁄⁄ 
CalendarMultiple
€€ 
,
€€ #
CalendarMultipleCheck
‹‹ 
,
‹‹ 
CalendarPlus
›› 
,
›› 
CalendarQuestion
ﬁﬁ 
,
ﬁﬁ 
CalendarRange
ﬂﬂ 
,
ﬂﬂ 
CalendarRemove
‡‡ 
,
‡‡ 
CalendarText
·· 
,
·· 
CalendarToday
‚‚ 
,
‚‚ 
CallMade
„„ 
,
„„ 
	CallMerge
‰‰ 
,
‰‰ 

CallMissed
ÂÂ 
,
ÂÂ 
CallReceived
ÊÊ 
,
ÊÊ 
	CallSplit
ÁÁ 
,
ÁÁ 
	Camcorder
ËË 
,
ËË 
CamcorderBox
ÈÈ 
,
ÈÈ 
CamcorderBoxOff
ÍÍ 
,
ÍÍ 
CamcorderOff
ÎÎ 
,
ÎÎ 
Camera
ÏÏ 
,
ÏÏ 
CameraBurst
ÌÌ 
,
ÌÌ 
CameraEnhance
ÓÓ 
,
ÓÓ 
CameraFront
ÔÔ 
,
ÔÔ  
CameraFrontVariant
 
,
 
CameraGopro
ÒÒ 
,
ÒÒ 

CameraIris
ÚÚ 
,
ÚÚ "
CameraMeteringCenter
ÛÛ 
,
ÛÛ "
CameraMeteringMatrix
ÙÙ 
,
ÙÙ #
CameraMeteringPartial
ıı 
,
ıı  
CameraMeteringSpot
ˆˆ 
,
ˆˆ 
	CameraOff
˜˜ 
,
˜˜ 
CameraPartyMode
¯¯ 
,
¯¯ 

CameraRear
˘˘ 
,
˘˘ 
CameraRearVariant
˙˙ 
,
˙˙ 
CameraSwitch
˚˚ 
,
˚˚ 
CameraTimer
¸¸ 
,
¸¸ 
Cancel
˝˝ 
,
˝˝ 
Candle
˛˛ 
,
˛˛ 
	Candycane
ˇˇ 
,
ˇˇ 
Cannabis
ÄÄ 
,
ÄÄ 
Car
ÅÅ 
,
ÅÅ 

CarBattery
ÇÇ 
,
ÇÇ 
CarConnected
ÉÉ 
,
ÉÉ 
CarConvertible
ÑÑ 
,
ÑÑ 
	CarEstate
ÖÖ 
,
ÖÖ 
CarHatchback
ÜÜ 
,
ÜÜ 
	CarPickup
áá 
,
áá 
CarSide
àà 
,
àà 
	CarSports
ââ 
,
ââ 
CarWash
ää 
,
ää 
Caravan
ãã 
,
ãã 
Cards
åå 
,
åå 
CardsOutline
çç 
,
çç !
CardsPlayingOutline
éé 
,
éé 
CardsVariant
èè 
,
èè 
Carrot
êê 
,
êê 
Cart
ëë 
,
ëë 
CartOff
íí 
,
íí 
CartOutline
ìì 
,
ìì 
CartPlus
îî 
,
îî 
CaseSensitiveAlt
ïï 
,
ïï 
Cash
ññ 
,
ññ 
Cash100
óó 
,
óó 
CashMultiple
òò 
,
òò 
CashUsd
ôô 
,
ôô 
Cast
öö 
,
öö 
CastConnected
õõ 
,
õõ 
CastOff
úú 
,
úú 
Castle
ùù 
,
ùù 
Cat
ûû 
,
ûû 
Cctv
üü 
,
üü 
CeilingLight
†† 
,
†† 
	Cellphone
°° 
,
°° 
CellphoneAndroid
¢¢ 
,
¢¢ 
CellphoneBasic
££ 
,
££ 
CellphoneDock
§§ 
,
§§ 
CellphoneIphone
•• 
,
•• 
CellphoneLink
¶¶ 
,
¶¶ 
CellphoneLinkOff
ßß 
,
ßß 
CellphoneSettings
®® 
,
®® 
CellphoneWireless
©© 
,
©© 
Certificate
™™ 
,
™™ 
ChairSchool
´´ 
,
´´ 
ChartArc
¨¨ 
,
¨¨ 
ChartAreaspline
≠≠ 
,
≠≠ 
ChartBar
ÆÆ 
,
ÆÆ 
ChartBarStacked
ØØ 
,
ØØ 
ChartBubble
∞∞ 
,
∞∞ 

ChartDonut
±± 
,
±± 
ChartDonutVariant
≤≤ 
,
≤≤ 

ChartGantt
≥≥ 
,
≥≥ 
ChartHistogram
¥¥ 
,
¥¥ 
	ChartLine
µµ 
,
µµ 
ChartLineStacked
∂∂ 
,
∂∂ 
ChartLineVariant
∑∑ 
,
∑∑ 
ChartPie
∏∏ 
,
∏∏ $
ChartScatterplotHexbin
ππ 
,
ππ 
ChartTimeline
∫∫ 
,
∫∫ 
Check
ªª 
,
ªª 
CheckAll
ºº 
,
ºº 
CheckCircle
ΩΩ 
,
ΩΩ  
CheckCircleOutline
ææ 
,
ææ 
CheckboxBlank
øø 
,
øø !
CheckboxBlankCircle
¿¿ 
,
¿¿ (
CheckboxBlankCircleOutline
¡¡ "
,
¡¡" #"
CheckboxBlankOutline
¬¬ 
,
¬¬ 
CheckboxMarked
√√ 
,
√√ "
CheckboxMarkedCircle
ƒƒ 
,
ƒƒ )
CheckboxMarkedCircleOutline
≈≈ #
,
≈≈# $#
CheckboxMarkedOutline
∆∆ 
,
∆∆ #
CheckboxMultipleBlank
«« 
,
«« )
CheckboxMultipleBlankCircle
»» #
,
»»# $0
"CheckboxMultipleBlankCircleOutline
…… *
,
……* +*
CheckboxMultipleBlankOutline
   $
,
  $ %$
CheckboxMultipleMarked
ÀÀ 
,
ÀÀ *
CheckboxMultipleMarkedCircle
ÃÃ $
,
ÃÃ$ %1
#CheckboxMultipleMarkedCircleOutline
ÕÕ +
,
ÕÕ+ ,+
CheckboxMultipleMarkedOutline
ŒŒ %
,
ŒŒ% &
Checkerboard
œœ 
,
œœ 
ChemicalWeapon
–– 
,
–– 
ChevronDoubleDown
—— 
,
—— 
ChevronDoubleLeft
““ 
,
““  
ChevronDoubleRight
”” 
,
”” 
ChevronDoubleUp
‘‘ 
,
‘‘ 
ChevronDown
’’ 
,
’’ 
ChevronLeft
÷÷ 
,
÷÷ 
ChevronRight
◊◊ 
,
◊◊ 
	ChevronUp
ÿÿ 
,
ÿÿ 
ChiliHot
ŸŸ 
,
ŸŸ 
ChiliMedium
⁄⁄ 
,
⁄⁄ 
	ChiliMild
€€ 
,
€€ 
Chip
‹‹ 
,
‹‹ 
Church
›› 
,
›› 
Circle
ﬁﬁ 
,
ﬁﬁ 
CircleOutline
ﬂﬂ 
,
ﬂﬂ 

CiscoWebex
‡‡ 
,
‡‡ 
City
·· 
,
·· 
	Clipboard
‚‚ 
,
‚‚ 
ClipboardAccount
„„ 
,
„„ 
ClipboardAlert
‰‰ 
,
‰‰  
ClipboardArrowDown
ÂÂ 
,
ÂÂ  
ClipboardArrowLeft
ÊÊ 
,
ÊÊ 
ClipboardCheck
ÁÁ 
,
ÁÁ 
ClipboardFlow
ËË 
,
ËË 
ClipboardOutline
ÈÈ 
,
ÈÈ 
ClipboardPlus
ÍÍ 
,
ÍÍ 
ClipboardText
ÎÎ 
,
ÎÎ 
Clippy
ÏÏ 
,
ÏÏ 
Clock
ÌÌ 
,
ÌÌ 

ClockAlert
ÓÓ 
,
ÓÓ 
ClockEnd
ÔÔ 
,
ÔÔ 
	ClockFast
 
,
 
ClockIn
ÒÒ 
,
ÒÒ 
ClockOut
ÚÚ 
,
ÚÚ 

ClockStart
ÛÛ 
,
ÛÛ 
Close
ÙÙ 
,
ÙÙ 
CloseBox
ıı 
,
ıı 
CloseBoxOutline
ˆˆ 
,
ˆˆ 
CloseCircle
˜˜ 
,
˜˜  
CloseCircleOutline
¯¯ 
,
¯¯ 
CloseNetwork
˘˘ 
,
˘˘ 
CloseOctagon
˙˙ 
,
˙˙ !
CloseOctagonOutline
˚˚ 
,
˚˚ 
CloseOutline
¸¸ 
,
¸¸ 
ClosedCaption
˝˝ 
,
˝˝ 
Cloud
˛˛ 
,
˛˛ 
CloudBraces
ˇˇ 
,
ˇˇ 

CloudCheck
ÄÄ 
,
ÄÄ 
CloudCircle
ÅÅ 
,
ÅÅ 
CloudDownload
ÇÇ 
,
ÇÇ 
CloudOffOutline
ÉÉ 
,
ÉÉ 
CloudOutline
ÑÑ 
,
ÑÑ 

CloudPrint
ÖÖ 
,
ÖÖ 
CloudPrintOutline
ÜÜ 
,
ÜÜ 
	CloudSync
áá 
,
áá 
	CloudTags
àà 
,
àà 
CloudUpload
ââ 
,
ââ 
Clover
ää 
,
ää 
	CodeArray
ãã 
,
ãã 

CodeBraces
åå 
,
åå 
CodeBrackets
çç 
,
çç 
	CodeEqual
éé 
,
éé 
CodeGreaterThan
èè 
,
èè $
CodeGreaterThanOrEqual
êê 
,
êê 
CodeLessThan
ëë 
,
ëë !
CodeLessThanOrEqual
íí 
,
íí 
CodeNotEqual
ìì 
,
ìì !
CodeNotEqualVariant
îî 
,
îî 
CodeParentheses
ïï 
,
ïï 

CodeString
ññ 
,
ññ 
CodeTags
óó 
,
óó 
CodeTagsCheck
òò 
,
òò 
Codepen
ôô 
,
ôô 
Coffee
öö 
,
öö 
CoffeeOutline
õõ 
,
õõ 

CoffeeToGo
úú 
,
úú 
Coin
ùù 
,
ùù 
Coins
ûû 
,
ûû 
Collage
üü 
,
üü 
ColorHelper
†† 
,
†† 
Comment
°° 
,
°° 
CommentAccount
¢¢ 
,
¢¢ #
CommentAccountOutline
££ 
,
££ 
CommentAlert
§§ 
,
§§ !
CommentAlertOutline
•• 
,
•• 
CommentCheck
¶¶ 
,
¶¶ !
CommentCheckOutline
ßß 
,
ßß $
CommentMultipleOutline
®® 
,
®® 
CommentOutline
©© 
,
©©  
CommentPlusOutline
™™ 
,
™™ 
CommentProcessing
´´ 
,
´´ &
CommentProcessingOutline
¨¨  
,
¨¨  !
CommentQuestion
≠≠ 
,
≠≠ $
CommentQuestionOutline
ÆÆ 
,
ÆÆ 
CommentRemove
ØØ 
,
ØØ "
CommentRemoveOutline
∞∞ 
,
∞∞ 
CommentText
±± 
,
±±  
CommentTextOutline
≤≤ 
,
≤≤ 
Compare
≥≥ 
,
≥≥ 
Compass
¥¥ 
,
¥¥ 
CompassOutline
µµ 
,
µµ 
Console
∂∂ 
,
∂∂ 
ConsoleLine
∑∑ 
,
∑∑ 
ContactMail
∏∏ 
,
∏∏ 
Contacts
ππ 
,
ππ 
ContentCopy
∫∫ 
,
∫∫ 

ContentCut
ªª 
,
ªª 
ContentDuplicate
ºº 
,
ºº 
ContentPaste
ΩΩ 
,
ΩΩ 
ContentSave
ææ 
,
ææ 
ContentSaveAll
øø 
,
øø  
ContentSaveOutline
¿¿ 
,
¿¿ !
ContentSaveSettings
¡¡ 
,
¡¡ 
Contrast
¬¬ 
,
¬¬ 
ContrastBox
√√ 
,
√√ 
ContrastCircle
ƒƒ 
,
ƒƒ 
Cookie
≈≈ 
,
≈≈ 
	Copyright
∆∆ 
,
∆∆ 
Corn
«« 
,
«« 
Counter
»» 
,
»» 
Cow
…… 
,
…… 
Creation
   
,
   

CreditCard
ÀÀ 
,
ÀÀ  
CreditCardMultiple
ÃÃ 
,
ÃÃ 
CreditCardOff
ÕÕ 
,
ÕÕ 
CreditCardPlus
ŒŒ 
,
ŒŒ 
CreditCardScan
œœ 
,
œœ 
Crop
–– 
,
–– 
CropFree
—— 
,
—— 
CropLandscape
““ 
,
““ 
CropPortrait
”” 
,
”” 

CropRotate
‘‘ 
,
‘‘ 

CropSquare
’’ 
,
’’ 

Crosshairs
÷÷ 
,
÷÷ 
CrosshairsGps
◊◊ 
,
◊◊ 
Crown
ÿÿ 
,
ÿÿ 
Cube
ŸŸ 
,
ŸŸ 
CubeOutline
⁄⁄ 
,
⁄⁄ 
CubeSend
€€ 
,
€€ 
CubeUnfolded
‹‹ 
,
‹‹ 
Cup
›› 
,
›› 
CupOff
ﬁﬁ 
,
ﬁﬁ 
CupWater
ﬂﬂ 
,
ﬂﬂ 
CurrencyBtc
‡‡ 
,
‡‡ 
CurrencyChf
·· 
,
·· 
CurrencyCny
‚‚ 
,
‚‚ 
CurrencyEth
„„ 
,
„„ 
CurrencyEur
‰‰ 
,
‰‰ 
CurrencyGbp
ÂÂ 
,
ÂÂ 
CurrencyInr
ÊÊ 
,
ÊÊ 
CurrencyJpy
ÁÁ 
,
ÁÁ 
CurrencyKrw
ËË 
,
ËË 
CurrencyNgn
ÈÈ 
,
ÈÈ 
CurrencyRub
ÍÍ 
,
ÍÍ 
CurrencySign
ÎÎ 
,
ÎÎ 
CurrencyTry
ÏÏ 
,
ÏÏ 
CurrencyTwd
ÌÌ 
,
ÌÌ 
CurrencyUsd
ÓÓ 
,
ÓÓ 
CurrencyUsdOff
ÔÔ 
,
ÔÔ 
CursorDefault
 
,
 "
CursorDefaultOutline
ÒÒ 
,
ÒÒ 

CursorMove
ÚÚ 
,
ÚÚ 
CursorPointer
ÛÛ 
,
ÛÛ 

CursorText
ÙÙ 
,
ÙÙ 
Database
ıı 
,
ıı 
DatabaseMinus
ˆˆ 
,
ˆˆ 
DatabasePlus
˜˜ 
,
˜˜ 
DatabaseSearch
¯¯ 
,
¯¯ 
DebugStepInto
˘˘ 
,
˘˘ 
DebugStepOut
˙˙ 
,
˙˙ 
DebugStepOver
˚˚ 
,
˚˚ 
Decagram
¸¸ 
,
¸¸ 
DecagramOutline
˝˝ 
,
˝˝ 
DecimalDecrease
˛˛ 
,
˛˛ 
DecimalIncrease
ˇˇ 
,
ˇˇ 
Delete
ÄÄ 
,
ÄÄ 
DeleteCircle
ÅÅ 
,
ÅÅ 
DeleteEmpty
ÇÇ 
,
ÇÇ 
DeleteForever
ÉÉ 
,
ÉÉ 
DeleteRestore
ÑÑ 
,
ÑÑ 
DeleteSweep
ÖÖ 
,
ÖÖ 
DeleteVariant
ÜÜ 
,
ÜÜ 
Delta
áá 
,
áá 
	Deskphone
àà 
,
àà 
DesktopClassic
ââ 
,
ââ 

DesktopMac
ää 
,
ää 
DesktopTower
ãã 
,
ãã 
Details
åå 
,
åå 
DeveloperBoard
çç 
,
çç 

Deviantart
éé 
,
éé 
Dialpad
èè 
,
èè 
Diamond
êê 
,
êê 
Dice1
ëë 
,
ëë 
Dice2
íí 
,
íí 
Dice3
ìì 
,
ìì 
Dice4
îî 
,
îî 
Dice5
ïï 
,
ïï 
Dice6
ññ 
,
ññ 
DiceD10
óó 
,
óó 
DiceD20
òò 
,
òò 
DiceD4
ôô 
,
ôô 
DiceD6
öö 
,
öö 
DiceD8
õõ 
,
õõ 
DiceMultiple
úú 
,
úú 

Dictionary
ùù 
,
ùù 
	DipSwitch
ûû 
,
ûû 

Directions
üü 
,
üü 
DirectionsFork
†† 
,
†† 
Discord
°° 
,
°° 
Disk
¢¢ 
,
¢¢ 
	DiskAlert
££ 
,
££ 
Disqus
§§ 
,
§§ 
DisqusOutline
•• 
,
•• 
Division
¶¶ 
,
¶¶ 
DivisionBox
ßß 
,
ßß 
Dna
®® 
,
®® 
Dns
©© 
,
©© 
DoNotDisturb
™™ 
,
™™ 
DoNotDisturbOff
´´ 
,
´´ 
Dolby
¨¨ 
,
¨¨ 
Domain
≠≠ 
,
≠≠ 
Donkey
ÆÆ 
,
ÆÆ 
Door
ØØ 
,
ØØ 

DoorClosed
∞∞ 
,
∞∞ 
DoorOpen
±± 
,
±± 
DotsHorizontal
≤≤ 
,
≤≤ "
DotsHorizontalCircle
≥≥ 
,
≥≥ 
DotsVertical
¥¥ 
,
¥¥  
DotsVerticalCircle
µµ 
,
µµ 
Douban
∂∂ 
,
∂∂ 
Download
∑∑ 
,
∑∑ 
DownloadNetwork
∏∏ 
,
∏∏ 
Drag
ππ 
,
ππ 
DragHorizontal
∫∫ 
,
∫∫ 
DragVertical
ªª 
,
ªª 
Drawing
ºº 
,
ºº 

DrawingBox
ΩΩ 
,
ΩΩ 
Dribbble
ææ 
,
ææ 
DribbbleBox
øø 
,
øø 
Drone
¿¿ 
,
¿¿ 
Dropbox
¡¡ 
,
¡¡ 
Drupal
¬¬ 
,
¬¬ 
Duck
√√ 
,
√√ 
Dumbbell
ƒƒ 
,
ƒƒ 

EarHearing
≈≈ 
,
≈≈ 
Earth
∆∆ 
,
∆∆ 
EarthBox
«« 
,
«« 
EarthBoxOff
»» 
,
»» 
EarthOff
…… 
,
…… 
Edge
   
,
   
Eject
ÀÀ 
,
ÀÀ 
Elephant
ÃÃ 
,
ÃÃ 
ElevationDecline
ÕÕ 
,
ÕÕ 
ElevationRise
ŒŒ 
,
ŒŒ 
Elevator
œœ 
,
œœ 
Email
–– 
,
–– 

EmailAlert
—— 
,
—— 
	EmailOpen
““ 
,
““ 
EmailOpenOutline
”” 
,
”” 
EmailOutline
‘‘ 
,
‘‘ 
EmailSecure
’’ 
,
’’ 
EmailVariant
÷÷ 
,
÷÷ 
Emby
◊◊ 
,
◊◊ 
Emoticon
ÿÿ 
,
ÿÿ 
EmoticonCool
ŸŸ 
,
ŸŸ 
EmoticonDead
⁄⁄ 
,
⁄⁄ 
EmoticonDevil
€€ 
,
€€ 
EmoticonExcited
‹‹ 
,
‹‹ 
EmoticonHappy
›› 
,
›› 
EmoticonNeutral
ﬁﬁ 
,
ﬁﬁ 
EmoticonPoop
ﬂﬂ 
,
ﬂﬂ 
EmoticonSad
‡‡ 
,
‡‡ 
EmoticonTongue
·· 
,
·· 
Engine
‚‚ 
,
‚‚ 
EngineOutline
„„ 
,
„„ 
Equal
‰‰ 
,
‰‰ 
EqualBox
ÂÂ 
,
ÂÂ 
Eraser
ÊÊ 
,
ÊÊ 
EraserVariant
ÁÁ 
,
ÁÁ 
	Escalator
ËË 
,
ËË 
Ethernet
ÈÈ 
,
ÈÈ 
EthernetCable
ÍÍ 
,
ÍÍ 
EthernetCableOff
ÎÎ 
,
ÎÎ 
Etsy
ÏÏ 
,
ÏÏ 
	EvStation
ÌÌ 
,
ÌÌ 

Eventbrite
ÓÓ 
,
ÓÓ 
Evernote
ÔÔ 
,
ÔÔ 
Exclamation
 
,
 
	ExitToApp
ÒÒ 
,
ÒÒ 
Export
ÚÚ 
,
ÚÚ 
Eye
ÛÛ 
,
ÛÛ 
EyeOff
ÙÙ 
,
ÙÙ 
EyeOffOutline
ıı 
,
ıı 

EyeOutline
ˆˆ 
,
ˆˆ 
EyePlus
˜˜ 
,
˜˜ 
EyePlusOutline
¯¯ 
,
¯¯ 

Eyedropper
˘˘ 
,
˘˘ 
EyedropperVariant
˙˙ 
,
˙˙ 
Face
˚˚ 
,
˚˚ 
FaceProfile
¸¸ 
,
¸¸ 
Facebook
˝˝ 
,
˝˝ 
FacebookBox
˛˛ 
,
˛˛ 
FacebookMessenger
ˇˇ 
,
ˇˇ 
Factory
ÄÄ 
,
ÄÄ 
Fan
ÅÅ 
,
ÅÅ 
FanOff
ÇÇ 
,
ÇÇ 
FastForward
ÉÉ 
,
ÉÉ  
FastForwardOutline
ÑÑ 
,
ÑÑ 
Fax
ÖÖ 
,
ÖÖ 
Feather
ÜÜ 
,
ÜÜ 
Ferry
áá 
,
áá 
File
àà 
,
àà 
FileAccount
ââ 
,
ââ 
	FileChart
ää 
,
ää 
	FileCheck
ãã 
,
ãã 
	FileCloud
åå 
,
åå 
FileDelimited
çç 
,
çç 
FileDocument
éé 
,
éé 
FileDocumentBox
èè 
,
èè 
	FileExcel
êê 
,
êê 
FileExcelBox
ëë 
,
ëë 

FileExport
íí 
,
íí 
FileFind
ìì 
,
ìì 

FileHidden
îî 
,
îî 
	FileImage
ïï 
,
ïï 

FileImport
ññ 
,
ññ 
FileLock
óó 
,
óó 
FileMultiple
òò 
,
òò 
	FileMusic
ôô 
,
ôô 
FileOutline
öö 
,
öö 
FilePdf
õõ 
,
õõ 

FilePdfBox
úú 
,
úú 
FilePercent
ùù 
,
ùù 
FilePlus
ûû 
,
ûû 
FilePowerpoint
üü 
,
üü 
FilePowerpointBox
†† 
,
†† !
FilePresentationBox
°° 
,
°° 
FileQuestion
¢¢ 
,
¢¢ 
FileRestore
££ 
,
££ 
FileSend
§§ 
,
§§ 
FileTree
•• 
,
•• 
	FileVideo
¶¶ 
,
¶¶ 
FileWord
ßß 
,
ßß 
FileWordBox
®® 
,
®® 
FileXml
©© 
,
©© 
Film
™™ 
,
™™ 
	Filmstrip
´´ 
,
´´ 
FilmstripOff
¨¨ 
,
¨¨ 
Filter
≠≠ 
,
≠≠ 
FilterOutline
ÆÆ 
,
ÆÆ 
FilterRemove
ØØ 
,
ØØ !
FilterRemoveOutline
∞∞ 
,
∞∞ 
FilterVariant
±± 
,
±± 
Finance
≤≤ 
,
≤≤ 
FindReplace
≥≥ 
,
≥≥ 
Fingerprint
¥¥ 
,
¥¥ 
Fire
µµ 
,
µµ 
Firefox
∂∂ 
,
∂∂ 
Fish
∑∑ 
,
∑∑ 
Flag
∏∏ 
,
∏∏ 
FlagCheckered
ππ 
,
ππ 
FlagOutline
∫∫ 
,
∫∫ 
FlagTriangle
ªª 
,
ªª 
FlagVariant
ºº 
,
ºº  
FlagVariantOutline
ΩΩ 
,
ΩΩ 
Flash
ææ 
,
ææ 
	FlashAuto
øø 
,
øø 
FlashCircle
¿¿ 
,
¿¿ 
FlashOff
¡¡ 
,
¡¡ 
FlashOutline
¬¬ 
,
¬¬ 
FlashRedEye
√√ 
,
√√ 

Flashlight
ƒƒ 
,
ƒƒ 
FlashlightOff
≈≈ 
,
≈≈ 
Flask
∆∆ 
,
∆∆ 

FlaskEmpty
«« 
,
«« 
FlaskEmptyOutline
»» 
,
»» 
FlaskOutline
…… 
,
…… 
Flattr
   
,
   

FlipToBack
ÀÀ 
,
ÀÀ 
FlipToFront
ÃÃ 
,
ÃÃ 
	FloorPlan
ÕÕ 
,
ÕÕ 
Floppy
ŒŒ 
,
ŒŒ 
Flower
œœ 
,
œœ 
Folder
–– 
,
–– 
FolderAccount
—— 
,
—— 
FolderDownload
““ 
,
““ 
FolderGoogleDrive
”” 
,
”” 
FolderImage
‘‘ 
,
‘‘ 

FolderLock
’’ 
,
’’ 
FolderLockOpen
÷÷ 
,
÷÷ 

FolderMove
◊◊ 
,
◊◊ 
FolderMultiple
ÿÿ 
,
ÿÿ !
FolderMultipleImage
ŸŸ 
,
ŸŸ #
FolderMultipleOutline
⁄⁄ 
,
⁄⁄ 
FolderNetwork
€€ 
,
€€ 

FolderOpen
‹‹ 
,
‹‹ 
FolderOutline
›› 
,
›› 

FolderPlus
ﬁﬁ 
,
ﬁﬁ 
FolderRemove
ﬂﬂ 
,
ﬂﬂ 

FolderStar
‡‡ 
,
‡‡ 
FolderUpload
·· 
,
·· 
FontAwesome
‚‚ 
,
‚‚ 
Food
„„ 
,
„„ 
	FoodApple
‰‰ 
,
‰‰ 
FoodCroissant
ÂÂ 
,
ÂÂ 
FoodForkDrink
ÊÊ 
,
ÊÊ 
FoodOff
ÁÁ 
,
ÁÁ 
FoodVariant
ËË 
,
ËË 
Football
ÈÈ 
,
ÈÈ  
FootballAustralian
ÍÍ 
,
ÍÍ 
FootballHelmet
ÎÎ 
,
ÎÎ 
Forklift
ÏÏ 
,
ÏÏ 
FormatAlignBottom
ÌÌ 
,
ÌÌ 
FormatAlignCenter
ÓÓ 
,
ÓÓ  
FormatAlignJustify
ÔÔ 
,
ÔÔ 
FormatAlignLeft
 
,
 
FormatAlignMiddle
ÒÒ 
,
ÒÒ 
FormatAlignRight
ÚÚ 
,
ÚÚ 
FormatAlignTop
ÛÛ 
,
ÛÛ "
FormatAnnotationPlus
ÙÙ 
,
ÙÙ 

FormatBold
ıı 
,
ıı 
FormatClear
ˆˆ 
,
ˆˆ 
FormatColorFill
˜˜ 
,
˜˜ 
FormatColorText
¯¯ 
,
¯¯ 
FormatFloatCenter
˘˘ 
,
˘˘ 
FormatFloatLeft
˙˙ 
,
˙˙ 
FormatFloatNone
˚˚ 
,
˚˚ 
FormatFloatRight
¸¸ 
,
¸¸ 

FormatFont
˝˝ 
,
˝˝ 
FormatHeader1
˛˛ 
,
˛˛ 
FormatHeader2
ˇˇ 
,
ˇˇ 
FormatHeader3
ÄÄ 
,
ÄÄ 
FormatHeader4
ÅÅ 
,
ÅÅ 
FormatHeader5
ÇÇ 
,
ÇÇ 
FormatHeader6
ÉÉ 
,
ÉÉ "
FormatHeaderDecrease
ÑÑ 
,
ÑÑ 
FormatHeaderEqual
ÖÖ 
,
ÖÖ "
FormatHeaderIncrease
ÜÜ 
,
ÜÜ 
FormatHeaderPound
áá 
,
áá )
FormatHorizontalAlignCenter
àà #
,
àà# $'
FormatHorizontalAlignLeft
ââ !
,
ââ! "(
FormatHorizontalAlignRight
ää "
,
ää" #"
FormatIndentDecrease
ãã 
,
ãã "
FormatIndentIncrease
åå 
,
åå 
FormatItalic
çç 
,
çç 
FormatLineSpacing
éé 
,
éé 
FormatLineStyle
èè 
,
èè 
FormatLineWeight
êê 
,
êê  
FormatListBulleted
ëë 
,
ëë $
FormatListBulletedType
íí 
,
íí 
FormatListChecks
ìì 
,
ìì 
FormatListNumbers
îî 
,
îî 
FormatPageBreak
ïï 
,
ïï 
FormatPaint
ññ 
,
ññ 
FormatParagraph
óó 
,
óó 
FormatPilcrow
òò 
,
òò 
FormatQuoteClose
ôô 
,
ôô 
FormatQuoteOpen
öö 
,
öö 
FormatRotate90
õõ 
,
õõ 
FormatSection
úú 
,
úú 

FormatSize
ùù 
,
ùù !
FormatStrikethrough
ûû 
,
ûû (
FormatStrikethroughVariant
üü "
,
üü" #
FormatSubscript
†† 
,
†† 
FormatSuperscript
°° 
,
°° 

FormatText
¢¢ 
,
¢¢ %
FormatTextdirectionLToR
££ 
,
££  %
FormatTextdirectionRToL
§§ 
,
§§  
FormatTitle
•• 
,
•• 
FormatUnderline
¶¶ 
,
¶¶ '
FormatVerticalAlignBottom
ßß !
,
ßß! "'
FormatVerticalAlignCenter
®® !
,
®®! "$
FormatVerticalAlignTop
©© 
,
©© 
FormatWrapInline
™™ 
,
™™ 
FormatWrapSquare
´´ 
,
´´ 
FormatWrapTight
¨¨ 
,
¨¨ !
FormatWrapTopBottom
≠≠ 
,
≠≠ 
Forum
ÆÆ 
,
ÆÆ 
ForumOutline
ØØ 
,
ØØ 
Forward
∞∞ 
,
∞∞ 

Foursquare
±± 
,
±± 
Fridge
≤≤ 
,
≤≤ 
FridgeFilled
≥≥ 
,
≥≥  
FridgeFilledBottom
¥¥ 
,
¥¥ 
FridgeFilledTop
µµ 
,
µµ 
Fuel
∂∂ 
,
∂∂ 

Fullscreen
∑∑ 
,
∑∑ 
FullscreenExit
∏∏ 
,
∏∏ 
Function
ππ 
,
ππ 
FunctionVariant
∫∫ 
,
∫∫ 
Gamepad
ªª 
,
ªª 
GamepadVariant
ºº 
,
ºº 
Garage
ΩΩ 
,
ΩΩ 

GarageOpen
ææ 
,
ææ 
GasCylinder
øø 
,
øø 

GasStation
¿¿ 
,
¿¿ 
Gate
¡¡ 
,
¡¡ 
Gauge
¬¬ 
,
¬¬ 
Gavel
√√ 
,
√√ 
GenderFemale
ƒƒ 
,
ƒƒ 

GenderMale
≈≈ 
,
≈≈ 
GenderMaleFemale
∆∆ 
,
∆∆ 
GenderTransgender
«« 
,
«« 
Gesture
»» 
,
»» 
GestureDoubleTap
…… 
,
…… 
GestureSwipeDown
   
,
   
GestureSwipeLeft
ÀÀ 
,
ÀÀ 
GestureSwipeRight
ÃÃ 
,
ÃÃ 
GestureSwipeUp
ÕÕ 
,
ÕÕ 

GestureTap
ŒŒ 
,
ŒŒ !
GestureTwoDoubleTap
œœ 
,
œœ 
GestureTwoTap
–– 
,
–– 
Ghost
—— 
,
—— 
Gift
““ 
,
““ 
Git
”” 
,
”” 
	GithubBox
‘‘ 
,
‘‘ 
GithubCircle
’’ 
,
’’ 

GithubFace
÷÷ 
,
÷÷ 

GlassFlute
◊◊ 
,
◊◊ 
GlassMug
ÿÿ 
,
ÿÿ 
GlassStange
ŸŸ 
,
ŸŸ 

GlassTulip
⁄⁄ 
,
⁄⁄ 
	Glassdoor
€€ 
,
€€ 
Glasses
‹‹ 
,
‹‹ 
Gmail
›› 
,
›› 
Gnome
ﬁﬁ 
,
ﬁﬁ 
Golf
ﬂﬂ 
,
ﬂﬂ 
Gondola
‡‡ 
,
‡‡ 
Google
·· 
,
·· 
GoogleAnalytics
‚‚ 
,
‚‚ 
GoogleAssistant
„„ 
,
„„ 
GoogleCardboard
‰‰ 
,
‰‰ 
GoogleChrome
ÂÂ 
,
ÂÂ 
GoogleCircles
ÊÊ 
,
ÊÊ &
GoogleCirclesCommunities
ÁÁ  
,
ÁÁ  !#
GoogleCirclesExtended
ËË 
,
ËË  
GoogleCirclesGroup
ÈÈ 
,
ÈÈ 
GoogleController
ÍÍ 
,
ÍÍ !
GoogleControllerOff
ÎÎ 
,
ÎÎ 
GoogleDrive
ÏÏ 
,
ÏÏ 
GoogleEarth
ÌÌ 
,
ÌÌ 
GoogleGlass
ÓÓ 
,
ÓÓ 

GoogleHome
ÔÔ 
,
ÔÔ 

GoogleKeep
 
,
 

GoogleMaps
ÒÒ 
,
ÒÒ 
GoogleNearby
ÚÚ 
,
ÚÚ 
GooglePages
ÛÛ 
,
ÛÛ 
GooglePhotos
ÙÙ 
,
ÙÙ 
GooglePhysicalWeb
ıı 
,
ıı 

GooglePlay
ˆˆ 
,
ˆˆ 

GooglePlus
˜˜ 
,
˜˜ 
GooglePlusBox
¯¯ 
,
¯¯ 
GoogleTranslate
˘˘ 
,
˘˘ 
GoogleWallet
˙˙ 
,
˙˙ 
Gradient
˚˚ 
,
˚˚ 
GreasePencil
¸¸ 
,
¸¸ 
Grid
˝˝ 
,
˝˝ 
	GridLarge
˛˛ 
,
˛˛ 
GridOff
ˇˇ 
,
ˇˇ 
Group
ÄÄ 
,
ÄÄ 
GuitarAcoustic
ÅÅ 
,
ÅÅ 
GuitarElectric
ÇÇ 
,
ÇÇ 

GuitarPick
ÉÉ 
,
ÉÉ 
GuitarPickOutline
ÑÑ 
,
ÑÑ 
GuyFawkesMask
ÖÖ 
,
ÖÖ 

Hackernews
ÜÜ 
,
ÜÜ 
	Hamburger
áá 
,
áá 
HandPointingRight
àà 
,
àà 
Hanger
ââ 
,
ââ 
Hangouts
ää 
,
ää 
Harddisk
ãã 
,
ãã 

Headphones
åå 
,
åå 
HeadphonesBox
çç 
,
çç 
HeadphonesOff
éé 
,
éé  
HeadphonesSettings
èè 
,
èè 
Headset
êê 
,
êê 
HeadsetDock
ëë 
,
ëë 

HeadsetOff
íí 
,
íí 
Heart
ìì 
,
ìì 
HeartBox
îî 
,
îî 
HeartBoxOutline
ïï 
,
ïï 
HeartBroken
ññ 
,
ññ 
	HeartHalf
óó 
,
óó 
HeartHalfFull
òò 
,
òò 
HeartHalfOutline
ôô 
,
ôô 
HeartOff
öö 
,
öö 
HeartOutline
õõ 
,
õõ 

HeartPulse
úú 
,
úú 
Help
ùù 
,
ùù 
HelpBox
ûû 
,
ûû 

HelpCircle
üü 
,
üü 
HelpCircleOutline
†† 
,
†† 
HelpNetwork
°° 
,
°° 
Hexagon
¢¢ 
,
¢¢ 
HexagonMultiple
££ 
,
££ 
HexagonOutline
§§ 
,
§§ 
HighDefinition
•• 
,
•• 
Highway
¶¶ 
,
¶¶ 
History
ßß 
,
ßß 
Hololens
®® 
,
®® 
Home
©© 
,
©© 
HomeAccount
™™ 
,
™™ 
HomeAssistant
´´ 
,
´´ 
HomeAutomation
¨¨ 
,
¨¨ 

HomeCircle
≠≠ 
,
≠≠ 
	HomeHeart
ÆÆ 
,
ÆÆ 
HomeMapMarker
ØØ 
,
ØØ 

HomeModern
∞∞ 
,
∞∞ 
HomeOutline
±± 
,
±± 
HomeVariant
≤≤ 
,
≤≤ 
Hook
≥≥ 
,
≥≥ 
HookOff
¥¥ 
,
¥¥ 
Hops
µµ 
,
µµ 
Hospital
∂∂ 
,
∂∂ 
HospitalBuilding
∑∑ 
,
∑∑ 
HospitalMarker
∏∏ 
,
∏∏ 
HotTub
ππ 
,
ππ 
Hotel
∫∫ 
,
∫∫ 
Houzz
ªª 
,
ªª 
HouzzBox
ºº 
,
ºº 
Hulu
ΩΩ 
,
ΩΩ 
Human
ææ 
,
ææ 

HumanChild
øø 
,
øø 
HumanFemale
¿¿ 
,
¿¿ 
HumanGreeting
¡¡ 
,
¡¡ 
HumanHandsdown
¬¬ 
,
¬¬ 
HumanHandsup
√√ 
,
√√ 
	HumanMale
ƒƒ 
,
ƒƒ 
HumanMaleFemale
≈≈ 
,
≈≈ 
HumanPregnant
∆∆ 
,
∆∆ 
HumbleBundle
«« 
,
«« 
IceCream
»» 
,
»» 
Image
…… 
,
…… 

ImageAlbum
   
,
   
	ImageArea
ÀÀ 
,
ÀÀ 
ImageAreaClose
ÃÃ 
,
ÃÃ 
ImageBroken
ÕÕ 
,
ÕÕ  
ImageBrokenVariant
ŒŒ 
,
ŒŒ 
ImageFilter
œœ 
,
œœ #
ImageFilterBlackWhite
–– 
,
–– $
ImageFilterCenterFocus
—— 
,
—— (
ImageFilterCenterFocusWeak
““ "
,
““" #
ImageFilterDrama
”” 
,
”” 
ImageFilterFrames
‘‘ 
,
‘‘ 
ImageFilterHdr
’’ 
,
’’ 
ImageFilterNone
÷÷ 
,
÷÷ "
ImageFilterTiltShift
◊◊ 
,
◊◊  
ImageFilterVintage
ÿÿ 
,
ÿÿ 
ImageMultiple
ŸŸ 
,
ŸŸ 
ImageOff
⁄⁄ 
,
⁄⁄ 
	ImagePlus
€€ 
,
€€ 
Import
‹‹ 
,
‹‹ 
Inbox
›› 
,
›› 
InboxArrowDown
ﬁﬁ 
,
ﬁﬁ 
InboxArrowUp
ﬂﬂ 
,
ﬂﬂ 
	Incognito
‡‡ 
,
‡‡ 
Infinity
·· 
,
·· 
Information
‚‚ 
,
‚‚  
InformationOutline
„„ 
,
„„  
InformationVariant
‰‰ 
,
‰‰ 
	Instagram
ÂÂ 
,
ÂÂ 

Instapaper
ÊÊ 
,
ÊÊ 
InternetExplorer
ÁÁ 
,
ÁÁ 
InvertColors
ËË 
,
ËË 
Itunes
ÈÈ 
,
ÈÈ 
Jeepney
ÍÍ 
,
ÍÍ 
Jira
ÎÎ 
,
ÎÎ 
Jsfiddle
ÏÏ 
,
ÏÏ 
Json
ÌÌ 
,
ÌÌ 
Karate
ÓÓ 
,
ÓÓ 
Keg
ÔÔ 
,
ÔÔ 
Kettle
 
,
 
Key
ÒÒ 
,
ÒÒ 
	KeyChange
ÚÚ 
,
ÚÚ 
KeyMinus
ÛÛ 
,
ÛÛ 
KeyPlus
ÙÙ 
,
ÙÙ 
	KeyRemove
ıı 
,
ıı 

KeyVariant
ˆˆ 
,
ˆˆ 
Keyboard
˜˜ 
,
˜˜ 
KeyboardBackspace
¯¯ 
,
¯¯ 
KeyboardCaps
˘˘ 
,
˘˘ 
KeyboardClose
˙˙ 
,
˙˙ 
KeyboardOff
˚˚ 
,
˚˚ 
KeyboardReturn
¸¸ 
,
¸¸ 
KeyboardTab
˝˝ 
,
˝˝ 
KeyboardVariant
˛˛ 
,
˛˛ 
Kickstarter
ˇˇ 
,
ˇˇ 
Kodi
Ä	Ä	 
,
Ä	Ä	 
Label
Å	Å	 
,
Å	Å	 
LabelOutline
Ç	Ç	 
,
Ç	Ç	 
Ladybug
É	É	 
,
É	É	 
Lambda
Ñ	Ñ	 
,
Ñ	Ñ	 
Lamp
Ö	Ö	 
,
Ö	Ö	 
Lan
Ü	Ü	 
,
Ü	Ü	 

LanConnect
á	á	 
,
á	á	 
LanDisconnect
à	à	 
,
à	à	 

LanPending
â	â	 
,
â	â	 
	LanguageC
ä	ä	 
,
ä	ä	 
LanguageCpp
ã	ã	 
,
ã	ã	 
LanguageCsharp
å	å	 
,
å	å	 
LanguageCss3
ç	ç	 
,
ç	ç	 

LanguageGo
é	é	 
,
é	é	 
LanguageHtml5
è	è	 
,
è	è	  
LanguageJavascript
ê	ê	 
,
ê	ê	 
LanguagePhp
ë	ë	 
,
ë	ë	 
LanguagePython
í	í	 
,
í	í	  
LanguagePythonText
ì	ì	 
,
ì	ì	 
	LanguageR
î	î	 
,
î	î	 
LanguageSwift
ï	ï	 
,
ï	ï	  
LanguageTypescript
ñ	ñ	 
,
ñ	ñ	 
Laptop
ó	ó	 
,
ó	ó	 
LaptopChromebook
ò	ò	 
,
ò	ò	 
	LaptopMac
ô	ô	 
,
ô	ô	 
	LaptopOff
ö	ö	 
,
ö	ö	 
LaptopWindows
õ	õ	 
,
õ	õ	 
Lastfm
ú	ú	 
,
ú	ú	 
Lastpass
ù	ù	 
,
ù	ù	 
Launch
û	û	 
,
û	û	 
LavaLamp
ü	ü	 
,
ü	ü	 
Layers
†	†	 
,
†	†	 
	LayersOff
°	°	 
,
°	°	 

LeadPencil
¢	¢	 
,
¢	¢	 
Leaf
£	£	 
,
£	£	 
LedOff
§	§	 
,
§	§	 
LedOn
•	•	 
,
•	•	 

LedOutline
¶	¶	 
,
¶	¶	 
LedStrip
ß	ß	 
,
ß	ß	 
LedVariantOff
®	®	 
,
®	®	 
LedVariantOn
©	©	 
,
©	©	 
LedVariantOutline
™	™	 
,
™	™	 
Library
´	´	 
,
´	´	 
LibraryBooks
¨	¨	 
,
¨	¨	 
LibraryMusic
≠	≠	 
,
≠	≠	 
LibraryPlus
Æ	Æ	 
,
Æ	Æ	 
	Lightbulb
Ø	Ø	 
,
Ø	Ø	 
LightbulbOn
∞	∞	 
,
∞	∞	  
LightbulbOnOutline
±	±	 
,
±	±	 
LightbulbOutline
≤	≤	 
,
≤	≤	 
Link
≥	≥	 
,
≥	≥	 
LinkOff
¥	¥	 
,
¥	¥	 
LinkVariant
µ	µ	 
,
µ	µ	 
LinkVariantOff
∂	∂	 
,
∂	∂	 
Linkedin
∑	∑	 
,
∑	∑	 
LinkedinBox
∏	∏	 
,
∏	∏	 
Linux
π	π	 
,
π	π	 
Loading
∫	∫	 
,
∫	∫	 
Lock
ª	ª	 
,
ª	ª	 
LockOpen
º	º	 
,
º	º	 
LockOpenOutline
Ω	Ω	 
,
Ω	Ω	 
LockOutline
æ	æ	 
,
æ	æ	 
LockPattern
ø	ø	 
,
ø	ø	 
LockPlus
¿	¿	 
,
¿	¿	 
	LockReset
¡	¡	 
,
¡	¡	 
Locker
¬	¬	 
,
¬	¬	 
LockerMultiple
√	√	 
,
√	√	 
Login
ƒ	ƒ	 
,
ƒ	ƒ	 
LoginVariant
≈	≈	 
,
≈	≈	 
Logout
∆	∆	 
,
∆	∆	 
LogoutVariant
«	«	 
,
«	«	 
Looks
»	»	 
,
»	»	 
Loop
…	…	 
,
…	…	 
Loupe
 	 	 
,
 	 	 
Lumx
À	À	 
,
À	À	 
Magnet
Ã	Ã	 
,
Ã	Ã	 
MagnetOn
Õ	Õ	 
,
Õ	Õ	 
Magnify
Œ	Œ	 
,
Œ	Œ	 
MagnifyMinus
œ	œ	 
,
œ	œ	 !
MagnifyMinusOutline
–	–	 
,
–	–	 
MagnifyPlus
—	—	 
,
—	—	  
MagnifyPlusOutline
“	“	 
,
“	“	 
MailRu
”	”	 
,
”	”	 
Mailbox
‘	‘	 
,
‘	‘	 
Map
’	’	 
,
’	’	 
	MapMarker
÷	÷	 
,
÷	÷	 
MapMarkerCircle
◊	◊	 
,
◊	◊	 
MapMarkerMinus
ÿ	ÿ	 
,
ÿ	ÿ	 
MapMarkerMultiple
Ÿ	Ÿ	 
,
Ÿ	Ÿ	 
MapMarkerOff
⁄	⁄	 
,
⁄	⁄	 
MapMarkerOutline
€	€	 
,
€	€	 
MapMarkerPlus
‹	‹	 
,
‹	‹	 
MapMarkerRadius
›	›	 
,
›	›	 
Margin
ﬁ	ﬁ	 
,
ﬁ	ﬁ	 
Markdown
ﬂ	ﬂ	 
,
ﬂ	ﬂ	 
Marker
‡	‡	 
,
‡	‡	 
MarkerCheck
·	·	 
,
·	·	 
Martini
‚	‚	 
,
‚	‚	 

MaterialUi
„	„	 
,
„	„	 
MathCompass
‰	‰	 
,
‰	‰	 
Matrix
Â	Â	 
,
Â	Â	 
Maxcdn
Ê	Ê	 
,
Ê	Ê	 

MedicalBag
Á	Á	 
,
Á	Á	 
Medium
Ë	Ë	 
,
Ë	Ë	 
Memory
È	È	 
,
È	È	 
Menu
Í	Í	 
,
Í	Í	 
MenuDown
Î	Î	 
,
Î	Î	 
MenuDownOutline
Ï	Ï	 
,
Ï	Ï	 
MenuLeft
Ì	Ì	 
,
Ì	Ì	 
	MenuRight
Ó	Ó	 
,
Ó	Ó	 
MenuUp
Ô	Ô	 
,
Ô	Ô	 
MenuUpOutline
		 
,
		 
Message
Ò	Ò	 
,
Ò	Ò	 
MessageAlert
Ú	Ú	 
,
Ú	Ú	 
MessageBulleted
Û	Û	 
,
Û	Û	  
MessageBulletedOff
Ù	Ù	 
,
Ù	Ù	 
MessageDraw
ı	ı	 
,
ı	ı	 
MessageImage
ˆ	ˆ	 
,
ˆ	ˆ	 
MessageOutline
˜	˜	 
,
˜	˜	 
MessagePlus
¯	¯	 
,
¯	¯	 
MessageProcessing
˘	˘	 
,
˘	˘	 
MessageReply
˙	˙	 
,
˙	˙	 
MessageReplyText
˚	˚	 
,
˚	˚	 
MessageSettings
¸	¸	 
,
¸	¸	 $
MessageSettingsVariant
˝	˝	 
,
˝	˝	 
MessageText
˛	˛	 
,
˛	˛	  
MessageTextOutline
ˇ	ˇ	 
,
ˇ	ˇ	 
MessageVideo
Ä
Ä
 
,
Ä
Ä
 
Meteor
Å
Å
 
,
Å
Å
 
	Metronome
Ç
Ç
 
,
Ç
Ç
 
MetronomeTick
É
É
 
,
É
É
 
MicroSd
Ñ
Ñ
 
,
Ñ
Ñ
 

Microphone
Ö
Ö
 
,
Ö
Ö
 
MicrophoneOff
Ü
Ü
 
,
Ü
Ü
 
MicrophoneOutline
á
á
 
,
á
á
  
MicrophoneSettings
à
à
 
,
à
à
 
MicrophoneVariant
â
â
 
,
â
â
 "
MicrophoneVariantOff
ä
ä
 
,
ä
ä
 

Microscope
ã
ã
 
,
ã
ã
 
	Microsoft
å
å
 
,
å
å
 
	Minecraft
ç
ç
 
,
ç
ç
 
Minus
é
é
 
,
é
é
 
MinusBox
è
è
 
,
è
è
 
MinusBoxOutline
ê
ê
 
,
ê
ê
 
MinusCircle
ë
ë
 
,
ë
ë
  
MinusCircleOutline
í
í
 
,
í
í
 
MinusNetwork
ì
ì
 
,
ì
ì
 
Mixcloud
î
î
 
,
î
î
 
Mixer
ï
ï
 
,
ï
ï
 
Monitor
ñ
ñ
 
,
ñ
ñ
 
MonitorMultiple
ó
ó
 
,
ó
ó
 
More
ò
ò
 
,
ò
ò
 
	Motorbike
ô
ô
 
,
ô
ô
 
Mouse
ö
ö
 
,
ö
ö
 
MouseOff
õ
õ
 
,
õ
õ
 
MouseVariant
ú
ú
 
,
ú
ú
 
MouseVariantOff
ù
ù
 
,
ù
ù
 

MoveResize
û
û
 
,
û
û
 
MoveResizeVariant
ü
ü
 
,
ü
ü
 
Movie
†
†
 
,
†
†
 
	MovieRoll
°
°
 
,
°
°
 
Multiplication
¢
¢
 
,
¢
¢
 
MultiplicationBox
£
£
 
,
£
£
 
Mushroom
§
§
 
,
§
§
 
MushroomOutline
•
•
 
,
•
•
 
Music
¶
¶
 
,
¶
¶
 
MusicBox
ß
ß
 
,
ß
ß
 
MusicBoxOutline
®
®
 
,
®
®
 
MusicCircle
©
©
 
,
©
©
 
	MusicNote
™
™
 
,
™
™
  
MusicNoteBluetooth
´
´
 
,
´
´
 #
MusicNoteBluetoothOff
¨
¨
 
,
¨
¨
 
MusicNoteEighth
≠
≠
 
,
≠
≠
 
MusicNoteHalf
Æ
Æ
 
,
Æ
Æ
 
MusicNoteOff
Ø
Ø
 
,
Ø
Ø
 
MusicNoteQuarter
∞
∞
 
,
∞
∞
  
MusicNoteSixteenth
±
±
 
,
±
±
 
MusicNoteWhole
≤
≤
 
,
≤
≤
 
MusicOff
≥
≥
 
,
≥
≥
 
Nature
¥
¥
 
,
¥
¥
 
NaturePeople
µ
µ
 
,
µ
µ
 

Navigation
∂
∂
 
,
∂
∂
 
NearMe
∑
∑
 
,
∑
∑
 
Needle
∏
∏
 
,
∏
∏
 
NestProtect
π
π
 
,
π
π
 
NestThermostat
∫
∫
 
,
∫
∫
 
Netflix
ª
ª
 
,
ª
ª
 
Network
º
º
 
,
º
º
 
NewBox
Ω
Ω
 
,
Ω
Ω
 
	Newspaper
æ
æ
 
,
æ
æ
 
Nfc
ø
ø
 
,
ø
ø
 
NfcTap
¿
¿
 
,
¿
¿
 

NfcVariant
¡
¡
 
,
¡
¡
 
Ninja
¬
¬
 
,
¬
¬
 
NintendoSwitch
√
√
 
,
√
√
 
Nodejs
ƒ
ƒ
 
,
ƒ
ƒ
 
Note
≈
≈
 
,
≈
≈
 
NoteMultiple
∆
∆
 
,
∆
∆
 !
NoteMultipleOutline
«
«
 
,
«
«
 
NoteOutline
»
»
 
,
»
»
 
NotePlus
…
…
 
,
…
…
 
NotePlusOutline
 
 
 
,
 
 
 
NoteText
À
À
 
,
À
À
 
Notebook
Ã
Ã
 
,
Ã
Ã
 "
NotificationClearAll
Õ
Õ
 
,
Õ
Õ
 
Npm
Œ
Œ
 
,
Œ
Œ
 
Nuke
œ
œ
 
,
œ
œ
 
Null
–
–
 
,
–
–
 
Numeric
—
—
 
,
—
—
 
Numeric0Box
“
“
 
,
“
“
 (
Numeric0BoxMultipleOutline
”
”
 "
,
”
”
" # 
Numeric0BoxOutline
‘
‘
 
,
‘
‘
 
Numeric1Box
’
’
 
,
’
’
 (
Numeric1BoxMultipleOutline
÷
÷
 "
,
÷
÷
" # 
Numeric1BoxOutline
◊
◊
 
,
◊
◊
 
Numeric2Box
ÿ
ÿ
 
,
ÿ
ÿ
 (
Numeric2BoxMultipleOutline
Ÿ
Ÿ
 "
,
Ÿ
Ÿ
" # 
Numeric2BoxOutline
⁄
⁄
 
,
⁄
⁄
 
Numeric3Box
€
€
 
,
€
€
 (
Numeric3BoxMultipleOutline
‹
‹
 "
,
‹
‹
" # 
Numeric3BoxOutline
›
›
 
,
›
›
 
Numeric4Box
ﬁ
ﬁ
 
,
ﬁ
ﬁ
 (
Numeric4BoxMultipleOutline
ﬂ
ﬂ
 "
,
ﬂ
ﬂ
" # 
Numeric4BoxOutline
‡
‡
 
,
‡
‡
 
Numeric5Box
·
·
 
,
·
·
 (
Numeric5BoxMultipleOutline
‚
‚
 "
,
‚
‚
" # 
Numeric5BoxOutline
„
„
 
,
„
„
 
Numeric6Box
‰
‰
 
,
‰
‰
 (
Numeric6BoxMultipleOutline
Â
Â
 "
,
Â
Â
" # 
Numeric6BoxOutline
Ê
Ê
 
,
Ê
Ê
 
Numeric7Box
Á
Á
 
,
Á
Á
 (
Numeric7BoxMultipleOutline
Ë
Ë
 "
,
Ë
Ë
" # 
Numeric7BoxOutline
È
È
 
,
È
È
 
Numeric8Box
Í
Í
 
,
Í
Í
 (
Numeric8BoxMultipleOutline
Î
Î
 "
,
Î
Î
" # 
Numeric8BoxOutline
Ï
Ï
 
,
Ï
Ï
 
Numeric9Box
Ì
Ì
 
,
Ì
Ì
 (
Numeric9BoxMultipleOutline
Ó
Ó
 "
,
Ó
Ó
" # 
Numeric9BoxOutline
Ô
Ô
 
,
Ô
Ô
 
Numeric9PlusBox


 
,


 ,
Numeric9PlusBoxMultipleOutline
Ò
Ò
 &
,
Ò
Ò
& '$
Numeric9PlusBoxOutline
Ú
Ú
 
,
Ú
Ú
 
Nut
Û
Û
 
,
Û
Û
 
	Nutrition
Ù
Ù
 
,
Ù
Ù
 
Oar
ı
ı
 
,
ı
ı
 
Octagon
ˆ
ˆ
 
,
ˆ
ˆ
 
OctagonOutline
˜
˜
 
,
˜
˜
 
Octagram
¯
¯
 
,
¯
¯
 
OctagramOutline
˘
˘
 
,
˘
˘
 
Odnoklassniki
˙
˙
 
,
˙
˙
 
Office
˚
˚
 
,
˚
˚
 
Oil
¸
¸
 
,
¸
¸
 
OilTemperature
˝
˝
 
,
˝
˝
 
Omega
˛
˛
 
,
˛
˛
 
Onedrive
ˇ
ˇ
 
,
ˇ
ˇ
 
Onenote
ÄÄ 
,
ÄÄ 
Opacity
ÅÅ 
,
ÅÅ 
	OpenInApp
ÇÇ 
,
ÇÇ 
	OpenInNew
ÉÉ 
,
ÉÉ 
Openid
ÑÑ 
,
ÑÑ 
Opera
ÖÖ 
,
ÖÖ 
Orbit
ÜÜ 
,
ÜÜ 
Ornament
áá 
,
áá 
OrnamentVariant
àà 
,
àà 
Owl
ââ 
,
ââ 
Package
ää 
,
ää 
PackageDown
ãã 
,
ãã 
	PackageUp
åå 
,
åå 
PackageVariant
çç 
,
çç "
PackageVariantClosed
éé 
,
éé 
	PageFirst
èè 
,
èè 
PageLast
êê 
,
êê 
PageLayoutBody
ëë 
,
ëë 
PageLayoutFooter
íí 
,
íí 
PageLayoutHeader
ìì 
,
ìì #
PageLayoutSidebarLeft
îî 
,
îî $
PageLayoutSidebarRight
ïï 
,
ïï 
Palette
ññ 
,
ññ 
PaletteAdvanced
óó 
,
óó 
Panda
òò 
,
òò 
Pandora
ôô 
,
ôô 
Panorama
öö 
,
öö 
PanoramaFisheye
õõ 
,
õõ  
PanoramaHorizontal
úú 
,
úú 
PanoramaVertical
ùù 
,
ùù 
PanoramaWideAngle
ûû 
,
ûû 
PaperCutVertical
üü 
,
üü 
	Paperclip
†† 
,
†† 
Parking
°° 
,
°° 
Passport
¢¢ 
,
¢¢ 
Pause
££ 
,
££ 
PauseCircle
§§ 
,
§§  
PauseCircleOutline
•• 
,
•• 
PauseOctagon
¶¶ 
,
¶¶ !
PauseOctagonOutline
ßß 
,
ßß 
Paw
®® 
,
®® 
PawOff
©© 
,
©© 
Pen
™™ 
,
™™ 
Pencil
´´ 
,
´´ 
	PencilBox
¨¨ 
,
¨¨ 
PencilBoxOutline
≠≠ 
,
≠≠ 
PencilCircle
ÆÆ 
,
ÆÆ !
PencilCircleOutline
ØØ 
,
ØØ 

PencilLock
∞∞ 
,
∞∞ 
	PencilOff
±± 
,
±± 
Pentagon
≤≤ 
,
≤≤ 
PentagonOutline
≥≥ 
,
≥≥ 
Percent
¥¥ 
,
¥¥ 
PeriodicTableCo2
µµ 
,
µµ 
	Periscope
∂∂ 
,
∂∂ 
Pharmacy
∑∑ 
,
∑∑ 
Phone
∏∏ 
,
∏∏ 
PhoneBluetooth
ππ 
,
ππ 
PhoneClassic
∫∫ 
,
∫∫ 
PhoneForward
ªª 
,
ªª 
PhoneHangup
ºº 
,
ºº 
PhoneInTalk
ΩΩ 
,
ΩΩ 
PhoneIncoming
ææ 
,
ææ 
PhoneLocked
øø 
,
øø 
PhoneLog
¿¿ 
,
¿¿ 

PhoneMinus
¡¡ 
,
¡¡ 
PhoneMissed
¬¬ 
,
¬¬ 
PhoneOutgoing
√√ 
,
√√ 
PhonePaused
ƒƒ 
,
ƒƒ 
	PhonePlus
≈≈ 
,
≈≈ 
PhoneReturn
∆∆ 
,
∆∆ 
PhoneSettings
«« 
,
«« 
	PhoneVoip
»» 
,
»» 
Pi
…… 

,
……
 
PiBox
   
,
   
Piano
ÀÀ 
,
ÀÀ 
Pig
ÃÃ 
,
ÃÃ 
Pill
ÕÕ 
,
ÕÕ 
Pillar
ŒŒ 
,
ŒŒ 
Pin
œœ 
,
œœ 
PinOff
–– 
,
–– 
PineTree
—— 
,
—— 
PineTreeBox
““ 
,
““ 
	Pinterest
”” 
,
”” 
PinterestBox
‘‘ 
,
‘‘ 
Pipe
’’ 
,
’’ 
PipeDisconnected
÷÷ 
,
÷÷ 
Pistol
◊◊ 
,
◊◊ 
Pizza
ÿÿ 
,
ÿÿ 
PlaneShield
ŸŸ 
,
ŸŸ 
Play
⁄⁄ 
,
⁄⁄ 
PlayBoxOutline
€€ 
,
€€ 

PlayCircle
‹‹ 
,
‹‹ 
PlayCircleOutline
›› 
,
›› 
	PlayPause
ﬁﬁ 
,
ﬁﬁ "
PlayProtectedContent
ﬂﬂ 
,
ﬂﬂ 
PlaylistCheck
‡‡ 
,
‡‡ 
PlaylistMinus
·· 
,
·· 
PlaylistPlay
‚‚ 
,
‚‚ 
PlaylistPlus
„„ 
,
„„ 
PlaylistRemove
‰‰ 
,
‰‰ 
Playstation
ÂÂ 
,
ÂÂ 
Plex
ÊÊ 
,
ÊÊ 
Plus
ÁÁ 
,
ÁÁ 
PlusBox
ËË 
,
ËË 
PlusBoxOutline
ÈÈ 
,
ÈÈ 

PlusCircle
ÍÍ 
,
ÍÍ '
PlusCircleMultipleOutline
ÎÎ !
,
ÎÎ! "
PlusCircleOutline
ÏÏ 
,
ÏÏ 
PlusNetwork
ÌÌ 
,
ÌÌ 
PlusOne
ÓÓ 
,
ÓÓ 
PlusOutline
ÔÔ 
,
ÔÔ 
Pocket
 
,
 
Pokeball
ÒÒ 
,
ÒÒ 
	PokerChip
ÚÚ 
,
ÚÚ 
Polaroid
ÛÛ 
,
ÛÛ 
Poll
ÙÙ 
,
ÙÙ 
PollBox
ıı 
,
ıı 
Polymer
ˆˆ 
,
ˆˆ 
Pool
˜˜ 
,
˜˜ 
Popcorn
¯¯ 
,
¯¯ 
Pot
˘˘ 
,
˘˘ 
PotMix
˙˙ 
,
˙˙ 
Pound
˚˚ 
,
˚˚ 
PoundBox
¸¸ 
,
¸¸ 
Power
˝˝ 
,
˝˝ 
	PowerPlug
˛˛ 
,
˛˛ 
PowerPlugOff
ˇˇ 
,
ˇˇ 
PowerSettings
ÄÄ 
,
ÄÄ 
PowerSocket
ÅÅ 
,
ÅÅ 
PowerSocketEu
ÇÇ 
,
ÇÇ 
PowerSocketUk
ÉÉ 
,
ÉÉ 
PowerSocketUs
ÑÑ 
,
ÑÑ 
Prescription
ÖÖ 
,
ÖÖ 
Presentation
ÜÜ 
,
ÜÜ 
PresentationPlay
áá 
,
áá 
Printer
àà 
,
àà 
	Printer3d
ââ 
,
ââ 
PrinterAlert
ää 
,
ää 
PrinterSettings
ãã 
,
ãã 
PriorityHigh
åå 
,
åå 
PriorityLow
çç 
,
çç !
ProfessionalHexagon
éé 
,
éé 
	Projector
èè 
,
èè 
ProjectorScreen
êê 
,
êê 
Publish
ëë 
,
ëë 
Pulse
íí 
,
íí 
Puzzle
ìì 
,
ìì 
Qqchat
îî 
,
îî 
Qrcode
ïï 
,
ïï 

QrcodeScan
ññ 
,
ññ 

Quadcopter
óó 
,
óó 
QualityHigh
òò 
,
òò 
	Quicktime
ôô 
,
ôô 
Radar
öö 
,
öö 
Radiator
õõ 
,
õõ 
Radio
úú 
,
úú 
RadioHandheld
ùù 
,
ùù 

RadioTower
ûû 
,
ûû 
Radioactive
üü 
,
üü 
RadioboxBlank
†† 
,
†† 
RadioboxMarked
°° 
,
°° 
Raspberrypi
¢¢ 
,
¢¢ 
RayEnd
££ 
,
££ 
RayEndArrow
§§ 
,
§§ 
RayStart
•• 
,
•• 
RayStartArrow
¶¶ 
,
¶¶ 
RayStartEnd
ßß 
,
ßß 
	RayVertex
®® 
,
®® 
React
©© 
,
©© 
Read
™™ 
,
™™ 
Receipt
´´ 
,
´´ 
Record
¨¨ 
,
¨¨ 
	RecordRec
≠≠ 
,
≠≠ 
Recycle
ÆÆ 
,
ÆÆ 
Reddit
ØØ 
,
ØØ 
Redo
∞∞ 
,
∞∞ 
RedoVariant
±± 
,
±± 
Refresh
≤≤ 
,
≤≤ 
Regex
≥≥ 
,
≥≥ 
RelativeScale
¥¥ 
,
¥¥ 
Reload
µµ 
,
µµ 
Reminder
∂∂ 
,
∂∂ 
Remote
∑∑ 
,
∑∑ 
	RenameBox
∏∏ 
,
∏∏ 
ReorderHorizontal
ππ 
,
ππ 
ReorderVertical
∫∫ 
,
∫∫ 
Repeat
ªª 
,
ªª 
	RepeatOff
ºº 
,
ºº 

RepeatOnce
ΩΩ 
,
ΩΩ 
Replay
ææ 
,
ææ 
Reply
øø 
,
øø 
ReplyAll
¿¿ 
,
¿¿ 
Reproduction
¡¡ 
,
¡¡ 
ResizeBottomRight
¬¬ 
,
¬¬ 

Responsive
√√ 
,
√√ 
Restart
ƒƒ 
,
ƒƒ 
Restore
≈≈ 
,
≈≈ 
Rewind
∆∆ 
,
∆∆ 
RewindOutline
«« 
,
«« 
Rhombus
»» 
,
»» 
RhombusOutline
…… 
,
…… 
Ribbon
   
,
   
Rice
ÀÀ 
,
ÀÀ 
Ring
ÃÃ 
,
ÃÃ 
Road
ÕÕ 
,
ÕÕ 
RoadVariant
ŒŒ 
,
ŒŒ 
Robot
œœ 
,
œœ 
Rocket
–– 
,
–– 
Roomba
—— 
,
—— 
Rotate3d
““ 
,
““ 

RotateLeft
”” 
,
”” 
RotateLeftVariant
‘‘ 
,
‘‘ 
RotateRight
’’ 
,
’’  
RotateRightVariant
÷÷ 
,
÷÷ 
RoundedCorner
◊◊ 
,
◊◊ 
RouterWireless
ÿÿ 
,
ÿÿ 
Routes
ŸŸ 
,
ŸŸ 
Rowing
⁄⁄ 
,
⁄⁄ 
Rss
€€ 
,
€€ 
RssBox
‹‹ 
,
‹‹ 
Ruler
›› 
,
›› 
Run
ﬁﬁ 
,
ﬁﬁ 
RunFast
ﬂﬂ 
,
ﬂﬂ 
Sale
‡‡ 
,
‡‡ 
Sass
·· 
,
·· 
	Satellite
‚‚ 
,
‚‚ 
SatelliteVariant
„„ 
,
„„ 
	Saxophone
‰‰ 
,
‰‰ 
Scale
ÂÂ 
,
ÂÂ 
ScaleBalance
ÊÊ 
,
ÊÊ 
ScaleBathroom
ÁÁ 
,
ÁÁ 
Scanner
ËË 
,
ËË 
School
ÈÈ 
,
ÈÈ 
ScreenRotation
ÍÍ 
,
ÍÍ  
ScreenRotationLock
ÎÎ 
,
ÎÎ 
Screwdriver
ÏÏ 
,
ÏÏ 
Script
ÌÌ 
,
ÌÌ 
Sd
ÓÓ 

,
ÓÓ
 
Seal
ÔÔ 
,
ÔÔ 
	SearchWeb
 
,
 
SeatFlat
ÒÒ 
,
ÒÒ 
SeatFlatAngled
ÚÚ 
,
ÚÚ !
SeatIndividualSuite
ÛÛ 
,
ÛÛ 
SeatLegroomExtra
ÙÙ 
,
ÙÙ 
SeatLegroomNormal
ıı 
,
ıı  
SeatLegroomReduced
ˆˆ 
,
ˆˆ 
SeatReclineExtra
˜˜ 
,
˜˜ 
SeatReclineNormal
¯¯ 
,
¯¯ 
Security
˘˘ 
,
˘˘ 
SecurityAccount
˙˙ 
,
˙˙ 
SecurityHome
˚˚ 
,
˚˚ 
SecurityNetwork
¸¸ 
,
¸¸ 
Select
˝˝ 
,
˝˝ 
	SelectAll
˛˛ 
,
˛˛ 
SelectInverse
ˇˇ 
,
ˇˇ 
	SelectOff
ÄÄ 
,
ÄÄ 
	Selection
ÅÅ 
,
ÅÅ 
SelectionOff
ÇÇ 
,
ÇÇ 
Send
ÉÉ 
,
ÉÉ 

SendSecure
ÑÑ 
,
ÑÑ 

SerialPort
ÖÖ 
,
ÖÖ 
Server
ÜÜ 
,
ÜÜ 
ServerMinus
áá 
,
áá 
ServerNetwork
àà 
,
àà 
ServerNetworkOff
ââ 
,
ââ 
	ServerOff
ää 
,
ää 

ServerPlus
ãã 
,
ãã 
ServerRemove
åå 
,
åå 
ServerSecurity
çç 
,
çç 
SetAll
éé 
,
éé 
	SetCenter
èè 
,
èè 
SetCenterRight
êê 
,
êê 
SetLeft
ëë 
,
ëë 
SetLeftCenter
íí 
,
íí 
SetLeftRight
ìì 
,
ìì 
SetNone
îî 
,
îî 
SetRight
ïï 
,
ïï 
Settings
ññ 
,
ññ 
SettingsBox
óó 
,
óó 
Shape
òò 
,
òò 
ShapeCirclePlus
ôô 
,
ôô 
ShapeOutline
öö 
,
öö 
	ShapePlus
õõ 
,
õõ 
ShapePolygonPlus
úú 
,
úú  
ShapeRectanglePlus
ùù 
,
ùù 
ShapeSquarePlus
ûû 
,
ûû 
Share
üü 
,
üü 
ShareVariant
†† 
,
†† 
Shield
°° 
,
°° 
ShieldHalfFull
¢¢ 
,
¢¢ 
ShieldOutline
££ 
,
££ 
	ShipWheel
§§ 
,
§§ 
Shopping
•• 
,
•• 
ShoppingMusic
¶¶ 
,
¶¶ 
Shovel
ßß 
,
ßß 
	ShovelOff
®® 
,
®® 
Shredder
©© 
,
©© 
Shuffle
™™ 
,
™™ 
ShuffleDisabled
´´ 
,
´´ 
ShuffleVariant
¨¨ 
,
¨¨ 
Sigma
≠≠ 
,
≠≠ 

SigmaLower
ÆÆ 
,
ÆÆ 
SignCaution
ØØ 
,
ØØ 
SignDirection
∞∞ 
,
∞∞ 
SignText
±± 
,
±± 
Signal
≤≤ 
,
≤≤ 
Signal2g
≥≥ 
,
≥≥ 
Signal3g
¥¥ 
,
¥¥ 
Signal4g
µµ 
,
µµ 

SignalHspa
∂∂ 
,
∂∂ 
SignalHspaPlus
∑∑ 
,
∑∑ 
	SignalOff
∏∏ 
,
∏∏ 
SignalVariant
ππ 
,
ππ 

Silverware
∫∫ 
,
∫∫ 
SilverwareFork
ªª 
,
ªª 
SilverwareSpoon
ºº 
,
ºº 
SilverwareVariant
ΩΩ 
,
ΩΩ 
Sim
ææ 
,
ææ 
SimAlert
øø 
,
øø 
SimOff
¿¿ 
,
¿¿ 
Sitemap
¡¡ 
,
¡¡ 
SkipBackward
¬¬ 
,
¬¬ 
SkipForward
√√ 
,
√√ 
SkipNext
ƒƒ 
,
ƒƒ 
SkipNextCircle
≈≈ 
,
≈≈ #
SkipNextCircleOutline
∆∆ 
,
∆∆ 
SkipPrevious
«« 
,
««  
SkipPreviousCircle
»» 
,
»» '
SkipPreviousCircleOutline
…… !
,
……! "
Skull
   
,
   
Skype
ÀÀ 
,
ÀÀ 
SkypeBusiness
ÃÃ 
,
ÃÃ 
Slack
ÕÕ 
,
ÕÕ 
Sleep
ŒŒ 
,
ŒŒ 
SleepOff
œœ 
,
œœ 
Smoking
–– 
,
–– 

SmokingOff
—— 
,
—— 
Snapchat
““ 
,
““ 
	Snowflake
”” 
,
”” 
Snowman
‘‘ 
,
‘‘ 
Soccer
’’ 
,
’’ 
SoccerField
÷÷ 
,
÷÷ 
Sofa
◊◊ 
,
◊◊ 
Solid
ÿÿ 
,
ÿÿ 
Sort
ŸŸ 
,
ŸŸ 
SortAlphabetical
⁄⁄ 
,
⁄⁄ 
SortAscending
€€ 
,
€€ 
SortDescending
‹‹ 
,
‹‹ 
SortNumeric
›› 
,
›› 
SortVariant
ﬁﬁ 
,
ﬁﬁ 

Soundcloud
ﬂﬂ 
,
ﬂﬂ 
SourceBranch
‡‡ 
,
‡‡ 
SourceCommit
·· 
,
·· 
SourceCommitEnd
‚‚ 
,
‚‚ "
SourceCommitEndLocal
„„ 
,
„„ 
SourceCommitLocal
‰‰ 
,
‰‰ #
SourceCommitNextLocal
ÂÂ 
,
ÂÂ 
SourceCommitStart
ÊÊ 
,
ÊÊ (
SourceCommitStartNextLocal
ÁÁ "
,
ÁÁ" #

SourceFork
ËË 
,
ËË 
SourceMerge
ÈÈ 
,
ÈÈ 

SourcePull
ÍÍ 
,
ÍÍ 
SoySauce
ÎÎ 
,
ÎÎ 
Speaker
ÏÏ 
,
ÏÏ 

SpeakerOff
ÌÌ 
,
ÌÌ 
SpeakerWireless
ÓÓ 
,
ÓÓ 
Speedometer
ÔÔ 
,
ÔÔ 

Spellcheck
 
,
 
Spotify
ÒÒ 
,
ÒÒ 
	Spotlight
ÚÚ 
,
ÚÚ 
SpotlightBeam
ÛÛ 
,
ÛÛ 
Spray
ÙÙ 
,
ÙÙ 
Square
ıı 
,
ıı 
	SquareInc
ˆˆ 
,
ˆˆ 
SquareIncCash
˜˜ 
,
˜˜ 
SquareOutline
¯¯ 
,
¯¯ 

SquareRoot
˘˘ 
,
˘˘ 
StackOverflow
˙˙ 
,
˙˙ 
Stackexchange
˚˚ 
,
˚˚ 
Stadium
¸¸ 
,
¸¸ 
Stairs
˝˝ 
,
˝˝  
StandardDefinition
˛˛ 
,
˛˛ 
Star
ˇˇ 
,
ˇˇ 

StarCircle
ÄÄ 
,
ÄÄ 
StarHalf
ÅÅ 
,
ÅÅ 
StarOff
ÇÇ 
,
ÇÇ 
StarOutline
ÉÉ 
,
ÉÉ 
Steam
ÑÑ 
,
ÑÑ 
Steering
ÖÖ 
,
ÖÖ 
StepBackward
ÜÜ 
,
ÜÜ 
StepBackward2
áá 
,
áá 
StepForward
àà 
,
àà 
StepForward2
ââ 
,
ââ 
Stethoscope
ää 
,
ää 
Sticker
ãã 
,
ãã 
StickerEmoji
åå 
,
åå 
Stocking
çç 
,
çç 
Stop
éé 
,
éé 

StopCircle
èè 
,
èè 
StopCircleOutline
êê 
,
êê 
Store
ëë 
,
ëë 
Store24Hour
íí 
,
íí 
Stove
ìì 
,
ìì #
SubdirectoryArrowLeft
îî 
,
îî $
SubdirectoryArrowRight
ïï 
,
ïï 
Subway
ññ 
,
ññ 
SubwayVariant
óó 
,
óó 
Summit
òò 
,
òò 

Sunglasses
ôô 
,
ôô 
SurroundSound
öö 
,
öö 
SurroundSound20
õõ 
,
õõ 
SurroundSound31
úú 
,
úú 
SurroundSound51
ùù 
,
ùù 
SurroundSound71
ûû 
,
ûû 
Svg
üü 
,
üü 
SwapHorizontal
†† 
,
†† 
SwapVertical
°° 
,
°° 
Swim
¢¢ 
,
¢¢ 
Switch
££ 
,
££ 
Sword
§§ 
,
§§ 

SwordCross
•• 
,
•• 
Sync
¶¶ 
,
¶¶ 
	SyncAlert
ßß 
,
ßß 
SyncOff
®® 
,
®® 
Tab
©© 
,
©© 
TabPlus
™™ 
,
™™ 
TabUnselected
´´ 
,
´´ 
Table
¨¨ 
,
¨¨ 
TableColumn
≠≠ 
,
≠≠ "
TableColumnPlusAfter
ÆÆ 
,
ÆÆ #
TableColumnPlusBefore
ØØ 
,
ØØ 
TableColumnRemove
∞∞ 
,
∞∞ 
TableColumnWidth
±± 
,
±± 
	TableEdit
≤≤ 
,
≤≤ 

TableLarge
≥≥ 
,
≥≥ 
TableOfContents
¥¥ 
,
¥¥ 
TableRow
µµ 
,
µµ 
TableRowHeight
∂∂ 
,
∂∂ 
TableRowPlusAfter
∑∑ 
,
∑∑  
TableRowPlusBefore
∏∏ 
,
∏∏ 
TableRowRemove
ππ 
,
ππ 
TableSettings
∫∫ 
,
∫∫ 
Tablet
ªª 
,
ªª 
TabletAndroid
ºº 
,
ºº 

TabletIpad
ΩΩ 
,
ΩΩ 
Taco
ææ 
,
ææ 
Tag
øø 
,
øø 
TagFaces
¿¿ 
,
¿¿ 
TagHeart
¡¡ 
,
¡¡ 
TagMultiple
¬¬ 
,
¬¬ 

TagOutline
√√ 
,
√√ 
TagPlus
ƒƒ 
,
ƒƒ 
	TagRemove
≈≈ 
,
≈≈ 
TagTextOutline
∆∆ 
,
∆∆ 
Target
«« 
,
«« 
Taxi
»» 
,
»» 

Teamviewer
…… 
,
…… 
Telegram
   
,
   

Television
ÀÀ 
,
ÀÀ 
TelevisionBox
ÃÃ 
,
ÃÃ 
TelevisionClassic
ÕÕ 
,
ÕÕ "
TelevisionClassicOff
ŒŒ 
,
ŒŒ 
TelevisionGuide
œœ 
,
œœ 
TelevisionOff
–– 
,
––  
TemperatureCelsius
—— 
,
—— #
TemperatureFahrenheit
““ 
,
““ 
TemperatureKelvin
”” 
,
”” 
Tennis
‘‘ 
,
‘‘ 
Tent
’’ 
,
’’ 
Terrain
÷÷ 
,
÷÷ 
TestTube
◊◊ 
,
◊◊ 

TextShadow
ÿÿ 
,
ÿÿ 
TextToSpeech
ŸŸ 
,
ŸŸ 
TextToSpeechOff
⁄⁄ 
,
⁄⁄ 
Textbox
€€ 
,
€€ 
TextboxPassword
‹‹ 
,
‹‹ 
Texture
›› 
,
›› 
Theater
ﬁﬁ 
,
ﬁﬁ 
ThemeLightDark
ﬂﬂ 
,
ﬂﬂ 
Thermometer
‡‡ 
,
‡‡ 
ThermometerLines
·· 
,
·· 
ThermostatBox
‚‚ 
,
‚‚ 
ThoughtBubble
„„ 
,
„„ "
ThoughtBubbleOutline
‰‰ 
,
‰‰ 
	ThumbDown
ÂÂ 
,
ÂÂ 
ThumbDownOutline
ÊÊ 
,
ÊÊ 
ThumbUp
ÁÁ 
,
ÁÁ 
ThumbUpOutline
ËË 
,
ËË 
ThumbsUpDown
ÈÈ 
,
ÈÈ 
Ticket
ÍÍ 
,
ÍÍ 
TicketAccount
ÎÎ 
,
ÎÎ  
TicketConfirmation
ÏÏ 
,
ÏÏ 
TicketPercent
ÌÌ 
,
ÌÌ 
Tie
ÓÓ 
,
ÓÓ 
Tilde
ÔÔ 
,
ÔÔ 
	Timelapse
 
,
 
Timer
ÒÒ 
,
ÒÒ 
Timer10
ÚÚ 
,
ÚÚ 
Timer3
ÛÛ 
,
ÛÛ 
TimerOff
ÙÙ 
,
ÙÙ 
	TimerSand
ıı 
,
ıı 
TimerSandEmpty
ˆˆ 
,
ˆˆ 
TimerSandFull
˜˜ 
,
˜˜ 
	Timetable
¯¯ 
,
¯¯ 
ToggleSwitch
˘˘ 
,
˘˘ 
ToggleSwitchOff
˙˙ 
,
˙˙ 
Tooltip
˚˚ 
,
˚˚ 
TooltipEdit
¸¸ 
,
¸¸ 
TooltipImage
˝˝ 
,
˝˝ 
TooltipOutline
˛˛ 
,
˛˛  
TooltipOutlinePlus
ˇˇ 
,
ˇˇ 
TooltipText
ÄÄ 
,
ÄÄ 
Tooth
ÅÅ 
,
ÅÅ 
Tor
ÇÇ 
,
ÇÇ 

TowerBeach
ÉÉ 
,
ÉÉ 
	TowerFire
ÑÑ 
,
ÑÑ 
Towing
ÖÖ 
,
ÖÖ 
Trackpad
ÜÜ 
,
ÜÜ 
Tractor
áá 
,
áá 
TrafficLight
àà 
,
àà 
Train
ââ 
,
ââ 
Tram
ää 
,
ää 

Transcribe
ãã 
,
ãã 
TranscribeClose
åå 
,
åå 
Transfer
çç 
,
çç 
TransitTransfer
éé 
,
éé 
	Translate
èè 
,
èè 
TreasureChest
êê 
,
êê 
Tree
ëë 
,
ëë 
Trello
íí 
,
íí 
TrendingDown
ìì 
,
ìì 
TrendingNeutral
îî 
,
îî 

TrendingUp
ïï 
,
ïï 
Triangle
ññ 
,
ññ 
TriangleOutline
óó 
,
óó 
Trophy
òò 
,
òò 
TrophyAward
ôô 
,
ôô 
TrophyOutline
öö 
,
öö 
TrophyVariant
õõ 
,
õõ "
TrophyVariantOutline
úú 
,
úú 
Truck
ùù 
,
ùù 
TruckDelivery
ûû 
,
ûû 
	TruckFast
üü 
,
üü 
TruckTrailer
†† 
,
†† 

TshirtCrew
°° 
,
°° 
TshirtV
¢¢ 
,
¢¢ 
Tumblr
££ 
,
££ 
TumblrReblog
§§ 
,
§§ 
Tune
•• 
,
•• 
TuneVertical
¶¶ 
,
¶¶ 
Twitch
ßß 
,
ßß 
Twitter
®® 
,
®® 

TwitterBox
©© 
,
©© 
TwitterCircle
™™ 
,
™™ 
TwitterRetweet
´´ 
,
´´ 
Uber
¨¨ 
,
¨¨ 
Ubuntu
≠≠ 
,
≠≠ !
UltraHighDefinition
ÆÆ 
,
ÆÆ 
Umbraco
ØØ 
,
ØØ 
Umbrella
∞∞ 
,
∞∞ 
UmbrellaOutline
±± 
,
±± 
Undo
≤≤ 
,
≤≤ 
UndoVariant
≥≥ 
,
≥≥ "
UnfoldLessHorizontal
¥¥ 
,
¥¥  
UnfoldLessVertical
µµ 
,
µµ "
UnfoldMoreHorizontal
∂∂ 
,
∂∂  
UnfoldMoreVertical
∑∑ 
,
∑∑ 
Ungroup
∏∏ 
,
∏∏ 
Unity
ππ 
,
ππ 
Untappd
∫∫ 
,
∫∫ 
Update
ªª 
,
ªª 
Upload
ºº 
,
ºº 
UploadMultiple
ΩΩ 
,
ΩΩ 
UploadNetwork
ææ 
,
ææ 
Usb
øø 
,
øø 
VanPassenger
¿¿ 
,
¿¿ 

VanUtility
¡¡ 
,
¡¡ 
Vanish
¬¬ 
,
¬¬  
VectorArrangeAbove
√√ 
,
√√  
VectorArrangeBelow
ƒƒ 
,
ƒƒ 
VectorCircle
≈≈ 
,
≈≈ !
VectorCircleVariant
∆∆ 
,
∆∆ 
VectorCombine
«« 
,
«« 
VectorCurve
»» 
,
»» 
VectorDifference
…… 
,
……  
VectorDifferenceAb
   
,
    
VectorDifferenceBa
ÀÀ 
,
ÀÀ 
VectorEllipse
ÃÃ 
,
ÃÃ  
VectorIntersection
ÕÕ 
,
ÕÕ 

VectorLine
ŒŒ 
,
ŒŒ 
VectorPoint
œœ 
,
œœ 
VectorPolygon
–– 
,
–– 
VectorPolyline
—— 
,
—— 
VectorRadius
““ 
,
““ 
VectorRectangle
”” 
,
”” 
VectorSelection
‘‘ 
,
‘‘ 
VectorSquare
’’ 
,
’’ 
VectorTriangle
÷÷ 
,
÷÷ 
VectorUnion
◊◊ 
,
◊◊ 
Venmo
ÿÿ 
,
ÿÿ 
Verified
ŸŸ 
,
ŸŸ 
Vibrate
⁄⁄ 
,
⁄⁄ 
Video
€€ 
,
€€ 
Video3d
‹‹ 
,
‹‹ 

Video4kBox
›› 
,
›› 
VideoInputAntenna
ﬁﬁ 
,
ﬁﬁ !
VideoInputComponent
ﬂﬂ 
,
ﬂﬂ 
VideoInputHdmi
‡‡ 
,
‡‡ 
VideoInputSvideo
·· 
,
·· 
VideoOff
‚‚ 
,
‚‚ 
VideoSwitch
„„ 
,
„„ 

ViewAgenda
‰‰ 
,
‰‰ 
	ViewArray
ÂÂ 
,
ÂÂ 
ViewCarousel
ÊÊ 
,
ÊÊ 

ViewColumn
ÁÁ 
,
ÁÁ 
ViewDashboard
ËË 
,
ËË "
ViewDashboardVariant
ÈÈ 
,
ÈÈ 
ViewDay
ÍÍ 
,
ÍÍ 
ViewGrid
ÎÎ 
,
ÎÎ 
ViewHeadline
ÏÏ 
,
ÏÏ 
ViewList
ÌÌ 
,
ÌÌ 

ViewModule
ÓÓ 
,
ÓÓ 
ViewParallel
ÔÔ 
,
ÔÔ 
	ViewQuilt
 
,
 
ViewSequential
ÒÒ 
,
ÒÒ 

ViewStream
ÚÚ 
,
ÚÚ 
ViewWeek
ÛÛ 
,
ÛÛ 
Vimeo
ÙÙ 
,
ÙÙ 
Violin
ıı 
,
ıı 
Visualstudio
ˆˆ 
,
ˆˆ 
Vk
˜˜ 

,
˜˜
 
VkBox
¯¯ 
,
¯¯ 
VkCircle
˘˘ 
,
˘˘ 
Vlc
˙˙ 
,
˙˙ 
Voice
˚˚ 
,
˚˚ 
	Voicemail
¸¸ 
,
¸¸ 

VolumeHigh
˝˝ 
,
˝˝ 
	VolumeLow
˛˛ 
,
˛˛ 
VolumeMedium
ˇˇ 
,
ˇˇ 
VolumeMinus
ÄÄ 
,
ÄÄ 

VolumeMute
ÅÅ 
,
ÅÅ 
	VolumeOff
ÇÇ 
,
ÇÇ 

VolumePlus
ÉÉ 
,
ÉÉ 
Vpn
ÑÑ 
,
ÑÑ 
Vuejs
ÖÖ 
,
ÖÖ 
Walk
ÜÜ 
,
ÜÜ 
Wall
áá 
,
áá 
Wallet
àà 
,
àà 
WalletGiftcard
ââ 
,
ââ 
WalletMembership
ää 
,
ää 
WalletTravel
ãã 
,
ãã 
Wan
åå 
,
åå 
WashingMachine
çç 
,
çç 
Watch
éé 
,
éé 
WatchExport
èè 
,
èè 
WatchImport
êê 
,
êê 
WatchVibrate
ëë 
,
ëë 
Water
íí 
,
íí 
WaterOff
ìì 
,
ìì 
WaterPercent
îî 
,
îî 
	WaterPump
ïï 
,
ïï 
	Watermark
ññ 
,
ññ 
Waves
óó 
,
óó 
WeatherCloudy
òò 
,
òò 

WeatherFog
ôô 
,
ôô 
WeatherHail
öö 
,
öö 
WeatherLightning
õõ 
,
õõ #
WeatherLightningRainy
úú 
,
úú 
WeatherNight
ùù 
,
ùù !
WeatherPartlycloudy
ûû 
,
ûû 
WeatherPouring
üü 
,
üü 
WeatherRainy
†† 
,
†† 
WeatherSnowy
°° 
,
°° 
WeatherSnowyRainy
¢¢ 
,
¢¢ 
WeatherSunny
££ 
,
££ 
WeatherSunset
§§ 
,
§§ 
WeatherSunsetDown
•• 
,
•• 
WeatherSunsetUp
¶¶ 
,
¶¶ 
WeatherWindy
ßß 
,
ßß !
WeatherWindyVariant
®® 
,
®® 
Web
©© 
,
©© 
Webcam
™™ 
,
™™ 
Webhook
´´ 
,
´´ 
Webpack
¨¨ 
,
¨¨ 
Wechat
≠≠ 
,
≠≠ 
Weight
ÆÆ 
,
ÆÆ 
WeightKilogram
ØØ 
,
ØØ 
Whatsapp
∞∞ 
,
∞∞ %
WheelchairAccessibility
±± 
,
±±  
WhiteBalanceAuto
≤≤ 
,
≤≤ &
WhiteBalanceIncandescent
≥≥  
,
≥≥  !$
WhiteBalanceIridescent
¥¥ 
,
¥¥ 
WhiteBalanceSunny
µµ 
,
µµ 
Widgets
∂∂ 
,
∂∂ 
Wifi
∑∑ 
,
∑∑ 
WifiOff
∏∏ 
,
∏∏ 
Wii
ππ 
,
ππ 
Wiiu
∫∫ 
,
∫∫ 
	Wikipedia
ªª 
,
ªª 
WindowClose
ºº 
,
ºº 
WindowClosed
ΩΩ 
,
ΩΩ 
WindowMaximize
ææ 
,
ææ 
WindowMinimize
øø 
,
øø 

WindowOpen
¿¿ 
,
¿¿ 
WindowRestore
¡¡ 
,
¡¡ 
Windows
¬¬ 
,
¬¬ 
	Wordpress
√√ 
,
√√ 
Worker
ƒƒ 
,
ƒƒ 
Wrap
≈≈ 
,
≈≈ 
Wrench
∆∆ 
,
∆∆ 

Wunderlist
«« 
,
«« 
Xamarin
»» 
,
»» 
XamarinOutline
…… 
,
…… 
Xaml
   
,
   
Xbox
ÀÀ 
,
ÀÀ 
XboxController
ÃÃ 
,
ÃÃ (
XboxControllerBatteryAlert
ÕÕ "
,
ÕÕ" #(
XboxControllerBatteryEmpty
ŒŒ "
,
ŒŒ" #'
XboxControllerBatteryFull
œœ !
,
œœ! "&
XboxControllerBatteryLow
––  
,
––  !)
XboxControllerBatteryMedium
—— #
,
——# $*
XboxControllerBatteryUnknown
““ $
,
““$ %
XboxControllerOff
”” 
,
”” 
Xda
‘‘ 
,
‘‘ 
Xing
’’ 
,
’’ 
XingBox
÷÷ 
,
÷÷ 

XingCircle
◊◊ 
,
◊◊ 
Xml
ÿÿ 
,
ÿÿ 
Xmpp
ŸŸ 
,
ŸŸ 
Yammer
⁄⁄ 
,
⁄⁄ 
Yeast
€€ 
,
€€ 
Yelp
‹‹ 
,
‹‹ 
YinYang
›› 
,
›› "
YoutubeCreatorStudio
ﬁﬁ 
,
ﬁﬁ 
YoutubeGaming
ﬂﬂ 
,
ﬂﬂ 
YoutubePlay
‡‡ 
,
‡‡ 
	YoutubeTv
·· 
,
·· 
ZipBox
‚‚ 
}
‚‚ 
}„„ √Ÿ
OD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\PopupBox.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

enum !
PopupBoxPlacementMode %
{ #
BottomAndAlignLeftEdges 
,  $
BottomAndAlignRightEdges  
,  !!
BottomAndAlignCentres   
,    
TopAndAlignLeftEdges$$ 
,$$ !
TopAndAlignRightEdges(( 
,(( 
TopAndAlignCentres,, 
,,,  
LeftAndAlignTopEdges00 
,00 #
LeftAndAlignBottomEdges44 
,44  
LeftAndAlignMiddles88 
,88 !
RightAndAlignTopEdges<< 
,<< $
RightAndAlignBottomEdges@@  
,@@  ! 
RightAndAlignMiddlesDD 
,DD 
}EE 
publicJJ 

enumJJ 
PopupBoxPopupModeJJ !
{KK 
ClickOO 
,OO 
	MouseOverSS 
,SS 
MouseOverEagerWW 
}XX 
[]] 
TemplatePart]] 
(]] 
Name]] 
=]] 
PopupPartName]] &
,]]& '
Type]]( ,
=]]- .
typeof]]/ 5
(]]5 6
Popup]]6 ;
)]]; <
)]]< =
]]]= >
[^^ 
TemplatePart^^ 
(^^ 
Name^^ 
=^^ '
PopupContentControlPartName^^ 4
,^^4 5
Type^^6 :
=^^; <
typeof^^= C
(^^C D
ContentControl^^D R
)^^R S
)^^S T
]^^T U
[__ 
TemplatePart__ 
(__ 
Name__ 
=__ 
TogglePartName__ '
,__' (
Type__) -
=__. /
typeof__0 6
(__6 7
ToggleButton__7 C
)__C D
)__D E
]__E F
[`` 
TemplateVisualState`` 
(`` 
	GroupName`` "
=``# $
$str``% 2
,``2 3
Name``4 8
=``9 : 
PopupIsOpenStateName``; O
)``O P
]``P Q
[aa 
TemplateVisualStateaa 
(aa 
	GroupNameaa "
=aa# $
$straa% 2
,aa2 3
Nameaa4 8
=aa9 :"
PopupIsClosedStateNameaa; Q
)aaQ R
]aaR S
[bb 
ContentPropertybb 
(bb 
$strbb #
)bb# $
]bb$ %
publiccc 

classcc 
PopupBoxcc 
:cc 
ContentControlcc *
{dd 
publicee 
constee 
stringee 
PopupPartNameee )
=ee* +
$stree, 8
;ee8 9
publicff 
constff 
stringff 
TogglePartNameff *
=ff+ ,
$strff- :
;ff: ;
publicgg 
constgg 
stringgg '
PopupContentControlPartNamegg 7
=gg8 9
$strgg: T
;ggT U
publichh 
consthh 
stringhh  
PopupIsOpenStateNamehh 0
=hh1 2
$strhh3 ;
;hh; <
publicii 
constii 
stringii "
PopupIsClosedStateNameii 2
=ii3 4
$strii5 ?
;ii? @
privatejj 
PopupExjj 
_popupjj 
;jj 
privatekk 
ContentControlkk  
_popupContentControlkk 3
;kk3 4
privatell 
ToggleButtonll 
_toggleButtonll *
;ll* +
privatemm 
Pointmm &
_popupPointFromLastRequestmm 0
;mm0 1
privatenn 
Pointnn  
_lastRelativePositonnn *
;nn* +
staticpp 
PopupBoxpp 
(pp 
)pp 
{qq 	#
DefaultStyleKeyPropertyrr #
.rr# $
OverrideMetadatarr$ 4
(rr4 5
typeofrr5 ;
(rr; <
PopupBoxrr< D
)rrD E
,rrE F
newrrG J%
FrameworkPropertyMetadatarrK d
(rrd e
typeofrre k
(rrk l
PopupBoxrrl t
)rrt u
)rru v
)rrv w
;rrw x
ToolTipServicess 
.ss 
IsEnabledPropertyss ,
.ss, -
OverrideMetadatass- =
(ss= >
typeofss> D
(ssD E
PopupBoxssE M
)ssM N
,ssN O
newssP S%
FrameworkPropertyMetadatassT m
(ssm n
nullssn r
,ssr s#
CoerceToolTipIsEnabled	sst ä
)
ssä ã
)
ssã å
;
sså ç
EventManagertt 
.tt  
RegisterClassHandlertt -
(tt- .
typeoftt. 4
(tt4 5
PopupBoxtt5 =
)tt= >
,tt> ?
Mousett@ E
.ttE F!
LostMouseCaptureEventttF [
,tt[ \
newtt] `
MouseEventHandlertta r
(ttr s
OnLostMouseCapture	tts Ö
)
ttÖ Ü
)
ttÜ á
;
ttá à
EventManageruu 
.uu  
RegisterClassHandleruu -
(uu- .
typeofuu. 4
(uu4 5
PopupBoxuu5 =
)uu= >
,uu> ?
Mouseuu@ E
.uuE F
MouseDownEventuuF T
,uuT U
newuuV Y#
MouseButtonEventHandleruuZ q
(uuq r
OnMouseButtonDown	uur É
)
uuÉ Ñ
,
uuÑ Ö
true
uuÜ ä
)
uuä ã
;
uuã å
}vv 	
publicxx 
PopupBoxxx 
(xx 
)xx 
{yy 	
LayoutUpdatedzz 
+=zz 
OnLayoutUpdatedzz ,
;zz, -
}{{ 	
public}} 
static}} 
readonly}} 
DependencyProperty}} 1!
ToggleContentProperty}}2 G
=}}H I
DependencyProperty}}J \
.}}\ ]
Register}}] e
(}}e f
nameof~~ 
(~~ 
ToggleContent~~  
)~~  !
,~~! "
typeof~~# )
(~~* +
object~~+ 1
)~~1 2
,~~2 3
typeof~~4 :
(~~; <
PopupBox~~< D
)~~D E
,~~E F
new~~G J
PropertyMetadata~~K [
(~~[ \
default~~\ c
(~~c d
object~~d j
)~~j k
)~~k l
)~~l m
;~~m n
public
ÉÉ 
object
ÉÉ 
ToggleContent
ÉÉ #
{
ÑÑ 	
get
ÖÖ 
{
ÖÖ 
return
ÖÖ 
(
ÖÖ 
object
ÖÖ  
)
ÖÖ  !
GetValue
ÖÖ" *
(
ÖÖ* +#
ToggleContentProperty
ÖÖ+ @
)
ÖÖ@ A
;
ÖÖA B
}
ÖÖC D
set
ÜÜ 
{
ÜÜ 
SetValue
ÜÜ 
(
ÜÜ #
ToggleContentProperty
ÜÜ 0
,
ÜÜ0 1
value
ÜÜ2 7
)
ÜÜ7 8
;
ÜÜ8 9
}
ÜÜ: ;
}
áá 	
public
ââ 
static
ââ 
readonly
ââ  
DependencyProperty
ââ 1+
ToggleContentTemplateProperty
ââ2 O
=
ââP Q 
DependencyProperty
ââR d
.
ââd e
Register
ââe m
(
ââm n
nameof
ää 
(
ää #
ToggleContentTemplate
ää (
)
ää( )
,
ää) *
typeof
ää+ 1
(
ää2 3
DataTemplate
ää3 ?
)
ää? @
,
ää@ A
typeof
ääB H
(
ääI J
PopupBox
ääJ R
)
ääR S
,
ääS T
new
ääU X
PropertyMetadata
ääY i
(
ääi j
default
ääj q
(
ääq r
DataTemplate
äär ~
)
ää~ 
)ää Ä
)ääÄ Å
;ääÅ Ç
public
èè 
DataTemplate
èè #
ToggleContentTemplate
èè 1
{
êê 	
get
ëë 
{
ëë 
return
ëë 
(
ëë 
DataTemplate
ëë &
)
ëë& '
GetValue
ëë( 0
(
ëë0 1+
ToggleContentTemplateProperty
ëë1 N
)
ëëN O
;
ëëO P
}
ëëQ R
set
íí 
{
íí 
SetValue
íí 
(
íí +
ToggleContentTemplateProperty
íí 8
,
íí8 9
value
íí: ?
)
íí? @
;
íí@ A
}
ííB C
}
ìì 	
public
ïï 
static
ïï 
readonly
ïï  
DependencyProperty
ïï 1*
ToggleCheckedContentProperty
ïï2 N
=
ïïO P 
DependencyProperty
ïïQ c
.
ïïc d
Register
ïïd l
(
ïïl m
nameof
ññ 
(
ññ "
ToggleCheckedContent
ññ '
)
ññ' (
,
ññ( )
typeof
ññ* 0
(
ññ1 2
object
ññ2 8
)
ññ8 9
,
ññ9 :
typeof
ññ; A
(
ññB C
PopupBox
ññC K
)
ññK L
,
ññL M
new
ññN Q
PropertyMetadata
ññR b
(
ññb c
default
ññc j
(
ññj k
object
ññk q
)
ññq r
)
ññr s
)
ññs t
;
ññt u
public
õõ 
object
õõ "
ToggleCheckedContent
õõ *
{
úú 	
get
ùù 
{
ùù 
return
ùù 
(
ùù 
object
ùù  
)
ùù  !
GetValue
ùù" *
(
ùù* +*
ToggleCheckedContentProperty
ùù+ G
)
ùùG H
;
ùùH I
}
ùùJ K
set
ûû 
{
ûû 
SetValue
ûû 
(
ûû *
ToggleCheckedContentProperty
ûû 7
,
ûû7 8
value
ûû9 >
)
ûû> ?
;
ûû? @
}
ûûA B
}
üü 	
public
°° 
static
°° 
readonly
°°  
DependencyProperty
°° 12
$ToggleCheckedContentTemplateProperty
°°2 V
=
°°W X 
DependencyProperty
°°Y k
.
°°k l
Register
°°l t
(
°°t u
nameof
¢¢ 
(
¢¢ *
ToggleCheckedContentTemplate
¢¢ /
)
¢¢/ 0
,
¢¢0 1
typeof
¢¢2 8
(
¢¢9 :
DataTemplate
¢¢: F
)
¢¢F G
,
¢¢G H
typeof
¢¢I O
(
¢¢P Q
PopupBox
¢¢Q Y
)
¢¢Y Z
,
¢¢Z [
new
¢¢\ _
PropertyMetadata
¢¢` p
(
¢¢p q
default
¢¢q x
(
¢¢x y
DataTemplate¢¢y Ö
)¢¢Ö Ü
)¢¢Ü á
)¢¢á à
;¢¢à â
public
ßß 
DataTemplate
ßß *
ToggleCheckedContentTemplate
ßß 8
{
®® 	
get
©© 
{
©© 
return
©© 
(
©© 
DataTemplate
©© &
)
©©& '
GetValue
©©( 0
(
©©0 12
$ToggleCheckedContentTemplateProperty
©©1 U
)
©©U V
;
©©V W
}
©©X Y
set
™™ 
{
™™ 
SetValue
™™ 
(
™™ 2
$ToggleCheckedContentTemplateProperty
™™ ?
,
™™? @
value
™™A F
)
™™F G
;
™™G H
}
™™I J
}
´´ 	
public
≠≠ 
static
≠≠ 
readonly
≠≠  
DependencyProperty
≠≠ 11
#ToggleCheckedContentCommandProperty
≠≠2 U
=
≠≠V W 
DependencyProperty
≠≠X j
.
≠≠j k
Register
≠≠k s
(
≠≠s t
nameof
ÆÆ 
(
ÆÆ )
ToggleCheckedContentCommand
ÆÆ .
)
ÆÆ. /
,
ÆÆ/ 0
typeof
ÆÆ1 7
(
ÆÆ8 9
ICommand
ÆÆ9 A
)
ÆÆA B
,
ÆÆB C
typeof
ÆÆD J
(
ÆÆK L
PopupBox
ÆÆL T
)
ÆÆT U
,
ÆÆU V
new
ÆÆW Z
PropertyMetadata
ÆÆ[ k
(
ÆÆk l
default
ÆÆl s
(
ÆÆs t
ICommand
ÆÆt |
)
ÆÆ| }
)
ÆÆ} ~
)
ÆÆ~ 
;ÆÆ Ä
public
≥≥ 
ICommand
≥≥ )
ToggleCheckedContentCommand
≥≥ 3
{
¥¥ 	
get
µµ 
{
µµ 
return
µµ 
(
µµ 
ICommand
µµ "
)
µµ" #
GetValue
µµ$ ,
(
µµ, -1
#ToggleCheckedContentCommandProperty
µµ- P
)
µµP Q
;
µµQ R
}
µµS T
set
∂∂ 
{
∂∂ 
SetValue
∂∂ 
(
∂∂ 1
#ToggleCheckedContentCommandProperty
∂∂ >
,
∂∂> ?
value
∂∂@ E
)
∂∂E F
;
∂∂F G
}
∂∂H I
}
∑∑ 	
public
ππ 
static
ππ 
readonly
ππ  
DependencyProperty
ππ 1:
,ToggleCheckedContentCommandParameterProperty
ππ2 ^
=
ππ_ ` 
DependencyProperty
ππa s
.
ππs t
Register
ππt |
(
ππ| }
nameof
∫∫ 
(
∫∫ 2
$ToggleCheckedContentCommandParameter
∫∫ 7
)
∫∫7 8
,
∫∫8 9
typeof
∫∫: @
(
∫∫A B
object
∫∫B H
)
∫∫H I
,
∫∫I J
typeof
∫∫K Q
(
∫∫R S
PopupBox
∫∫S [
)
∫∫[ \
,
∫∫\ ]
new
∫∫^ a
PropertyMetadata
∫∫b r
(
∫∫r s
default
∫∫s z
(
∫∫z {
object∫∫{ Å
)∫∫Å Ç
)∫∫Ç É
)∫∫É Ñ
;∫∫Ñ Ö
public
øø 
object
øø 2
$ToggleCheckedContentCommandParameter
øø :
{
¿¿ 	
get
¡¡ 
{
¡¡ 
return
¡¡ 
(
¡¡ 
object
¡¡  
)
¡¡  !
GetValue
¡¡" *
(
¡¡* +:
,ToggleCheckedContentCommandParameterProperty
¡¡+ W
)
¡¡W X
;
¡¡X Y
}
¡¡Z [
set
¬¬ 
{
¬¬ 
SetValue
¬¬ 
(
¬¬ :
,ToggleCheckedContentCommandParameterProperty
¬¬ G
,
¬¬G H
value
¬¬I N
)
¬¬N O
;
¬¬O P
}
¬¬Q R
}
√√ 	
public
≈≈ 
static
≈≈ 
readonly
≈≈  
DependencyProperty
≈≈ 1"
PopupContentProperty
≈≈2 F
=
≈≈G H 
DependencyProperty
≈≈I [
.
≈≈[ \
Register
≈≈\ d
(
≈≈d e
nameof
∆∆ 
(
∆∆ 
PopupContent
∆∆ 
)
∆∆  
,
∆∆  !
typeof
∆∆" (
(
∆∆) *
object
∆∆* 0
)
∆∆0 1
,
∆∆1 2
typeof
∆∆3 9
(
∆∆: ;
PopupBox
∆∆; C
)
∆∆C D
,
∆∆D E
new
∆∆F I
PropertyMetadata
∆∆J Z
(
∆∆Z [
default
∆∆[ b
(
∆∆b c
object
∆∆c i
)
∆∆i j
)
∆∆j k
)
∆∆k l
;
∆∆l m
public
ÀÀ 
object
ÀÀ 
PopupContent
ÀÀ "
{
ÃÃ 	
get
ÕÕ 
{
ÕÕ 
return
ÕÕ 
(
ÕÕ 
object
ÕÕ  
)
ÕÕ  !
GetValue
ÕÕ" *
(
ÕÕ* +"
PopupContentProperty
ÕÕ+ ?
)
ÕÕ? @
;
ÕÕ@ A
}
ÕÕB C
set
ŒŒ 
{
ŒŒ 
SetValue
ŒŒ 
(
ŒŒ "
PopupContentProperty
ŒŒ /
,
ŒŒ/ 0
value
ŒŒ1 6
)
ŒŒ6 7
;
ŒŒ7 8
}
ŒŒ9 :
}
œœ 	
public
—— 
static
—— 
readonly
——  
DependencyProperty
—— 1*
PopupContentTemplateProperty
——2 N
=
——O P 
DependencyProperty
——Q c
.
——c d
Register
——d l
(
——l m
nameof
““ 
(
““ "
PopupContentTemplate
““ '
)
““' (
,
““( )
typeof
““* 0
(
““1 2
DataTemplate
““2 >
)
““> ?
,
““? @
typeof
““A G
(
““H I
PopupBox
““I Q
)
““Q R
,
““R S
new
““T W
PropertyMetadata
““X h
(
““h i
default
““i p
(
““p q
DataTemplate
““q }
)
““} ~
)
““~ 
)““ Ä
;““Ä Å
public
◊◊ 
DataTemplate
◊◊ "
PopupContentTemplate
◊◊ 0
{
ÿÿ 	
get
ŸŸ 
{
ŸŸ 
return
ŸŸ 
(
ŸŸ 
DataTemplate
ŸŸ &
)
ŸŸ& '
GetValue
ŸŸ( 0
(
ŸŸ0 1*
PopupContentTemplateProperty
ŸŸ1 M
)
ŸŸM N
;
ŸŸN O
}
ŸŸP Q
set
⁄⁄ 
{
⁄⁄ 
SetValue
⁄⁄ 
(
⁄⁄ *
PopupContentTemplateProperty
⁄⁄ 7
,
⁄⁄7 8
value
⁄⁄9 >
)
⁄⁄> ?
;
⁄⁄? @
}
⁄⁄A B
}
€€ 	
public
›› 
static
›› 
readonly
››  
DependencyProperty
›› 1!
IsPopupOpenProperty
››2 E
=
››F G 
DependencyProperty
››H Z
.
››Z [
Register
››[ c
(
››c d
nameof
ﬁﬁ 
(
ﬁﬁ 
IsPopupOpen
ﬁﬁ 
)
ﬁﬁ 
,
ﬁﬁ  
typeof
ﬁﬁ! '
(
ﬁﬁ( )
bool
ﬁﬁ) -
)
ﬁﬁ- .
,
ﬁﬁ. /
typeof
ﬁﬁ0 6
(
ﬁﬁ7 8
PopupBox
ﬁﬁ8 @
)
ﬁﬁ@ A
,
ﬁﬁA B
new
ﬁﬁC F'
FrameworkPropertyMetadata
ﬁﬁG `
(
ﬁﬁ` a
default
ﬁﬁa h
(
ﬁﬁh i
bool
ﬁﬁi m
)
ﬁﬁm n
,
ﬁﬁn o1
"IsPopupOpenPropertyChangedCallbackﬁﬁp í
)ﬁﬁí ì
)ﬁﬁì î
;ﬁﬁî ï
private
‡‡ 
static
‡‡ 
void
‡‡ 0
"IsPopupOpenPropertyChangedCallback
‡‡ >
(
‡‡> ?
DependencyObject
‡‡? O
dependencyObject
‡‡P `
,
‡‡` a1
"DependencyPropertyChangedEventArgs‡‡b Ñ2
"dependencyPropertyChangedEventArgs‡‡Ö ß
)‡‡ß ®
{
·· 	
var
‚‚ 
popupBox
‚‚ 
=
‚‚ 
(
‚‚ 
PopupBox
‚‚ $
)
‚‚$ %
dependencyObject
‚‚& 6
;
‚‚6 7
var
„„ 
newValue
„„ 
=
„„ 
(
„„ 
bool
„„  
)
„„  !0
"dependencyPropertyChangedEventArgs
„„! C
.
„„C D
NewValue
„„D L
;
„„L M
if
‰‰ 
(
‰‰ 
popupBox
‰‰ 
.
‰‰ 
	PopupMode
‰‰ "
==
‰‰# %
PopupBoxPopupMode
‰‰& 7
.
‰‰7 8
Click
‰‰8 =
)
‰‰= >
{
ÂÂ 
if
ÊÊ 
(
ÊÊ 
newValue
ÊÊ 
)
ÊÊ 
Mouse
ÁÁ 
.
ÁÁ 
Capture
ÁÁ !
(
ÁÁ! "
popupBox
ÁÁ" *
,
ÁÁ* +
CaptureMode
ÁÁ, 7
.
ÁÁ7 8
SubTree
ÁÁ8 ?
)
ÁÁ? @
;
ÁÁ@ A
else
ËË 
Mouse
ÈÈ 
.
ÈÈ 
Capture
ÈÈ !
(
ÈÈ! "
null
ÈÈ" &
)
ÈÈ& '
;
ÈÈ' (
}
ÍÍ 
popupBox
ÏÏ 
.
ÏÏ 
AnimateChildrenIn
ÏÏ &
(
ÏÏ& '
!
ÏÏ' (
newValue
ÏÏ( 0
)
ÏÏ0 1
;
ÏÏ1 2
popupBox
ÌÌ 
.
ÌÌ 
_popup
ÌÌ 
?
ÌÌ 
.
ÌÌ 
RefreshPosition
ÌÌ ,
(
ÌÌ, -
)
ÌÌ- .
;
ÌÌ. / 
VisualStateManager
ÔÔ 
.
ÔÔ 
	GoToState
ÔÔ (
(
ÔÔ( )
popupBox
ÔÔ) 1
,
ÔÔ1 2
newValue
ÔÔ3 ;
?
ÔÔ< ="
PopupIsOpenStateName
ÔÔ> R
:
ÔÔS T$
PopupIsClosedStateName
ÔÔU k
,
ÔÔk l
true
ÔÔm q
)
ÔÔq r
;
ÔÔr s
if
ÒÒ 
(
ÒÒ 
newValue
ÒÒ 
)
ÒÒ 
popupBox
ÚÚ 
.
ÚÚ 
OnOpened
ÚÚ !
(
ÚÚ! "
)
ÚÚ" #
;
ÚÚ# $
else
ÛÛ 
popupBox
ÙÙ 
.
ÙÙ 
OnClosed
ÙÙ !
(
ÙÙ! "
)
ÙÙ" #
;
ÙÙ# $
}
ıı 	
public
˙˙ 
bool
˙˙ 
IsPopupOpen
˙˙ 
{
˚˚ 	
get
¸¸ 
{
¸¸ 
return
¸¸ 
(
¸¸ 
bool
¸¸ 
)
¸¸ 
GetValue
¸¸  (
(
¸¸( )!
IsPopupOpenProperty
¸¸) <
)
¸¸< =
;
¸¸= >
}
¸¸? @
set
˝˝ 
{
˝˝ 
SetValue
˝˝ 
(
˝˝ !
IsPopupOpenProperty
˝˝ .
,
˝˝. /
value
˝˝0 5
)
˝˝5 6
;
˝˝6 7
}
˝˝8 9
}
˛˛ 	
public
ÄÄ 
static
ÄÄ 
readonly
ÄÄ  
DependencyProperty
ÄÄ 1
StaysOpenProperty
ÄÄ2 C
=
ÄÄD E 
DependencyProperty
ÄÄF X
.
ÄÄX Y
Register
ÄÄY a
(
ÄÄa b
nameof
ÅÅ 
(
ÅÅ 
	StaysOpen
ÅÅ 
)
ÅÅ 
,
ÅÅ 
typeof
ÅÅ %
(
ÅÅ& '
bool
ÅÅ' +
)
ÅÅ+ ,
,
ÅÅ, -
typeof
ÅÅ. 4
(
ÅÅ5 6
PopupBox
ÅÅ6 >
)
ÅÅ> ?
,
ÅÅ? @
new
ÅÅA D
PropertyMetadata
ÅÅE U
(
ÅÅU V
default
ÅÅV ]
(
ÅÅ] ^
bool
ÅÅ^ b
)
ÅÅb c
)
ÅÅc d
)
ÅÅd e
;
ÅÅe f
public
ÜÜ 
bool
ÜÜ 
	StaysOpen
ÜÜ 
{
áá 	
get
àà 
{
àà 
return
àà 
(
àà 
bool
àà 
)
àà 
GetValue
àà  (
(
àà( )
StaysOpenProperty
àà) :
)
àà: ;
;
àà; <
}
àà= >
set
ââ 
{
ââ 
SetValue
ââ 
(
ââ 
StaysOpenProperty
ââ ,
,
ââ, -
value
ââ. 3
)
ââ3 4
;
ââ4 5
}
ââ6 7
}
ää 	
public
åå 
static
åå 
readonly
åå  
DependencyProperty
åå 1#
PlacementModeProperty
åå2 G
=
ååH I 
DependencyProperty
ååJ \
.
åå\ ]
Register
åå] e
(
ååe f
nameof
çç 
(
çç 
PlacementMode
çç  
)
çç  !
,
çç! "
typeof
çç# )
(
çç* +#
PopupBoxPlacementMode
çç+ @
)
çç@ A
,
ççA B
typeof
ççC I
(
ççJ K
PopupBox
ççK S
)
ççS T
,
ççT U
new
ççV Y
PropertyMetadata
ççZ j
(
ççj k
default
ççk r
(
ççr s$
PopupBoxPlacementModeççs à
)ççà â
,ççâ ä4
$PlacementModePropertyChangedCallbackççã Ø
)ççØ ∞
)çç∞ ±
;çç± ≤
private
èè 
static
èè 
void
èè 2
$PlacementModePropertyChangedCallback
èè @
(
èè@ A
DependencyObject
èèA Q
dependencyObject
èèR b
,
èèb c1
"DependencyPropertyChangedEventArgsèèd Ü2
"dependencyPropertyChangedEventArgsèèá ©
)èè© ™
{
êê 	
(
ëë 
(
ëë 
PopupBox
ëë 
)
ëë 
dependencyObject
ëë '
)
ëë' (
.
ëë( )
_popup
ëë) /
?
ëë/ 0
.
ëë0 1
RefreshPosition
ëë1 @
(
ëë@ A
)
ëëA B
;
ëëB C
}
íí 	
public
óó #
PopupBoxPlacementMode
óó $
PlacementMode
óó% 2
{
òò 	
get
ôô 
{
ôô 
return
ôô 
(
ôô #
PopupBoxPlacementMode
ôô /
)
ôô/ 0
GetValue
ôô1 9
(
ôô9 :#
PlacementModeProperty
ôô: O
)
ôôO P
;
ôôP Q
}
ôôR S
set
öö 
{
öö 
SetValue
öö 
(
öö #
PlacementModeProperty
öö 0
,
öö0 1
value
öö2 7
)
öö7 8
;
öö8 9
}
öö: ;
}
õõ 	
public
ùù 
static
ùù 
readonly
ùù  
DependencyProperty
ùù 1
PopupModeProperty
ùù2 C
=
ùùD E 
DependencyProperty
ùùF X
.
ùùX Y
Register
ùùY a
(
ùùa b
nameof
ûû 
(
ûû 
	PopupMode
ûû 
)
ûû 
,
ûû 
typeof
ûû %
(
ûû& '
PopupBoxPopupMode
ûû' 8
)
ûû8 9
,
ûû9 :
typeof
ûû; A
(
ûûB C
PopupBox
ûûC K
)
ûûK L
,
ûûL M
new
ûûN Q
PropertyMetadata
ûûR b
(
ûûb c
default
ûûc j
(
ûûj k
PopupBoxPopupMode
ûûk |
)
ûû| }
)
ûû} ~
)
ûû~ 
;ûû Ä
public
££ 
PopupBoxPopupMode
££  
	PopupMode
££! *
{
§§ 	
get
•• 
{
•• 
return
•• 
(
•• 
PopupBoxPopupMode
•• +
)
••+ ,
GetValue
••- 5
(
••5 6
PopupModeProperty
••6 G
)
••G H
;
••H I
}
••J K
set
¶¶ 
{
¶¶ 
SetValue
¶¶ 
(
¶¶ 
PopupModeProperty
¶¶ ,
,
¶¶, -
value
¶¶. 3
)
¶¶3 4
;
¶¶4 5
}
¶¶6 7
}
ßß 	
public
¨¨ 
static
¨¨ 
readonly
¨¨  
DependencyProperty
¨¨ 1'
UnfurlOrientationProperty
¨¨2 K
=
¨¨L M 
DependencyProperty
¨¨N `
.
¨¨` a
Register
¨¨a i
(
¨¨i j
nameof
≠≠ 
(
≠≠ 
UnfurlOrientation
≠≠ $
)
≠≠$ %
,
≠≠% &
typeof
≠≠' -
(
≠≠. /
Orientation
≠≠/ :
)
≠≠: ;
,
≠≠; <
typeof
≠≠= C
(
≠≠D E
PopupBox
≠≠E M
)
≠≠M N
,
≠≠N O
new
≠≠P S
PropertyMetadata
≠≠T d
(
≠≠d e
Orientation
≠≠e p
.
≠≠p q
Vertical
≠≠q y
)
≠≠y z
)
≠≠z {
;
≠≠{ |
public
≤≤ 
Orientation
≤≤ 
UnfurlOrientation
≤≤ ,
{
≥≥ 	
get
¥¥ 
{
¥¥ 
return
¥¥ 
(
¥¥ 
Orientation
¥¥ %
)
¥¥% &
GetValue
¥¥' /
(
¥¥/ 0'
UnfurlOrientationProperty
¥¥0 I
)
¥¥I J
;
¥¥J K
}
¥¥L M
set
µµ 
{
µµ 
SetValue
µµ 
(
µµ '
UnfurlOrientationProperty
µµ 4
,
µµ4 5
value
µµ6 ;
)
µµ; <
;
µµ< =
}
µµ> ?
}
∂∂ 	
public
ªª *
CustomPopupPlacementCallback
ªª +"
PopupPlacementMethod
ªª, @
=>
ªªA C
GetPopupPlacement
ªªD U
;
ªªU V
public
¿¿ 
static
¿¿ 
readonly
¿¿ 
RoutedEvent
¿¿ *,
ToggleCheckedContentClickEvent
¿¿+ I
=
¿¿J K
EventManager
¿¿L X
.
¿¿X Y!
RegisterRoutedEvent
¿¿Y l
(
¿¿l m
$str¿¿m à
,¿¿à â
RoutingStrategy¿¿ä ô
.¿¿ô ö
Bubble¿¿ö †
,¿¿† °
typeof¿¿¢ ®
(¿¿® ©"
RoutedEventHandler¿¿© ª
)¿¿ª º
,¿¿º Ω
typeof¿¿æ ƒ
(¿¿ƒ ≈
PopupBox¿¿≈ Õ
)¿¿Õ Œ
)¿¿Œ œ
;¿¿œ –
[
≈≈ 	
Category
≈≈	 
(
≈≈ 
$str
≈≈ 
)
≈≈ 
]
≈≈ 
public
∆∆ 
event
∆∆  
RoutedEventHandler
∆∆ ''
ToggleCheckedContentClick
∆∆( A
{
∆∆B C
add
∆∆D G
{
∆∆H I

AddHandler
∆∆J T
(
∆∆T U,
ToggleCheckedContentClickEvent
∆∆U s
,
∆∆s t
value
∆∆u z
)
∆∆z {
;
∆∆{ |
}
∆∆} ~
remove∆∆ Ö
{∆∆Ü á
RemoveHandler∆∆à ï
(∆∆ï ñ.
ToggleCheckedContentClickEvent∆∆ñ ¥
,∆∆¥ µ
value∆∆∂ ª
)∆∆ª º
;∆∆º Ω
}∆∆æ ø
}∆∆¿ ¡
	protected
ÀÀ 
virtual
ÀÀ 
void
ÀÀ )
OnToggleCheckedContentClick
ÀÀ :
(
ÀÀ: ;
)
ÀÀ; <
{
ÃÃ 	
var
ÕÕ 
newEvent
ÕÕ 
=
ÕÕ 
new
ÕÕ 
RoutedEventArgs
ÕÕ .
(
ÕÕ. /,
ToggleCheckedContentClickEvent
ÕÕ/ M
,
ÕÕM N
this
ÕÕO S
)
ÕÕS T
;
ÕÕT U

RaiseEvent
ŒŒ 
(
ŒŒ 
newEvent
ŒŒ 
)
ŒŒ  
;
ŒŒ  !
}
œœ 	
public
—— 
static
—— 
readonly
—— 
RoutedEvent
—— *
OpenedEvent
——+ 6
=
——7 8
EventManager
““ 
.
““ !
RegisterRoutedEvent
““ ,
(
““, -
$str
”” 
,
”” 
RoutingStrategy
‘‘ 
.
‘‘  
Bubble
‘‘  &
,
‘‘& '
typeof
’’ 
(
’’ 
EventHandler
’’ #
)
’’# $
,
’’$ %
typeof
÷÷ 
(
÷÷ 
PopupBox
÷÷ 
)
÷÷  
)
÷÷  !
;
÷÷! "
public
€€ 
event
€€  
RoutedEventHandler
€€ '
Opened
€€( .
{
‹‹ 	
add
›› 
{
›› 

AddHandler
›› 
(
›› 
OpenedEvent
›› (
,
››( )
value
››* /
)
››/ 0
;
››0 1
}
››2 3
remove
ﬁﬁ 
{
ﬁﬁ 
RemoveHandler
ﬁﬁ "
(
ﬁﬁ" #
OpenedEvent
ﬁﬁ# .
,
ﬁﬁ. /
value
ﬁﬁ0 5
)
ﬁﬁ5 6
;
ﬁﬁ6 7
}
ﬁﬁ8 9
}
ﬂﬂ 	
	protected
‰‰ 
virtual
‰‰ 
void
‰‰ 
OnOpened
‰‰ '
(
‰‰' (
)
‰‰( )
{
ÂÂ 	
var
ÊÊ 
newEvent
ÊÊ 
=
ÊÊ 
new
ÊÊ 
RoutedEventArgs
ÊÊ .
(
ÊÊ. /
OpenedEvent
ÊÊ/ :
,
ÊÊ: ;
this
ÊÊ< @
)
ÊÊ@ A
;
ÊÊA B

RaiseEvent
ÁÁ 
(
ÁÁ 
newEvent
ÁÁ 
)
ÁÁ  
;
ÁÁ  !
}
ËË 	
public
ÍÍ 
static
ÍÍ 
readonly
ÍÍ 
RoutedEvent
ÍÍ *
ClosedEvent
ÍÍ+ 6
=
ÍÍ7 8
EventManager
ÎÎ 
.
ÎÎ !
RegisterRoutedEvent
ÎÎ ,
(
ÎÎ, -
$str
ÏÏ 
,
ÏÏ 
RoutingStrategy
ÌÌ 
.
ÌÌ  
Bubble
ÌÌ  &
,
ÌÌ& '
typeof
ÓÓ 
(
ÓÓ 
EventHandler
ÓÓ #
)
ÓÓ# $
,
ÓÓ$ %
typeof
ÔÔ 
(
ÔÔ 
PopupBox
ÔÔ 
)
ÔÔ  
)
ÔÔ  !
;
ÔÔ! "
public
ÙÙ 
event
ÙÙ  
RoutedEventHandler
ÙÙ '
Closed
ÙÙ( .
{
ıı 	
add
ˆˆ 
{
ˆˆ 

AddHandler
ˆˆ 
(
ˆˆ 
ClosedEvent
ˆˆ (
,
ˆˆ( )
value
ˆˆ* /
)
ˆˆ/ 0
;
ˆˆ0 1
}
ˆˆ2 3
remove
˜˜ 
{
˜˜ 
RemoveHandler
˜˜ "
(
˜˜" #
ClosedEvent
˜˜# .
,
˜˜. /
value
˜˜0 5
)
˜˜5 6
;
˜˜6 7
}
˜˜8 9
}
¯¯ 	
	protected
˝˝ 
virtual
˝˝ 
void
˝˝ 
OnClosed
˝˝ '
(
˝˝' (
)
˝˝( )
{
˛˛ 	
var
ˇˇ 
newEvent
ˇˇ 
=
ˇˇ 
new
ˇˇ 
RoutedEventArgs
ˇˇ .
(
ˇˇ. /
ClosedEvent
ˇˇ/ :
,
ˇˇ: ;
this
ˇˇ< @
)
ˇˇ@ A
;
ˇˇA B

RaiseEvent
ÄÄ 
(
ÄÄ 
newEvent
ÄÄ 
)
ÄÄ  
;
ÄÄ  !
}
ÅÅ 	
public
ÉÉ 
override
ÉÉ 
void
ÉÉ 
OnApplyTemplate
ÉÉ ,
(
ÉÉ, -
)
ÉÉ- .
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ 
_popup
ÖÖ 
!=
ÖÖ 
null
ÖÖ 
)
ÖÖ 
_popup
ÜÜ 
.
ÜÜ 
Loaded
ÜÜ 
-=
ÜÜ  
PopupOnLoaded
ÜÜ! .
;
ÜÜ. /
if
áá 
(
áá 
_toggleButton
áá 
!=
áá  
null
áá! %
)
áá% &
_toggleButton
àà 
.
àà &
PreviewMouseLeftButtonUp
àà 6
-=
àà7 94
&ToggleButtonOnPreviewMouseLeftButtonUp
àà: `
;
àà` a
base
ää 
.
ää 
OnApplyTemplate
ää  
(
ää  !
)
ää! "
;
ää" #
_popup
åå 
=
åå 
GetTemplateChild
åå %
(
åå% &
PopupPartName
åå& 3
)
åå3 4
as
åå5 7
PopupEx
åå8 ?
;
åå? @"
_popupContentControl
çç  
=
çç! "
GetTemplateChild
çç# 3
(
çç3 4)
PopupContentControlPartName
çç4 O
)
ççO P
as
ççQ S
ContentControl
ççT b
;
ççb c
_toggleButton
éé 
=
éé 
GetTemplateChild
éé ,
(
éé, -
TogglePartName
éé- ;
)
éé; <
as
éé= ?
ToggleButton
éé@ L
;
ééL M
if
êê 
(
êê 
_popup
êê 
!=
êê 
null
êê 
)
êê 
_popup
ëë 
.
ëë 
Loaded
ëë 
+=
ëë  
PopupOnLoaded
ëë! .
;
ëë. /
if
íí 
(
íí 
_toggleButton
íí 
!=
íí  
null
íí! %
)
íí% &
_toggleButton
ìì 
.
ìì &
PreviewMouseLeftButtonUp
ìì 6
+=
ìì7 94
&ToggleButtonOnPreviewMouseLeftButtonUp
ìì: `
;
ìì` a 
VisualStateManager
ïï 
.
ïï 
	GoToState
ïï (
(
ïï( )
this
ïï) -
,
ïï- .
IsPopupOpen
ïï/ :
?
ïï; <"
PopupIsOpenStateName
ïï= Q
:
ïïR S$
PopupIsClosedStateName
ïïT j
,
ïïj k
false
ïïl q
)
ïïq r
;
ïïr s
}
ññ 	
	protected
òò 
override
òò 
void
òò ,
OnIsKeyboardFocusWithinChanged
òò  >
(
òò> ?0
"DependencyPropertyChangedEventArgs
òò? a
e
òòb c
)
òòc d
{
ôô 	
base
öö 
.
öö ,
OnIsKeyboardFocusWithinChanged
öö /
(
öö/ 0
e
öö0 1
)
öö1 2
;
öö2 3
if
úú 
(
úú 
IsPopupOpen
úú 
&&
úú 
!
úú  #
IsKeyboardFocusWithin
úú  5
)
úú5 6
{
ùù 
Close
ûû 
(
ûû 
)
ûû 
;
ûû 
}
üü 
}
†† 	
	protected
¢¢ 
override
¢¢ 
void
¢¢ 
OnMouseEnter
¢¢  ,
(
¢¢, -
MouseEventArgs
¢¢- ;
e
¢¢< =
)
¢¢= >
{
££ 	
if
§§ 
(
§§ 
	IsEnabled
§§ 
&&
§§ 
IsLoaded
§§ %
&&
§§& (
(
•• 
	PopupMode
•• 
==
•• 
PopupBoxPopupMode
•• /
.
••/ 0
MouseOverEager
••0 >
||
¶¶ 
	PopupMode
¶¶ 
==
¶¶  
PopupBoxPopupMode
¶¶! 2
.
¶¶2 3
	MouseOver
¶¶3 <
)
¶¶< =
)
¶¶= >
{
ßß 
if
®® 
(
®® "
_popupContentControl
®® (
!=
®®) +
null
®®, 0
)
®®0 1
{
©© 
var
¨¨ 
inputSource
¨¨ #
=
¨¨$ % 
PresentationSource
¨¨& 8
.
¨¨8 9

FromVisual
¨¨9 C
(
¨¨C D"
_popupContentControl
¨¨D X
)
¨¨X Y
;
¨¨Y Z
if
≠≠ 
(
≠≠ 
inputSource
≠≠ #
!=
≠≠$ &
null
≠≠' +
)
≠≠+ ,
{
ÆÆ 
var
ØØ 
popupScreenPoint
ØØ ,
=
ØØ- ."
_popupContentControl
ØØ/ C
.
ØØC D
PointToScreen
ØØD Q
(
ØØQ R
new
ØØR U
Point
ØØV [
(
ØØ[ \
)
ØØ\ ]
)
ØØ] ^
;
ØØ^ _
popupScreenPoint
∞∞ (
.
∞∞( )
Offset
∞∞) /
(
∞∞/ 0
-
∞∞0 1"
_popupContentControl
∞∞1 E
.
∞∞E F
Margin
∞∞F L
.
∞∞L M
Left
∞∞M Q
,
∞∞Q R
-
∞∞S T"
_popupContentControl
∞∞T h
.
∞∞h i
Margin
∞∞i o
.
∞∞o p
Top
∞∞p s
)
∞∞s t
;
∞∞t u
var
±± &
expectedPopupScreenPoint
±± 4
=
±±5 6
PointToScreen
±±7 D
(
±±D E(
_popupPointFromLastRequest
±±E _
)
±±_ `
;
±±` a
if
≥≥ 
(
≥≥ 
Math
≥≥  
.
≥≥  !
Abs
≥≥! $
(
≥≥$ %
popupScreenPoint
≥≥% 5
.
≥≥5 6
X
≥≥6 7
-
≥≥8 9&
expectedPopupScreenPoint
≥≥: R
.
≥≥R S
X
≥≥S T
)
≥≥T U
>
≥≥V W
ActualWidth
≥≥X c
/
≥≥c d
$num
≥≥d e
||
¥¥ 
Math
µµ  
.
µµ  !
Abs
µµ! $
(
µµ$ %
popupScreenPoint
µµ% 5
.
µµ5 6
Y
µµ6 7
-
µµ8 9&
expectedPopupScreenPoint
µµ: R
.
µµR S
Y
µµS T
)
µµT U
>
µµV W
ActualHeight
µµX d
/
µµd e
$num
µµe f
)
µµf g
return
∂∂ "
;
∂∂" #
}
∑∑ 
}
∏∏ 
SetCurrentValue
∫∫ 
(
∫∫  !
IsPopupOpenProperty
∫∫  3
,
∫∫3 4
true
∫∫5 9
)
∫∫9 :
;
∫∫: ;
}
ªª 
base
ºº 
.
ºº 
OnMouseEnter
ºº 
(
ºº 
e
ºº 
)
ºº  
;
ºº  !
}
ΩΩ 	
private
øø 
void
øø 
OnLayoutUpdated
øø $
(
øø$ %
object
øø% +
sender
øø, 2
,
øø2 3
	EventArgs
øø4 =
	eventArgs
øø> G
)
øøG H
{
¿¿ 	
if
¡¡ 
(
¡¡ "
_popupContentControl
¡¡ $
!=
¡¡% '
null
¡¡( ,
&&
¡¡- /
_popup
¡¡0 6
!=
¡¡7 9
null
¡¡: >
&&
¡¡? A
(
¬¬ 
	PopupMode
¬¬ 
==
¬¬ 
PopupBoxPopupMode
¬¬ /
.
¬¬/ 0
	MouseOver
¬¬0 9
||
¬¬: <
	PopupMode
¬¬= F
==
¬¬G I
PopupBoxPopupMode
¬¬J [
.
¬¬[ \
MouseOverEager
¬¬\ j
)
¬¬j k
)
¬¬k l
{
√√ 
Point
ƒƒ 
relativePosition
ƒƒ &
=
ƒƒ' ("
_popupContentControl
ƒƒ) =
.
ƒƒ= >
TranslatePoint
ƒƒ> L
(
ƒƒL M
new
ƒƒM P
Point
ƒƒQ V
(
ƒƒV W
)
ƒƒW X
,
ƒƒX Y
this
ƒƒZ ^
)
ƒƒ^ _
;
ƒƒ_ `
if
≈≈ 
(
≈≈ 
relativePosition
≈≈ $
!=
≈≈% '"
_lastRelativePositon
≈≈( <
)
≈≈< =
{
∆∆ 
_popup
«« 
.
«« 
RefreshPosition
«« *
(
««* +
)
««+ ,
;
««, -"
_lastRelativePositon
»» (
=
»») *"
_popupContentControl
»»+ ?
.
»»? @
TranslatePoint
»»@ N
(
»»N O
new
»»O R
Point
»»S X
(
»»X Y
)
»»Y Z
,
»»Z [
this
»»\ `
)
»»` a
;
»»a b
}
…… 
}
   
}
ÀÀ 	
	protected
ÕÕ 
override
ÕÕ 
void
ÕÕ 
OnMouseLeave
ÕÕ  ,
(
ÕÕ, -
MouseEventArgs
ÕÕ- ;
e
ÕÕ< =
)
ÕÕ= >
{
ŒŒ 	
if
œœ 
(
œœ 
	PopupMode
œœ 
==
œœ 
PopupBoxPopupMode
œœ .
.
œœ. /
MouseOverEager
œœ/ =
||
–– 
	PopupMode
–– 
==
–– 
PopupBoxPopupMode
––  1
.
––1 2
	MouseOver
––2 ;
)
––; <
Close
““ 
(
““ 
)
““ 
;
““ 
base
‘‘ 
.
‘‘ 
OnMouseEnter
‘‘ 
(
‘‘ 
e
‘‘ 
)
‘‘  
;
‘‘  !
}
’’ 	
	protected
◊◊ 
void
◊◊ 
Close
◊◊ 
(
◊◊ 
)
◊◊ 
{
ÿÿ 	
if
ŸŸ 
(
ŸŸ 
IsPopupOpen
ŸŸ 
)
ŸŸ 
SetCurrentValue
⁄⁄ 
(
⁄⁄  !
IsPopupOpenProperty
⁄⁄  3
,
⁄⁄3 4
false
⁄⁄5 :
)
⁄⁄: ;
;
⁄⁄; <
}
€€ 	
private
›› "
CustomPopupPlacement
›› $
[
››$ %
]
››% &
GetPopupPlacement
››' 8
(
››8 9
Size
››9 =
	popupSize
››> G
,
››G H
Size
››I M

targetSize
››N X
,
››X Y
Point
››Z _
offset
››` f
)
››f g
{
ﬁﬁ 	
double
ﬂﬂ 
x
ﬂﬂ 
,
ﬂﬂ 
y
ﬂﬂ 
;
ﬂﬂ 
if
·· 
(
·· 
FlowDirection
·· 
==
··  
FlowDirection
··! .
.
··. /
RightToLeft
··/ :
)
··: ;
offset
‚‚ 
.
‚‚ 
X
‚‚ 
+=
‚‚ 

targetSize
‚‚ &
.
‚‚& '
Width
‚‚' ,
/
‚‚- .
$num
‚‚/ 0
;
‚‚0 1
switch
‰‰ 
(
‰‰ 
PlacementMode
‰‰ !
)
‰‰! "
{
ÂÂ 
case
ÊÊ #
PopupBoxPlacementMode
ÊÊ *
.
ÊÊ* +%
BottomAndAlignLeftEdges
ÊÊ+ B
:
ÊÊB C
x
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
-
ÁÁ 
Math
ÁÁ  
.
ÁÁ  !
Abs
ÁÁ! $
(
ÁÁ$ %
offset
ÁÁ% +
.
ÁÁ+ ,
X
ÁÁ, -
*
ÁÁ- .
$num
ÁÁ. /
)
ÁÁ/ 0
;
ÁÁ0 1
y
ËË 
=
ËË 

targetSize
ËË "
.
ËË" #
Height
ËË# )
-
ËË* +
Math
ËË, 0
.
ËË0 1
Abs
ËË1 4
(
ËË4 5
offset
ËË5 ;
.
ËË; <
Y
ËË< =
)
ËË= >
;
ËË> ?
break
ÈÈ 
;
ÈÈ 
case
ÍÍ #
PopupBoxPlacementMode
ÍÍ *
.
ÍÍ* +&
BottomAndAlignRightEdges
ÍÍ+ C
:
ÍÍC D
x
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
-
ÎÎ 
	popupSize
ÎÎ %
.
ÎÎ% &
Width
ÎÎ& +
+
ÎÎ, -

targetSize
ÎÎ. 8
.
ÎÎ8 9
Width
ÎÎ9 >
-
ÎÎ? @
offset
ÎÎA G
.
ÎÎG H
X
ÎÎH I
;
ÎÎI J
y
ÏÏ 
=
ÏÏ 

targetSize
ÏÏ "
.
ÏÏ" #
Height
ÏÏ# )
-
ÏÏ* +
Math
ÏÏ, 0
.
ÏÏ0 1
Abs
ÏÏ1 4
(
ÏÏ4 5
offset
ÏÏ5 ;
.
ÏÏ; <
Y
ÏÏ< =
)
ÏÏ= >
;
ÏÏ> ?
break
ÌÌ 
;
ÌÌ 
case
ÓÓ #
PopupBoxPlacementMode
ÓÓ *
.
ÓÓ* +#
BottomAndAlignCentres
ÓÓ+ @
:
ÓÓ@ A
x
ÔÔ 
=
ÔÔ 

targetSize
ÔÔ "
.
ÔÔ" #
Width
ÔÔ# (
/
ÔÔ( )
$num
ÔÔ) *
-
ÔÔ+ ,
	popupSize
ÔÔ- 6
.
ÔÔ6 7
Width
ÔÔ7 <
/
ÔÔ< =
$num
ÔÔ= >
-
ÔÔ? @
Math
ÔÔA E
.
ÔÔE F
Abs
ÔÔF I
(
ÔÔI J
offset
ÔÔJ P
.
ÔÔP Q
X
ÔÔQ R
*
ÔÔR S
$num
ÔÔS T
)
ÔÔT U
;
ÔÔU V
y
 
=
 

targetSize
 "
.
" #
Height
# )
-
* +
Math
, 0
.
0 1
Abs
1 4
(
4 5
offset
5 ;
.
; <
Y
< =
)
= >
;
> ?
break
ÒÒ 
;
ÒÒ 
case
ÚÚ #
PopupBoxPlacementMode
ÚÚ *
.
ÚÚ* +"
TopAndAlignLeftEdges
ÚÚ+ ?
:
ÚÚ? @
x
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
-
ÛÛ 
Math
ÛÛ  
.
ÛÛ  !
Abs
ÛÛ! $
(
ÛÛ$ %
offset
ÛÛ% +
.
ÛÛ+ ,
X
ÛÛ, -
*
ÛÛ. /
$num
ÛÛ0 1
)
ÛÛ1 2
;
ÛÛ2 3
y
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
-
ÙÙ 
	popupSize
ÙÙ %
.
ÙÙ% &
Height
ÙÙ& ,
-
ÙÙ- .
Math
ÙÙ/ 3
.
ÙÙ3 4
Abs
ÙÙ4 7
(
ÙÙ7 8
offset
ÙÙ8 >
.
ÙÙ> ?
Y
ÙÙ? @
*
ÙÙ@ A
$num
ÙÙA B
)
ÙÙB C
;
ÙÙC D
break
ıı 
;
ıı 
case
ˆˆ #
PopupBoxPlacementMode
ˆˆ *
.
ˆˆ* +#
TopAndAlignRightEdges
ˆˆ+ @
:
ˆˆ@ A
x
˜˜ 
=
˜˜ 
$num
˜˜ 
-
˜˜ 
	popupSize
˜˜ %
.
˜˜% &
Width
˜˜& +
+
˜˜, -

targetSize
˜˜. 8
.
˜˜8 9
Width
˜˜9 >
-
˜˜? @
offset
˜˜A G
.
˜˜G H
X
˜˜H I
;
˜˜I J
y
¯¯ 
=
¯¯ 
$num
¯¯ 
-
¯¯ 
	popupSize
¯¯ %
.
¯¯% &
Height
¯¯& ,
-
¯¯- .
Math
¯¯/ 3
.
¯¯3 4
Abs
¯¯4 7
(
¯¯7 8
offset
¯¯8 >
.
¯¯> ?
Y
¯¯? @
*
¯¯A B
$num
¯¯C D
)
¯¯D E
;
¯¯E F
break
˘˘ 
;
˘˘ 
case
˙˙ #
PopupBoxPlacementMode
˙˙ *
.
˙˙* + 
TopAndAlignCentres
˙˙+ =
:
˙˙= >
x
˚˚ 
=
˚˚ 

targetSize
˚˚ "
.
˚˚" #
Width
˚˚# (
/
˚˚( )
$num
˚˚) *
-
˚˚+ ,
	popupSize
˚˚- 6
.
˚˚6 7
Width
˚˚7 <
/
˚˚< =
$num
˚˚= >
-
˚˚? @
Math
˚˚A E
.
˚˚E F
Abs
˚˚F I
(
˚˚I J
offset
˚˚J P
.
˚˚P Q
X
˚˚Q R
*
˚˚R S
$num
˚˚S T
)
˚˚T U
;
˚˚U V
y
¸¸ 
=
¸¸ 
$num
¸¸ 
-
¸¸ 
	popupSize
¸¸ %
.
¸¸% &
Height
¸¸& ,
-
¸¸- .
Math
¸¸/ 3
.
¸¸3 4
Abs
¸¸4 7
(
¸¸7 8
offset
¸¸8 >
.
¸¸> ?
Y
¸¸? @
*
¸¸A B
$num
¸¸C D
)
¸¸D E
;
¸¸E F
break
˝˝ 
;
˝˝ 
case
˛˛ #
PopupBoxPlacementMode
˛˛ *
.
˛˛* +"
LeftAndAlignTopEdges
˛˛+ ?
:
˛˛? @
x
ˇˇ 
=
ˇˇ 
$num
ˇˇ 
-
ˇˇ 
	popupSize
ˇˇ %
.
ˇˇ% &
Width
ˇˇ& +
-
ˇˇ, -
Math
ˇˇ. 2
.
ˇˇ2 3
Abs
ˇˇ3 6
(
ˇˇ6 7
offset
ˇˇ7 =
.
ˇˇ= >
X
ˇˇ> ?
*
ˇˇ@ A
$num
ˇˇB C
)
ˇˇC D
;
ˇˇD E
y
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
-
ÄÄ 
Math
ÄÄ  
.
ÄÄ  !
Abs
ÄÄ! $
(
ÄÄ$ %
offset
ÄÄ% +
.
ÄÄ+ ,
Y
ÄÄ, -
*
ÄÄ. /
$num
ÄÄ0 1
)
ÄÄ1 2
;
ÄÄ2 3
break
ÅÅ 
;
ÅÅ 
case
ÇÇ #
PopupBoxPlacementMode
ÇÇ *
.
ÇÇ* +%
LeftAndAlignBottomEdges
ÇÇ+ B
:
ÇÇB C
x
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
-
ÉÉ 
	popupSize
ÉÉ %
.
ÉÉ% &
Width
ÉÉ& +
-
ÉÉ, -
Math
ÉÉ. 2
.
ÉÉ2 3
Abs
ÉÉ3 6
(
ÉÉ6 7
offset
ÉÉ7 =
.
ÉÉ= >
X
ÉÉ> ?
*
ÉÉ@ A
$num
ÉÉB C
)
ÉÉC D
;
ÉÉD E
y
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
-
ÑÑ 
(
ÑÑ 
	popupSize
ÑÑ &
.
ÑÑ& '
Height
ÑÑ' -
-
ÑÑ. /

targetSize
ÑÑ0 :
.
ÑÑ: ;
Height
ÑÑ; A
)
ÑÑA B
;
ÑÑB C
break
ÖÖ 
;
ÖÖ 
case
ÜÜ #
PopupBoxPlacementMode
ÜÜ *
.
ÜÜ* +!
LeftAndAlignMiddles
ÜÜ+ >
:
ÜÜ> ?
x
áá 
=
áá 
$num
áá 
-
áá 
	popupSize
áá %
.
áá% &
Width
áá& +
-
áá, -
Math
áá. 2
.
áá2 3
Abs
áá3 6
(
áá6 7
offset
áá7 =
.
áá= >
X
áá> ?
*
áá@ A
$num
ááB C
)
ááC D
;
ááD E
y
àà 
=
àà 

targetSize
àà "
.
àà" #
Height
àà# )
/
àà* +
$num
àà, -
-
àà. /
	popupSize
àà0 9
.
àà9 :
Height
àà: @
/
ààA B
$num
ààC D
-
ààE F
Math
ààG K
.
ààK L
Abs
ààL O
(
ààO P
offset
ààP V
.
ààV W
Y
ààW X
*
ààY Z
$num
àà[ \
)
àà\ ]
;
àà] ^
break
ââ 
;
ââ 
case
ää #
PopupBoxPlacementMode
ää *
.
ää* +#
RightAndAlignTopEdges
ää+ @
:
ää@ A
x
ãã 
=
ãã 

targetSize
ãã "
.
ãã" #
Width
ãã# (
;
ãã( )
y
åå 
=
åå 
$num
åå 
-
åå 
Math
åå  
.
åå  !
Abs
åå! $
(
åå$ %
offset
åå% +
.
åå+ ,
X
åå, -
*
åå. /
$num
åå0 1
)
åå1 2
;
åå2 3
break
çç 
;
çç 
case
éé #
PopupBoxPlacementMode
éé *
.
éé* +&
RightAndAlignBottomEdges
éé+ C
:
ééC D
x
èè 
=
èè 

targetSize
èè "
.
èè" #
Width
èè# (
;
èè( )
y
êê 
=
êê 
$num
êê 
-
êê 
(
êê 
	popupSize
êê &
.
êê& '
Height
êê' -
-
êê. /

targetSize
êê0 :
.
êê: ;
Height
êê; A
)
êêA B
;
êêB C
break
ëë 
;
ëë 
case
íí #
PopupBoxPlacementMode
íí *
.
íí* +"
RightAndAlignMiddles
íí+ ?
:
íí? @
x
ìì 
=
ìì 

targetSize
ìì "
.
ìì" #
Width
ìì# (
;
ìì( )
y
îî 
=
îî 

targetSize
îî "
.
îî" #
Height
îî# )
/
îî* +
$num
îî, -
-
îî. /
	popupSize
îî0 9
.
îî9 :
Height
îî: @
/
îîA B
$num
îîC D
-
îîE F
Math
îîG K
.
îîK L
Abs
îîL O
(
îîO P
offset
îîP V
.
îîV W
Y
îîW X
*
îîY Z
$num
îî[ \
)
îî\ ]
;
îî] ^
break
ïï 
;
ïï 
default
ññ 
:
ññ 
throw
óó 
new
óó )
ArgumentOutOfRangeException
óó 9
(
óó9 :
)
óó: ;
;
óó; <
}
òò (
_popupPointFromLastRequest
öö &
=
öö' (
new
öö) ,
Point
öö- 2
(
öö2 3
x
öö3 4
,
öö4 5
y
öö6 7
)
öö7 8
;
öö8 9
return
õõ 
new
õõ 
[
õõ 
]
õõ 
{
õõ 
new
õõ "
CustomPopupPlacement
õõ 2
(
õõ2 3(
_popupPointFromLastRequest
õõ3 M
,
õõM N
PopupPrimaryAxis
õõO _
.
õõ_ `

Horizontal
õõ` j
)
õõj k
}
õõk l
;
õõl m
}
úú 	
private
ûû 
void
ûû 
AnimateChildrenIn
ûû &
(
ûû& '
bool
ûû' +
reverse
ûû, 3
)
ûû3 4
{
üü 	
if
†† 
(
†† "
_popupContentControl
†† $
==
††% '
null
††( ,
)
††, -
return
††. 4
;
††4 5
if
°° 
(
°° 
VisualTreeHelper
°°  
.
°°  !
GetChildrenCount
°°! 1
(
°°1 2"
_popupContentControl
°°2 F
)
°°F G
!=
°°H J
$num
°°K L
)
°°L M
return
°°N T
;
°°T U
var
¢¢ 
contentPresenter
¢¢  
=
¢¢! "
VisualTreeHelper
¢¢# 3
.
¢¢3 4
GetChild
¢¢4 <
(
¢¢< ="
_popupContentControl
¢¢= Q
,
¢¢Q R
$num
¢¢S T
)
¢¢T U
as
¢¢V X
ContentPresenter
¢¢Y i
;
¢¢i j
var
§§ 
controls
§§ 
=
§§ 
contentPresenter
§§ +
.
§§+ ,'
VisualDepthFirstTraversal
§§, E
(
§§E F
)
§§F G
.
§§G H
OfType
§§H N
<
§§N O

ButtonBase
§§O Y
>
§§Y Z
(
§§Z [
)
§§[ \
;
§§\ ]
double
•• %
translateCoordinateFrom
•• *
;
••* +
if
¶¶ 
(
¶¶ 
(
¶¶ 
PlacementMode
¶¶ 
==
¶¶ !#
PopupBoxPlacementMode
¶¶" 7
.
¶¶7 8 
TopAndAlignCentres
¶¶8 J
||
ßß 
PlacementMode
ßß !
==
ßß" $#
PopupBoxPlacementMode
ßß% :
.
ßß: ;"
TopAndAlignLeftEdges
ßß; O
||
®® 
PlacementMode
®® !
==
®®" $#
PopupBoxPlacementMode
®®% :
.
®®: ;#
TopAndAlignRightEdges
®®; P
||
©© 
PlacementMode
©© !
==
©©" $#
PopupBoxPlacementMode
©©% :
.
©©: ;%
LeftAndAlignBottomEdges
©©; R
||
™™ 
PlacementMode
™™ !
==
™™" $#
PopupBoxPlacementMode
™™% :
.
™™: ;&
RightAndAlignBottomEdges
™™; S
||
´´ 
(
´´ 
UnfurlOrientation
´´ &
==
´´' )
Orientation
´´* 5
.
´´5 6

Horizontal
´´6 @
&&
´´A C
(
¨¨ 
PlacementMode
≠≠ &
==
≠≠' )#
PopupBoxPlacementMode
≠≠* ?
.
≠≠? @%
LeftAndAlignBottomEdges
≠≠@ W
||
ÆÆ 
PlacementMode
ÆÆ )
==
ÆÆ* ,#
PopupBoxPlacementMode
ÆÆ- B
.
ÆÆB C!
LeftAndAlignMiddles
ÆÆC V
||
ØØ 
PlacementMode
ØØ )
==
ØØ* ,#
PopupBoxPlacementMode
ØØ- B
.
ØØB C"
LeftAndAlignTopEdges
ØØC W
)
∞∞ 
)
∞∞ 
)
±± 
)
±± 
{
≤≤ 
controls
≥≥ 
=
≥≥ 
controls
≥≥ #
.
≥≥# $
Reverse
≥≥$ +
(
≥≥+ ,
)
≥≥, -
;
≥≥- .%
translateCoordinateFrom
¥¥ '
=
¥¥( )
$num
¥¥* ,
;
¥¥, -
}
µµ 
else
∂∂ %
translateCoordinateFrom
∑∑ '
=
∑∑( )
-
∑∑* +
$num
∑∑+ -
;
∑∑- .
var
ππ %
translateCoordinatePath
ππ '
=
ππ( )
$str
∫∫ _
+
ªª 
(
ªª 
UnfurlOrientation
ªª $
==
ªª% '
Orientation
ªª( 3
.
ªª3 4

Horizontal
ªª4 >
?
ªª? @
$str
ªªA E
:
ªªF G
$str
ªªH L
)
ªªL M
;
ªªM N
var
ΩΩ 
sineEase
ΩΩ 
=
ΩΩ 
new
ΩΩ 
SineEase
ΩΩ '
(
ΩΩ' (
)
ΩΩ( )
;
ΩΩ) *
var
øø 
i
øø 
=
øø 
$num
øø 
;
øø 
foreach
¿¿ 
(
¿¿ 
var
¿¿ 
	uiElement
¿¿ "
in
¿¿# %
controls
¿¿& .
)
¿¿. /
{
¡¡ 
var
¬¬ 
deferredStart
¬¬ !
=
¬¬" #
i
¬¬$ %
++
¬¬% '
*
¬¬' (
$num
¬¬( *
;
¬¬* +
var
√√ 
deferredEnd
√√ 
=
√√  !
deferredStart
√√" /
+
√√/ 0
$num
√√0 5
;
√√5 6
var
≈≈ !
absoluteZeroKeyTime
≈≈ '
=
≈≈( )
KeyTime
≈≈* 1
.
≈≈1 2
FromPercent
≈≈2 =
(
≈≈= >
$num
≈≈> A
)
≈≈A B
;
≈≈B C
var
∆∆ "
deferredStartKeyTime
∆∆ (
=
∆∆) *
KeyTime
∆∆+ 2
.
∆∆2 3
FromTimeSpan
∆∆3 ?
(
∆∆? @
TimeSpan
∆∆@ H
.
∆∆H I
FromMilliseconds
∆∆I Y
(
∆∆Y Z
deferredStart
∆∆Z g
)
∆∆g h
)
∆∆h i
;
∆∆i j
var
««  
deferredEndKeyTime
«« &
=
««' (
KeyTime
««) 0
.
««0 1
FromTimeSpan
««1 =
(
««= >
TimeSpan
««> F
.
««F G
FromMilliseconds
««G W
(
««W X
deferredEnd
««X c
)
««c d
)
««d e
;
««e f
var
…… ,
elementTranslateCoordinateFrom
…… 2
=
……3 4%
translateCoordinateFrom
……5 L
*
……M N
i
……O P
;
……P Q
var
    
translateTransform
   &
=
  ' (
new
  ) , 
TranslateTransform
  - ?
(
  ? @
UnfurlOrientation
ÀÀ %
==
ÀÀ& (
Orientation
ÀÀ) 4
.
ÀÀ4 5
Vertical
ÀÀ5 =
?
ÀÀ> ?
$num
ÀÀ@ A
:
ÀÀB C,
elementTranslateCoordinateFrom
ÀÀD b
,
ÀÀb c
UnfurlOrientation
ÃÃ %
==
ÃÃ& (
Orientation
ÃÃ) 4
.
ÃÃ4 5
Vertical
ÃÃ5 =
?
ÃÃ> ?,
elementTranslateCoordinateFrom
ÃÃ@ ^
:
ÃÃ_ `
$num
ÃÃa b
)
ÃÃb c
;
ÃÃc d
var
ŒŒ 
transformGroup
ŒŒ "
=
ŒŒ# $
new
ŒŒ% (
TransformGroup
ŒŒ) 7
{
œœ 
Children
–– 
=
–– 
new
–– "!
TransformCollection
––# 6
(
––6 7
new
––7 :
	Transform
––; D
[
––D E
]
––E F
{
—— 
new
““ 
ScaleTransform
““ *
(
““* +
$num
““+ ,
,
““, -
$num
““. /
)
““/ 0
,
““0 1 
translateTransform
”” *
}
‘‘ 
)
‘‘ 
}
’’ 
;
’’ 
	uiElement
÷÷ 
.
÷÷ 
SetCurrentValue
÷÷ )
(
÷÷) *+
RenderTransformOriginProperty
÷÷* G
,
÷÷G H
new
÷÷I L
Point
÷÷M R
(
÷÷R S
$num
÷÷S U
,
÷÷U V
$num
÷÷W Y
)
÷÷Y Z
)
÷÷Z [
;
÷÷[ \
	uiElement
◊◊ 
.
◊◊ 
RenderTransform
◊◊ )
=
◊◊* +
transformGroup
◊◊, :
;
◊◊: ;
var
ŸŸ 
opacityAnimation
ŸŸ $
=
ŸŸ% &
new
ŸŸ' *+
DoubleAnimationUsingKeyFrames
ŸŸ+ H
(
ŸŸH I
)
ŸŸI J
;
ŸŸJ K
opacityAnimation
⁄⁄  
.
⁄⁄  !
	KeyFrames
⁄⁄! *
.
⁄⁄* +
Add
⁄⁄+ .
(
⁄⁄. /
new
⁄⁄/ 2"
EasingDoubleKeyFrame
⁄⁄3 G
(
⁄⁄G H
$num
⁄⁄H I
,
⁄⁄I J!
absoluteZeroKeyTime
⁄⁄K ^
,
⁄⁄^ _
sineEase
⁄⁄` h
)
⁄⁄h i
)
⁄⁄i j
;
⁄⁄j k
opacityAnimation
€€  
.
€€  !
	KeyFrames
€€! *
.
€€* +
Add
€€+ .
(
€€. /
new
€€/ 2"
EasingDoubleKeyFrame
€€3 G
(
€€G H
$num
€€H I
,
€€I J"
deferredStartKeyTime
€€K _
,
€€_ `
sineEase
€€a i
)
€€i j
)
€€j k
;
€€k l
opacityAnimation
‹‹  
.
‹‹  !
	KeyFrames
‹‹! *
.
‹‹* +
Add
‹‹+ .
(
‹‹. /
new
‹‹/ 2"
EasingDoubleKeyFrame
‹‹3 G
(
‹‹G H
(
‹‹H I
double
‹‹I O
)
‹‹O P
	uiElement
‹‹P Y
.
‹‹Y Z#
GetAnimationBaseValue
‹‹Z o
(
‹‹o p
OpacityProperty
‹‹p 
)‹‹ Ä
,‹‹Ä Å"
deferredEndKeyTime‹‹Ç î
,‹‹î ï
sineEase‹‹ñ û
)‹‹û ü
)‹‹ü †
;‹‹† °

Storyboard
›› 
.
›› 
SetTargetProperty
›› ,
(
››, -
opacityAnimation
››- =
,
››= >
new
››? B
PropertyPath
››C O
(
››O P
$str
››P Y
)
››Y Z
)
››Z [
;
››[ \

Storyboard
ﬁﬁ 
.
ﬁﬁ 
	SetTarget
ﬁﬁ $
(
ﬁﬁ$ %
opacityAnimation
ﬁﬁ% 5
,
ﬁﬁ5 6
	uiElement
ﬁﬁ7 @
)
ﬁﬁ@ A
;
ﬁﬁA B
var
‡‡ 
scaleXAnimation
‡‡ #
=
‡‡$ %
new
‡‡& )+
DoubleAnimationUsingKeyFrames
‡‡* G
(
‡‡G H
)
‡‡H I
;
‡‡I J
scaleXAnimation
·· 
.
··  
	KeyFrames
··  )
.
··) *
Add
··* -
(
··- .
new
··. 1"
EasingDoubleKeyFrame
··2 F
(
··F G
$num
··G H
,
··H I!
absoluteZeroKeyTime
··J ]
,
··] ^
sineEase
··_ g
)
··g h
)
··h i
;
··i j
scaleXAnimation
‚‚ 
.
‚‚  
	KeyFrames
‚‚  )
.
‚‚) *
Add
‚‚* -
(
‚‚- .
new
‚‚. 1"
EasingDoubleKeyFrame
‚‚2 F
(
‚‚F G
$num
‚‚G H
,
‚‚H I"
deferredStartKeyTime
‚‚J ^
,
‚‚^ _
sineEase
‚‚` h
)
‚‚h i
)
‚‚i j
;
‚‚j k
scaleXAnimation
„„ 
.
„„  
	KeyFrames
„„  )
.
„„) *
Add
„„* -
(
„„- .
new
„„. 1"
EasingDoubleKeyFrame
„„2 F
(
„„F G
$num
„„G H
,
„„H I 
deferredEndKeyTime
„„J \
,
„„\ ]
sineEase
„„^ f
)
„„f g
)
„„g h
;
„„h i

Storyboard
‰‰ 
.
‰‰ 
SetTargetProperty
‰‰ ,
(
‰‰, -
scaleXAnimation
‰‰- <
,
‰‰< =
new
‰‰> A
PropertyPath
‰‰B N
(
‰‰N O
$str‰‰O °
)‰‰° ¢
)‰‰¢ £
;‰‰£ §

Storyboard
ÂÂ 
.
ÂÂ 
	SetTarget
ÂÂ $
(
ÂÂ$ %
scaleXAnimation
ÂÂ% 4
,
ÂÂ4 5
	uiElement
ÂÂ6 ?
)
ÂÂ? @
;
ÂÂ@ A
var
ÁÁ 
scaleYAnimation
ÁÁ #
=
ÁÁ$ %
new
ÁÁ& )+
DoubleAnimationUsingKeyFrames
ÁÁ* G
(
ÁÁG H
)
ÁÁH I
;
ÁÁI J
scaleYAnimation
ËË 
.
ËË  
	KeyFrames
ËË  )
.
ËË) *
Add
ËË* -
(
ËË- .
new
ËË. 1"
EasingDoubleKeyFrame
ËË2 F
(
ËËF G
$num
ËËG H
,
ËËH I!
absoluteZeroKeyTime
ËËJ ]
,
ËË] ^
sineEase
ËË_ g
)
ËËg h
)
ËËh i
;
ËËi j
scaleYAnimation
ÈÈ 
.
ÈÈ  
	KeyFrames
ÈÈ  )
.
ÈÈ) *
Add
ÈÈ* -
(
ÈÈ- .
new
ÈÈ. 1"
EasingDoubleKeyFrame
ÈÈ2 F
(
ÈÈF G
$num
ÈÈG H
,
ÈÈH I"
deferredStartKeyTime
ÈÈJ ^
,
ÈÈ^ _
sineEase
ÈÈ` h
)
ÈÈh i
)
ÈÈi j
;
ÈÈj k
scaleYAnimation
ÍÍ 
.
ÍÍ  
	KeyFrames
ÍÍ  )
.
ÍÍ) *
Add
ÍÍ* -
(
ÍÍ- .
new
ÍÍ. 1"
EasingDoubleKeyFrame
ÍÍ2 F
(
ÍÍF G
$num
ÍÍG H
,
ÍÍH I 
deferredEndKeyTime
ÍÍJ \
,
ÍÍ\ ]
sineEase
ÍÍ^ f
)
ÍÍf g
)
ÍÍg h
;
ÍÍh i

Storyboard
ÎÎ 
.
ÎÎ 
SetTargetProperty
ÎÎ ,
(
ÎÎ, -
scaleYAnimation
ÎÎ- <
,
ÎÎ< =
new
ÎÎ> A
PropertyPath
ÎÎB N
(
ÎÎN O
$strÎÎO °
)ÎÎ° ¢
)ÎÎ¢ £
;ÎÎ£ §

Storyboard
ÏÏ 
.
ÏÏ 
	SetTarget
ÏÏ $
(
ÏÏ$ %
scaleYAnimation
ÏÏ% 4
,
ÏÏ4 5
	uiElement
ÏÏ6 ?
)
ÏÏ? @
;
ÏÏ@ A
var
ÓÓ *
translateCoordinateAnimation
ÓÓ 0
=
ÓÓ1 2
new
ÓÓ3 6+
DoubleAnimationUsingKeyFrames
ÓÓ7 T
(
ÓÓT U
)
ÓÓU V
;
ÓÓV W*
translateCoordinateAnimation
ÔÔ ,
.
ÔÔ, -
	KeyFrames
ÔÔ- 6
.
ÔÔ6 7
Add
ÔÔ7 :
(
ÔÔ: ;
new
ÔÔ; >"
EasingDoubleKeyFrame
ÔÔ? S
(
ÔÔS T,
elementTranslateCoordinateFrom
ÔÔT r
,
ÔÔr s"
absoluteZeroKeyTimeÔÔt á
,ÔÔá à
sineEaseÔÔâ ë
)ÔÔë í
)ÔÔí ì
;ÔÔì î*
translateCoordinateAnimation
 ,
.
, -
	KeyFrames
- 6
.
6 7
Add
7 :
(
: ;
new
; >"
EasingDoubleKeyFrame
? S
(
S T,
elementTranslateCoordinateFrom
T r
,
r s#
deferredStartKeyTimet à
,à â
sineEaseä í
)í ì
)ì î
;î ï*
translateCoordinateAnimation
ÒÒ ,
.
ÒÒ, -
	KeyFrames
ÒÒ- 6
.
ÒÒ6 7
Add
ÒÒ7 :
(
ÒÒ: ;
new
ÒÒ; >"
EasingDoubleKeyFrame
ÒÒ? S
(
ÒÒS T
$num
ÒÒT U
,
ÒÒU V 
deferredEndKeyTime
ÒÒW i
,
ÒÒi j
sineEase
ÒÒk s
)
ÒÒs t
)
ÒÒt u
;
ÒÒu v

Storyboard
ÛÛ 
.
ÛÛ 
SetTargetProperty
ÛÛ ,
(
ÛÛ, -*
translateCoordinateAnimation
ÛÛ- I
,
ÛÛI J
new
ÛÛK N
PropertyPath
ÛÛO [
(
ÛÛ[ \%
translateCoordinatePath
ÛÛ\ s
)
ÛÛs t
)
ÛÛt u
;
ÛÛu v

Storyboard
ÙÙ 
.
ÙÙ 
	SetTarget
ÙÙ $
(
ÙÙ$ %*
translateCoordinateAnimation
ÙÙ% A
,
ÙÙA B
	uiElement
ÙÙC L
)
ÙÙL M
;
ÙÙM N
var
ˆˆ 

storyboard
ˆˆ 
=
ˆˆ  
new
ˆˆ! $

Storyboard
ˆˆ% /
(
ˆˆ/ 0
)
ˆˆ0 1
;
ˆˆ1 2

storyboard
¯¯ 
.
¯¯ 
Children
¯¯ #
.
¯¯# $
Add
¯¯$ '
(
¯¯' (
opacityAnimation
¯¯( 8
)
¯¯8 9
;
¯¯9 :

storyboard
˘˘ 
.
˘˘ 
Children
˘˘ #
.
˘˘# $
Add
˘˘$ '
(
˘˘' (
scaleXAnimation
˘˘( 7
)
˘˘7 8
;
˘˘8 9

storyboard
˙˙ 
.
˙˙ 
Children
˙˙ #
.
˙˙# $
Add
˙˙$ '
(
˙˙' (
scaleYAnimation
˙˙( 7
)
˙˙7 8
;
˙˙8 9

storyboard
˚˚ 
.
˚˚ 
Children
˚˚ #
.
˚˚# $
Add
˚˚$ '
(
˚˚' (*
translateCoordinateAnimation
˚˚( D
)
˚˚D E
;
˚˚E F
if
˝˝ 
(
˝˝ 
reverse
˝˝ 
)
˝˝ 
{
˛˛ 

storyboard
ˇˇ 
.
ˇˇ 
AutoReverse
ˇˇ *
=
ˇˇ+ ,
true
ˇˇ- 1
;
ˇˇ1 2

storyboard
ÄÄ 
.
ÄÄ 
Begin
ÄÄ $
(
ÄÄ$ %
)
ÄÄ% &
;
ÄÄ& '

storyboard
ÅÅ 
.
ÅÅ 
Seek
ÅÅ #
(
ÅÅ# $
TimeSpan
ÅÅ$ ,
.
ÅÅ, -
FromMilliseconds
ÅÅ- =
(
ÅÅ= >
deferredEnd
ÅÅ> I
)
ÅÅI J
)
ÅÅJ K
;
ÅÅK L

storyboard
ÇÇ 
.
ÇÇ 
Resume
ÇÇ %
(
ÇÇ% &
)
ÇÇ& '
;
ÇÇ' (
}
ÉÉ 
else
ÑÑ 

storyboard
ÖÖ 
.
ÖÖ 
Begin
ÖÖ $
(
ÖÖ$ %
)
ÖÖ% &
;
ÖÖ& '
}
ÜÜ 
}
áá 	
[
ãã 	
	DllImport
ãã	 
(
ãã 
$str
ãã 
,
ãã  
CharSet
ãã! (
=
ãã) *
CharSet
ãã+ 2
.
ãã2 3
Auto
ãã3 7
)
ãã7 8
]
ãã8 9
private
åå 
static
åå 
extern
åå 
IntPtr
åå $

GetCapture
åå% /
(
åå/ 0
)
åå0 1
;
åå1 2
private
éé 
static
éé 
void
éé  
OnLostMouseCapture
éé .
(
éé. /
object
éé/ 5
sender
éé6 <
,
éé< =
MouseEventArgs
éé> L
e
ééM N
)
ééN O
{
èè 	
var
êê 
popupBox
êê 
=
êê 
(
êê 
PopupBox
êê $
)
êê$ %
sender
êê& ,
;
êê, -
if
íí 
(
íí 
Equals
íí 
(
íí 
Mouse
íí 
.
íí 
Captured
íí %
,
íí% &
popupBox
íí' /
)
íí/ 0
)
íí0 1
return
íí2 8
;
íí8 9
if
îî 
(
îî 
Equals
îî 
(
îî 
e
îî 
.
îî 
OriginalSource
îî '
,
îî' (
popupBox
îî) 1
)
îî1 2
)
îî2 3
{
ïï 
if
ññ 
(
ññ 
Mouse
ññ 
.
ññ 
Captured
ññ "
==
ññ# %
null
ññ& *
||
ññ+ -
popupBox
ññ. 6
.
ññ6 7
_popup
ññ7 =
==
ññ> @
null
ññA E
)
ññE F
{
óó 
if
òò 
(
òò 
!
òò 
(
òò 
Mouse
òò 
.
òò  
Captured
òò  (
as
òò) +
DependencyObject
òò, <
)
òò< =
.
òò= >
IsDescendantOf
òò> L
(
òòL M
popupBox
òòM U
.
òòU V
_popup
òòV \
)
òò\ ]
)
òò] ^
{
ôô 
popupBox
öö  
.
öö  !
Close
öö! &
(
öö& '
)
öö' (
;
öö( )
}
õõ 
}
úú 
}
ùù 
else
ûû 
{
üü 
if
†† 
(
†† 
(
†† 
Mouse
†† 
.
†† 
Captured
†† #
as
††$ &
DependencyObject
††' 7
)
††7 8
.
††8 9
GetVisualAncestry
††9 J
(
††J K
)
††K L
.
††L M
Contains
††M U
(
††U V
popupBox
††V ^
.
††^ _
_popup
††_ e
.
††e f
Child
††f k
)
††k l
)
††l m
{
°° 
if
££ 
(
££ 
!
££ 
popupBox
££ !
.
££! "
IsPopupOpen
££" -
||
££. 0
Mouse
££1 6
.
££6 7
Captured
££7 ?
!=
££@ B
null
££C G
||
££H J

GetCapture
££K U
(
££U V
)
££V W
!=
££X Z
IntPtr
££[ a
.
££a b
Zero
££b f
)
££f g
return
££h n
;
££n o
Mouse
•• 
.
•• 
Capture
•• !
(
••! "
popupBox
••" *
,
••* +
CaptureMode
••, 7
.
••7 8
SubTree
••8 ?
)
••? @
;
••@ A
e
¶¶ 
.
¶¶ 
Handled
¶¶ 
=
¶¶ 
true
¶¶  $
;
¶¶$ %
}
ßß 
else
®® 
{
©© 
if
™™ 
(
™™ 
popupBox
™™  
.
™™  !
	StaysOpen
™™! *
&&
™™+ -
popupBox
™™. 6
.
™™6 7
IsPopupOpen
™™7 B
)
™™B C
{
´´ 
if
≠≠ 
(
≠≠ 

GetCapture
≠≠ &
(
≠≠& '
)
≠≠' (
!=
≠≠) +
IntPtr
≠≠, 2
.
≠≠2 3
Zero
≠≠3 7
)
≠≠7 8
return
≠≠9 ?
;
≠≠? @
Mouse
∞∞ 
.
∞∞ 
Capture
∞∞ %
(
∞∞% &
popupBox
∞∞& .
,
∞∞. /
CaptureMode
∞∞0 ;
.
∞∞; <
SubTree
∞∞< C
)
∞∞C D
;
∞∞D E
e
±± 
.
±± 
Handled
±± !
=
±±" #
true
±±$ (
;
±±( )
}
≤≤ 
else
≥≥ 
{
¥¥ 
popupBox
µµ  
.
µµ  !
Close
µµ! &
(
µµ& '
)
µµ' (
;
µµ( )
}
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 	
private
ªª 
static
ªª 
void
ªª 
OnMouseButtonDown
ªª -
(
ªª- .
object
ªª. 4
sender
ªª5 ;
,
ªª; <"
MouseButtonEventArgs
ªª= Q
e
ªªR S
)
ªªS T
{
ºº 	
var
ΩΩ 
popupBox
ΩΩ 
=
ΩΩ 
(
ΩΩ 
PopupBox
ΩΩ $
)
ΩΩ$ %
sender
ΩΩ& ,
;
ΩΩ, -
if
øø 
(
øø 
!
øø 
popupBox
øø 
.
øø #
IsKeyboardFocusWithin
øø /
)
øø/ 0
{
¿¿ 
popupBox
¡¡ 
.
¡¡ 
Focus
¡¡ 
(
¡¡ 
)
¡¡  
;
¡¡  !
}
¬¬ 
e
ƒƒ 
.
ƒƒ 
Handled
ƒƒ 
=
ƒƒ 
true
ƒƒ 
;
ƒƒ 
if
∆∆ 
(
∆∆ 
Mouse
∆∆ 
.
∆∆ 
Captured
∆∆ 
==
∆∆ !
popupBox
∆∆" *
&&
∆∆+ -
e
∆∆. /
.
∆∆/ 0
OriginalSource
∆∆0 >
==
∆∆? A
popupBox
∆∆B J
)
∆∆J K
{
«« 
popupBox
»» 
.
»» 
Close
»» 
(
»» 
)
»»  
;
»»  !
}
…… 
}
   	
	protected
ÃÃ 
override
ÃÃ 
void
ÃÃ !
OnMouseLeftButtonUp
ÃÃ  3
(
ÃÃ3 4"
MouseButtonEventArgs
ÃÃ4 H
e
ÃÃI J
)
ÃÃJ K
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
IsPopupOpen
ŒŒ 
&&
ŒŒ 
!
ŒŒ  
	StaysOpen
ŒŒ  )
)
ŒŒ) *
{
œœ 
Close
–– 
(
–– 
)
–– 
;
–– 
e
—— 
.
—— 
Handled
—— 
=
—— 
true
——  
;
——  !
}
““ 
else
”” 
base
‘‘ 
.
‘‘ !
OnMouseLeftButtonUp
‘‘ (
(
‘‘( )
e
‘‘) *
)
‘‘* +
;
‘‘+ ,
}
’’ 	
private
ŸŸ 
void
ŸŸ 
PopupOnLoaded
ŸŸ "
(
ŸŸ" #
object
ŸŸ# )
sender
ŸŸ* 0
,
ŸŸ0 1
RoutedEventArgs
ŸŸ2 A
routedEventArgs
ŸŸB Q
)
ŸŸQ R
{
⁄⁄ 	
if
€€ 
(
€€ 
	PopupMode
€€ 
==
€€ 
PopupBoxPopupMode
€€ .
.
€€. /
MouseOverEager
€€/ =
)
€€= >
_popup
‹‹ 
.
‹‹ 
IsOpen
‹‹ 
=
‹‹ 
true
‹‹  $
;
‹‹$ %
}
›› 	
private
ﬂﬂ 
void
ﬂﬂ 4
&ToggleButtonOnPreviewMouseLeftButtonUp
ﬂﬂ ;
(
ﬂﬂ; <
object
ﬂﬂ< B
sender
ﬂﬂC I
,
ﬂﬂI J"
MouseButtonEventArgs
ﬂﬂK _"
mouseButtonEventArgs
ﬂﬂ` t
)
ﬂﬂt u
{
‡‡ 	
if
·· 
(
·· 
	PopupMode
·· 
==
·· 
PopupBoxPopupMode
·· .
.
··. /
Click
··/ 4
||
··5 7
!
··8 9
IsPopupOpen
··9 D
)
··D E
return
··F L
;
··L M
if
„„ 
(
„„ "
ToggleCheckedContent
„„ $
!=
„„% '
null
„„( ,
)
„„, -
{
‰‰ )
OnToggleCheckedContentClick
ÂÂ +
(
ÂÂ+ ,
)
ÂÂ, -
;
ÂÂ- .
if
ÁÁ 
(
ÁÁ )
ToggleCheckedContentCommand
ÁÁ /
!=
ÁÁ0 2
null
ÁÁ3 7
&&
ËË )
ToggleCheckedContentCommand
ËË 2
.
ËË2 3

CanExecute
ËË3 =
(
ËË= >2
$ToggleCheckedContentCommandParameter
ËË> b
)
ËËb c
)
ÈÈ 
{
ÍÍ )
ToggleCheckedContentCommand
ÎÎ /
.
ÎÎ/ 0
Execute
ÎÎ0 7
(
ÎÎ7 82
$ToggleCheckedContentCommandParameter
ÎÎ8 \
)
ÎÎ\ ]
;
ÎÎ] ^
}
ÏÏ 
}
ÌÌ 
Close
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
Mouse
 
.
 
Capture
 
(
 
null
 
)
 
;
  "
mouseButtonEventArgs
ÒÒ  
.
ÒÒ  !
Handled
ÒÒ! (
=
ÒÒ) *
true
ÒÒ+ /
;
ÒÒ/ 0
}
ÚÚ 	
private
ÙÙ 
static
ÙÙ 
object
ÙÙ $
CoerceToolTipIsEnabled
ÙÙ 4
(
ÙÙ4 5
DependencyObject
ÙÙ5 E
dependencyObject
ÙÙF V
,
ÙÙV W
object
ÙÙX ^
value
ÙÙ_ d
)
ÙÙd e
{
ıı 	
var
ˆˆ 
popupBox
ˆˆ 
=
ˆˆ 
(
ˆˆ 
PopupBox
ˆˆ $
)
ˆˆ$ %
dependencyObject
ˆˆ& 6
;
ˆˆ6 7
return
˜˜ 
popupBox
˜˜ 
.
˜˜ 
IsPopupOpen
˜˜ '
?
˜˜( )
false
˜˜* /
:
˜˜0 1
value
˜˜2 7
;
˜˜7 8
}
¯¯ 	
}
˘˘ 
}˙˙ îé
TD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\PaletteHelper.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class 
PaletteHelper 
{ 
public 
virtual 
void 
SetLightDark (
(( )
bool) -
isDark. 4
)4 5
{ 	
var &
existingResourceDictionary *
=+ ,
Application- 8
.8 9
Current9 @
.@ A
	ResourcesA J
.J K
MergedDictionariesK ]
. 
Where 
( 
rd 
=> 
rd 
.  
Source  &
!=' )
null* .
). /
. 
SingleOrDefault  
(  !
rd! #
=>$ &
Regex' ,
., -
Match- 2
(2 3
rd3 5
.5 6
Source6 <
.< =
OriginalString= K
,K L
$str	M •
)
• ¶
.
¶ ß
Success
ß Æ
)
Æ Ø
;
Ø ∞
if 
( &
existingResourceDictionary *
==+ -
null. 2
)2 3
throw 
new  
ApplicationException .
(. /
$str/ o
)o p
;p q
var 
source 
= 
$" a
Upack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme. g
{g h
(h i
isDarki o
?p q
$strr x
:y z
$str	{ Ç
)
Ç É
}
É Ñ
.xaml
Ñ â
"
â ä
;
ä ã
var !
newResourceDictionary %
=& '
new( +
ResourceDictionary, >
(> ?
)? @
{A B
SourceC I
=J K
newL O
UriP S
(S T
sourceT Z
)Z [
}\ ]
;] ^
Application 
. 
Current 
.  
	Resources  )
.) *
MergedDictionaries* <
.< =
Remove= C
(C D&
existingResourceDictionaryD ^
)^ _
;_ `
Application 
. 
Current 
.  
	Resources  )
.) *
MergedDictionaries* <
.< =
Add= @
(@ A!
newResourceDictionaryA V
)V W
;W X
var -
!existingMahAppsResourceDictionary 1
=2 3
Application4 ?
.? @
Current@ G
.G H
	ResourcesH Q
.Q R
MergedDictionariesR d
. 
Where 
( 
rd 
=> 
rd 
.  
Source  &
!=' )
null* .
). /
.   
SingleOrDefault    
(    !
rd  ! #
=>  $ &
Regex  ' ,
.  , -
Match  - 2
(  2 3
rd  3 5
.  5 6
Source  6 <
.  < =
OriginalString  = K
,  K L
$str	  M ñ
)
  ñ ó
.
  ó ò
Success
  ò ü
)
  ü †
;
  † °
if!! 
(!! -
!existingMahAppsResourceDictionary!! 1
==!!2 4
null!!5 9
)!!9 :
return!!; A
;!!A B
source## 
=## 
$"$$ J
>pack://application:,,,/MahApps.Metro;component/Styles/Accents/$$ P
{$$P Q
($$Q R
isDark$$R X
?$$Y Z
$str$$[ e
:$$f g
$str$$h s
)$$s t
}$$t u
.xaml$$u z
"$$z {
;$${ |
var%% (
newMahAppsResourceDictionary%% ,
=%%- .
new%%/ 2
ResourceDictionary%%3 E
{%%F G
Source%%H N
=%%O P
new%%Q T
Uri%%U X
(%%X Y
source%%Y _
)%%_ `
}%%a b
;%%b c
Application'' 
.'' 
Current'' 
.''  
	Resources''  )
.'') *
MergedDictionaries''* <
.''< =
Remove''= C
(''C D-
!existingMahAppsResourceDictionary''D e
)''e f
;''f g
Application(( 
.(( 
Current(( 
.((  
	Resources((  )
.(() *
MergedDictionaries((* <
.((< =
Add((= @
(((@ A(
newMahAppsResourceDictionary((A ]
)((] ^
;((^ _
})) 	
public.. 
virtual.. 
void.. 
ReplacePalette.. *
(..* +
Palette..+ 2
palette..3 :
)..: ;
{// 	
if00 
(00 
palette00 
==00 
null00 
)00  
throw00! &
new00' *!
ArgumentNullException00+ @
(00@ A
nameof00A G
(00G H
palette00H O
)00O P
)00P Q
;00Q R
var22 
allHues22 
=22 
palette22 !
.22! "
PrimarySwatch22" /
.22/ 0
PrimaryHues220 ;
.22; <
ToList22< B
(22B C
)22C D
;22D E
ReplacePrimaryColor33 
(33  
palette44 
.44 
PrimarySwatch44 %
,44% &
allHues55 
[55 
palette55 
.55   
PrimaryLightHueIndex55  4
]554 5
,555 6
allHues66 
[66 
palette66 
.66  
PrimaryMidHueIndex66  2
]662 3
,663 4
allHues77 
[77 
palette77 
.77  
PrimaryDarkHueIndex77  3
]773 4
,774 5
allHues88 
)88 
;88 
var:: 
	accentHue:: 
=:: 
palette:: #
.::# $
AccentSwatch::$ 0
.::0 1

AccentHues::1 ;
.::; <
	ElementAt::< E
(::E F
palette::F M
.::M N
AccentHueIndex::N \
)::\ ]
;::] ^
ReplaceEntry;; 
(;; 
$str;; /
,;;/ 0
new;;1 4
SolidColorBrush;;5 D
(;;D E
	accentHue;;E N
.;;N O
Color;;O T
);;T U
);;U V
;;;V W
ReplaceEntry<< 
(<< 
$str<< 9
,<<9 :
new<<; >
SolidColorBrush<<? N
(<<N O
	accentHue<<O X
.<<X Y

Foreground<<Y c
)<<c d
)<<d e
;<<e f
}== 	
publicCC 
virtualCC 
voidCC 
ReplacePrimaryColorCC /
(CC/ 0
SwatchCC0 6
swatchCC7 =
)CC= >
{DD 	
ifEE 
(EE 
swatchEE 
==EE 
nullEE 
)EE 
throwEE  %
newEE& )!
ArgumentNullExceptionEE* ?
(EE? @
nameofEE@ F
(EEF G
swatchEEG M
)EEM N
)EEN O
;EEO P
varGG 
paletteGG 
=GG 
QueryPaletteGG &
(GG& '
)GG' (
;GG( )
varII 
listII 
=II 
swatchII 
.II 
PrimaryHuesII )
.II) *
ToListII* 0
(II0 1
)II1 2
;II2 3
varJJ 
lightJJ 
=JJ 
listJJ 
[JJ 
paletteJJ $
.JJ$ % 
PrimaryLightHueIndexJJ% 9
]JJ9 :
;JJ: ;
varKK 
midKK 
=KK 
listKK 
[KK 
paletteKK "
.KK" #
PrimaryMidHueIndexKK# 5
]KK5 6
;KK6 7
varLL 
darkLL 
=LL 
listLL 
[LL 
paletteLL #
.LL# $
PrimaryDarkHueIndexLL$ 7
]LL7 8
;LL8 9
ReplacePrimaryColorNN 
(NN  
swatchNN  &
,NN& '
lightNN( -
,NN- .
midNN/ 2
,NN2 3
darkNN4 8
,NN8 9
listNN: >
)NN> ?
;NN? @
}OO 	
publicQQ 
virtualQQ 
voidQQ 
ReplacePrimaryColorQQ /
(QQ/ 0
stringQQ0 6
nameQQ7 ;
)QQ; <
{RR 	
ifSS 
(SS 
nameSS 
==SS 
nullSS 
)SS 
throwSS #
newSS$ '!
ArgumentNullExceptionSS( =
(SS= >
nameofSS> D
(SSD E
nameSSE I
)SSI J
)SSJ K
;SSK L
varUU 
swatchUU 
=UU 
newUU 
SwatchesProviderUU -
(UU- .
)UU. /
.UU/ 0
SwatchesUU0 8
.UU8 9
FirstOrDefaultUU9 G
(UUG H
sVV 
=>VV 
stringVV 
.VV 
CompareVV #
(VV# $
sVV$ %
.VV% &
NameVV& *
,VV* +
nameVV, 0
,VV0 1
StringComparisonVV2 B
.VVB C&
InvariantCultureIgnoreCaseVVC ]
)VV] ^
==VV_ a
$numVVb c
)VVc d
;VVd e
ifXX 
(XX 
swatchXX 
==XX 
nullXX 
)XX 
throwYY 
newYY 
ArgumentExceptionYY +
(YY+ ,
$"YY, .
No such swatch 'YY. >
{YY> ?
nameYY? C
}YYC D
'YYD E
"YYE F
,YYF G
nameofYYH N
(YYN O
nameYYO S
)YYS T
)YYT U
;YYU V
ReplacePrimaryColor[[ 
([[  
swatch[[  &
)[[& '
;[[' (
}\\ 	
public^^ 
virtual^^ 
void^^ 
ReplaceAccentColor^^ .
(^^. /
Swatch^^/ 5
swatch^^6 <
)^^< =
{__ 	
if`` 
(`` 
swatch`` 
==`` 
null`` 
)`` 
throw``  %
new``& )!
ArgumentNullException``* ?
(``? @
nameof``@ F
(``F G
swatch``G M
)``M N
)``N O
;``O P
varbb 
palettebb 
=bb 
QueryPalettebb &
(bb& '
)bb' (
;bb( )
foreachdd 
(dd 
vardd 
colordd 
indd !
swatchdd" (
.dd( )

AccentHuesdd) 3
)dd3 4
{ee 
ReplaceEntryff 
(ff 
colorff "
.ff" #
Nameff# '
,ff' (
colorff) .
.ff. /
Colorff/ 4
)ff4 5
;ff5 6
ReplaceEntrygg 
(gg 
colorgg "
.gg" #
Namegg# '
+gg( )
$strgg* 6
,gg6 7
colorgg8 =
.gg= >

Foregroundgg> H
)ggH I
;ggI J
}hh 
varjj 
huejj 
=jj 
swatchjj 
.jj 

AccentHuesjj '
.jj' (
	ElementAtjj( 1
(jj1 2
palettejj2 9
.jj9 :
AccentHueIndexjj: H
)jjH I
;jjI J
ReplaceEntryll 
(ll 
$strll /
,ll/ 0
newll1 4
SolidColorBrushll5 D
(llD E
huellE H
.llH I
ColorllI N
)llN O
)llO P
;llP Q
ReplaceEntrymm 
(mm 
$strmm 9
,mm9 :
newmm; >
SolidColorBrushmm? N
(mmN O
huemmO R
.mmR S

ForegroundmmS ]
)mm] ^
)mm^ _
;mm_ `
}nn 	
publicpp 
virtualpp 
voidpp 
ReplaceAccentColorpp .
(pp. /
stringpp/ 5
namepp6 :
)pp: ;
{qq 	
ifrr 
(rr 
namerr 
==rr 
nullrr 
)rr 
throwrr #
newrr$ '!
ArgumentNullExceptionrr( =
(rr= >
nameofrr> D
(rrD E
namerrE I
)rrI J
)rrJ K
;rrK L
vartt 
swatchtt 
=tt 
newtt 
SwatchesProvidertt -
(tt- .
)tt. /
.tt/ 0
Swatchestt0 8
.tt8 9
FirstOrDefaulttt9 G
(ttG H
suu 
=>uu 
stringuu 
.uu 
Compareuu #
(uu# $
suu$ %
.uu% &
Nameuu& *
,uu* +
nameuu, 0
,uu0 1
StringComparisonuu2 B
.uuB C&
InvariantCultureIgnoreCaseuuC ]
)uu] ^
==uu_ a
$numuub c
&&uud f
suug h
.uuh i

IsAccenteduui s
)uus t
;uut u
ifww 
(ww 
swatchww 
==ww 
nullww 
)ww 
throwxx 
newxx 
ArgumentExceptionxx +
(xx+ ,
$"xx, .%
No such accented swatch 'xx. G
{xxG H
namexxH L
}xxL M
'xxM N
"xxN O
,xxO P
nameofxxQ W
(xxW X
namexxX \
)xx\ ]
)xx] ^
;xx^ _
ReplaceAccentColorzz 
(zz 
swatchzz %
)zz% &
;zz& '
}{{ 	
public
ÉÉ 
Palette
ÉÉ 
QueryPalette
ÉÉ #
(
ÉÉ# $
)
ÉÉ$ %
{
ÑÑ 	
var
ââ 
swatchesProvider
ââ  
=
ââ! "
new
ââ# &
SwatchesProvider
ââ' 7
(
ââ7 8
)
ââ8 9
;
ââ9 :
var
ää %
swatchByPrimaryHueIndex
ää '
=
ää( )
swatchesProvider
ää* :
.
ãã 
Swatches
ãã 
.
åå 

SelectMany
åå 
(
åå 
s
åå 
=>
åå  
s
åå! "
.
åå" #
PrimaryHues
åå# .
.
åå. /
Select
åå/ 5
(
åå5 6
h
åå6 7
=>
åå8 :
new
åå; >
{
åå? @
s
åå@ A
,
ååA B
h
ååC D
}
ååD E
)
ååE F
)
ååF G
.
çç 
ToDictionary
çç 
(
çç 
a
çç 
=>
çç  "
a
çç# $
.
çç$ %
h
çç% &
.
çç& '
Color
çç' ,
,
çç, -
a
çç. /
=>
çç0 2
a
çç3 4
.
çç4 5
s
çç5 6
)
çç6 7
;
çç7 8
var
éé $
swatchByAccentHueIndex
éé &
=
éé' (
swatchesProvider
éé) 9
.
èè 
Swatches
èè 
.
êê 
Where
êê 
(
êê 
s
êê 
=>
êê 
s
êê 
.
êê 

IsAccented
êê (
)
êê( )
.
ëë 

SelectMany
ëë 
(
ëë 
s
ëë 
=>
ëë  
s
ëë! "
.
ëë" #

AccentHues
ëë# -
.
ëë- .
Select
ëë. 4
(
ëë4 5
h
ëë5 6
=>
ëë7 9
new
ëë: =
{
ëë> ?
s
ëë@ A
,
ëëA B
h
ëëC D
}
ëëE F
)
ëëF G
)
ëëG H
.
íí 
ToDictionary
íí 
(
íí 
a
íí 
=>
íí  "
a
íí# $
.
íí$ %
h
íí% &
.
íí& '
Color
íí' ,
,
íí, -
a
íí. /
=>
íí0 2
a
íí3 4
.
íí4 5
s
íí5 6
)
íí6 7
;
íí7 8
var
îî 
primaryMidBrush
îî 
=
îî  !
GetBrush
îî" *
(
îî* +
$str
îî+ ?
)
îî? @
;
îî@ A
var
ïï 
accentBrush
ïï 
=
ïï 
GetBrush
ïï &
(
ïï& '
$str
ïï' =
)
ïï= >
;
ïï> ?
Swatch
óó 
primarySwatch
óó  
;
óó  !
if
òò 
(
òò 
!
òò %
swatchByPrimaryHueIndex
òò (
.
òò( )
TryGetValue
òò) 4
(
òò4 5
primaryMidBrush
òò5 D
.
òòD E
Color
òòE J
,
òòJ K
out
òòL O
primarySwatch
òòP ]
)
òò] ^
)
òò^ _
throw
ôô 
new
ôô '
InvalidOperationException
ôô 3
(
ôô3 4
$str
ôô4 f
)
ôôf g
;
ôôg h
Swatch
öö 
accentSwatch
öö 
;
öö  
if
õõ 
(
õõ 
!
õõ $
swatchByAccentHueIndex
õõ '
.
õõ' (
TryGetValue
õõ( 3
(
õõ3 4
accentBrush
õõ4 ?
.
õõ? @
Color
õõ@ E
,
õõE F
out
õõG J
accentSwatch
õõK W
)
õõW X
)
õõX Y
throw
úú 
new
úú '
InvalidOperationException
úú 3
(
úú3 4
$str
úú4 h
)
úúh i
;
úúi j
var
ûû 
primaryLightBrush
ûû !
=
ûû" #
GetBrush
ûû$ ,
(
ûû, -
$str
ûû- C
)
ûûC D
;
ûûD E
var
üü 
primaryDarkBrush
üü  
=
üü! "
GetBrush
üü# +
(
üü+ ,
$str
üü, A
)
üüA B
;
üüB C
var
°° "
primaryLightHueIndex
°° $
=
°°% &
GetHueIndex
°°' 2
(
°°2 3
primarySwatch
°°3 @
,
°°@ A
primaryLightBrush
°°B S
.
°°S T
Color
°°T Y
,
°°Y Z
false
°°[ `
)
°°` a
;
°°a b
var
¢¢  
primaryMidHueIndex
¢¢ "
=
¢¢# $
GetHueIndex
¢¢% 0
(
¢¢0 1
primarySwatch
¢¢1 >
,
¢¢> ?
primaryMidBrush
¢¢@ O
.
¢¢O P
Color
¢¢P U
,
¢¢U V
false
¢¢W \
)
¢¢\ ]
;
¢¢] ^
var
££ !
primaryDarkHueIndex
££ #
=
££$ %
GetHueIndex
££& 1
(
££1 2
primarySwatch
££2 ?
,
££? @
primaryDarkBrush
££A Q
.
££Q R
Color
££R W
,
££W X
false
££Y ^
)
££^ _
;
££_ `
var
§§ 
accentHueIndex
§§ 
=
§§  
GetHueIndex
§§! ,
(
§§, -
accentSwatch
§§- 9
,
§§9 :
accentBrush
§§; F
.
§§F G
Color
§§G L
,
§§L M
true
§§N R
)
§§R S
;
§§S T
return
¶¶ 
new
¶¶ 
Palette
¶¶ 
(
¶¶ 
primarySwatch
¶¶ ,
,
¶¶, -
accentSwatch
¶¶. :
,
¶¶: ;"
primaryLightHueIndex
¶¶< P
,
¶¶P Q 
primaryMidHueIndex
¶¶R d
,
¶¶d e!
primaryDarkHueIndex
¶¶f y
,
¶¶y z
accentHueIndex¶¶{ â
)¶¶â ä
;¶¶ä ã
}
ßß 	
private
©© 
static
©© 
void
©© !
ReplacePrimaryColor
©© /
(
©©/ 0
Swatch
©©0 6
swatch
©©7 =
,
©©= >
Hue
©©? B
light
©©C H
,
©©H I
Hue
©©J M
mid
©©N Q
,
©©Q R
Hue
©©S V
dark
©©W [
,
©©[ \
IList
©©] b
<
©©b c
Hue
©©c f
>
©©f g
allHues
©©h o
)
©©o p
{
™™ 	
foreach
´´ 
(
´´ 
var
´´ 
color
´´ 
in
´´ !
swatch
´´" (
.
´´( )
PrimaryHues
´´) 4
)
´´4 5
{
¨¨ 
ReplaceEntry
≠≠ 
(
≠≠ 
color
≠≠ "
.
≠≠" #
Name
≠≠# '
,
≠≠' (
color
≠≠) .
.
≠≠. /
Color
≠≠/ 4
)
≠≠4 5
;
≠≠5 6
ReplaceEntry
ÆÆ 
(
ÆÆ 
color
ÆÆ "
.
ÆÆ" #
Name
ÆÆ# '
+
ÆÆ( )
$str
ÆÆ* 6
,
ÆÆ6 7
color
ÆÆ8 =
.
ÆÆ= >

Foreground
ÆÆ> H
)
ÆÆH I
;
ÆÆI J
}
ØØ 
ReplaceEntry
±± 
(
±± 
$str
±± /
,
±±/ 0
new
±±1 4
SolidColorBrush
±±5 D
(
±±D E
light
±±E J
.
±±J K
Color
±±K P
)
±±P Q
)
±±Q R
;
±±R S
ReplaceEntry
≤≤ 
(
≤≤ 
$str
≤≤ 9
,
≤≤9 :
new
≤≤; >
SolidColorBrush
≤≤? N
(
≤≤N O
light
≤≤O T
.
≤≤T U

Foreground
≤≤U _
)
≤≤_ `
)
≤≤` a
;
≤≤a b
ReplaceEntry
≥≥ 
(
≥≥ 
$str
≥≥ -
,
≥≥- .
new
≥≥/ 2
SolidColorBrush
≥≥3 B
(
≥≥B C
mid
≥≥C F
.
≥≥F G
Color
≥≥G L
)
≥≥L M
)
≥≥M N
;
≥≥N O
ReplaceEntry
¥¥ 
(
¥¥ 
$str
¥¥ 7
,
¥¥7 8
new
¥¥9 <
SolidColorBrush
¥¥= L
(
¥¥L M
mid
¥¥M P
.
¥¥P Q

Foreground
¥¥Q [
)
¥¥[ \
)
¥¥\ ]
;
¥¥] ^
ReplaceEntry
µµ 
(
µµ 
$str
µµ .
,
µµ. /
new
µµ0 3
SolidColorBrush
µµ4 C
(
µµC D
dark
µµD H
.
µµH I
Color
µµI N
)
µµN O
)
µµO P
;
µµP Q
ReplaceEntry
∂∂ 
(
∂∂ 
$str
∂∂ 8
,
∂∂8 9
new
∂∂: =
SolidColorBrush
∂∂> M
(
∂∂M N
dark
∂∂N R
.
∂∂R S

Foreground
∂∂S ]
)
∂∂] ^
)
∂∂^ _
;
∂∂_ `
ReplaceEntry
ππ 
(
ππ 
$str
ππ )
,
ππ) *
new
ππ+ .
SolidColorBrush
ππ/ >
(
ππ> ?
dark
ππ? C
.
ππC D
Color
ππD I
)
ππI J
)
ππJ K
;
ππK L
ReplaceEntry
∫∫ 
(
∫∫ 
$str
∫∫ +
,
∫∫+ ,
new
∫∫- 0
SolidColorBrush
∫∫1 @
(
∫∫@ A
dark
∫∫A E
.
∫∫E F
Color
∫∫F K
)
∫∫K L
)
∫∫L M
;
∫∫M N
ReplaceEntry
ªª 
(
ªª 
$str
ªª ,
,
ªª, -
new
ªª. 1
SolidColorBrush
ªª2 A
(
ªªA B
mid
ªªB E
.
ªªE F
Color
ªªF K
)
ªªK L
)
ªªL M
;
ªªM N
ReplaceEntry
ºº 
(
ºº 
$str
ºº ,
,
ºº, -
new
ºº. 1
SolidColorBrush
ºº2 A
(
ººA B
light
ººB G
.
ººG H
Color
ººH M
)
ººM N
)
ººN O
;
ººO P
ReplaceEntry
ΩΩ 
(
ΩΩ 
$str
ΩΩ ,
,
ΩΩ, -
new
ΩΩ. 1
SolidColorBrush
ΩΩ2 A
(
ΩΩA B
light
ΩΩB G
.
ΩΩG H
Color
ΩΩH M
)
ΩΩM N
{
ΩΩO P
Opacity
ΩΩQ X
=
ΩΩY Z
$num
ΩΩ[ ^
}
ΩΩ_ `
)
ΩΩ` a
;
ΩΩa b
ReplaceEntry
ææ 
(
ææ 
$str
ææ 0
,
ææ0 1
new
ææ2 5
SolidColorBrush
ææ6 E
(
ææE F
dark
ææF J
.
ææJ K
Color
ææK P
)
ææP Q
)
ææQ R
;
ææR S
ReplaceEntry
øø 
(
øø 
$str
øø 3
,
øø3 4
new
øø5 8
SolidColorBrush
øø9 H
(
øøH I
dark
øøI M
.
øøM N

Foreground
øøN X
)
øøX Y
)
øøY Z
;
øøZ [
ReplaceEntry
¿¿ 
(
¿¿ 
$str
¿¿ (
,
¿¿( )
new
¿¿* -!
LinearGradientBrush
¿¿. A
(
¿¿A B
dark
¿¿B F
.
¿¿F G
Color
¿¿G L
,
¿¿L M
mid
¿¿N Q
.
¿¿Q R
Color
¿¿R W
,
¿¿W X
$num
¿¿Y ]
)
¿¿] ^
)
¿¿^ _
;
¿¿_ `
ReplaceEntry
¡¡ 
(
¡¡ 
$str
¡¡ (
,
¡¡( )
new
¡¡* -
SolidColorBrush
¡¡. =
(
¡¡= >
dark
¡¡> B
.
¡¡B C
Color
¡¡C H
)
¡¡H I
)
¡¡I J
;
¡¡J K
ReplaceEntry
¬¬ 
(
¬¬ 
$str
¬¬ )
,
¬¬) *
new
¬¬+ .
SolidColorBrush
¬¬/ >
(
¬¬> ?
dark
¬¬? C
.
¬¬C D
Color
¬¬D I
)
¬¬I J
)
¬¬J K
;
¬¬K L
ReplaceEntry
√√ 
(
√√ 
$str
√√ 4
,
√√4 5
new
√√6 9
SolidColorBrush
√√: I
(
√√I J
dark
√√J N
.
√√N O

Foreground
√√O Y
)
√√Y Z
)
√√Z [
;
√√[ \
ReplaceEntry
ƒƒ 
(
ƒƒ 
$str
ƒƒ 7
,
ƒƒ7 8
new
ƒƒ9 <
SolidColorBrush
ƒƒ= L
(
ƒƒL M
dark
ƒƒM Q
.
ƒƒQ R
Color
ƒƒR W
)
ƒƒW X
{
ƒƒY Z
Opacity
ƒƒ[ b
=
ƒƒc d
$num
ƒƒe g
}
ƒƒh i
)
ƒƒi j
;
ƒƒj k
}
≈≈ 	
private
«« 
static
«« 
int
«« 
GetHueIndex
«« &
(
««& '
Swatch
««' -
swatch
««. 4
,
««4 5
Color
««6 ;
color
««< A
,
««A B
bool
««C G
isAccent
««H P
)
««P Q
{
»» 	
var
…… 
x
…… 
=
…… 
(
…… 
isAccent
…… 
?
…… 
swatch
……  &
.
……& '

AccentHues
……' 1
:
……2 3
swatch
……4 :
.
……: ;
PrimaryHues
……; F
)
……F G
.
……G H
Select
……H N
(
……N O
(
……O P
h
……P Q
,
……Q R
i
……S T
)
……T U
=>
……V X
new
……Y \
{
……] ^
h
……^ _
,
……_ `
i
……a b
}
……b c
)
……c d
.
   
FirstOrDefault
   
(
    
a
    !
=>
  " $
a
  % &
.
  & '
h
  ' (
.
  ( )
Color
  ) .
==
  / 1
color
  2 7
)
  7 8
;
  8 9
if
ÀÀ 
(
ÀÀ 
x
ÀÀ 
==
ÀÀ 
null
ÀÀ 
)
ÀÀ 
throw
ÃÃ 
new
ÃÃ '
InvalidOperationException
ÃÃ 3
(
ÃÃ3 4
$"
ÃÃ4 6
Color 
ÃÃ6 <
{
ÃÃ< =
color
ÃÃ= B
}
ÃÃB C#
 not found in swatch 
ÃÃC X
{
ÃÃX Y
swatch
ÃÃY _
.
ÃÃ_ `
Name
ÃÃ` d
}
ÃÃd e
.
ÃÃe f
"
ÃÃf g
)
ÃÃg h
;
ÃÃh i
return
ÕÕ 
x
ÕÕ 
.
ÕÕ 
i
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
private
–– 
static
–– 
SolidColorBrush
–– &
GetBrush
––' /
(
––/ 0
string
––0 6
name
––7 ;
)
––; <
{
—— 	
var
““ 
group
““ 
=
““ 
GetTree
““ 
(
““  
Application
““  +
.
““+ ,
Current
““, 3
.
““3 4
	Resources
““4 =
)
““= >
.
”” 

SelectMany
”” 
(
”” 
d
”” 
=>
””  

GetEntries
””! +
(
””+ ,
d
””, -
)
””- .
.
””. /
Select
””/ 5
(
””5 6
e
””6 7
=>
””8 :
new
””; >
{
””? @
d
””A B
,
””B C
e
””D E
}
””F G
)
””G H
)
””H I
.
‘‘ 
Where
‘‘ 
(
‘‘ 
a
‘‘ 
=>
‘‘ 
a
‘‘ 
.
‘‘ 
e
‘‘ 
.
‘‘  
Value
‘‘  %
is
‘‘& (
SolidColorBrush
‘‘) 8
)
‘‘8 9
.
’’ 
GroupBy
’’ 
(
’’ 
a
’’ 
=>
’’ 
(
’’ 
SolidColorBrush
’’ .
)
’’. /
a
’’/ 0
.
’’0 1
e
’’1 2
.
’’2 3
Value
’’3 8
)
’’8 9
.
÷÷ 
SingleOrDefault
÷÷  
(
÷÷  !
g
÷÷! "
=>
÷÷# %
g
÷÷& '
.
÷÷' (
First
÷÷( -
(
÷÷- .
)
÷÷. /
.
÷÷/ 0
e
÷÷0 1
.
÷÷1 2
Key
÷÷2 5
.
÷÷5 6
Equals
÷÷6 <
(
÷÷< =
name
÷÷= A
)
÷÷A B
)
÷÷B C
;
÷÷C D
if
◊◊ 
(
◊◊ 
group
◊◊ 
==
◊◊ 
null
◊◊ 
)
◊◊ 
throw
ÿÿ 
new
ÿÿ '
InvalidOperationException
ÿÿ 3
(
ÿÿ3 4
$"
ÿÿ4 6J
<Unable to safely determine a single resource definition for 
ÿÿ6 r
{
ÿÿr s
name
ÿÿs w
}
ÿÿw x
.
ÿÿx y
"
ÿÿy z
)
ÿÿz {
;
ÿÿ{ |
var
ŸŸ 
solidColorBrush
ŸŸ 
=
ŸŸ  !
group
ŸŸ" '
.
ŸŸ' (
First
ŸŸ( -
(
ŸŸ- .
)
ŸŸ. /
.
ŸŸ/ 0
e
ŸŸ0 1
.
ŸŸ1 2
Value
ŸŸ2 7
as
ŸŸ8 :
SolidColorBrush
ŸŸ; J
;
ŸŸJ K
if
⁄⁄ 
(
⁄⁄ 
solidColorBrush
⁄⁄ 
==
⁄⁄  "
null
⁄⁄# '
)
⁄⁄' (
throw
€€ 
new
€€ '
InvalidOperationException
€€ 3
(
€€3 4
$"
€€4 6
	Expected 
€€6 ?
{
€€? @
name
€€@ D
}
€€D E&
 to be a SolidColorBrush
€€E ]
"
€€] ^
)
€€^ _
;
€€_ `
return
›› 
solidColorBrush
›› "
;
››" #
}
ﬁﬁ 	
private
·· 
static
·· 
IEnumerable
·· "
<
··" #
DictionaryEntry
··# 2
>
··2 3

GetEntries
··4 >
(
··> ?
IDictionary
··? J

dictionary
··K U
)
··U V
{
‚‚ 	
var
„„ "
dictionaryEnumerator
„„ $
=
„„% &

dictionary
„„' 1
.
„„1 2
GetEnumerator
„„2 ?
(
„„? @
)
„„@ A
;
„„A B
while
‰‰ 
(
‰‰ "
dictionaryEnumerator
‰‰ '
.
‰‰' (
MoveNext
‰‰( 0
(
‰‰0 1
)
‰‰1 2
)
‰‰2 3
{
ÂÂ 
yield
ÊÊ 
return
ÊÊ "
dictionaryEnumerator
ÊÊ 1
.
ÊÊ1 2
Entry
ÊÊ2 7
;
ÊÊ7 8
}
ÁÁ 
}
ËË 	
private
ÍÍ 
static
ÍÍ 
IEnumerable
ÍÍ "
<
ÍÍ" # 
ResourceDictionary
ÍÍ# 5
>
ÍÍ5 6
GetTree
ÍÍ7 >
(
ÍÍ> ? 
ResourceDictionary
ÍÍ? Q
node
ÍÍR V
)
ÍÍV W
{
ÎÎ 	
yield
ÏÏ 
return
ÏÏ 
node
ÏÏ 
;
ÏÏ 
foreach
ÓÓ 
(
ÓÓ 
var
ÓÓ 

descendant
ÓÓ #
in
ÓÓ$ &
node
ÓÓ' +
.
ÓÓ+ , 
MergedDictionaries
ÓÓ, >
.
ÓÓ> ?

SelectMany
ÓÓ? I
(
ÓÓI J
GetTree
ÓÓJ Q
)
ÓÓQ R
)
ÓÓR S
{
ÔÔ 
yield
 
return
 

descendant
 '
;
' (
}
ÒÒ 
}
ÚÚ 	
private
˙˙ 
static
˙˙ 
void
˙˙ 
ReplaceEntry
˙˙ (
(
˙˙( )
object
˙˙) /
	entryName
˙˙0 9
,
˙˙9 :
object
˙˙; A
newValue
˙˙B J
,
˙˙J K 
ResourceDictionary
˙˙L ^
parentDictionary
˙˙_ o
=
˙˙p q
null
˙˙r v
)
˙˙v w
{
˚˚ 	
if
¸¸ 
(
¸¸ 
parentDictionary
¸¸  
==
¸¸! #
null
¸¸$ (
)
¸¸( )
parentDictionary
˝˝  
=
˝˝! "
Application
˝˝# .
.
˝˝. /
Current
˝˝/ 6
.
˝˝6 7
	Resources
˝˝7 @
;
˝˝@ A
if
ˇˇ 
(
ˇˇ 
parentDictionary
ˇˇ  
.
ˇˇ  !
Contains
ˇˇ! )
(
ˇˇ) *
	entryName
ˇˇ* 3
)
ˇˇ3 4
)
ˇˇ4 5
{
ÄÄ 
var
ÅÅ 
brush
ÅÅ 
=
ÅÅ 
parentDictionary
ÅÅ ,
[
ÅÅ, -
	entryName
ÅÅ- 6
]
ÅÅ6 7
as
ÅÅ8 :
SolidColorBrush
ÅÅ; J
;
ÅÅJ K
if
ÇÇ 
(
ÇÇ 
brush
ÇÇ 
!=
ÇÇ 
null
ÇÇ !
&&
ÇÇ" $
!
ÇÇ% &
brush
ÇÇ& +
.
ÇÇ+ ,
IsFrozen
ÇÇ, 4
)
ÇÇ4 5
{
ÉÉ 
var
ÑÑ 
	animation
ÑÑ !
=
ÑÑ" #
new
ÑÑ$ '
ColorAnimation
ÑÑ( 6
{
ÖÖ 
From
ÜÜ 
=
ÜÜ 
(
ÜÜ  
(
ÜÜ  !
SolidColorBrush
ÜÜ! 0
)
ÜÜ0 1
parentDictionary
ÜÜ1 A
[
ÜÜA B
	entryName
ÜÜB K
]
ÜÜK L
)
ÜÜL M
.
ÜÜM N
Color
ÜÜN S
,
ÜÜS T
To
áá 
=
áá 
(
áá 
(
áá 
SolidColorBrush
áá .
)
áá. /
newValue
áá/ 7
)
áá7 8
.
áá8 9
Color
áá9 >
,
áá> ?
Duration
àà  
=
àà! "
new
àà# &
Duration
àà' /
(
àà/ 0
TimeSpan
àà0 8
.
àà8 9
FromMilliseconds
àà9 I
(
ààI J
$num
ààJ M
)
ààM N
)
ààN O
}
ââ 
;
ââ 
brush
ää 
.
ää 
BeginAnimation
ää (
(
ää( )
SolidColorBrush
ää) 8
.
ää8 9
ColorProperty
ää9 F
,
ääF G
	animation
ääH Q
)
ääQ R
;
ääR S
}
ãã 
else
åå 
parentDictionary
çç $
[
çç$ %
	entryName
çç% .
]
çç. /
=
çç0 1
newValue
çç2 :
;
çç: ;
}
éé 
foreach
êê 
(
êê 
var
êê 

dictionary
êê #
in
êê$ &
parentDictionary
êê' 7
.
êê7 8 
MergedDictionaries
êê8 J
)
êêJ K
ReplaceEntry
ëë 
(
ëë 
	entryName
ëë &
,
ëë& '
newValue
ëë( 0
,
ëë0 1

dictionary
ëë2 <
)
ëë< =
;
ëë= >
}
íí 	
}
ìì 
}îî ú
^D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 3
)3 4
]4 5
[ 
assembly 	
:	 

AssemblyDescription 
( 
$str M
)M N
]N O
[ 
assembly 	
:	 
!
AssemblyConfiguration  
(  !
$str! #
)# $
]$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str >
)> ?
]? @
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str 5
)5 6
]6 7
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str /
)/ 0
]0 1
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 

XmlnsPrefix 
( 
$str J
,J K
$strL \
)\ ]
]] ^
[ 
assembly 	
:	 

XmlnsDefinition 
( 
$str N
,N O
$strP j
)j k
]k l
[ 
assembly 	
:	 

XmlnsDefinition 
( 
$str N
,N O
$strP v
)v w
]w x
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[&& 
assembly&& 	
:&&	 

	ThemeInfo&&
 
(&& &
ResourceDictionaryLocation'' 
.'' 
None'' #
,''# $&
ResourceDictionaryLocation** 
.** 
SourceAssembly** -
)-- 
]-- 
[:: 
assembly:: 	
:::	 

AssemblyVersion:: 
(:: 
$str:: $
)::$ %
]::% &ùt
PD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\RatingBar.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class 
	RatingBar 
: 
Control $
{ 
public 
static 
RoutedCommand #
SelectRatingCommand$ 7
=8 9
new: =
RoutedCommand> K
(K L
)L M
;M N
static 
	RatingBar 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
	RatingBar< E
)E F
,F G
newH K%
FrameworkPropertyMetadataL e
(e f
typeoff l
(l m
	RatingBarm v
)v w
)w x
)x y
;y z
} 	
private 
readonly  
ObservableCollection -
<- .
RatingBarButton. =
>= >"
_ratingButtonsInternal? U
=V W
newX [ 
ObservableCollection\ p
<p q
RatingBarButton	q Ä
>
Ä Å
(
Å Ç
)
Ç É
;
É Ñ
private 
readonly (
ReadOnlyObservableCollection 5
<5 6
RatingBarButton6 E
>E F
_ratingButtonsG U
;U V
public   
	RatingBar   
(   
)   
{!! 	
CommandBindings"" 
."" 
Add"" 
(""  
new""  #
CommandBinding""$ 2
(""2 3
SelectRatingCommand""3 F
,""F G
SelectItemHandler""H Y
)""Y Z
)""Z [
;""[ \
_ratingButtons## 
=## 
new##  (
ReadOnlyObservableCollection##! =
<##= >
RatingBarButton##> M
>##M N
(##N O"
_ratingButtonsInternal##O e
)##e f
;##f g
}$$ 	
private&& 
void&& 
SelectItemHandler&& &
(&&& '
object&&' -
sender&&. 4
,&&4 5#
ExecutedRoutedEventArgs&&6 M#
executedRoutedEventArgs&&N e
)&&e f
{'' 	
if(( 
((( #
executedRoutedEventArgs(( '
.((' (
	Parameter((( 1
is((2 4
int((5 8
)((8 9
Value)) 
=)) 
()) 
int)) 
))) #
executedRoutedEventArgs)) 5
.))5 6
	Parameter))6 ?
;))? @
}** 	
public,, 
static,, 
readonly,, 
DependencyProperty,, 1
MinProperty,,2 =
=,,> ?
DependencyProperty,,@ R
.,,R S
Register,,S [
(,,[ \
nameof-- 
(-- 
Min-- 
)-- 
,-- 
typeof-- 
(--  !
int--! $
)--$ %
,--% &
typeof--' -
(--. /
	RatingBar--/ 8
)--8 9
,--9 :
new--; >
PropertyMetadata--? O
(--O P
$num--P Q
,--Q R&
MinPropertyChangedCallback--S m
)--m n
)--n o
;--o p
public// 
int// 
Min// 
{00 	
get11 
{11 
return11 
(11 
int11 
)11 
GetValue11 '
(11' (
MinProperty11( 3
)113 4
;114 5
}116 7
set22 
{22 
SetValue22 
(22 
MinProperty22 &
,22& '
value22( -
)22- .
;22. /
}220 1
}33 	
public55 
static55 
readonly55 
DependencyProperty55 1
MaxProperty552 =
=55> ?
DependencyProperty55@ R
.55R S
Register55S [
(55[ \
nameof66 
(66 
Max66 
)66 
,66 
typeof66 
(66  !
int66! $
)66$ %
,66% &
typeof66' -
(66. /
	RatingBar66/ 8
)668 9
,669 :
new66; >
PropertyMetadata66? O
(66O P
$num66P Q
,66Q R&
MaxPropertyChangedCallback66S m
)66m n
)66n o
;66o p
public88 
int88 
Max88 
{99 	
get:: 
{:: 
return:: 
(:: 
int:: 
):: 
GetValue:: '
(::' (
MaxProperty::( 3
)::3 4
;::4 5
}::6 7
set;; 
{;; 
SetValue;; 
(;; 
MaxProperty;; &
,;;& '
value;;( -
);;- .
;;;. /
};;0 1
}<< 	
public>> 
static>> 
readonly>> 
DependencyProperty>> 1
ValueProperty>>2 ?
=>>@ A
DependencyProperty>>B T
.>>T U
Register>>U ]
(>>] ^
nameof?? 
(?? 
Value?? 
)?? 
,?? 
typeof?? !
(??" #
int??# &
)??& '
,??' (
typeof??) /
(??0 1
	RatingBar??1 :
)??: ;
,??; <
new??= @
PropertyMetadata??A Q
(??Q R
$num??R S
,??S T(
ValuePropertyChangedCallback??U q
)??q r
)??r s
;??s t
privateAA 
staticAA 
voidAA (
ValuePropertyChangedCallbackAA 8
(AA8 9
DependencyObjectAA9 I
dependencyObjectAAJ Z
,AAZ [.
"DependencyPropertyChangedEventArgsAA\ ~/
"dependencyPropertyChangedEventArgs	AA °
)
AA° ¢
{BB 	
foreachCC 
(CC 
varCC 
buttonCC 
inCC  "
(CC# $
(CC$ %
	RatingBarCC% .
)CC. /
dependencyObjectCC0 @
)CC@ A
.CCA B
RatingButtonsCCB O
)CCO P
buttonDD 
.DD !
IsWithinSelectedValueDD ,
=DD- .
buttonDD/ 5
.DD5 6
ValueDD6 ;
<=DD< >
(DD? @
intDD@ C
)DDC D.
"dependencyPropertyChangedEventArgsDDD f
.DDf g
NewValueDDg o
;DDo p
}EE 	
publicGG 
intGG 
ValueGG 
{HH 	
getII 
{II 
returnII 
(II 
intII 
)II 
GetValueII '
(II' (
ValuePropertyII( 5
)II5 6
;II6 7
}II8 9
setJJ 
{JJ 
SetValueJJ 
(JJ 
ValuePropertyJJ (
,JJ( )
valueJJ* /
)JJ/ 0
;JJ0 1
}JJ2 3
}KK 	
publicMM (
ReadOnlyObservableCollectionMM +
<MM+ ,
RatingBarButtonMM, ;
>MM; <
RatingButtonsMM= J
=>MMK M
_ratingButtonsMMN \
;MM\ ]
publicOO 
staticOO 
readonlyOO 
DependencyPropertyOO 11
%ValueItemContainerButtonStylePropertyOO2 W
=OOX Y
DependencyPropertyOOZ l
.OOl m
RegisterOOm u
(OOu v
nameofPP 
(PP )
ValueItemContainerButtonStylePP 0
)PP0 1
,PP1 2
typeofPP3 9
(PP: ;
StylePP; @
)PP@ A
,PPA B
typeofPPC I
(PPJ K
	RatingBarPPK T
)PPT U
,PPU V
newPPW Z
PropertyMetadataPP[ k
(PPk l
defaultPPl s
(PPs t
StylePPt y
)PPy z
)PPz {
)PP{ |
;PP| }
publicRR 
StyleRR )
ValueItemContainerButtonStyleRR 2
{SS 	
getTT 
{TT 
returnTT 
(TT 
StyleTT 
)TT  
GetValueTT! )
(TT) *1
%ValueItemContainerButtonStylePropertyTT* O
)TTO P
;TTP Q
}TTR S
setUU 
{UU 
SetValueUU 
(UU 1
%ValueItemContainerButtonStylePropertyUU @
,UU@ A
valueUUB G
)UUG H
;UUH I
}UUJ K
}VV 	
publicXX 
staticXX 
readonlyXX 
DependencyPropertyXX 1%
ValueItemTemplatePropertyXX2 K
=XXL M
DependencyPropertyXXN `
.XX` a
RegisterXXa i
(XXi j
nameofYY 
(YY 
ValueItemTemplateYY $
)YY$ %
,YY% &
typeofYY' -
(YY. /
DataTemplateYY/ ;
)YY; <
,YY< =
typeofYY> D
(YYE F
	RatingBarYYF O
)YYO P
,YYP Q
newYYR U
PropertyMetadataYYV f
(YYf g
defaultYYg n
(YYn o
DataTemplateYYo {
)YY{ |
)YY| }
)YY} ~
;YY~ 
public[[ 
DataTemplate[[ 
ValueItemTemplate[[ -
{\\ 	
get]] 
{]] 
return]] 
(]] 
DataTemplate]] &
)]]& '
GetValue]]( 0
(]]0 1%
ValueItemTemplateProperty]]1 J
)]]J K
;]]K L
}]]M N
set^^ 
{^^ 
SetValue^^ 
(^^ %
ValueItemTemplateProperty^^ 4
,^^4 5
value^^6 ;
)^^; <
;^^< =
}^^> ?
}__ 	
publicaa 
staticaa 
readonlyaa 
DependencyPropertyaa 1-
!ValueItemTemplateSelectorPropertyaa2 S
=aaT U
DependencyPropertyaaV h
.aah i
Registeraai q
(aaq r
nameofbb 
(bb %
ValueItemTemplateSelectorbb ,
)bb, -
,bb- .
typeofbb/ 5
(bb6 7 
DataTemplateSelectorbb7 K
)bbK L
,bbL M
typeofbbN T
(bbU V
	RatingBarbbV _
)bb_ `
,bb` a
newbbb e
PropertyMetadatabbf v
(bbv w
defaultbbw ~
(bb~ !
DataTemplateSelector	bb ì
)
bbì î
)
bbî ï
)
bbï ñ
;
bbñ ó
publicdd  
DataTemplateSelectordd #%
ValueItemTemplateSelectordd$ =
{ee 	
getff 
{ff 
returnff 
(ff  
DataTemplateSelectorff .
)ff. /
GetValueff0 8
(ff8 9-
!ValueItemTemplateSelectorPropertyff9 Z
)ffZ [
;ff[ \
}ff] ^
setgg 
{gg 
SetValuegg 
(gg -
!ValueItemTemplateSelectorPropertygg <
,gg< =
valuegg> C
)ggC D
;ggD E
}ggF G
}hh 	
publicjj 
staticjj 
readonlyjj 
DependencyPropertyjj 1
OrientationPropertyjj2 E
=jjF G
DependencyPropertyjjH Z
.jjZ [
Registerjj[ c
(jjc d
nameofkk 
(kk 
Orientationkk 
)kk 
,kk  
typeofkk! '
(kk( )
Orientationkk) 4
)kk4 5
,kk5 6
typeofkk7 =
(kk> ?
	RatingBarkk? H
)kkH I
,kkI J
newkkK N
PropertyMetadatakkO _
(kk_ `
defaultkk` g
(kkg h
Orientationkkh s
)kks t
)kkt u
)kku v
;kkv w
publicmm 
Orientationmm 
Orientationmm &
{nn 	
getoo 
{oo 
returnoo 
(oo 
Orientationoo %
)oo% &
GetValueoo' /
(oo/ 0
OrientationPropertyoo0 C
)ooC D
;ooD E
}ooF G
setpp 
{pp 
SetValuepp 
(pp 
OrientationPropertypp .
,pp. /
valuepp0 5
)pp5 6
;pp6 7
}pp8 9
}qq 	
privatess 
staticss 
voidss &
MaxPropertyChangedCallbackss 6
(ss6 7
DependencyObjectss7 G
dependencyObjectssH X
,ssX Y.
"DependencyPropertyChangedEventArgsssZ |/
"dependencyPropertyChangedEventArgs	ss} ü
)
ssü †
{tt 	
(uu 
(uu 
	RatingBaruu 
)uu 
dependencyObjectuu (
)uu( )
.uu) *
RebuildButtonsuu* 8
(uu8 9
)uu9 :
;uu: ;
}vv 	
privatexx 
staticxx 
voidxx &
MinPropertyChangedCallbackxx 6
(xx6 7
DependencyObjectxx7 G
dependencyObjectxxH X
,xxX Y.
"DependencyPropertyChangedEventArgsxxZ |/
"dependencyPropertyChangedEventArgs	xx} ü
)
xxü †
{yy 	
(zz 
(zz 
	RatingBarzz 
)zz 
dependencyObjectzz (
)zz( )
.zz) *
RebuildButtonszz* 8
(zz8 9
)zz9 :
;zz: ;
}{{ 	
private}} 
void}} 
RebuildButtons}} #
(}}# $
)}}$ %
{~~ 	"
_ratingButtonsInternal "
." #
Clear# (
(( )
)) *
;* +
for
ÄÄ 
(
ÄÄ 
var
ÄÄ 
i
ÄÄ 
=
ÄÄ 
Min
ÄÄ 
;
ÄÄ 
i
ÄÄ 
<=
ÄÄ  "
Max
ÄÄ# &
;
ÄÄ& '
i
ÄÄ( )
++
ÄÄ) +
)
ÄÄ+ ,
{
ÅÅ $
_ratingButtonsInternal
ÇÇ &
.
ÇÇ& '
Add
ÇÇ' *
(
ÇÇ* +
new
ÇÇ+ .
RatingBarButton
ÇÇ/ >
{
ÉÉ 
Content
ÑÑ 
=
ÑÑ 
i
ÑÑ 
,
ÑÑ  
ContentTemplate
ÖÖ #
=
ÖÖ$ %
ValueItemTemplate
ÖÖ& 7
,
ÖÖ7 8%
ContentTemplateSelector
ÜÜ +
=
ÜÜ, -'
ValueItemTemplateSelector
ÜÜ. G
,
ÜÜG H#
IsWithinSelectedValue
áá )
=
áá* +
i
áá, -
<=
áá. 0
Value
áá1 6
,
áá6 7
Style
àà 
=
àà +
ValueItemContainerButtonStyle
àà 9
,
àà9 :
Value
ââ 
=
ââ 
i
ââ 
,
ââ 
}
ää 
)
ää 
;
ää 
}
ãã 
}
åå 	
public
éé 
override
éé 
void
éé 
OnApplyTemplate
éé ,
(
éé, -
)
éé- .
{
èè 	
RebuildButtons
êê 
(
êê 
)
êê 
;
êê 
base
íí 
.
íí 
OnApplyTemplate
íí  
(
íí  !
)
íí! "
;
íí" #
}
ìì 	
}
îî 
}ïï ê
VD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\RatingBarButton.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

class 
RatingBarButton  
:! "

ButtonBase# -
{ 
static 
RatingBarButton 
( 
)  
{		 	#
DefaultStyleKeyProperty

 #
.

# $
OverrideMetadata

$ 4
(

4 5
typeof

5 ;
(

; <
RatingBarButton

< K
)

K L
,

L M
new

N Q%
FrameworkPropertyMetadata

R k
(

k l
typeof

l r
(

r s
RatingBarButton	

s Ç
)


Ç É
)


É Ñ
)


Ñ Ö
;


Ö Ü
} 	
private 
static 
readonly !
DependencyPropertyKey  5
ValuePropertyKey6 F
=G H
DependencyProperty 
. 
RegisterReadOnly /
(/ 0
$str 
, 
typeof 
(  !
int! $
)$ %
,% &
typeof' -
(. /
RatingBarButton/ >
)> ?
,? @
new 
PropertyMetadata $
($ %
default% ,
(, -
int- 0
)0 1
)1 2
)2 3
;3 4
public 
static 
readonly 
DependencyProperty 1
ValueProperty2 ?
=@ A
ValuePropertyKey 
. 
DependencyProperty /
;/ 0
public 
int 
Value 
{ 	
get 
{ 
return 
( 
int 
) 
GetValue '
(' (
ValueProperty( 5
)5 6
;6 7
}8 9
internal 
set 
{ 
SetValue #
(# $
ValuePropertyKey$ 4
,4 5
value6 ;
); <
;< =
}> ?
} 	
private 
static 
readonly !
DependencyPropertyKey  5$
IsWithinValuePropertyKey6 N
=O P
DependencyProperty 
. 
RegisterReadOnly /
(/ 0
$str '
,' (
typeof) /
(0 1
bool1 5
)5 6
,6 7
typeof8 >
(? @
RatingBarButton@ O
)O P
,P Q
new 
PropertyMetadata $
($ %
default% ,
(, -
bool- 1
)1 2
)2 3
)3 4
;4 5
public   
static   
readonly   
DependencyProperty   1)
IsWithinSelectedValueProperty  2 O
=  P Q$
IsWithinValuePropertyKey!! $
.!!$ %
DependencyProperty!!% 7
;!!7 8
public## 
bool## !
IsWithinSelectedValue## )
{$$ 	
get%% 
{%% 
return%% 
(%% 
bool%% 
)%% 
GetValue%%  (
(%%( ))
IsWithinSelectedValueProperty%%) F
)%%F G
;%%G H
}%%I J
internal&& 
set&& 
{&& 
SetValue&& #
(&&# $$
IsWithinValuePropertyKey&&$ <
,&&< =
value&&> C
)&&C D
;&&D E
}&&F G
}'' 	
}(( 
})) Õd
SD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ShadowAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public		 

enum		 
ShadowDepth		 
{

 
Depth0 
, 
Depth1 
, 
Depth2 
, 
Depth3 
, 
Depth4 
, 
Depth5 
} 
[ 
Flags 

]
 
public 

enum 
ShadowEdges 
{ 
None 
= 
$num 
, 
Left 
= 
$num 
, 
Top 
= 
$num 
, 
Right 
= 
$num 
, 
Bottom 
= 
$num 
, 
All 
= 
Left 
| 
Top 
| 
Right  
|! "
Bottom# )
} 
internal 
class 
ShadowLocalInfo "
{ 
public   
ShadowLocalInfo   
(   
double   %
standardOpacity  & 5
)  5 6
{!! 	
StandardOpacity"" 
="" 
standardOpacity"" -
;""- .
}## 	
public%% 
double%% 
StandardOpacity%% %
{%%& '
get%%( +
;%%+ ,
}%%- .
}&& 
public(( 

static(( 
class(( 
ShadowAssist(( $
{)) 
public** 
static** 
readonly** 
DependencyProperty** 1
ShadowDepthProperty**2 E
=**F G
DependencyProperty**H Z
.**Z [
RegisterAttached**[ k
(**k l
$str++ 
,++ 
typeof++ !
(++" #
ShadowDepth++# .
)++. /
,++/ 0
typeof++1 7
(++8 9
ShadowAssist++9 E
)++E F
,++F G
new++H K%
FrameworkPropertyMetadata++L e
(++e f
default++f m
(++m n
ShadowDepth++n y
)++y z
,++z {-
 FrameworkPropertyMetadataOptions	++| ú
.
++ú ù
AffectsRender
++ù ™
)
++™ ´
)
++´ ¨
;
++¨ ≠
public-- 
static-- 
void-- 
SetShadowDepth-- )
(--) *
DependencyObject--* :
element--; B
,--B C
ShadowDepth--D O
value--P U
)--U V
{.. 	
element// 
.// 
SetValue// 
(// 
ShadowDepthProperty// 0
,//0 1
value//2 7
)//7 8
;//8 9
}00 	
public22 
static22 
ShadowDepth22 !
GetShadowDepth22" 0
(220 1
DependencyObject221 A
element22B I
)22I J
{33 	
return44 
(44 
ShadowDepth44 
)44  
element44! (
.44( )
GetValue44) 1
(441 2
ShadowDepthProperty442 E
)44E F
;44F G
}55 	
private77 
static77 
readonly77 !
DependencyPropertyKey77  5 
LocalInfoPropertyKey776 J
=77K L
DependencyProperty77M _
.77_ `$
RegisterAttachedReadOnly77` x
(77x y
$str88 
,88 
typeof88 
(88  !
ShadowLocalInfo88! 0
)880 1
,881 2
typeof883 9
(88: ;
ShadowAssist88; G
)88G H
,88H I
new88J M
PropertyMetadata88N ^
(88^ _
default88_ f
(88f g
ShadowLocalInfo88g v
)88v w
)88w x
)88x y
;88y z
private:: 
static:: 
void:: 
SetLocalInfo:: (
(::( )
DependencyObject::) 9
element::: A
,::A B
ShadowLocalInfo::C R
value::S X
)::X Y
{;; 	
element<< 
.<< 
SetValue<< 
(<<  
LocalInfoPropertyKey<< 1
,<<1 2
value<<3 8
)<<8 9
;<<9 :
}== 	
private?? 
static?? 
ShadowLocalInfo?? &
GetLocalInfo??' 3
(??3 4
DependencyObject??4 D
element??E L
)??L M
{@@ 	
returnAA 
(AA 
ShadowLocalInfoAA #
)AA# $
elementAA% ,
.AA, -
GetValueAA- 5
(AA5 6 
LocalInfoPropertyKeyAA6 J
.AAJ K
DependencyPropertyAAK ]
)AA] ^
;AA^ _
}BB 	
publicDD 
staticDD 
readonlyDD 
DependencyPropertyDD 1
DarkenPropertyDD2 @
=DDA B
DependencyPropertyDDC U
.DDU V
RegisterAttachedDDV f
(DDf g
$strEE 
,EE 
typeofEE 
(EE 
boolEE "
)EE" #
,EE# $
typeofEE% +
(EE, -
ShadowAssistEE- 9
)EE9 :
,EE: ;
newEE< ?%
FrameworkPropertyMetadataEE@ Y
(EEY Z
defaultEEZ a
(EEa b
boolEEb f
)EEf g
,EEg h-
 FrameworkPropertyMetadataOptions	EEi â
.
EEâ ä
AffectsRender
EEä ó
,
EEó ò+
DarkenPropertyChangedCallback
EEô ∂
)
EE∂ ∑
)
EE∑ ∏
;
EE∏ π
privateGG 
staticGG 
voidGG )
DarkenPropertyChangedCallbackGG 9
(GG9 :
DependencyObjectGG: J
dependencyObjectGGK [
,GG[ \.
"DependencyPropertyChangedEventArgsGG] 0
"dependencyPropertyChangedEventArgs
GGÄ ¢
)
GG¢ £
{HH 	
varII 
	uiElementII 
=II 
dependencyObjectII ,
asII- /
	UIElementII0 9
;II9 :
varJJ 
dropShadowEffectJJ  
=JJ! "
	uiElementJJ# ,
?JJ, -
.JJ- .
EffectJJ. 4
asJJ5 7
DropShadowEffectJJ8 H
;JJH I
ifLL 
(LL 
dropShadowEffectLL  
==LL! #
nullLL$ (
)LL( )
returnLL* 0
;LL0 1
ifNN 
(NN 
(NN 
boolNN 
)NN .
"dependencyPropertyChangedEventArgsNN 9
.NN9 :
NewValueNN: B
)NNB C
{OO 
SetLocalInfoPP 
(PP 
dependencyObjectPP -
,PP- .
newPP/ 2
ShadowLocalInfoPP3 B
(PPB C
dropShadowEffectPPC S
.PPS T
OpacityPPT [
)PP[ \
)PP\ ]
;PP] ^
varRR 
doubleAnimationRR #
=RR$ %
newRR& )
DoubleAnimationRR* 9
(RR9 :
$numRR: ;
,RR; <
newRR= @
DurationRRA I
(RRI J
TimeSpanRRJ R
.RRR S
FromMillisecondsRRS c
(RRc d
$numRRd g
)RRg h
)RRh i
)RRi j
{SS 
FillBehaviorTT  
=TT! "
FillBehaviorTT# /
.TT/ 0
HoldEndTT0 7
}UU 
;UU 
dropShadowEffectVV  
.VV  !
BeginAnimationVV! /
(VV/ 0
DropShadowEffectVV0 @
.VV@ A
OpacityPropertyVVA P
,VVP Q
doubleAnimationVVR a
)VVa b
;VVb c
}WW 
elseXX 
{YY 
varZZ 
shadowLocalInfoZZ #
=ZZ$ %
GetLocalInfoZZ& 2
(ZZ2 3
dependencyObjectZZ3 C
)ZZC D
;ZZD E
if[[ 
([[ 
shadowLocalInfo[[ #
==[[$ &
null[[' +
)[[+ ,
return[[- 3
;[[3 4
var]] 
doubleAnimation]] #
=]]$ %
new]]& )
DoubleAnimation]]* 9
(]]9 :
shadowLocalInfo]]: I
.]]I J
StandardOpacity]]J Y
,]]Y Z
new]][ ^
Duration]]_ g
(]]g h
TimeSpan]]h p
.]]p q
FromMilliseconds	]]q Å
(
]]Å Ç
$num
]]Ç Ö
)
]]Ö Ü
)
]]Ü á
)
]]á à
{^^ 
FillBehavior__  
=__! "
FillBehavior__# /
.__/ 0
HoldEnd__0 7
}`` 
;`` 
dropShadowEffectaa  
.aa  !
BeginAnimationaa! /
(aa/ 0
DropShadowEffectaa0 @
.aa@ A
OpacityPropertyaaA P
,aaP Q
doubleAnimationaaR a
)aaa b
;aab c
}bb 
}cc 	
publicee 
staticee 
voidee 
	SetDarkenee $
(ee$ %
DependencyObjectee% 5
elementee6 =
,ee= >
boolee? C
valueeeD I
)eeI J
{ff 	
elementgg 
.gg 
SetValuegg 
(gg 
DarkenPropertygg +
,gg+ ,
valuegg- 2
)gg2 3
;gg3 4
}hh 	
publicjj 
staticjj 
booljj 
	GetDarkenjj $
(jj$ %
DependencyObjectjj% 5
elementjj6 =
)jj= >
{kk 	
returnll 
(ll 
boolll 
)ll 
elementll !
.ll! "
GetValuell" *
(ll* +
DarkenPropertyll+ 9
)ll9 :
;ll: ;
}mm 	
publicoo 
staticoo 
readonlyoo 
DependencyPropertyoo 1
CacheModePropertyoo2 C
=ooD E
DependencyPropertyooF X
.ooX Y
RegisterAttachedooY i
(ooi j
$strpp 
,pp 
typeofpp 
(pp  
	CacheModepp  )
)pp) *
,pp* +
typeofpp, 2
(pp2 3
ShadowAssistpp3 ?
)pp? @
,pp@ A
newppB E%
FrameworkPropertyMetadatappF _
(pp_ `
newpp` c
BitmapCacheppd o
{ppp q
EnableClearType	ppr Å
=
ppÇ É
true
ppÑ à
,
ppà â!
SnapsToDevicePixels
ppä ù
=
ppû ü
true
pp† §
}
pp• ¶
,
pp¶ ß.
 FrameworkPropertyMetadataOptions
pp® »
.
pp» …
Inherits
pp… —
)
pp— “
)
pp“ ”
;
pp” ‘
publicrr 
staticrr 
voidrr 
SetCacheModerr '
(rr' (
DependencyObjectrr( 8
elementrr9 @
,rr@ A
	CacheModerrB K
valuerrL Q
)rrQ R
{ss 	
elementtt 
.tt 
SetValuett 
(tt 
CacheModePropertytt .
,tt. /
valuett0 5
)tt5 6
;tt6 7
}uu 	
publicww 
staticww 
	CacheModeww 
GetCacheModeww  ,
(ww, -
DependencyObjectww- =
elementww> E
)wwE F
{xx 	
returnyy 
(yy 
	CacheModeyy 
)yy 
elementyy %
.yy% &
GetValueyy& .
(yy. /
CacheModePropertyyy/ @
)yy@ A
;yyA B
}zz 	
public|| 
static|| 
readonly|| 
DependencyProperty|| 1
ShadowEdgesProperty||2 E
=||F G
DependencyProperty||H Z
.||Z [
RegisterAttached||[ k
(||k l
$str}} 
,}} 
typeof}} !
(}}! "
ShadowEdges}}" -
)}}- .
,}}. /
typeof}}0 6
(}}6 7
ShadowAssist}}7 C
)}}C D
,}}D E
new}}F I
PropertyMetadata}}J Z
(}}Z [
ShadowEdges}}[ f
.}}f g
All}}g j
)}}j k
)}}k l
;}}l m
public 
static 
void 
SetShadowEdges )
() *
DependencyObject* :
element; B
,B C
ShadowEdgesD O
valueP U
)U V
{
ÄÄ 	
element
ÅÅ 
.
ÅÅ 
SetValue
ÅÅ 
(
ÅÅ !
ShadowEdgesProperty
ÅÅ 0
,
ÅÅ0 1
value
ÅÅ2 7
)
ÅÅ7 8
;
ÅÅ8 9
}
ÇÇ 	
public
ÑÑ 
static
ÑÑ 
ShadowEdges
ÑÑ !
GetShadowEdges
ÑÑ" 0
(
ÑÑ0 1
DependencyObject
ÑÑ1 A
element
ÑÑB I
)
ÑÑI J
{
ÖÖ 	
return
ÜÜ 
(
ÜÜ 
ShadowEdges
ÜÜ 
)
ÜÜ  
element
ÜÜ! (
.
ÜÜ( )
GetValue
ÜÜ) 1
(
ÜÜ1 2!
ShadowEdgesProperty
ÜÜ2 E
)
ÜÜE F
;
ÜÜF G
}
áá 	
}
àà 
}ââ √¶
PD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\SmartHint.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[ 
TemplateVisualState 
( 
	GroupName "
=# $"
ContentStatesGroupName% ;
,; <
Name= A
=B C
ContentEmptyNameD T
)T U
]U V
[ 
TemplateVisualState 
( 
	GroupName "
=# $"
ContentStatesGroupName% ;
,; <
Name= A
=B C
ContentNotEmptyNameD W
)W X
]X Y
[ 
TemplateVisualState 
( 
	GroupName "
=# $"
ContentStatesGroupName% ;
,; <
Name= A
=B C#
HintRestingPositionNameD [
)[ \
]\ ]
[ 
TemplateVisualState 
( 
	GroupName "
=# $"
ContentStatesGroupName% ;
,; <
Name= A
=B C$
HintFloatingPositionNameD \
)\ ]
]] ^
public 

class 
	SmartHint 
: 
Control $
{ 
public 
const 
string "
ContentStatesGroupName 2
=3 4
$str5 D
;D E
[ 	
System	 
. 
Obsolete 
] 
public 
const 
string 
ContentEmptyName ,
=- .
$str/ =
;= >
[ 	
System	 
. 
Obsolete 
] 
public 
const 
string 
ContentNotEmptyName /
=0 1
$str2 C
;C D
public 
const 
string #
HintRestingPositionName 3
=4 5
$str6 K
;K L
public   
const   
string   $
HintFloatingPositionName   4
=  5 6
$str  7 M
;  M N
public$$ 
static$$ 
readonly$$ 
DependencyProperty$$ 1
HintProxyProperty$$2 C
=$$D E
DependencyProperty$$F X
.$$X Y
Register$$Y a
($$a b
nameof%% 
(%% 
	HintProxy%% 
)%% 
,%% 
typeof%% %
(%%% &

IHintProxy%%& 0
)%%0 1
,%%1 2
typeof%%3 9
(%%9 :
	SmartHint%%: C
)%%C D
,%%D E
new%%F I
PropertyMetadata%%J Z
(%%Z [
default%%[ b
(%%b c

IHintProxy%%c m
)%%m n
,%%n o-
 HintProxyPropertyChangedCallback	%%p ê
)
%%ê ë
)
%%ë í
;
%%í ì
public'' 

IHintProxy'' 
	HintProxy'' #
{(( 	
get)) 
{)) 
return)) 
()) 

IHintProxy)) $
)))$ %
GetValue))% -
())- .
HintProxyProperty)). ?
)))? @
;))@ A
}))B C
set** 
{** 
SetValue** 
(** 
HintProxyProperty** ,
,**, -
value**. 3
)**3 4
;**4 5
}**6 7
}++ 	
public11 
static11 
readonly11 
DependencyProperty11 1
HintProperty112 >
=11? @
DependencyProperty11A S
.11S T
Register11T \
(11\ ]
nameof22 
(22 
Hint22 
)22 
,22 
typeof22  
(22  !
object22! '
)22' (
,22( )
typeof22* 0
(220 1
	SmartHint221 :
)22: ;
,22; <
new22= @
PropertyMetadata22A Q
(22Q R
null22R V
)22V W
)22W X
;22X Y
public44 
object44 
Hint44 
{55 	
get66 
{66 
return66 
GetValue66 !
(66! "
HintProperty66" .
)66. /
;66/ 0
}661 2
set77 
{77 
SetValue77 
(77 
HintProperty77 '
,77' (
value77) .
)77. /
;77/ 0
}771 2
}88 	
private>> 
static>> 
readonly>> !
DependencyPropertyKey>>  5+
IsContentNullOrEmptyPropertyKey>>6 U
=>>V W
DependencyProperty?? 
.?? 
RegisterReadOnly?? /
(??/ 0
$str@@ &
,@@& '
typeof@@( .
(@@. /
bool@@/ 3
)@@3 4
,@@4 5
typeof@@6 <
(@@< =
	SmartHint@@= F
)@@F G
,@@G H
newAA 
PropertyMetadataAA $
(AA$ %
defaultAA% ,
(AA, -
boolAA- 1
)AA1 2
)AA2 3
)AA3 4
;AA4 5
publicCC 
staticCC 
readonlyCC 
DependencyPropertyCC 1(
IsContentNullOrEmptyPropertyCC2 N
=CCO P+
IsContentNullOrEmptyPropertyKeyDD +
.DD+ ,
DependencyPropertyDD, >
;DD> ?
publicFF 
boolFF  
IsContentNullOrEmptyFF (
{GG 	
getHH 
{HH 
returnHH 
(HH 
boolHH 
)HH 
GetValueHH  (
(HH( )(
IsContentNullOrEmptyPropertyHH) E
)HHE F
;HHF G
}HHH I
privateII 
setII 
{II 
SetValueII "
(II" #+
IsContentNullOrEmptyPropertyKeyII# B
,IIB C
valueIID I
)III J
;IIJ K
}IIL M
}JJ 	
privatePP 
staticPP 
readonlyPP !
DependencyPropertyKeyPP  5/
#IsHintInFloatingPositionPropertyKeyPP6 Y
=PPZ [
DependencyPropertyQQ 
.QQ 
RegisterReadOnlyQQ /
(QQ/ 0
$strRR *
,RR* +
typeofRR, 2
(RR2 3
boolRR3 7
)RR7 8
,RR8 9
typeofRR: @
(RR@ A
	SmartHintRRA J
)RRJ K
,RRK L
newSS 
PropertyMetadataSS $
(SS$ %
defaultSS% ,
(SS, -
boolSS- 1
)SS1 2
)SS2 3
)SS3 4
;SS4 5
publicUU 
staticUU 
readonlyUU 
DependencyPropertyUU 1,
 IsHintInFloatingPositionPropertyUU2 R
=UUS T/
#IsHintInFloatingPositionPropertyKeyVV /
.VV/ 0
DependencyPropertyVV0 B
;VVB C
publicXX 
boolXX $
IsHintInFloatingPositionXX ,
{YY 	
getZZ 
{ZZ 
returnZZ 
(ZZ 
boolZZ 
)ZZ 
GetValueZZ '
(ZZ' (,
 IsHintInFloatingPositionPropertyZZ( H
)ZZH I
;ZZI J
}ZZK L
private[[ 
set[[ 
{[[ 
SetValue[[ "
([[" #/
#IsHintInFloatingPositionPropertyKey[[# F
,[[F G
value[[H M
)[[M N
;[[N O
}[[P Q
}\\ 	
publicbb 
staticbb 
readonlybb 
DependencyPropertybb 1
UseFloatingPropertybb2 E
=bbF G
DependencyPropertybbH Z
.bbZ [
Registerbb[ c
(bbc d
nameofcc 
(cc 
UseFloatingcc 
)cc 
,cc  
typeofcc! '
(cc' (
boolcc( ,
)cc, -
,cc- .
typeofcc/ 5
(cc5 6
	SmartHintcc6 ?
)cc? @
,cc@ A
newccB E
PropertyMetadataccF V
(ccV W
falseccW \
)cc\ ]
)cc] ^
;cc^ _
publicee 
boolee 
UseFloatingee 
{ff 	
getgg 
{gg 
returngg 
(gg 
boolgg 
)gg 
GetValuegg  (
(gg( )
UseFloatingPropertygg) <
)gg< =
;gg= >
}gg? @
sethh 
{hh 
SetValuehh 
(hh 
UseFloatingPropertyhh .
,hh. /
valuehh0 5
)hh5 6
;hh6 7
}hh8 9
}ii 	
publicoo 
staticoo 
readonlyoo 
DependencyPropertyoo 1!
FloatingScalePropertyoo2 G
=ooH I
DependencyPropertyooJ \
.oo\ ]
Registeroo] e
(ooe f
nameofpp 
(pp 
FloatingScalepp  
)pp  !
,pp! "
typeofpp# )
(pp) *
doublepp* 0
)pp0 1
,pp1 2
typeofpp3 9
(pp9 :
	SmartHintpp: C
)ppC D
,ppD E
newppF I
PropertyMetadatappJ Z
(ppZ [
$numpp[ ^
)pp^ _
)pp_ `
;pp` a
publicrr 
doublerr 
FloatingScalerr #
{ss 	
gettt 
{tt 
returntt 
(tt 
doublett  
)tt  !
GetValuett! )
(tt) *!
FloatingScalePropertytt* ?
)tt? @
;tt@ A
}ttB C
setuu 
{uu 
SetValueuu 
(uu !
FloatingScalePropertyuu 0
,uu0 1
valueuu2 7
)uu7 8
;uu8 9
}uu: ;
}vv 	
publicxx 
staticxx 
readonlyxx 
DependencyPropertyxx 1"
FloatingOffsetPropertyxx2 H
=xxI J
DependencyPropertyxxK ]
.xx] ^
Registerxx^ f
(xxf g
nameofyy 
(yy 
FloatingOffsetyy !
)yy! "
,yy" #
typeofyy$ *
(yy* +
Pointyy+ 0
)yy0 1
,yy1 2
typeofyy3 9
(yy9 :
	SmartHintyy: C
)yyC D
,yyD E
newyyF I
PropertyMetadatayyJ Z
(yyZ [
newyy[ ^
Pointyy_ d
(yyd e
$numyye f
,yyf g
-yyh i
$numyyi k
)yyk l
)yyl m
)yym n
;yyn o
public{{ 
Point{{ 
FloatingOffset{{ #
{|| 	
get}} 
{}} 
return}} 
(}} 
Point}} 
)}}  
GetValue}}  (
(}}( )"
FloatingOffsetProperty}}) ?
)}}? @
;}}@ A
}}}B C
set~~ 
{~~ 
SetValue~~ 
(~~ "
FloatingOffsetProperty~~ 1
,~~1 2
value~~3 8
)~~8 9
;~~9 :
}~~; <
} 	
public
ÖÖ 
static
ÖÖ 
readonly
ÖÖ  
DependencyProperty
ÖÖ 1!
HintOpacityProperty
ÖÖ2 E
=
ÖÖF G 
DependencyProperty
ÖÖH Z
.
ÖÖZ [
Register
ÖÖ[ c
(
ÖÖc d
nameof
ÜÜ 
(
ÜÜ 
HintOpacity
ÜÜ 
)
ÜÜ 
,
ÜÜ  
typeof
ÜÜ! '
(
ÜÜ' (
double
ÜÜ( .
)
ÜÜ. /
,
ÜÜ/ 0
typeof
ÜÜ1 7
(
ÜÜ7 8
	SmartHint
ÜÜ8 A
)
ÜÜA B
,
ÜÜB C
new
ÜÜD G
PropertyMetadata
ÜÜH X
(
ÜÜX Y
$num
ÜÜY \
)
ÜÜ\ ]
)
ÜÜ] ^
;
ÜÜ^ _
public
àà 
double
àà 
HintOpacity
àà !
{
ââ 	
get
ää 
{
ää 
return
ää 
(
ää 
double
ää  
)
ää  !
GetValue
ää" *
(
ää* +!
HintOpacityProperty
ää+ >
)
ää> ?
;
ää? @
}
ääA B
set
ãã 
{
ãã 
SetValue
ãã 
(
ãã !
HintOpacityProperty
ãã .
,
ãã. /
value
ãã0 5
)
ãã5 6
;
ãã6 7
}
ãã8 9
}
åå 	
static
êê 
	SmartHint
êê 
(
êê 
)
êê 
{
ëë 	%
DefaultStyleKeyProperty
íí #
.
íí# $
OverrideMetadata
íí$ 4
(
íí4 5
typeof
íí5 ;
(
íí; <
	SmartHint
íí< E
)
ííE F
,
ííF G
new
ííH K'
FrameworkPropertyMetadata
ííL e
(
ííe f
typeof
ííf l
(
ííl m
	SmartHint
íím v
)
íív w
)
ííw x
)
ííx y
;
ííy z
}
ìì 	
public
ïï 
	SmartHint
ïï 
(
ïï 
)
ïï 
{
ññ 	
IsHitTestVisible
óó 
=
óó 
false
óó $
;
óó$ %!
HorizontalAlignment
òò 
=
òò  !!
HorizontalAlignment
òò" 5
.
òò5 6
Left
òò6 :
;
òò: ;
VerticalAlignment
ôô 
=
ôô 
VerticalAlignment
ôô  1
.
ôô1 2
Top
ôô2 5
;
ôô5 6
}
öö 	
private
úú 
static
úú 
void
úú .
 HintProxyPropertyChangedCallback
úú <
(
úú< =
DependencyObject
úú= M
dependencyObject
úúN ^
,
úú^ _1
"DependencyPropertyChangedEventArgsúú` Ç2
"dependencyPropertyChangedEventArgsúúÉ •
)úú• ¶
{
ùù 	
var
ûû 
	smartHint
ûû 
=
ûû 
dependencyObject
ûû ,
as
ûû- /
	SmartHint
ûû0 9
;
ûû9 :
if
üü 
(
üü 
	smartHint
üü 
==
üü 
null
üü !
)
üü! "
return
üü# )
;
üü) *
var
°° 
	hintProxy
°° 
=
°° 0
"dependencyPropertyChangedEventArgs
°° >
.
°°> ?
OldValue
°°? G
as
°°H J

IHintProxy
°°K U
;
°°U V
if
££ 
(
££ 
	hintProxy
££ 
!=
££ 
null
££ !
)
££! "
{
§§ 
	hintProxy
•• 
.
•• 
IsVisibleChanged
•• *
-=
••+ -
	smartHint
••. 7
.
••7 8)
OnHintProxyIsVisibleChanged
••8 S
;
••S T
	hintProxy
¶¶ 
.
¶¶ 
ContentChanged
¶¶ (
-=
¶¶) +
	smartHint
¶¶, 5
.
¶¶5 6'
OnHintProxyContentChanged
¶¶6 O
;
¶¶O P
	hintProxy
ßß 
.
ßß 
Loaded
ßß  
-=
ßß! #
	smartHint
ßß$ -
.
ßß- .'
OnHintProxyContentChanged
ßß. G
;
ßßG H
	hintProxy
®® 
.
®® 
FocusedChanged
®® (
-=
®®) +
	smartHint
®®, 5
.
®®5 6'
OnHintProxyFocusedChanged
®®6 O
;
®®O P
	hintProxy
©© 
.
©© 
Dispose
©© !
(
©©! "
)
©©" #
;
©©# $
}
™™ 
	hintProxy
¨¨ 
=
¨¨ 0
"dependencyPropertyChangedEventArgs
¨¨ :
.
¨¨: ;
NewValue
¨¨; C
as
¨¨D F

IHintProxy
¨¨G Q
;
¨¨Q R
if
≠≠ 
(
≠≠ 
	hintProxy
≠≠ 
==
≠≠ 
null
≠≠ !
)
≠≠! "
return
≠≠# )
;
≠≠) *
	hintProxy
ØØ 
.
ØØ 
IsVisibleChanged
ØØ &
+=
ØØ' )
	smartHint
ØØ* 3
.
ØØ3 4)
OnHintProxyIsVisibleChanged
ØØ4 O
;
ØØO P
	hintProxy
∞∞ 
.
∞∞ 
ContentChanged
∞∞ $
+=
∞∞% '
	smartHint
∞∞( 1
.
∞∞1 2'
OnHintProxyContentChanged
∞∞2 K
;
∞∞K L
	hintProxy
±± 
.
±± 
Loaded
±± 
+=
±± 
	smartHint
±±  )
.
±±) *'
OnHintProxyContentChanged
±±* C
;
±±C D
	hintProxy
≤≤ 
.
≤≤ 
FocusedChanged
≤≤ $
+=
≤≤% '
	smartHint
≤≤( 1
.
≤≤1 2'
OnHintProxyFocusedChanged
≤≤2 K
;
≤≤K L
	smartHint
≥≥ 
.
≥≥ 
RefreshState
≥≥ "
(
≥≥" #
false
≥≥# (
)
≥≥( )
;
≥≥) *
}
¥¥ 	
	protected
∂∂ 
virtual
∂∂ 
void
∂∂ '
OnHintProxyFocusedChanged
∂∂ 8
(
∂∂8 9
object
∂∂9 ?
sender
∂∂@ F
,
∂∂F G
	EventArgs
∂∂H Q
e
∂∂R S
)
∂∂S T
{
∑∑ 	
if
∏∏ 
(
∏∏ 
	HintProxy
∏∏ 
.
∏∏ 
IsLoaded
∏∏ "
)
∏∏" #
RefreshState
ππ 
(
ππ 
true
ππ !
)
ππ! "
;
ππ" #
else
∫∫ 
	HintProxy
ªª 
.
ªª 
Loaded
ªª  
+=
ªª! #'
HintProxySetStateOnLoaded
ªª$ =
;
ªª= >
}
ºº 	
	protected
ææ 
virtual
ææ 
void
ææ '
OnHintProxyContentChanged
ææ 8
(
ææ8 9
object
ææ9 ?
sender
ææ@ F
,
ææF G
	EventArgs
ææH Q
e
ææR S
)
ææS T
{
øø 	"
IsContentNullOrEmpty
¿¿  
=
¿¿! "
	HintProxy
¿¿# ,
.
¿¿, -
IsEmpty
¿¿- 4
(
¿¿4 5
)
¿¿5 6
;
¿¿6 7
if
¬¬ 
(
¬¬ 
	HintProxy
¬¬ 
.
¬¬ 
IsLoaded
¬¬ "
)
¬¬" #
RefreshState
√√ 
(
√√ 
true
√√ !
)
√√! "
;
√√" #
else
ƒƒ 
	HintProxy
≈≈ 
.
≈≈ 
Loaded
≈≈  
+=
≈≈! #'
HintProxySetStateOnLoaded
≈≈$ =
;
≈≈= >
}
∆∆ 	
private
»» 
void
»» '
HintProxySetStateOnLoaded
»» .
(
»». /
object
»»/ 5
sender
»»6 <
,
»»< =
	EventArgs
»»> G
e
»»H I
)
»»I J
{
…… 	
RefreshState
   
(
   
false
   
)
   
;
    
	HintProxy
ÀÀ 
.
ÀÀ 
Loaded
ÀÀ 
-=
ÀÀ '
HintProxySetStateOnLoaded
ÀÀ  9
;
ÀÀ9 :
}
ÃÃ 	
	protected
ŒŒ 
virtual
ŒŒ 
void
ŒŒ )
OnHintProxyIsVisibleChanged
ŒŒ :
(
ŒŒ: ;
object
ŒŒ; A
sender
ŒŒB H
,
ŒŒH I
	EventArgs
ŒŒJ S
e
ŒŒT U
)
ŒŒU V
{
œœ 	
RefreshState
–– 
(
–– 
false
–– 
)
–– 
;
––  
}
—— 	
private
”” 
void
”” 
RefreshState
”” !
(
””! "
bool
””" &
useTransitions
””' 5
)
””5 6
{
‘‘ 	

IHintProxy
’’ 
proxy
’’ 
=
’’ 
	HintProxy
’’ (
;
’’( )
if
◊◊ 
(
◊◊ 
proxy
◊◊ 
==
◊◊ 
null
◊◊ 
)
◊◊ 
return
◊◊ %
;
◊◊% &
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
proxy
ÿÿ 
.
ÿÿ 
	IsVisible
ÿÿ  
)
ÿÿ  !
return
ÿÿ" (
;
ÿÿ( )
var
⁄⁄ 
action
⁄⁄ 
=
⁄⁄ 
new
⁄⁄ 
Action
⁄⁄ #
(
⁄⁄# $
(
⁄⁄$ %
)
⁄⁄% &
=>
⁄⁄' )
{
€€ 
string
‹‹ 
state
‹‹ 
=
‹‹ 
string
‹‹ %
.
‹‹% &
Empty
‹‹& +
;
‹‹+ ,
bool
ﬁﬁ 
isEmpty
ﬁﬁ 
=
ﬁﬁ 
proxy
ﬁﬁ $
.
ﬁﬁ$ %
IsEmpty
ﬁﬁ% ,
(
ﬁﬁ, -
)
ﬁﬁ- .
;
ﬁﬁ. /
bool
ﬂﬂ 
	isFocused
ﬂﬂ 
=
ﬂﬂ  
proxy
ﬂﬂ! &
.
ﬂﬂ& '
	IsFocused
ﬂﬂ' 0
(
ﬂﬂ0 1
)
ﬂﬂ1 2
;
ﬂﬂ2 3
if
·· 
(
·· 
UseFloating
·· 
)
··  
state
‚‚ 
=
‚‚ 
!
‚‚ 
isEmpty
‚‚ $
||
‚‚% '
	isFocused
‚‚( 1
?
‚‚2 3&
HintFloatingPositionName
‚‚4 L
:
‚‚M N%
HintRestingPositionName
‚‚O f
;
‚‚f g
else
„„ 
state
‰‰ 
=
‰‰ 
!
‰‰ 
isEmpty
‰‰ $
?
‰‰% &&
HintFloatingPositionName
‰‰' ?
:
‰‰@ A%
HintRestingPositionName
‰‰B Y
;
‰‰Y Z&
IsHintInFloatingPosition
ÊÊ (
=
ÊÊ) *
state
ÊÊ+ 0
==
ÊÊ1 3&
HintFloatingPositionName
ÊÊ4 L
;
ÊÊL M 
VisualStateManager
ËË "
.
ËË" #
	GoToState
ËË# ,
(
ËË, -
this
ËË- 1
,
ËË1 2
state
ËË3 8
,
ËË8 9
useTransitions
ËË: H
)
ËËH I
;
ËËI J
}
ÈÈ 
)
ÈÈ 
;
ÈÈ 
if
ÎÎ 
(
ÎÎ  
DesignerProperties
ÎÎ "
.
ÎÎ" #
GetIsInDesignMode
ÎÎ# 4
(
ÎÎ4 5
this
ÎÎ5 9
)
ÎÎ9 :
)
ÎÎ: ;
{
ÏÏ 
action
ÌÌ 
(
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÓÓ 
else
ÔÔ 
{
 

Dispatcher
ÒÒ 
.
ÒÒ 
BeginInvoke
ÒÒ &
(
ÒÒ& '
action
ÒÒ' -
)
ÒÒ- .
;
ÒÒ. /
}
ÚÚ 
}
ÛÛ 	
}
ÙÙ 
}ıı √
WD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\StringExtensions.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{		 
internal

 
static

 
class

 
StringExtensions

 *
{ 
public 
static 
string 
ToTitleCase (
(( )
this) -
string. 4
text5 9
,9 :
CultureInfo; F
cultureG N
,N O
stringP V
	separatorW `
=a b
$strc f
)f g
{ 	
TextInfo 
textInfo 
= 
culture  '
.' (
TextInfo( 0
;0 1
string 
	lowerText 
= 
textInfo '
.' (
ToLower( /
(/ 0
text0 4
)4 5
;5 6
string 
[ 
] 
words 
= 
	lowerText &
.& '
Split' ,
(, -
new- 0
[0 1
]1 2
{3 4
	separator5 >
}? @
,@ A
StringSplitOptionsB T
.T U
NoneU Y
)Y Z
;Z [
return 
String 
. 
Join 
( 
	separator (
,( )
words* /
./ 0
Select0 6
(6 7
v7 8
=>9 ;
textInfo< D
.D E
ToTitleCaseE P
(P Q
vQ R
)R S
)S T
)T U
;U V
} 	
} 
} ç≠
VD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\TextFieldAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
TextFieldAssist '
{ 
public 
static 
readonly 
DependencyProperty 1%
TextBoxViewMarginProperty2 K
=L M
DependencyPropertyN `
.` a
RegisterAttacheda q
(q r
$str 
,  
typeof 
( 
	Thickness 
) 
, 
typeof 
( 
TextFieldAssist "
)" #
,# $
new %
FrameworkPropertyMetadata )
() *
new* -
	Thickness. 7
(7 8
double8 >
.> ?
NegativeInfinity? O
)O P
,P Q,
 FrameworkPropertyMetadataOptionsR r
.r s
Inheritss {
,{ |5
(TextBoxViewMarginPropertyChangedCallback	} •
)
• ¶
)
¶ ß
;
ß ®
public 
static 
void  
SetTextBoxViewMargin /
(/ 0
DependencyObject0 @
elementA H
,H I
	ThicknessJ S
valueT Y
)Y Z
{ 	
element 
. 
SetValue 
( %
TextBoxViewMarginProperty 6
,6 7
value8 =
)= >
;> ?
} 	
public(( 
static(( 
	Thickness((  
GetTextBoxViewMargin((  4
(((4 5
DependencyObject((5 E
element((F M
)((M N
{)) 	
return** 
(** 
	Thickness** 
)** 
element** %
.**% &
GetValue**& .
(**. /%
TextBoxViewMarginProperty**/ H
)**H I
;**I J
}++ 	
public11 
static11 
readonly11 
DependencyProperty11 1(
DecorationVisibilityProperty112 N
=11O P
DependencyProperty11Q c
.11c d
RegisterAttached11d t
(11t u
$str22 "
,22" #
typeof22$ *
(22* +

Visibility22+ 5
)225 6
,226 7
typeof228 >
(22> ?
TextFieldAssist22? N
)22N O
,22O P
new22Q T
PropertyMetadata22U e
(22e f
default22f m
(22m n

Visibility22n x
)22x y
)22y z
)22z {
;22{ |
public77 
static77 
void77 #
SetDecorationVisibility77 2
(772 3
DependencyObject773 C
element77D K
,77K L

Visibility77M W
value77X ]
)77] ^
{88 	
element99 
.99 
SetValue99 
(99 (
DecorationVisibilityProperty99 9
,999 :
value99; @
)99@ A
;99A B
}:: 	
publicAA 
staticAA 

VisibilityAA  #
GetDecorationVisibilityAA! 8
(AA8 9
DependencyObjectAA9 I
elementAAJ Q
)AAQ R
{BB 	
returnCC 
(CC 

VisibilityCC 
)CC 
elementCC &
.CC& '
GetValueCC' /
(CC/ 0(
DecorationVisibilityPropertyCC0 L
)CCL M
;CCM N
}DD 	
publicII 
staticII 
readonlyII 
DependencyPropertyII 1#
HasTextFieldBoxPropertyII2 I
=IIJ K
DependencyPropertyIIL ^
.II^ _
RegisterAttachedII_ o
(IIo p
$strJJ 
,JJ 
typeofJJ %
(JJ% &
boolJJ& *
)JJ* +
,JJ+ ,
typeofJJ- 3
(JJ3 4
TextFieldAssistJJ4 C
)JJC D
,JJD E
newJJF I
PropertyMetadataJJJ Z
(JJZ [
falseJJ[ `
)JJ` a
)JJa b
;JJb c
publicLL 
staticLL 
voidLL 
SetHasTextFieldBoxLL -
(LL- .
DependencyObjectLL. >
elementLL? F
,LLF G
boolLLH L
valueLLM R
)LLR S
{MM 	
elementNN 
.NN 
SetValueNN 
(NN #
HasTextFieldBoxPropertyNN 4
,NN4 5
valueNN6 ;
)NN; <
;NN< =
}OO 	
publicQQ 
staticQQ 
boolQQ 
GetHasTextFieldBoxQQ -
(QQ- .
DependencyObjectQQ. >
elementQQ? F
)QQF G
{RR 	
returnSS 
(SS 
boolSS 
)SS 
elementSS  
.SS  !
GetValueSS! )
(SS) *#
HasTextFieldBoxPropertySS* A
)SSA B
;SSB C
}TT 	
publicYY 
staticYY 
readonlyYY 
DependencyPropertyYY 1"
HasTextAreaBoxPropertyYY2 H
=YYI J
DependencyPropertyYYK ]
.YY] ^
RegisterAttachedYY^ n
(YYn o
$strZZ 
,ZZ 
typeofZZ $
(ZZ$ %
boolZZ% )
)ZZ) *
,ZZ* +
typeofZZ, 2
(ZZ2 3
TextFieldAssistZZ3 B
)ZZB C
,ZZC D
newZZE H
PropertyMetadataZZI Y
(ZZY Z
falseZZZ _
)ZZ_ `
)ZZ` a
;ZZa b
public\\ 
static\\ 
void\\ 
SetHasTextAreaBox\\ ,
(\\, -
DependencyObject\\- =
element\\> E
,\\E F
bool\\G K
value\\L Q
)\\Q R
{]] 	
element^^ 
.^^ 
SetValue^^ 
(^^ "
HasTextAreaBoxProperty^^ 3
,^^3 4
value^^5 :
)^^: ;
;^^; <
}__ 	
publicaa 
staticaa 
boolaa 
GetHasTextAreaBoxaa ,
(aa, -
DependencyObjectaa- =
elementaa> E
)aaE F
{bb 	
returncc 
(cc 
boolcc 
)cc 
elementcc  
.cc  !
GetValuecc! )
(cc) *"
HasTextAreaBoxPropertycc* @
)cc@ A
;ccA B
}dd 	
publicii 
staticii 
readonlyii 
DependencyPropertyii 1.
"IncludeSpellingSuggestionsPropertyii2 T
=iiU V
DependencyPropertyiiW i
.iii j
RegisterAttachediij z
(iiz {
$strjj (
,jj( )
typeofjj* 0
(jj0 1
booljj1 5
)jj5 6
,jj6 7
typeofjj8 >
(jj> ?
TextFieldAssistjj? N
)jjN O
,jjO P
newjjQ T
PropertyMetadatajjU e
(jje f
defaultjjf m
(jjm n
booljjn r
)jjr s
,jjs t.
!IncludeSpellingSuggestionsChanged	jju ñ
)
jjñ ó
)
jjó ò
;
jjò ô
publicll 
staticll 
voidll )
SetIncludeSpellingSuggestionsll 8
(ll8 9
TextBoxBasell9 D
elementllE L
,llL M
boolllN R
valuellS X
)llX Y
{mm 	
elementnn 
.nn 
SetValuenn 
(nn .
"IncludeSpellingSuggestionsPropertynn ?
,nn? @
valuennA F
)nnF G
;nnG H
}oo 	
publicqq 
staticqq 
boolqq )
GetIncludeSpellingSuggestionsqq 8
(qq8 9
TextBoxBaseqq9 D
elementqqE L
)qqL M
{rr 	
returnss 
(ss 
boolss 
)ss 
elementss  
.ss  !
GetValuess! )
(ss) *.
"IncludeSpellingSuggestionsPropertyss* L
)ssL M
;ssM N
}tt 	
privatevv 
staticvv 
voidvv -
!IncludeSpellingSuggestionsChangedvv =
(vv= >
DependencyObjectvv> N
elementvvO V
,vvV W.
"DependencyPropertyChangedEventArgsvvX z
evv{ |
)vv| }
{ww 	
varxx 
textBoxxx 
=xx 
elementxx !
asxx" $
TextBoxBasexx% 0
;xx0 1
ifyy 
(yy 
textBoxyy 
!=yy 
nullyy 
)yy  
{zz 
if{{ 
({{ 
({{ 
bool{{ 
){{ 
e{{ 
.{{ 
NewValue{{ $
){{$ %
{|| 
textBox}} 
.}} 
ContextMenuOpening}} .
+=}}/ 1'
TextBoxOnContextMenuOpening}}2 M
;}}M N
textBox~~ 
.~~ 
ContextMenuClosing~~ .
+=~~/ 1'
TextBoxOnContextMenuClosing~~2 M
;~~M N
} 
else
ÄÄ 
{
ÅÅ 
textBox
ÇÇ 
.
ÇÇ  
ContextMenuOpening
ÇÇ .
-=
ÇÇ/ 1)
TextBoxOnContextMenuOpening
ÇÇ2 M
;
ÇÇM N
textBox
ÉÉ 
.
ÉÉ  
ContextMenuClosing
ÉÉ .
-=
ÉÉ/ 1)
TextBoxOnContextMenuClosing
ÉÉ2 M
;
ÉÉM N
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
private
àà 
static
àà 
void
àà )
TextBoxOnContextMenuOpening
àà 7
(
àà7 8
object
àà8 >
sender
àà? E
,
ààE F"
ContextMenuEventArgs
ààG [
e
àà\ ]
)
àà] ^
{
ââ 	
var
ää 
textBoxBase
ää 
=
ää 
sender
ää $
as
ää% '
TextBoxBase
ää( 3
;
ää3 4
ContextMenu
åå 
contextMenu
åå #
=
åå$ %
textBoxBase
åå& 1
?
åå1 2
.
åå2 3
ContextMenu
åå3 >
;
åå> ?
if
çç 
(
çç 
contextMenu
çç 
==
çç 
null
çç #
)
çç# $
return
çç% +
;
çç+ ,'
RemoveSpellingSuggestions
èè %
(
èè% &
contextMenu
èè& 1
)
èè1 2
;
èè2 3
if
ëë 
(
ëë 
!
ëë 

SpellCheck
ëë 
.
ëë 
GetIsEnabled
ëë (
(
ëë( )
textBoxBase
ëë) 4
)
ëë4 5
)
ëë5 6
return
ëë7 =
;
ëë= >
SpellingError
ìì 
spellingError
ìì '
=
ìì( )
GetSpellingError
ìì* :
(
ìì: ;
textBoxBase
ìì; F
)
ììF G
;
ììG H
if
îî 
(
îî 
spellingError
îî 
!=
îî  
null
îî! %
)
îî% &
{
ïï 
Style
ññ %
spellingSuggestionStyle
ññ -
=
ññ. /
contextMenu
óó 
.
óó  
TryFindResource
óó  /
(
óó/ 0
Spelling
óó0 8
.
óó8 9(
SuggestionMenuItemStyleKey
óó9 S
)
óóS T
as
óóU W
Style
óóX ]
;
óó] ^
int
ôô 
insertionIndex
ôô "
=
ôô# $
$num
ôô% &
;
ôô& '
bool
öö 
hasSuggestion
öö "
=
öö# $
false
öö% *
;
öö* +
foreach
õõ 
(
õõ 
string
õõ 

suggestion
õõ  *
in
õõ+ -
spellingError
õõ. ;
.
õõ; <
Suggestions
õõ< G
)
õõG H
{
úú 
hasSuggestion
ùù !
=
ùù" #
true
ùù$ (
;
ùù( )
var
ûû 
menuItem
ûû  
=
ûû! "
new
ûû# &
MenuItem
ûû' /
{
üü 
CommandTarget
†† %
=
††& '
textBoxBase
††( 3
,
††3 4
Command
°° 
=
°°  !
EditingCommands
°°" 1
.
°°1 2"
CorrectSpellingError
°°2 F
,
°°F G
CommandParameter
¢¢ (
=
¢¢) *

suggestion
¢¢+ 5
,
¢¢5 6
Style
££ 
=
££ %
spellingSuggestionStyle
££  7
,
££7 8
Tag
§§ 
=
§§ 
typeof
§§ $
(
§§$ %
Spelling
§§% -
)
§§- .
}
•• 
;
•• 
contextMenu
¶¶ 
.
¶¶  
Items
¶¶  %
.
¶¶% &
Insert
¶¶& ,
(
¶¶, -
insertionIndex
¶¶- ;
++
¶¶; =
,
¶¶= >
menuItem
¶¶? G
)
¶¶G H
;
¶¶H I
}
ßß 
if
®® 
(
®® 
!
®® 
hasSuggestion
®® "
)
®®" #
{
©© 
contextMenu
™™ 
.
™™  
Items
™™  %
.
™™% &
Insert
™™& ,
(
™™, -
insertionIndex
™™- ;
++
™™; =
,
™™= >
new
™™? B
MenuItem
™™C K
{
´´ 
Style
¨¨ 
=
¨¨ 
contextMenu
¨¨  +
.
¨¨+ ,
TryFindResource
¨¨, ;
(
¨¨; <
Spelling
¨¨< D
.
¨¨D E+
NoSuggestionsMenuItemStyleKey
¨¨E b
)
¨¨b c
as
¨¨d f
Style
¨¨g l
,
¨¨l m
Tag
≠≠ 
=
≠≠ 
typeof
≠≠ $
(
≠≠$ %
Spelling
≠≠% -
)
≠≠- .
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 
contextMenu
±± 
.
±± 
Items
±± !
.
±±! "
Insert
±±" (
(
±±( )
insertionIndex
±±) 7
++
±±7 9
,
±±9 :
new
±±; >
	Separator
±±? H
{
≤≤ 
Style
≥≥ 
=
≥≥ 
contextMenu
≥≥ '
.
≥≥' (
TryFindResource
≥≥( 7
(
≥≥7 8
Spelling
≥≥8 @
.
≥≥@ A
SeparatorStyleKey
≥≥A R
)
≥≥R S
as
≥≥T V
Style
≥≥W \
,
≥≥\ ]
Tag
¥¥ 
=
¥¥ 
typeof
¥¥  
(
¥¥  !
Spelling
¥¥! )
)
¥¥) *
}
µµ 
)
µµ 
;
µµ 
contextMenu
∑∑ 
.
∑∑ 
Items
∑∑ !
.
∑∑! "
Insert
∑∑" (
(
∑∑( )
insertionIndex
∑∑) 7
++
∑∑7 9
,
∑∑9 :
new
∑∑; >
MenuItem
∑∑? G
{
∏∏ 
Command
ππ 
=
ππ 
EditingCommands
ππ -
.
ππ- .!
IgnoreSpellingError
ππ. A
,
ππA B
CommandTarget
∫∫ !
=
∫∫" #
textBoxBase
∫∫$ /
,
∫∫/ 0
Style
ªª 
=
ªª 
contextMenu
ªª '
.
ªª' (
TryFindResource
ªª( 7
(
ªª7 8
Spelling
ªª8 @
.
ªª@ A'
IgnoreAllMenuItemStyleKey
ªªA Z
)
ªªZ [
as
ªª\ ^
Style
ªª_ d
,
ªªd e
Tag
ºº 
=
ºº 
typeof
ºº  
(
ºº  !
Spelling
ºº! )
)
ºº) *
}
ΩΩ 
)
ΩΩ 
;
ΩΩ 
contextMenu
øø 
.
øø 
Items
øø !
.
øø! "
Insert
øø" (
(
øø( )
insertionIndex
øø) 7
,
øø7 8
new
øø9 <
	Separator
øø= F
{
¿¿ 
Style
¡¡ 
=
¡¡ 
contextMenu
¡¡ '
.
¡¡' (
TryFindResource
¡¡( 7
(
¡¡7 8
Spelling
¡¡8 @
.
¡¡@ A
SeparatorStyleKey
¡¡A R
)
¡¡R S
as
¡¡T V
Style
¡¡W \
,
¡¡\ ]
Tag
¬¬ 
=
¬¬ 
typeof
¬¬  
(
¬¬  !
Spelling
¬¬! )
)
¬¬) *
}
√√ 
)
√√ 
;
√√ 
}
ƒƒ 
}
≈≈ 	
private
«« 
static
«« 
SpellingError
«« $
GetSpellingError
««% 5
(
««5 6
TextBoxBase
««6 A
textBoxBase
««B M
)
««M N
{
»» 	
var
…… 
textBox
…… 
=
…… 
textBoxBase
…… %
as
……& (
TextBox
……) 0
;
……0 1
if
   
(
   
textBox
   
!=
   
null
   
)
    
{
ÀÀ 
return
ÃÃ 
textBox
ÃÃ 
.
ÃÃ 
GetSpellingError
ÃÃ /
(
ÃÃ/ 0
textBox
ÃÃ0 7
.
ÃÃ7 8

CaretIndex
ÃÃ8 B
)
ÃÃB C
;
ÃÃC D
}
ÕÕ 
var
ŒŒ 
richTextBox
ŒŒ 
=
ŒŒ 
textBoxBase
ŒŒ )
as
ŒŒ* ,
RichTextBox
ŒŒ- 8
;
ŒŒ8 9
if
œœ 
(
œœ 
richTextBox
œœ 
!=
œœ 
null
œœ #
)
œœ# $
{
–– 
return
—— 
richTextBox
—— "
.
——" #
GetSpellingError
——# 3
(
——3 4
richTextBox
——4 ?
.
——? @
CaretPosition
——@ M
)
——M N
;
——N O
}
““ 
return
”” 
null
”” 
;
”” 
}
‘‘ 	
private
÷÷ 
static
÷÷ 
void
÷÷ )
TextBoxOnContextMenuClosing
÷÷ 7
(
÷÷7 8
object
÷÷8 >
sender
÷÷? E
,
÷÷E F"
ContextMenuEventArgs
÷÷G [
e
÷÷\ ]
)
÷÷] ^
{
◊◊ 	
var
ÿÿ 
contextMenu
ÿÿ 
=
ÿÿ 
(
ÿÿ 
sender
ÿÿ %
as
ÿÿ& (
TextBoxBase
ÿÿ) 4
)
ÿÿ4 5
?
ÿÿ5 6
.
ÿÿ6 7
ContextMenu
ÿÿ7 B
;
ÿÿB C
if
ŸŸ 
(
ŸŸ 
contextMenu
ŸŸ 
!=
ŸŸ 
null
ŸŸ #
)
ŸŸ# $
{
⁄⁄ '
RemoveSpellingSuggestions
€€ )
(
€€) *
contextMenu
€€* 5
)
€€5 6
;
€€6 7
}
‹‹ 
}
›› 	
private
ﬂﬂ 
static
ﬂﬂ 
void
ﬂﬂ '
RemoveSpellingSuggestions
ﬂﬂ 5
(
ﬂﬂ5 6
ContextMenu
ﬂﬂ6 A
menu
ﬂﬂB F
)
ﬂﬂF G
{
‡‡ 	
foreach
·· 
(
·· 
FrameworkElement
·· %
item
··& *
in
··+ -
(
··. /
from
··/ 3
item
··4 8
in
··9 ;
menu
··< @
.
··@ A
Items
··A F
.
··F G
OfType
··G M
<
··M N
FrameworkElement
··N ^
>
··^ _
(
··_ `
)
··` a
where
‚‚% *
ReferenceEquals
‚‚+ :
(
‚‚: ;
item
‚‚; ?
.
‚‚? @
Tag
‚‚@ C
,
‚‚C D
typeof
‚‚E K
(
‚‚K L
Spelling
‚‚L T
)
‚‚T U
)
‚‚U V
select
„„% +
item
„„, 0
)
„„0 1
.
„„1 2
ToList
„„2 8
(
„„8 9
)
„„9 :
)
„„: ;
{
‰‰ 
menu
ÂÂ 
.
ÂÂ 
Items
ÂÂ 
.
ÂÂ 
Remove
ÂÂ !
(
ÂÂ! "
item
ÂÂ" &
)
ÂÂ& '
;
ÂÂ' (
}
ÊÊ 
}
ÁÁ 	
private
 
static
 
void
 $
ApplyTextBoxViewMargin
 2
(
2 3
Control
3 :
textBox
; B
,
B C
	Thickness
D M
margin
N T
)
T U
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 
margin
ÚÚ 
.
ÚÚ 
Equals
ÚÚ 
(
ÚÚ 
new
ÚÚ !
	Thickness
ÚÚ" +
(
ÚÚ+ ,
double
ÚÚ, 2
.
ÚÚ2 3
NegativeInfinity
ÚÚ3 C
)
ÚÚC D
)
ÚÚD E
)
ÚÚE F
{
ÛÛ 
return
ÙÙ 
;
ÙÙ 
}
ıı 
var
˜˜ 
frameworkElement
˜˜  
=
˜˜! "
(
˜˜# $
textBox
˜˜$ +
.
˜˜+ ,
Template
˜˜, 4
.
˜˜4 5
FindName
˜˜5 =
(
˜˜= >
$str
˜˜> P
,
˜˜P Q
textBox
˜˜R Y
)
˜˜Y Z
as
˜˜[ ]
ScrollViewer
˜˜^ j
)
˜˜j k
?
˜˜k l
.
˜˜l m
Content
˜˜m t
as
˜˜u w
FrameworkElement˜˜x à
;˜˜à â
if
¯¯ 
(
¯¯ 
frameworkElement
¯¯  
!=
¯¯! #
null
¯¯$ (
)
¯¯( )
{
˘˘ 
frameworkElement
˙˙  
.
˙˙  !
Margin
˙˙! '
=
˙˙( )
margin
˙˙* 0
;
˙˙0 1
}
˚˚ 
}
¸¸ 	
private
ÉÉ 
static
ÉÉ 
void
ÉÉ 6
(TextBoxViewMarginPropertyChangedCallback
ÉÉ D
(
ÉÉD E
DependencyObject
ÑÑ 
dependencyObject
ÑÑ -
,
ÑÑ- .0
"DependencyPropertyChangedEventArgs
ÖÖ .0
"dependencyPropertyChangedEventArgs
ÖÖ/ Q
)
ÖÖQ R
{
ÜÜ 	
var
áá 
box
áá 
=
áá 
dependencyObject
áá &
as
áá' )
Control
áá* 1
;
áá1 2
if
àà 
(
àà 
box
àà 
==
àà 
null
àà 
)
àà 
{
ââ 
return
ää 
;
ää 
}
ãã 
if
çç 
(
çç 
box
çç 
.
çç 
IsLoaded
çç 
)
çç 
{
éé $
ApplyTextBoxViewMargin
èè &
(
èè& '
box
èè' *
,
èè* +
(
èè, -
	Thickness
èè- 6
)
èè6 70
"dependencyPropertyChangedEventArgs
èè7 Y
.
èèY Z
NewValue
èèZ b
)
èèb c
;
èèc d
}
êê 
box
íí 
.
íí 
Loaded
íí 
+=
íí 
(
íí 
sender
íí !
,
íí! "
args
íí# '
)
íí' (
=>
íí) +
{
ìì 
var
îî 
textBox
îî 
=
îî 
(
îî 
Control
îî &
)
îî& '
sender
îî' -
;
îî- .$
ApplyTextBoxViewMargin
ïï &
(
ïï& '
textBox
ïï' .
,
ïï. /"
GetTextBoxViewMargin
ïï0 D
(
ïïD E
textBox
ïïE L
)
ïïL M
)
ïïM N
;
ïïN O
}
ññ 
;
ññ 
}
óó 	
}
öö 
}õõ ï
rD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Converters\TextFieldHintVisibilityConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #

Converters# -
{ 
public 
class ,
 TextFieldHintVisibilityConverter .
:/ 0
IValueConverter1 @
{		 
public

 

Visibility

 
IsEmptyValue

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
=

5 6

Visibility

7 A
.

A B
Visible

B I
;

I J
public 

Visibility 
IsNotEmptyValue )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
=8 9

Visibility: D
.D E
HiddenE K
;K L
public 
object	 
Convert 
( 
object 
value $
,$ %
Type& *

targetType+ 5
,5 6
object7 =
	parameter> G
,G H
CultureInfoI T
cultureU \
)\ ]
{ 
return 	
string
 
. 
IsNullOrEmpty 
( 
(  
value  %
??& (
$str) +
)+ ,
., -
ToString- 5
(5 6
)6 7
)7 8
?9 :
IsEmptyValue; G
:H I
IsNotEmptyValueJ Y
;Y Z
} 
public 
object	 
ConvertBack 
( 
object "
value# (
,( )
Type* .

targetType/ 9
,9 :
object; A
	parameterB K
,K L
CultureInfoM X
cultureY `
)` a
{ 
return 	
Binding
 
. 
	DoNothing 
; 
} 
} 
} Ï–
QD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\TimePicker.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[ 
TemplatePart 
( 
Name 
= 
ElementButton #
,# $
Type% )
=* +
typeof, 2
(2 3
Button3 9
)9 :
): ;
]; <
[ 
TemplatePart 
( 
Name 
= 
ElementPopup "
," #
Type$ (
=) *
typeof+ 1
(1 2
Popup2 7
)7 8
)8 9
]9 :
[ 
TemplatePart 
( 
Name 
= 
ElementTextBox $
,$ %
Type& *
=+ ,
typeof- 3
(3 4
DatePickerTextBox4 E
)E F
)F G
]G H
public 
class 

TimePicker 
: 
Control "
{ 
private 	
const
 
string 
ElementButton $
=% &
$str' 4
;4 5
private 	
const
 
string 
ElementPopup #
=$ %
$str& 2
;2 3
private 	
const
 
string 
ElementTextBox %
=& '
$str( 6
;6 7
private 	
readonly
 
ContentControl !$
_clockHostContentControl" :
;: ;
private 
readonly 
Clock 
_clock "
;" #
private 
TextBox 
_textBox 
; 
private 
Popup 
_popup 
; 
private 	
Button
 
_dropDownButton  
;  !
private 	
bool
 
_disablePopupReopen "
;" #
private 
DateTime 
? 
_lastValidTime (
;( )
private 
bool #
_isManuallyMutatingText )
;) *
static 

TimePicker 
( 
) 
{   #
DefaultStyleKeyProperty!! 
.!! 
OverrideMetadata!! +
(!!+ ,
typeof!!, 2
(!!2 3

TimePicker!!3 =
)!!= >
,!!> ?
new!!@ C%
FrameworkPropertyMetadata!!D ]
(!!] ^
typeof!!^ d
(!!d e

TimePicker!!e o
)!!o p
)!!p q
)!!q r
;!!r s
}"" 
public$$ 

TimePicker$$	 
($$ 
)$$ 
{%% 
_clock&& 
=&& 
new&& 
Clock&& 
{'' 
DisplayAutomation(( 
=(( "
ClockDisplayAutomation(( .
.((. /
ToMinutesOnly((/ <
})) 
;)) $
_clockHostContentControl** 
=** 
new** !
ContentControl**" 0
{++ 
Content,, 
=,, 
_clock,, 
}-- 
;-- 
InitializeClock.. 
(.. 
).. 
;.. 
}// 
public11 
static11	 
readonly11 
DependencyProperty11 +
TextProperty11, 8
=119 :
DependencyProperty11; M
.11M N
Register11N V
(11V W
nameof22 
(22 
Text22 
)22 
,22 
typeof22  
(22! "
string22" (
)22( )
,22) *
typeof22+ 1
(222 3

TimePicker223 =
)22= >
,22> ?
new22@ C%
FrameworkPropertyMetadata22D ]
(22] ^
default22^ e
(22e f
string22f l
)22l m
,22m n-
 FrameworkPropertyMetadataOptions	22o è
.
22è ê"
BindsTwoWayByDefault
22ê §
,
22§ •)
TextPropertyChangedCallback
22¶ ¡
)
22¡ ¬
)
22¬ √
;
22√ ƒ
private44 	
static44
 
void44 '
TextPropertyChangedCallback44 1
(441 2
DependencyObject442 B
dependencyObject44C S
,44S T.
"DependencyPropertyChangedEventArgs44U w/
"dependencyPropertyChangedEventArgs	44x ö
)
44ö õ
{55 
var66 

timePicker66 
=66 
(66 

TimePicker66 
)66  
dependencyObject66! 1
;661 2
if77 
(77 
!77 

timePicker77 
.77 #
_isManuallyMutatingText77 3
)773 4

timePicker88 
.88 
SetSelectedTime88 !
(88! "
)88" #
;88# $
if99 
(99 

timePicker99 
.99 
_textBox99 
!=99 
null99 "
)99" #

timePicker:: 
.:: 
_textBox:: 
.:: 
Text:: 
=:: .
"dependencyPropertyChangedEventArgs:: A
.::A B
NewValue::B J
as::K M
string::N T
;::T U
};; 
public== 
string==	 
Text== 
{>> 
get?? 
{?? 
return??	 
(?? 
string?? 
)?? 
GetValue?? !
(??! "
TextProperty??" .
)??. /
;??/ 0
}??1 2
set@@ 
{@@ 
SetValue@@	 
(@@ 
TextProperty@@ 
,@@ 
value@@  %
)@@% &
;@@& '
}@@( )
}AA 
publicCC 
staticCC	 
readonlyCC 
DependencyPropertyCC + 
SelectedTimePropertyCC, @
=CCA B
DependencyPropertyCCC U
.CCU V
RegisterCCV ^
(CC^ _
nameofDD 
(DD 
SelectedTimeDD 
)DD  
,DD  !
typeofDD" (
(DD) *
DateTimeDD* 2
?DD2 3
)DD3 4
,DD4 5
typeofDD6 <
(DD= >

TimePickerDD> H
)DDH I
,DDI J
newDDK N%
FrameworkPropertyMetadataDDO h
(DDh i
defaultDDi p
(DDp q
DateTimeDDq y
?DDy z
)DDz {
,DD{ |-
 FrameworkPropertyMetadataOptions	DD} ù
.
DDù û"
BindsTwoWayByDefault
DDû ≤
,
DD≤ ≥1
#SelectedTimePropertyChangedCallback
DD¥ ◊
)
DD◊ ÿ
)
DDÿ Ÿ
;
DDŸ ⁄
privateFF 	
staticFF
 
voidFF /
#SelectedTimePropertyChangedCallbackFF 9
(FF9 :
DependencyObjectFF: J
dependencyObjectFFK [
,FF[ \.
"DependencyPropertyChangedEventArgsFF] 0
"dependencyPropertyChangedEventArgs
FFÄ ¢
)
FF¢ £
{GG 
varHH 

timePickerHH 
=HH 
(HH 

TimePickerHH 
)HH  
dependencyObjectHH! 1
;HH1 2

timePickerII 
.II #
_isManuallyMutatingTextII (
=II) *
trueII+ /
;II/ 0

timePickerJJ 
.JJ 
SetCurrentValueJJ 
(JJ 
TextPropertyJJ *
,JJ* +

timePickerJJ, 6
.JJ6 7
DateTimeToStringJJ7 G
(JJG H

timePickerJJH R
.JJR S
SelectedTimeJJS _
)JJ_ `
)JJ` a
;JJa b

timePickerKK 
.KK #
_isManuallyMutatingTextKK .
=KK/ 0
falseKK1 6
;KK6 7

timePickerLL 
.LL 
_lastValidTimeLL %
=LL& '

timePickerLL( 2
.LL2 3
SelectedTimeLL3 ?
;LL? @
}MM 	
publicOO 
DateTimeOO 
?OO 
SelectedTimeOO %
{PP 
getQQ 
{QQ 
returnQQ	 
(QQ 
DateTimeQQ 
?QQ 
)QQ 
GetValueQQ $
(QQ$ % 
SelectedTimePropertyQQ% 9
)QQ9 :
;QQ: ;
}QQ< =
setRR 
{RR 
SetValueRR	 
(RR  
SelectedTimePropertyRR &
,RR& '
valueRR( -
)RR- .
;RR. /
}RR0 1
}SS 
publicUU 
staticUU	 
readonlyUU 
DependencyPropertyUU +&
SelectedTimeFormatPropertyUU, F
=UUG H
DependencyPropertyUUI [
.UU[ \
RegisterUU\ d
(UUd e
nameofVV 
(VV 
SelectedTimeFormatVV %
)VV% &
,VV& '
typeofVV( .
(VV/ 0
DatePickerFormatVV0 @
)VV@ A
,VVA B
typeofVVC I
(VVJ K

TimePickerVVK U
)VVU V
,VVV W
newVVX [
PropertyMetadataVV\ l
(VVl m
DatePickerFormatVVm }
.VV} ~
Short	VV~ É
)
VVÉ Ñ
)
VVÑ Ö
;
VVÖ Ü
publicXX 
DatePickerFormatXX	 
SelectedTimeFormatXX ,
{YY 
getZZ 
{ZZ 
returnZZ	 
(ZZ 
DatePickerFormatZZ !
)ZZ! "
GetValueZZ# +
(ZZ+ ,&
SelectedTimeFormatPropertyZZ, F
)ZZF G
;ZZG H
}ZZI J
set[[ 
{[[ 
SetValue[[	 
([[ &
SelectedTimeFormatProperty[[ ,
,[[, -
value[[. 3
)[[3 4
;[[4 5
}[[6 7
}\\ 
public^^ 
static^^	 
readonly^^ 
DependencyProperty^^ +"
IsDropDownOpenProperty^^, B
=^^C D
DependencyProperty^^E W
.^^W X
Register^^X `
(^^` a
nameof__ 
(__ 
IsDropDownOpen__ !
)__! "
,__" #
typeof__$ *
(__+ ,
bool__, 0
)__0 1
,__1 2
typeof__3 9
(__: ;

TimePicker__; E
)__E F
,__F G
new`` %
FrameworkPropertyMetadata``  
(``  !
false``! &
,``& ',
 FrameworkPropertyMetadataOptions``( H
.``H I 
BindsTwoWayByDefault``I ]
,``] ^#
OnIsDropDownOpenChanged``_ v
,``v w#
OnCoerceIsDropDownOpen	``x é
)
``é è
)
``è ê
;
``ê ë
publicbb 
boolbb	 
IsDropDownOpenbb 
{cc 
getdd 
{dd 
returndd	 
(dd 
booldd 
)dd 
GetValuedd 
(dd  "
IsDropDownOpenPropertydd  6
)dd6 7
;dd7 8
}dd9 :
setee 
{ee 
SetValueee	 
(ee "
IsDropDownOpenPropertyee (
,ee( )
valueee* /
)ee/ 0
;ee0 1
}ee2 3
}ff 
publichh 
statichh 
readonlyhh 
DependencyPropertyhh .
Is24HoursPropertyhh/ @
=hhA B
DependencyPropertyhhC U
.hhU V
RegisterhhV ^
(hh^ _
nameofii 
(ii 
	Is24Hoursii 
)ii 
,ii 
typeofii %
(ii& '
boolii' +
)ii+ ,
,ii, -
typeofii. 4
(ii5 6

TimePickerii6 @
)ii@ A
,iiA B
newiiC F
PropertyMetadataiiG W
(iiW X
defaultiiX _
(ii_ `
boolii` d
)iid e
)iie f
)iif g
;iig h
publickk 
boolkk 
	Is24Hourskk 
{ll 
getmm	 
{mm 
returnmm 
(mm 
boolmm 
)mm 
GetValuemm %
(mm% &
Is24HoursPropertymm& 7
)mm7 8
;mm8 9
}mm: ;
setnn	 
{nn 
SetValuenn 
(nn 
Is24HoursPropertynn )
,nn) *
valuenn+ 0
)nn0 1
;nn1 2
}nn3 4
}oo 
privateqq 	
staticqq
 
objectqq "
OnCoerceIsDropDownOpenqq .
(qq. /
DependencyObjectqq/ ?
dqq@ A
,qqA B
objectqqC I
	baseValueqqJ S
)qqS T
{rr 
varss 

timePickerss 
=ss 
(ss 

TimePickerss 
)ss  
dss  !
;ss! "
ifuu 
(uu 
!uu 

timePickeruu 
.uu 
	IsEnableduu 
)uu 
{vv 
returnww 

falseww 
;ww 
}xx 
returnzz 	
	baseValuezz
 
;zz 
}{{ 
private
ÇÇ 	
static
ÇÇ
 
void
ÇÇ %
OnIsDropDownOpenChanged
ÇÇ -
(
ÇÇ- .
DependencyObject
ÇÇ. >
d
ÇÇ? @
,
ÇÇ@ A0
"DependencyPropertyChangedEventArgs
ÇÇB d
e
ÇÇe f
)
ÇÇf g
{
ÉÉ 
var
ÑÑ 

timePicker
ÑÑ 
=
ÑÑ 
(
ÑÑ 

TimePicker
ÑÑ 
)
ÑÑ  
d
ÑÑ  !
;
ÑÑ! "
var
ÜÜ 
newValue
ÜÜ 
=
ÜÜ 
(
ÜÜ 
bool
ÜÜ 
)
ÜÜ 
e
ÜÜ 
.
ÜÜ 
NewValue
ÜÜ #
;
ÜÜ# $
if
áá 
(
áá 

timePicker
áá 
.
áá 
_popup
áá 
==
áá 
null
áá  
||
áá! #

timePicker
áá$ .
.
áá. /
_popup
áá/ 5
.
áá5 6
IsOpen
áá6 <
==
áá= ?
newValue
áá@ H
)
ááH I
return
ááJ P
;
ááP Q

timePicker
ââ 
.
ââ 
_popup
ââ 
.
ââ 
IsOpen
ââ 
=
ââ 
newValue
ââ &
;
ââ& '
if
ää 
(
ää 
newValue
ää 
)
ää 
{
ãã 

timePicker
èè 
.
èè 

Dispatcher
èè 
.
èè 
BeginInvoke
èè %
(
èè% & 
DispatcherPriority
èè& 8
.
èè8 9
Input
èè9 >
,
èè> ?
(
èè@ A
Action
èèA G
)
èèG H
delegate
èèI Q
(
èèQ R
)
èèR S
{
êê 

timePicker
ëë 
.
ëë 
_clock
ëë 
.
ëë 
Focus
ëë 
(
ëë 
)
ëë 
;
ëë 
}
íí 
)
íí 
;
íí 
}
ìì 
}
îî 
public
ññ 
static
ññ	 
readonly
ññ  
DependencyProperty
ññ + 
ClockStyleProperty
ññ, >
=
ññ? @ 
DependencyProperty
ññA S
.
ññS T
Register
ññT \
(
ññ\ ]
nameof
óó 
(
óó 

ClockStyle
óó 
)
óó 
,
óó 
typeof
óó  &
(
óó' (
Style
óó( -
)
óó- .
,
óó. /
typeof
óó0 6
(
óó7 8

TimePicker
óó8 B
)
óóB C
,
óóC D
new
óóE H
PropertyMetadata
óóI Y
(
óóY Z
default
óóZ a
(
óóa b
Style
óób g
)
óóg h
)
óóh i
)
óói j
;
óój k
public
ôô 
Style
ôô	 

ClockStyle
ôô 
{
öö 
get
õõ 
{
õõ 
return
õõ	 
(
õõ 
Style
õõ 
)
õõ 
GetValue
õõ  
(
õõ  ! 
ClockStyleProperty
õõ! 3
)
õõ3 4
;
õõ4 5
}
õõ6 7
set
úú 
{
úú 
SetValue
úú	 
(
úú  
ClockStyleProperty
úú $
,
úú$ %
value
úú& +
)
úú+ ,
;
úú, -
}
úú. /
}
ùù 
public
üü 
static
üü	 
readonly
üü  
DependencyProperty
üü +2
$ClockHostContentControlStyleProperty
üü, P
=
üüQ R 
DependencyProperty
üüS e
.
üüe f
Register
üüf n
(
üün o
nameof
†† 
(
†† *
ClockHostContentControlStyle
†† /
)
††/ 0
,
††0 1
typeof
††2 8
(
††9 :
Style
††: ?
)
††? @
,
††@ A
typeof
††B H
(
††I J

TimePicker
††J T
)
††T U
,
††U V
new
††W Z
PropertyMetadata
††[ k
(
††k l
default
††l s
(
††s t
Style
††t y
)
††y z
)
††z {
)
††{ |
;
††| }
public
¢¢ 
Style
¢¢ *
ClockHostContentControlStyle
¢¢ .
{
££ 
get
§§ 
{
§§ 
return
§§	 
(
§§ 
Style
§§ 
)
§§ 
GetValue
§§  
(
§§  !2
$ClockHostContentControlStyleProperty
§§! E
)
§§E F
;
§§F G
}
§§H I
set
•• 
{
•• 
SetValue
••	 
(
•• 2
$ClockHostContentControlStyleProperty
•• 6
,
••6 7
value
••8 =
)
••= >
;
••> ?
}
••@ A
}
¶¶ 
public
®® 
static
®® 
readonly
®®  
DependencyProperty
®® .*
IsInvalidTextAllowedProperty
®®/ K
=
®®L M 
DependencyProperty
®®N `
.
®®` a
Register
®®a i
(
®®i j
$str
©©	 
,
©©  
typeof
©©! '
(
©©( )
bool
©©) -
)
©©- .
,
©©. /
typeof
©©0 6
(
©©7 8

TimePicker
©©8 B
)
©©B C
,
©©C D
new
©©E H
PropertyMetadata
©©I Y
(
©©Y Z
default
©©Z a
(
©©a b
bool
©©b f
)
©©f g
)
©©g h
)
©©h i
;
©©i j
public
ØØ 
bool
ØØ "
IsInvalidTextAllowed
ØØ %
{
∞∞ 
get
±±	 
{
±± 
return
±± 
(
±± 
bool
±± 
)
±± 
GetValue
±± %
(
±±% &*
IsInvalidTextAllowedProperty
±±& B
)
±±B C
;
±±C D
}
±±E F
set
≤≤	 
{
≤≤ 
SetValue
≤≤ 
(
≤≤ *
IsInvalidTextAllowedProperty
≤≤ 4
,
≤≤4 5
value
≤≤6 ;
)
≤≤; <
;
≤≤< =
}
≤≤> ?
}
≥≥ 
public
µµ 
override
µµ 
void
µµ 
OnApplyTemplate
µµ )
(
µµ) *
)
µµ* +
{
∂∂ 
if
∑∑ 
(
∑∑ 
_popup
∑∑ 
!=
∑∑ 
null
∑∑ 
)
∑∑ 
{
∏∏ 
_popup
ππ 

.
ππ
 
RemoveHandler
ππ 
(
ππ -
PreviewMouseLeftButtonDownEvent
ππ 8
,
ππ8 9
new
ππ: =%
MouseButtonEventHandler
ππ> U
(
ππU V/
!PopupOnPreviewMouseLeftButtonDown
ππV w
)
ππw x
)
ππx y
;
ππy z
_popup
∫∫ 

.
∫∫
 
Opened
∫∫ 
-=
∫∫ 
PopupOnOpened
∫∫ "
;
∫∫" #
_popup
ªª 

.
ªª
 
Closed
ªª 
-=
ªª 
PopupOnClosed
ªª "
;
ªª" #
_popup
ºº 

.
ºº
 
Child
ºº 
=
ºº 
null
ºº 
;
ºº 
}
ΩΩ 
if
ææ 
(
ææ 
_dropDownButton
ææ 
!=
ææ 
null
ææ 
)
ææ 
{
øø 
_dropDownButton
¿¿ 
.
¿¿ 
Click
¿¿ 
-=
¿¿ #
DropDownButtonOnClick
¿¿ 2
;
¿¿2 3
}
¡¡ 
if
¬¬ 
(
¬¬ 
_textBox
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
√√ 
_textBox
ƒƒ 
.
ƒƒ 
RemoveHandler
ƒƒ 
(
ƒƒ 
KeyDownEvent
ƒƒ '
,
ƒƒ' (
new
ƒƒ) ,
KeyEventHandler
ƒƒ- <
(
ƒƒ< =
TextBoxOnKeyDown
ƒƒ= M
)
ƒƒM N
)
ƒƒN O
;
ƒƒO P
_textBox
≈≈ 
.
≈≈ 
RemoveHandler
≈≈ 
(
≈≈ 
TextBoxBase
≈≈ &
.
≈≈& '
TextChangedEvent
≈≈' 7
,
≈≈7 8
new
≈≈9 <%
TextChangedEventHandler
≈≈= T
(
≈≈T U"
TextBoxOnTextChanged
≈≈U i
)
≈≈i j
)
≈≈j k
;
≈≈k l
_textBox
∆∆ 
.
∆∆ 

AddHandler
∆∆ 
(
∆∆ 
LostFocusEvent
∆∆ &
,
∆∆& '
new
∆∆( + 
RoutedEventHandler
∆∆, >
(
∆∆> ? 
TextBoxOnLostFocus
∆∆? Q
)
∆∆Q R
)
∆∆R S
;
∆∆S T
}
«« 
_textBox
…… 
=
…… 
GetTemplateChild
…… 
(
…… 
ElementTextBox
…… -
)
……- .
as
……/ 1
TextBox
……2 9
;
……9 :
if
   
(
   
_textBox
   
!=
   
null
   
)
   
{
ÀÀ 
_textBox
ÃÃ 
.
ÃÃ 

AddHandler
ÃÃ 
(
ÃÃ 
KeyDownEvent
ÃÃ $
,
ÃÃ$ %
new
ÃÃ& )
KeyEventHandler
ÃÃ* 9
(
ÃÃ9 :
TextBoxOnKeyDown
ÃÃ: J
)
ÃÃJ K
)
ÃÃK L
;
ÃÃL M
_textBox
ÕÕ 
.
ÕÕ 

AddHandler
ÕÕ 
(
ÕÕ 
TextBoxBase
ÕÕ #
.
ÕÕ# $
TextChangedEvent
ÕÕ$ 4
,
ÕÕ4 5
new
ÕÕ6 9%
TextChangedEventHandler
ÕÕ: Q
(
ÕÕQ R"
TextBoxOnTextChanged
ÕÕR f
)
ÕÕf g
)
ÕÕg h
;
ÕÕh i
_textBox
ŒŒ 
.
ŒŒ 

AddHandler
ŒŒ 
(
ŒŒ 
LostFocusEvent
ŒŒ &
,
ŒŒ& '
new
ŒŒ( + 
RoutedEventHandler
ŒŒ, >
(
ŒŒ> ? 
TextBoxOnLostFocus
ŒŒ? Q
)
ŒŒQ R
)
ŒŒR S
;
ŒŒS T
_textBox
œœ 
.
œœ 
Text
œœ 
=
œœ 
Text
œœ 
;
œœ 
}
–– 
_popup
““ 	
=
““
 
GetTemplateChild
““ 
(
““ 
ElementPopup
““ )
)
““) *
as
““+ -
Popup
““. 3
;
““3 4
if
”” 
(
”” 
_popup
”” 
!=
”” 
null
”” 
)
”” 
{
‘‘ 
_popup
’’ 

.
’’
 

AddHandler
’’ 
(
’’ -
PreviewMouseLeftButtonDownEvent
’’ 5
,
’’5 6
new
’’7 :%
MouseButtonEventHandler
’’; R
(
’’R S/
!PopupOnPreviewMouseLeftButtonDown
’’S t
)
’’t u
)
’’u v
;
’’v w
_popup
÷÷ 
.
÷÷ 
Opened
÷÷ 
+=
÷÷  
PopupOnOpened
÷÷! .
;
÷÷. /
_popup
◊◊ 

.
◊◊
 
Closed
◊◊ 
+=
◊◊ 
PopupOnClosed
◊◊ "
;
◊◊" #
_popup
ÿÿ 
.
ÿÿ 
Child
ÿÿ 
=
ÿÿ &
_clockHostContentControl
ÿÿ 7
;
ÿÿ7 8
if
ŸŸ 
(
ŸŸ 
IsDropDownOpen
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
_popup
€€ 
.
€€ 
IsOpen
€€ 
=
€€ 
true
€€ 
;
€€ 
}
‹‹ 
}
›› 
_dropDownButton
ﬂﬂ 
=
ﬂﬂ 
GetTemplateChild
ﬂﬂ %
(
ﬂﬂ% &
ElementButton
ﬂﬂ& 3
)
ﬂﬂ3 4
as
ﬂﬂ5 7
Button
ﬂﬂ8 >
;
ﬂﬂ> ?
if
‡‡ 
(
‡‡ 
_dropDownButton
‡‡ 
!=
‡‡ 
null
‡‡ 
)
‡‡ 
{
·· 
_dropDownButton
‚‚ 
.
‚‚ 
Click
‚‚ 
+=
‚‚ #
DropDownButtonOnClick
‚‚ 2
;
‚‚2 3
}
„„ 
base
ÂÂ 
.
ÂÂ 
OnApplyTemplate
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÊÊ 
private
ËË 	
void
ËË
  
TextBoxOnLostFocus
ËË !
(
ËË! "
object
ËË" (
sender
ËË) /
,
ËË/ 0
RoutedEventArgs
ËË1 @
routedEventArgs
ËËA P
)
ËËP Q
{
ÈÈ 
if
ÍÍ 
(
ÍÍ	 

string
ÍÍ
 
.
ÍÍ 
IsNullOrEmpty
ÍÍ 
(
ÍÍ 
_textBox
ÍÍ '
?
ÍÍ' (
.
ÍÍ( )
Text
ÍÍ) -
)
ÍÍ- .
)
ÍÍ. /
{
ÎÎ 
SetCurrentValue
ÏÏ 
(
ÏÏ  "
SelectedTimeProperty
ÏÏ  4
,
ÏÏ4 5
null
ÏÏ6 :
)
ÏÏ: ;
;
ÏÏ; <
return
ÌÌ 
;
ÌÌ 
}
ÓÓ 
DateTime
 
time
 
;
 
if
ÒÒ 
(
ÒÒ	 

IsTimeValid
ÒÒ
 
(
ÒÒ 
_textBox
ÒÒ 
.
ÒÒ 
Text
ÒÒ #
,
ÒÒ# $
out
ÒÒ% (
time
ÒÒ) -
)
ÒÒ- .
)
ÒÒ. /
SetCurrentValue
ÚÚ
 
(
ÚÚ "
SelectedTimeProperty
ÚÚ .
,
ÚÚ. /
time
ÚÚ0 4
)
ÚÚ4 5
;
ÚÚ5 6
else
ÙÙ 

SetInvalidTime
ıı
 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
private
¯¯ 
void
¯¯ 
SetInvalidTime
¯¯ #
(
¯¯# $
)
¯¯$ %
{
˘˘ 	
if
˙˙ 
(
˙˙ "
IsInvalidTextAllowed
˙˙ $
)
˙˙$ %
return
˙˙& ,
;
˙˙, -
if
¸¸ 
(
¸¸ 
_lastValidTime
¸¸ 
!=
¸¸ !
null
¸¸" &
)
¸¸& '
{
˝˝ 
SetCurrentValue
˛˛ 
(
˛˛  "
SelectedTimeProperty
˛˛  4
,
˛˛4 5
_lastValidTime
˛˛6 D
.
˛˛D E
Value
˛˛E J
)
˛˛J K
;
˛˛K L
_textBox
ˇˇ 
.
ˇˇ 
Text
ˇˇ 
=
ˇˇ 
_lastValidTime
ˇˇ  .
.
ˇˇ. /
Value
ˇˇ/ 4
.
ˇˇ4 5
ToString
ˇˇ5 =
(
ˇˇ= >
_lastValidTime
ˇˇ> L
.
ˇˇL M
Value
ˇˇM R
.
ˇˇR S
Hour
ˇˇS W
%
ˇˇX Y
$num
ˇˇZ \
>
ˇˇ] ^
$num
ˇˇ_ `
?
ˇˇa b
$str
ˇˇc m
:
ˇˇn o
$str
ˇˇp y
)
ˇˇy z
;
ˇˇz {
}
ÄÄ 
else
ÇÇ 
{
ÉÉ 
SetCurrentValue
ÑÑ 
(
ÑÑ  "
SelectedTimeProperty
ÑÑ  4
,
ÑÑ4 5
null
ÑÑ6 :
)
ÑÑ: ;
;
ÑÑ; <
_textBox
ÖÖ 
.
ÖÖ 
Text
ÖÖ 
=
ÖÖ 
$str
ÖÖ  "
;
ÖÖ" #
}
ÜÜ 
}
àà 	
private
ää 
void
ää 
TextBoxOnKeyDown
ää %
(
ää% &
object
ää& ,
sender
ää- 3
,
ää3 4
KeyEventArgs
ää5 A
keyEventArgs
ääB N
)
ääN O
{
ãã 
keyEventArgs
åå 
.
åå 
Handled
åå 
=
åå 

ProcessKey
åå $
(
åå$ %
keyEventArgs
åå% 1
)
åå1 2
||
åå3 5
keyEventArgs
åå6 B
.
ååB C
Handled
ååC J
;
ååJ K
}
çç 
private
èè 	
bool
èè
 

ProcessKey
èè 
(
èè 
KeyEventArgs
èè &
keyEventArgs
èè' 3
)
èè3 4
{
êê 
switch
ëë 	
(
ëë
 
keyEventArgs
ëë 
.
ëë 
Key
ëë 
)
ëë 
{
íí 
case
ìì 
Key
ìì	 
.
ìì 
System
ìì 
:
ìì 
{
îî 
switch
ïï 
(
ïï 
keyEventArgs
ïï 
.
ïï 
	SystemKey
ïï $
)
ïï$ %
{
ññ 
case
óó 
Key
óó 
.
óó 
Down
óó 
:
óó 
{
òò 	
if
ôô	 
(
ôô 
(
ôô 
Keyboard
ôô 
.
ôô 
	Modifiers
ôô  
&
ôô! "
ModifierKeys
ôô# /
.
ôô/ 0
Alt
ôô0 3
)
ôô3 4
==
ôô5 7
ModifierKeys
ôô8 D
.
ôôD E
Alt
ôôE H
)
ôôH I
{
öö	 

TogglePopup
õõ
 
(
õõ 
)
õõ 
;
õõ 
return
úú
 
true
úú 
;
úú 
}
ùù	 

break
üü	 
;
üü 
}
†† 	
}
°° 
break
££ 
;
££ 
}
§§ 
case
¶¶ 
Key
¶¶	 
.
¶¶ 
Enter
¶¶ 
:
¶¶ 
{
ßß 
SetSelectedTime
®® 
(
®® 
)
®® 
;
®® 
return
©© 
true
©© 
;
©© 
}
™™ 
}
´´ 
return
≠≠ 	
false
≠≠
 
;
≠≠ 
}
ÆÆ 
private
∞∞ 	
void
∞∞
 "
TextBoxOnTextChanged
∞∞ #
(
∞∞# $
object
∞∞$ *
sender
∞∞+ 1
,
∞∞1 2"
TextChangedEventArgs
∞∞3 G"
textChangedEventArgs
∞∞H \
)
∞∞\ ]
{
±± 
if
≤≤ 
(
≤≤ 
_popup
≤≤ 
?
≤≤ 
.
≤≤ 
IsOpen
≤≤ 
==
≤≤ !
true
≤≤" &
||
≤≤' )"
IsInvalidTextAllowed
≤≤* >
)
≤≤> ?
SetCurrentValue
≥≥ 
(
≥≥ 
TextProperty
≥≥ #
,
≥≥# $
_textBox
≥≥% -
.
≥≥- .
Text
≥≥. 2
)
≥≥2 3
;
≥≥3 4
if
µµ 
(
µµ 
_popup
µµ 
?
µµ 
.
µµ 
IsOpen
µµ 
==
µµ !
false
µµ" '
)
µµ' (
SetSelectedTime
∂∂ 
(
∂∂  
true
∂∂  $
)
∂∂$ %
;
∂∂% &
}
∑∑ 	
private
ππ 
void
ππ 
SetSelectedTime
ππ !
(
ππ! "
bool
ππ" &

beCautious
ππ' 1
=
ππ2 3
false
ππ4 9
)
ππ9 :
{
∫∫ 	
if
ªª 
(
ªª 
!
ªª 
string
ªª 
.
ªª 
IsNullOrEmpty
ªª %
(
ªª% &
_textBox
ªª& .
?
ªª. /
.
ªª/ 0
Text
ªª0 4
)
ªª4 5
)
ªª5 6
{
ºº 
	ParseTime
ΩΩ 
(
ΩΩ 
_textBox
ΩΩ "
.
ΩΩ" #
Text
ΩΩ# '
,
ΩΩ' (
t
ΩΩ) *
=>
ΩΩ+ -
{
ææ 
if
øø 
(
øø 
!
øø 

beCautious
øø #
||
øø$ &
DateTimeToString
øø' 7
(
øø7 8
t
øø8 9
)
øø9 :
==
øø; =
_textBox
øø> F
.
øøF G
Text
øøG K
)
øøK L
SetCurrentValue
¿¿ '
(
¿¿' ("
SelectedTimeProperty
¿¿( <
,
¿¿< =
t
¿¿> ?
)
¿¿? @
;
¿¿@ A
}
¡¡ 
)
¡¡ 
;
¡¡ 
}
¬¬ 
else
√√ 
{
ƒƒ 
SetCurrentValue
≈≈ 
(
≈≈  "
SelectedTimeProperty
≈≈  4
,
≈≈4 5
null
≈≈6 :
)
≈≈: ;
;
≈≈; <
}
∆∆ 
}
«« 	
private
…… 	
static
……
 
void
…… 
	ParseTime
…… 
(
……  
string
……  &
s
……' (
,
……( )
Action
……* 0
<
……0 1
DateTime
……1 9
>
……9 :!
successContinuation
……; N
)
……N O
{
   
DateTime
ÀÀ 
time
ÀÀ 
;
ÀÀ 
if
ÃÃ 
(
ÃÃ 
IsTimeValid
ÃÃ 
(
ÃÃ 
s
ÃÃ 
,
ÃÃ 
out
ÃÃ "
time
ÃÃ# '
)
ÃÃ' (
)
ÃÃ( )!
successContinuation
ÕÕ 
(
ÕÕ 
time
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ŒŒ 
private
–– 
static
–– 
bool
–– 
IsTimeValid
–– '
(
––' (
string
––( .
s
––/ 0
,
––0 1
out
––2 5
DateTime
––6 >
time
––? C
)
––C D
{
—— 	
return
““ 
DateTime
““ 
.
““ 
TryParse
““ $
(
““$ %
s
““% &
,
““& '
CultureInfo
””% 0
.
””0 1
CurrentCulture
””1 ?
,
””? @
DateTimeStyles
‘‘% 3
.
‘‘3 4
AssumeLocal
‘‘4 ?
|
‘‘@ A
DateTimeStyles
‘‘B P
.
‘‘P Q
AllowWhiteSpaces
‘‘Q a
,
‘‘a b
out
’’% (
time
’’) -
)
’’- .
;
’’. /
}
÷÷ 	
private
ÿÿ 
string
ÿÿ 
DateTimeToString
ÿÿ '
(
ÿÿ' (
DateTime
ÿÿ( 0
?
ÿÿ0 1
d
ÿÿ2 3
)
ÿÿ3 4
{
ŸŸ 
return
⁄⁄ 	
d
⁄⁄
 
.
⁄⁄ 
HasValue
⁄⁄ 
?
⁄⁄ 
DateTimeToString
⁄⁄ '
(
⁄⁄' (
d
⁄⁄( )
.
⁄⁄) *
Value
⁄⁄* /
)
⁄⁄/ 0
:
⁄⁄1 2
null
⁄⁄3 7
;
⁄⁄7 8
}
€€ 
private
›› 	
string
››
 
DateTimeToString
›› !
(
››! "
DateTime
››" *
d
››+ ,
)
››, -
{
ﬁﬁ 
var
ﬂﬂ 
dtfi
ﬂﬂ 
=
ﬂﬂ 
CultureInfo
ﬂﬂ 
.
ﬂﬂ 
CurrentCulture
ﬂﬂ (
.
ﬂﬂ( )
GetDateFormat
ﬂﬂ) 6
(
ﬂﬂ6 7
)
ﬂﬂ7 8
;
ﬂﬂ8 9
switch
·· 	
(
··
  
SelectedTimeFormat
·· 
)
·· 
{
‚‚ 
case
„„ 
DatePickerFormat
„„	 
.
„„ 
Short
„„ 
:
„„  
return
‰‰ 
string
‰‰ 
.
‰‰ 
Format
‰‰ 
(
‰‰ 
CultureInfo
‰‰ %
.
‰‰% &
CurrentCulture
‰‰& 4
,
‰‰4 5
d
‰‰6 7
.
‰‰7 8
ToString
‰‰8 @
(
‰‰@ A
dtfi
‰‰A E
.
‰‰E F
ShortTimePattern
‰‰F V
,
‰‰V W
dtfi
‰‰X \
)
‰‰\ ]
)
‰‰] ^
;
‰‰^ _
case
ÂÂ 
DatePickerFormat
ÂÂ	 
.
ÂÂ 
Long
ÂÂ 
:
ÂÂ 
return
ÊÊ 
string
ÊÊ 
.
ÊÊ 
Format
ÊÊ 
(
ÊÊ 
CultureInfo
ÊÊ %
.
ÊÊ% &
CurrentCulture
ÊÊ& 4
,
ÊÊ4 5
d
ÊÊ6 7
.
ÊÊ7 8
ToString
ÊÊ8 @
(
ÊÊ@ A
dtfi
ÊÊA E
.
ÊÊE F
LongTimePattern
ÊÊF U
,
ÊÊU V
dtfi
ÊÊW [
)
ÊÊ[ \
)
ÊÊ\ ]
;
ÊÊ] ^
}
ÁÁ 
return
ÈÈ 	
null
ÈÈ
 
;
ÈÈ 
}
ÍÍ 
private
ÏÏ 	
void
ÏÏ
 /
!PopupOnPreviewMouseLeftButtonDown
ÏÏ 0
(
ÏÏ0 1
object
ÏÏ1 7
sender
ÏÏ8 >
,
ÏÏ> ?"
MouseButtonEventArgs
ÏÏ@ T"
mouseButtonEventArgs
ÏÏU i
)
ÏÏi j
{
ÌÌ 
var
ÓÓ 
popup
ÓÓ 
=
ÓÓ 
sender
ÓÓ 
as
ÓÓ 
Popup
ÓÓ 
;
ÓÓ 
if
ÔÔ 
(
ÔÔ 
popup
ÔÔ 
==
ÔÔ 
null
ÔÔ 
||
ÔÔ 
popup
ÔÔ 
.
ÔÔ 
	StaysOpen
ÔÔ '
)
ÔÔ' (
return
ÔÔ) /
;
ÔÔ/ 0
if
ÒÒ 
(
ÒÒ	 

_dropDownButton
ÒÒ
 
?
ÒÒ 
.
ÒÒ 
InputHitTest
ÒÒ '
(
ÒÒ' ("
mouseButtonEventArgs
ÒÒ( <
.
ÒÒ< =
GetPosition
ÒÒ= H
(
ÒÒH I
_dropDownButton
ÒÒI X
)
ÒÒX Y
)
ÒÒY Z
!=
ÒÒ[ ]
null
ÒÒ^ b
)
ÒÒb c
{
ÚÚ !
_disablePopupReopen
ˆˆ 
=
ˆˆ 
true
ˆˆ 
;
ˆˆ 
}
˜˜ 
}
¯¯ 
private
˙˙ 	
void
˙˙
 
PopupOnClosed
˙˙ 
(
˙˙ 
object
˙˙ #
sender
˙˙$ *
,
˙˙* +
	EventArgs
˙˙, 5
	eventArgs
˙˙6 ?
)
˙˙? @
{
˚˚ 
if
¸¸ 
(
¸¸ 
IsDropDownOpen
¸¸ 
)
¸¸ 
{
˝˝ 
SetCurrentValue
˛˛ 
(
˛˛ $
IsDropDownOpenProperty
˛˛ *
,
˛˛* +
false
˛˛, 1
)
˛˛1 2
;
˛˛2 3
}
ˇˇ 
if
ÅÅ 
(
ÅÅ 
_clock
ÅÅ 
.
ÅÅ #
IsKeyboardFocusWithin
ÅÅ #
)
ÅÅ# $
{
ÇÇ 
	MoveFocus
ÉÉ 
(
ÉÉ 
new
ÉÉ 
TraversalRequest
ÉÉ "
(
ÉÉ" #&
FocusNavigationDirection
ÉÉ# ;
.
ÉÉ; <
First
ÉÉ< A
)
ÉÉA B
)
ÉÉB C
;
ÉÉC D
}
ÑÑ 
}
àà 
private
ää 	
void
ää
 
PopupOnOpened
ää 
(
ää 
object
ää #
sender
ää$ *
,
ää* +
	EventArgs
ää, 5
	eventArgs
ää6 ?
)
ää? @
{
ãã 
if
åå 
(
åå 
!
åå 
IsDropDownOpen
åå 
)
åå 
{
çç 
SetCurrentValue
éé 
(
éé $
IsDropDownOpenProperty
éé *
,
éé* +
true
éé, 0
)
éé0 1
;
éé1 2
}
èè 
if
ëë 
(
ëë 
_clock
ëë 
!=
ëë 
null
ëë 
)
ëë 
{
íí 
_clock
ìì 

.
ìì
 
DisplayMode
ìì 
=
ìì 
ClockDisplayMode
ìì )
.
ìì) *
Hours
ìì* /
;
ìì/ 0
_clock
îî 

.
îî
 
	MoveFocus
îî 
(
îî 
new
îî 
TraversalRequest
îî )
(
îî) *&
FocusNavigationDirection
îî* B
.
îîB C
First
îîC H
)
îîH I
)
îîI J
;
îîJ K
}
ïï 
}
ôô 
private
õõ 	
void
õõ
 
InitializeClock
õõ 
(
õõ 
)
õõ  
{
úú 
_clock
ùù 	
.
ùù	 


AddHandler
ùù
 
(
ùù 
Clock
ùù 
.
ùù "
ClockChoiceMadeEvent
ùù /
,
ùù/ 0
new
ùù1 4)
ClockChoiceMadeEventHandler
ùù5 P
(
ùùP Q$
ClockChoiceMadeHandler
ùùQ g
)
ùùg h
)
ùùh i
;
ùùi j
_clock
ûû 
.
ûû 

SetBinding
ûû 
(
ûû  
ForegroundProperty
ûû 0
,
ûû0 1

GetBinding
ûû2 <
(
ûû< = 
ForegroundProperty
ûû= O
)
ûûO P
)
ûûP Q
;
ûûQ R
_clock
üü 	
.
üü	 


SetBinding
üü
 
(
üü 
StyleProperty
üü "
,
üü" #

GetBinding
üü$ .
(
üü. / 
ClockStyleProperty
üü/ A
)
üüA B
)
üüB C
;
üüC D
_clock
†† 	
.
††	 


SetBinding
††
 
(
†† 
Clock
†† 
.
†† 
TimeProperty
†† '
,
††' (

GetBinding
††) 3
(
††3 4"
SelectedTimeProperty
††4 H
,
††H I
new
††J M4
&NullableDateTimeToCurrentDateConverter
††N t
(
††t u
)
††u v
)
††v w
)
††w x
;
††x y
_clock
°° 
.
°° 

SetBinding
°° 
(
°° 
Clock
°° 
.
°° 
Is24HoursProperty
°° /
,
°°/ 0

GetBinding
°°1 ;
(
°°; <
Is24HoursProperty
°°< M
)
°°M N
)
°°N O
;
°°O P&
_clockHostContentControl
¢¢ 
.
¢¢ 

SetBinding
¢¢ &
(
¢¢& '
StyleProperty
¢¢' 4
,
¢¢4 5

GetBinding
¢¢6 @
(
¢¢@ A2
$ClockHostContentControlStyleProperty
¢¢A e
)
¢¢e f
)
¢¢f g
;
¢¢g h
}
££ 
private
•• 
void
•• $
ClockChoiceMadeHandler
•• +
(
••+ ,
object
••, 2
sender
••3 9
,
••9 :&
ClockChoiceMadeEventArgs
••; S&
clockChoiceMadeEventArgs
••T l
)
••l m
{
¶¶ 	
if
ßß 
(
ßß &
clockChoiceMadeEventArgs
ßß (
.
ßß( )
Mode
ßß) -
==
ßß. 0
ClockDisplayMode
ßß1 A
.
ßßA B
Minutes
ßßB I
)
ßßI J
{
®® 
TogglePopup
©© 
(
©© 
)
©© 
;
©© 
if
™™ 
(
™™ 
SelectedTime
™™  
==
™™! #
null
™™$ (
)
™™( )
{
´´ 
SelectedTime
¨¨  
=
¨¨! "
_clock
¨¨# )
.
¨¨) *
Time
¨¨* .
;
¨¨. /
}
≠≠ 
}
ÆÆ 
}
ØØ 	
private
±± 	
void
±±
 #
DropDownButtonOnClick
±± $
(
±±$ %
object
±±% +
sender
±±, 2
,
±±2 3
RoutedEventArgs
±±4 C
routedEventArgs
±±D S
)
±±S T
{
≤≤ 
TogglePopup
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
}
¥¥ 
private
∂∂ 	
void
∂∂
 
TogglePopup
∂∂ 
(
∂∂ 
)
∂∂ 
{
∑∑ 
if
∏∏ 
(
∏∏ 
IsDropDownOpen
∏∏ 
)
∏∏ 
SetCurrentValue
ππ 
(
ππ $
IsDropDownOpenProperty
ππ *
,
ππ* +
false
ππ, 1
)
ππ1 2
;
ππ2 3
else
∫∫ 
{
ªª 
if
ºº 
(
ºº !
_disablePopupReopen
ºº 
)
ºº !
_disablePopupReopen
ΩΩ 
=
ΩΩ 
false
ΩΩ  
;
ΩΩ  !
else
ææ 
{
øø 
SetSelectedTime
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
SetCurrentValue
¡¡ 
(
¡¡ $
IsDropDownOpenProperty
¡¡ +
,
¡¡+ ,
true
¡¡- 1
)
¡¡1 2
;
¡¡2 3
}
¬¬ 
}
√√ 
}
ƒƒ 
private
∆∆ 	
BindingBase
∆∆
 

GetBinding
∆∆  
(
∆∆  ! 
DependencyProperty
∆∆! 3
property
∆∆4 <
,
∆∆< =
IValueConverter
∆∆> M
	converter
∆∆N W
=
∆∆X Y
null
∆∆Z ^
)
∆∆^ _
{
«« 
var
»» 	
binding
»»
 
=
»» 
new
»» 
Binding
»» 
(
»»  
property
»»  (
.
»»( )
Name
»») -
)
»»- .
{
…… 
Source
  
 
=
   
this
   
,
   
	Converter
ÀÀ
 
=
ÀÀ 
	converter
ÀÀ 
}
ÃÃ 
;
ÃÃ 
return
ÕÕ 
binding
ÕÕ 
;
ÕÕ 
}
ŒŒ 
}
œœ 
}–– ⁄+
YD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ToggleButtonAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
ToggleButtonAssist *
{ 
private		 
static		 
readonly		 !
DependencyPropertyKey		  5#
HasOnContentPropertyKey		6 M
=		N O
DependencyProperty

 
.

 $
RegisterAttachedReadOnly

 7
(

7 8
$str 
, 
typeof  &
(& '
bool' +
)+ ,
,, -
typeof. 4
(4 5
ToggleButtonAssist5 G
)G H
,H I
new 
PropertyMetadata $
($ %
false% *
)* +
)+ ,
;, -
public 
static 
readonly 
DependencyProperty 1 
HasOnContentProperty2 F
=G H#
HasOnContentPropertyKeyI `
.` a
DependencyPropertya s
;s t
private 
static 
void 
SetHasOnContent +
(+ ,
DependencyObject, <
element= D
,D E
objectF L
valueM R
)R S
{ 	
element 
. 
SetValue 
( #
HasOnContentPropertyKey 4
,4 5
value6 ;
); <
;< =
} 	
public 
static 
bool 
GetHasOnContent *
(* +
DependencyObject+ ;
element< C
)C D
{ 	
return 
( 
bool 
) 
element  
.  !
GetValue! )
() * 
HasOnContentProperty* >
)> ?
;? @
} 	
public"" 
static"" 
readonly"" 
DependencyProperty"" 1
OnContentProperty""2 C
=""D E
DependencyProperty""F X
.""X Y
RegisterAttached""Y i
(""i j
$str## 
,## 
typeof## 
(##  !
object##! '
)##' (
,##( )
typeof##* 0
(##1 2
ToggleButtonAssist##2 D
)##D E
,##E F
new##G J
PropertyMetadata##K [
(##[ \
default##\ c
(##c d
object##d j
)##j k
,##k l-
 OnContentPropertyChangedCallback	##m ç
)
##ç é
)
##é è
;
##è ê
private%% 
static%% 
void%% ,
 OnContentPropertyChangedCallback%% <
(%%< =
DependencyObject%%= M
dependencyObject%%N ^
,%%^ _/
"DependencyPropertyChangedEventArgs	%%` Ç0
"dependencyPropertyChangedEventArgs
%%É •
)
%%• ¶
{&& 	
SetHasOnContent'' 
('' 
dependencyObject'' ,
,'', -.
"dependencyPropertyChangedEventArgs''. P
.''P Q
NewValue''Q Y
!=''Z \
null''] a
)''a b
;''b c
}(( 	
public// 
static// 
void// 
SetOnContent// '
(//' (
DependencyObject//( 8
element//9 @
,//@ A
object//B H
value//I N
)//N O
{00 	
element11 
.11 
SetValue11 
(11 
OnContentProperty11 .
,11. /
value110 5
)115 6
;116 7
}22 	
public77 
static77 
object77 
GetOnContent77 )
(77) *
DependencyObject77* :
element77; B
)77B C
{88 	
return99 
(99 
object99 
)99 
element99 #
.99# $
GetValue99$ ,
(99, -
OnContentProperty99- >
)99> ?
;99? @
}:: 	
public?? 
static?? 
readonly?? 
DependencyProperty?? 1%
OnContentTemplateProperty??2 K
=??L M
DependencyProperty??N `
.??` a
RegisterAttached??a q
(??q r
$str@@ 
,@@  
typeof@@! '
(@@( )
DataTemplate@@) 5
)@@5 6
,@@6 7
typeof@@8 >
(@@? @
ToggleButtonAssist@@@ R
)@@R S
,@@S T
new@@U X
PropertyMetadata@@Y i
(@@i j
default@@j q
(@@q r
DataTemplate@@r ~
)@@~ 
)	@@ Ä
)
@@Ä Å
;
@@Å Ç
publicEE 
staticEE 
voidEE  
SetOnContentTemplateEE /
(EE/ 0
DependencyObjectEE0 @
elementEEA H
,EEH I
DataTemplateEEJ V
valueEEW \
)EE\ ]
{FF 	
elementGG 
.GG 
SetValueGG 
(GG %
OnContentTemplatePropertyGG 6
,GG6 7
valueGG8 =
)GG= >
;GG> ?
}HH 	
publicMM 
staticMM 
DataTemplateMM " 
GetOnContentTemplateMM# 7
(MM7 8
DependencyObjectMM8 H
elementMMI P
)MMP Q
{NN 	
returnOO 
(OO 
DataTemplateOO  
)OO  !
elementOO" )
.OO) *
GetValueOO* 2
(OO2 3%
OnContentTemplatePropertyOO3 L
)OOL M
;OOM N
}PP 	
}QQ 
}RR ˚
TD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ToolTipAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
ToolTipAssist %
{ 
public 
static (
CustomPopupPlacementCallback 2(
CustomPopupPlacementCallback3 O
=>P R,
 CustomPopupPlacementCallbackImplS s
;s t
public

 
static

  
CustomPopupPlacement

 *
[

* +
]

+ ,,
 CustomPopupPlacementCallbackImpl

- M
(

M N
Size

N R
	popupSize

S \
,

\ ]
Size

^ b

targetSize

c m
,

m n
Point

o t
offset

u {
)

{ |
{ 	
return 
new 
[ 
] 
{ 
new  
CustomPopupPlacement (
(( )
new) ,
Point- 2
(2 3

targetSize3 =
.= >
Width> C
/C D
$numD E
-F G
	popupSizeH Q
.Q R
WidthR W
/W X
$numX Y
,Y Z

targetSize[ e
.e f
Heightf l
+m n
$numo q
)q r
,r s
PopupPrimaryAxis	t Ñ
.
Ñ Ö

Horizontal
Ö è
)
è ê
} 
; 
} 	
} 
} „>
SD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\RippleAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
RippleAssist $
{ 
public

 
static

 
readonly

 
DependencyProperty

 1 
ClipToBoundsProperty

2 F
=

G H
DependencyProperty

I [
.

[ \
RegisterAttached

\ l
(

l m
$str 
, 
typeof "
(" #
bool# '
)' (
,( )
typeof* 0
(0 1
RippleAssist1 =
)= >
,> ?
new@ C%
FrameworkPropertyMetadataD ]
(] ^
true^ b
,b c-
 FrameworkPropertyMetadataOptions	d Ñ
.
Ñ Ö
Inherits
Ö ç
)
ç é
)
é è
;
è ê
public 
static 
void 
SetClipToBounds *
(* +
DependencyObject+ ;
element< C
,C D
boolE I
valueJ O
)O P
{ 	
element 
. 
SetValue 
(  
ClipToBoundsProperty 1
,1 2
value3 8
)8 9
;9 :
} 	
public 
static 
bool 
GetClipToBounds *
(* +
DependencyObject+ ;
element< C
)C D
{ 	
return 
( 
bool 
) 
element  
.  !
GetValue! )
() * 
ClipToBoundsProperty* >
)> ?
;? @
} 	
public 
static 
readonly 
DependencyProperty 1
IsCenteredProperty2 D
=E F
DependencyPropertyG Y
.Y Z
RegisterAttachedZ j
(j k
$str   
,   
typeof    
(    !
bool  ! %
)  % &
,  & '
typeof  ( .
(  . /
RippleAssist  / ;
)  ; <
,  < =
new  > A%
FrameworkPropertyMetadata  B [
(  [ \
false  \ a
,  a b-
 FrameworkPropertyMetadataOptions	  c É
.
  É Ñ
Inherits
  Ñ å
)
  å ç
)
  ç é
;
  é è
public(( 
static(( 
void(( 
SetIsCentered(( (
(((( )
DependencyObject(() 9
element((: A
,((A B
bool((C G
value((H M
)((M N
{)) 	
element** 
.** 
SetValue** 
(** 
IsCenteredProperty** /
,**/ 0
value**1 6
)**6 7
;**7 8
}++ 	
public22 
static22 
bool22 
GetIsCentered22 (
(22( )
DependencyObject22) 9
element22: A
)22A B
{33 	
return44 
(44 
bool44 
)44 
element44  
.44  !
GetValue44! )
(44) *
IsCenteredProperty44* <
)44< =
;44= >
}55 	
public>> 
static>> 
readonly>> 
DependencyProperty>> 1
IsDisabledProperty>>2 D
=>>E F
DependencyProperty>>G Y
.>>Y Z
RegisterAttached>>Z j
(>>j k
$str?? 
,?? 
typeof??  
(??  !
bool??! %
)??% &
,??& '
typeof??( .
(??. /
RippleAssist??/ ;
)??; <
,??< =
new??> A%
FrameworkPropertyMetadata??B [
(??[ \
false??\ a
,??a b-
 FrameworkPropertyMetadataOptions	??c É
.
??É Ñ
Inherits
??Ñ å
)
??å ç
)
??ç é
;
??é è
publicFF 
staticFF 
voidFF 
SetIsDisabledFF (
(FF( )
DependencyObjectFF) 9
elementFF: A
,FFA B
boolFFC G
valueFFH M
)FFM N
{GG 	
elementHH 
.HH 
SetValueHH 
(HH 
IsDisabledPropertyHH /
,HH/ 0
valueHH1 6
)HH6 7
;HH7 8
}II 	
publicOO 
staticOO 
boolOO 
GetIsDisabledOO (
(OO( )
DependencyObjectOO) 9
elementOO: A
)OOA B
{PP 	
returnQQ 
(QQ 
boolQQ 
)QQ 
elementQQ  
.QQ  !
GetValueQQ! )
(QQ) *
IsDisabledPropertyQQ* <
)QQ< =
;QQ= >
}RR 	
publicXX 
staticXX 
readonlyXX 
DependencyPropertyXX 1(
RippleSizeMultiplierPropertyXX2 N
=XXO P
DependencyPropertyXXQ c
.XXc d
RegisterAttachedXXd t
(XXt u
$strYY "
,YY" #
typeofYY$ *
(YY* +
doubleYY+ 1
)YY1 2
,YY2 3
typeofYY4 :
(YY: ;
RippleAssistYY; G
)YYG H
,YYH I
newYYJ M%
FrameworkPropertyMetadataYYN g
(YYg h
$numYYh k
,YYk l-
 FrameworkPropertyMetadataOptions	YYm ç
.
YYç é
Inherits
YYé ñ
)
YYñ ó
)
YYó ò
;
YYò ô
public[[ 
static[[ 
void[[ #
SetRippleSizeMultiplier[[ 2
([[2 3
DependencyObject[[3 C
element[[D K
,[[K L
double[[M S
value[[T Y
)[[Y Z
{\\ 	
element]] 
.]] 
SetValue]] 
(]] (
RippleSizeMultiplierProperty]] 9
,]]9 :
value]]; @
)]]@ A
;]]A B
}^^ 	
public`` 
static`` 
double`` #
GetRippleSizeMultiplier`` 4
(``4 5
DependencyObject``5 E
element``F M
)``M N
{aa 	
returnbb 
(bb 
doublebb 
)bb 
elementbb "
.bb" #
GetValuebb# +
(bb+ ,(
RippleSizeMultiplierPropertybb, H
)bbH I
;bbI J
}cc 	
publicii 
staticii 
readonlyii 
DependencyPropertyii 1
FeedbackPropertyii2 B
=iiC D
DependencyPropertyiiE W
.iiW X
RegisterAttachediiX h
(iih i
$strjj 
,jj 
typeofjj 
(jj 
Brushjj $
)jj$ %
,jj% &
typeofjj' -
(jj- .
RippleAssistjj. :
)jj: ;
,jj; <
newjj= @%
FrameworkPropertyMetadatajjA Z
(jjZ [
defaultjj[ b
(jjb c
Brushjjc h
)jjh i
,jji j-
 FrameworkPropertyMetadataOptions	jjk ã
.
jjã å
Inherits
jjå î
|
jjï ñ.
 FrameworkPropertyMetadataOptions
jjó ∑
.
jj∑ ∏
AffectsRender
jj∏ ≈
)
jj≈ ∆
)
jj∆ «
;
jj« »
publicll 
staticll 
voidll 
SetFeedbackll &
(ll& '
DependencyObjectll' 7
elementll8 ?
,ll? @
BrushllA F
valuellG L
)llL M
{mm 	
elementnn 
.nn 
SetValuenn 
(nn 
FeedbackPropertynn -
,nn- .
valuenn/ 4
)nn4 5
;nn5 6
}oo 	
publicqq 
staticqq 
Brushqq 
GetFeedbackqq '
(qq' (
DependencyObjectqq( 8
elementqq9 @
)qq@ A
{rr 	
returnss 
(ss 
Brushss 
)ss 
elementss !
.ss! "
GetValuess" *
(ss* +
FeedbackPropertyss+ ;
)ss; <
;ss< =
}tt 	
}yy 
}zz Û´
MD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Ripple.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[ 
TemplateVisualState 
( 
	GroupName "
=# $
$str% 3
,3 4
Name5 9
=: ;
TemplateStateNormal< O
)O P
]P Q
[ 
TemplateVisualState 
( 
	GroupName "
=# $
$str% 3
,3 4
Name5 9
=: ;%
TemplateStateMousePressed< U
)U V
]V W
[ 
TemplateVisualState 
( 
	GroupName "
=# $
$str% 3
,3 4
Name5 9
=: ;!
TemplateStateMouseOut< Q
)Q R
]R S
public 

class 
Ripple 
: 
ContentControl (
{ 
public 
const 
string 
TemplateStateNormal /
=0 1
$str2 :
;: ;
public 
const 
string %
TemplateStateMousePressed 5
=6 7
$str8 F
;F G
public 
const 
string !
TemplateStateMouseOut 1
=2 3
$str4 >
;> ?
private 
static 
readonly 
HashSet  '
<' (
Ripple( .
>. /
PressedInstances0 @
=A B
newC F
HashSetG N
<N O
RippleO U
>U V
(V W
)W X
;X Y
static 
Ripple 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
Ripple< B
)B C
,C D
newE H%
FrameworkPropertyMetadataI b
(b c
typeofc i
(i j
Ripplej p
)p q
)q r
)r s
;s t
EventManager 
.  
RegisterClassHandler -
(- .
typeof. 4
(4 5
ContentControl5 C
)C D
,D E
MouseF K
.K L
PreviewMouseUpEventL _
,_ `
newa d#
MouseButtonEventHandlere |
(| }$
MouseButtonEventHandler	} î
)
î ï
,
ï ñ
true
ó õ
)
õ ú
;
ú ù
EventManager 
.  
RegisterClassHandler -
(- .
typeof. 4
(4 5
ContentControl5 C
)C D
,D E
MouseF K
.K L
MouseMoveEventL Z
,Z [
new\ _
MouseEventHandler` q
(q r#
MouseMouveEventHandler	r à
)
à â
,
â ä
true
ã è
)
è ê
;
ê ë
EventManager 
.  
RegisterClassHandler -
(- .
typeof. 4
(4 5
Popup5 :
): ;
,; <
Mouse= B
.B C
PreviewMouseUpEventC V
,V W
newX [#
MouseButtonEventHandler\ s
(s t$
MouseButtonEventHandler	t ã
)
ã å
,
å ç
true
é í
)
í ì
;
ì î
EventManager 
.  
RegisterClassHandler -
(- .
typeof. 4
(4 5
Popup5 :
): ;
,; <
Mouse= B
.B C
MouseMoveEventC Q
,Q R
newS V
MouseEventHandlerW h
(h i"
MouseMouveEventHandleri 
)	 Ä
,
Ä Å
true
Ç Ü
)
Ü á
;
á à
}   	
public"" 
Ripple"" 
("" 
)"" 
{## 	
SizeChanged$$ 
+=$$ 
OnSizeChanged$$ (
;$$( )
}%% 	
private'' 
static'' 
void'' #
MouseButtonEventHandler'' 3
(''3 4
object''4 :
sender''; A
,''A B 
MouseButtonEventArgs''C W
e''X Y
)''Y Z
{(( 	
foreach)) 
()) 
var)) 
ripple)) 
in))  "
PressedInstances))# 3
)))3 4
{** 
var,, 

scaleTrans,, 
=,,  
ripple,,! '
.,,' (
Template,,( 0
.,,0 1
FindName,,1 9
(,,9 :
$str,,: J
,,,J K
ripple,,L R
),,R S
as,,T V
ScaleTransform,,W e
;,,e f
if-- 
(-- 

scaleTrans-- 
!=-- !
null--" &
)--& '
{.. 
double// 
currentScale// '
=//( )

scaleTrans//* 4
.//4 5
ScaleX//5 ;
;//; <
var00 
newTime00 
=00  !
TimeSpan00" *
.00* +
FromMilliseconds00+ ;
(00; <
$num00< ?
*00@ A
(00B C
$num00C F
-00G H
currentScale00I U
)00U V
)00V W
;00W X
var33 
scaleXKeyFrame33 &
=33' (
ripple33) /
.33/ 0
Template330 8
.338 9
FindName339 A
(33A B
$str33B f
,33f g
ripple33h n
)33n o
as33p r!
EasingDoubleKeyFrame	33s á
;
33á à
if44 
(44 
scaleXKeyFrame44 &
!=44' )
null44* .
)44. /
{55 
scaleXKeyFrame66 &
.66& '
KeyTime66' .
=66/ 0
KeyTime661 8
.668 9
FromTimeSpan669 E
(66E F
newTime66F M
)66M N
;66N O
}77 
var88 
scaleYKeyFrame88 &
=88' (
ripple88) /
.88/ 0
Template880 8
.888 9
FindName889 A
(88A B
$str88B f
,88f g
ripple88h n
)88n o
as88p r!
EasingDoubleKeyFrame	88s á
;
88á à
if99 
(99 
scaleYKeyFrame99 &
!=99' )
null99* .
)99. /
{990 1
scaleYKeyFrame:: &
.::& '
KeyTime::' .
=::/ 0
KeyTime::1 8
.::8 9
FromTimeSpan::9 E
(::E F
newTime::F M
)::M N
;::N O
};; 
}<< 
VisualStateManager>> "
.>>" #
	GoToState>># ,
(>>, -
ripple>>- 3
,>>3 4
TemplateStateNormal>>5 H
,>>H I
true>>J N
)>>N O
;>>O P
}?? 
PressedInstances@@ 
.@@ 
Clear@@ "
(@@" #
)@@# $
;@@$ %
}AA 	
privateCC 
staticCC 
voidCC "
MouseMouveEventHandlerCC 2
(CC2 3
objectCC3 9
senderCC: @
,CC@ A
MouseEventArgsCCB P
eCCQ R
)CCR S
{DD 	
foreachEE 
(EE 
varEE 
rippleEE 
inEE  "
PressedInstancesEE# 3
.EE3 4
ToListEE4 :
(EE: ;
)EE; <
)EE< =
{FF 
varGG 
relativePositionGG $
=GG% &
MouseGG' ,
.GG, -
GetPositionGG- 8
(GG8 9
rippleGG9 ?
)GG? @
;GG@ A
ifHH 
(HH 
relativePositionHH $
.HH$ %
XHH% &
<HH' (
$numHH) *
||II 
relativePositionII '
.II' (
YII( )
<II* +
$numII, -
||JJ 
relativePositionJJ '
.JJ' (
XJJ( )
>=JJ* ,
rippleJJ- 3
.JJ3 4
ActualWidthJJ4 ?
||KK 
relativePositionKK '
.KK' (
YKK( )
>=KK* ,
rippleKK- 3
.KK3 4
ActualHeightKK4 @
)KK@ A
{MM 
VisualStateManagerNN &
.NN& '
	GoToStateNN' 0
(NN0 1
rippleNN1 7
,NN7 8!
TemplateStateMouseOutNN9 N
,NNN O
trueNNP T
)NNT U
;NNU V
PressedInstancesOO $
.OO$ %
RemoveOO% +
(OO+ ,
rippleOO, 2
)OO2 3
;OO3 4
}PP 
}QQ 
}RR 	
publicTT 
staticTT 
readonlyTT 
DependencyPropertyTT 1
FeedbackPropertyTT2 B
=TTC D
DependencyPropertyTTE W
.TTW X
RegisterTTX `
(TT` a
nameofUU 
(UU 
FeedbackUU 
)UU 
,UU 
typeofUU $
(UU$ %
BrushUU% *
)UU* +
,UU+ ,
typeofUU- 3
(UU3 4
RippleUU4 :
)UU: ;
,UU; <
newUU= @
PropertyMetadataUUA Q
(UUQ R
defaultUUR Y
(UUY Z
BrushUUZ _
)UU_ `
)UU` a
)UUa b
;UUb c
publicWW 
BrushWW 
FeedbackWW 
{XX 	
getYY 
{YY 
returnYY 
(YY 
BrushYY 
)YY  
GetValueYY  (
(YY( )
FeedbackPropertyYY) 9
)YY9 :
;YY: ;
}YY< =
setZZ 
{ZZ 
SetValueZZ 
(ZZ 
FeedbackPropertyZZ +
,ZZ+ ,
valueZZ- 2
)ZZ2 3
;ZZ3 4
}ZZ5 6
}[[ 	
	protected]] 
override]] 
void]] (
OnPreviewMouseLeftButtonDown]]  <
(]]< = 
MouseButtonEventArgs]]= Q
e]]R S
)]]S T
{^^ 	
var__ 
point__ 
=__ 
e__ 
.__ 
GetPosition__ %
(__% &
this__& *
)__* +
;__+ ,
ifaa 
(aa 
RippleAssistaa 
.aa 
GetIsCenteredaa *
(aa* +
thisaa+ /
)aa/ 0
)aa0 1
{bb 
varcc 
innerContentcc  
=cc! "
(cc# $
Contentcc$ +
ascc, .
FrameworkElementcc/ ?
)cc? @
;cc@ A
ifee 
(ee 
innerContentee  
!=ee! #
nullee$ (
)ee( )
{ff 
vargg 
positiongg  
=gg! "
innerContentgg# /
.gg/ 0
TransformToAncestorgg0 C
(ggC D
thisggD H
)ggH I
.hh 
	Transformhh "
(hh" #
newhh# &
Pointhh' ,
(hh, -
$numhh- .
,hh. /
$numhh0 1
)hh1 2
)hh2 3
;hh3 4
RippleXjj 
=jj 
positionjj &
.jj& '
Xjj' (
+jj) *
innerContentjj+ 7
.jj7 8
ActualWidthjj8 C
/jjD E
$numjjF G
-jjH I

RippleSizejjJ T
/jjU V
$numjjW X
;jjX Y
RippleYkk 
=kk 
positionkk &
.kk& '
Ykk' (
+kk) *
innerContentkk+ 7
.kk7 8
ActualHeightkk8 D
/kkE F
$numkkG H
-kkI J

RippleSizekkK U
/kkV W
$numkkX Y
;kkY Z
}ll 
elsemm 
{nn 
RippleXoo 
=oo 
ActualWidthoo )
/oo* +
$numoo, -
-oo. /

RippleSizeoo0 :
/oo; <
$numoo= >
;oo> ?
RippleYpp 
=pp 
ActualHeightpp *
/pp+ ,
$numpp- .
-pp/ 0

RippleSizepp1 ;
/pp< =
$numpp> ?
;pp? @
}qq 
}rr 
elsess 
{tt 
RippleXuu 
=uu 
pointuu 
.uu  
Xuu  !
-uu" #

RippleSizeuu$ .
/uu/ 0
$numuu1 2
;uu2 3
RippleYvv 
=vv 
pointvv 
.vv  
Yvv  !
-vv" #

RippleSizevv$ .
/vv/ 0
$numvv1 2
;vv2 3
}ww 
ifyy 
(yy 
!yy 
RippleAssistyy 
.yy 
GetIsDisabledyy +
(yy+ ,
thisyy, 0
)yy0 1
)yy1 2
{zz 
VisualStateManager{{ "
.{{" #
	GoToState{{# ,
({{, -
this{{- 1
,{{1 2
TemplateStateNormal{{3 F
,{{F G
false{{H M
){{M N
;{{N O
VisualStateManager|| "
.||" #
	GoToState||# ,
(||, -
this||- 1
,||1 2%
TemplateStateMousePressed||3 L
,||L M
true||N R
)||R S
;||S T
PressedInstances}}  
.}}  !
Add}}! $
(}}$ %
this}}% )
)}}) *
;}}* +
}~~ 
base
ÄÄ 
.
ÄÄ *
OnPreviewMouseLeftButtonDown
ÄÄ -
(
ÄÄ- .
e
ÄÄ. /
)
ÄÄ/ 0
;
ÄÄ0 1
}
ÅÅ 	
private
ÉÉ 
static
ÉÉ 
readonly
ÉÉ #
DependencyPropertyKey
ÉÉ  5#
RippleSizePropertyKey
ÉÉ6 K
=
ÉÉL M 
DependencyProperty
ÑÑ 
.
ÑÑ 
RegisterReadOnly
ÑÑ /
(
ÑÑ/ 0
$str
ÖÖ 
,
ÖÖ 
typeof
ÖÖ $
(
ÖÖ$ %
double
ÖÖ% +
)
ÖÖ+ ,
,
ÖÖ, -
typeof
ÖÖ. 4
(
ÖÖ4 5
Ripple
ÖÖ5 ;
)
ÖÖ; <
,
ÖÖ< =
new
ÜÜ 
PropertyMetadata
ÜÜ $
(
ÜÜ$ %
default
ÜÜ% ,
(
ÜÜ, -
double
ÜÜ- 3
)
ÜÜ3 4
)
ÜÜ4 5
)
ÜÜ5 6
;
ÜÜ6 7
public
àà 
static
àà 
readonly
àà  
DependencyProperty
àà 1 
RippleSizeProperty
àà2 D
=
ààE F#
RippleSizePropertyKey
ââ !
.
ââ! " 
DependencyProperty
ââ" 4
;
ââ4 5
public
ãã 
double
ãã 

RippleSize
ãã  
{
åå 	
get
çç 
{
çç 
return
çç 
(
çç 
double
çç  
)
çç  !
GetValue
çç! )
(
çç) * 
RippleSizeProperty
çç* <
)
çç< =
;
çç= >
}
çç? @
private
éé 
set
éé 
{
éé 
SetValue
éé "
(
éé" ##
RippleSizePropertyKey
éé# 8
,
éé8 9
value
éé: ?
)
éé? @
;
éé@ A
}
ééB C
}
èè 	
private
ëë 
static
ëë 
readonly
ëë #
DependencyPropertyKey
ëë  5 
RippleXPropertyKey
ëë6 H
=
ëëI J 
DependencyProperty
íí 
.
íí 
RegisterReadOnly
íí /
(
íí/ 0
$str
ìì 
,
ìì 
typeof
ìì !
(
ìì! "
double
ìì" (
)
ìì( )
,
ìì) *
typeof
ìì+ 1
(
ìì1 2
Ripple
ìì2 8
)
ìì8 9
,
ìì9 :
new
îî 
PropertyMetadata
îî $
(
îî$ %
default
îî% ,
(
îî, -
double
îî- 3
)
îî3 4
)
îî4 5
)
îî5 6
;
îî6 7
public
ññ 
static
ññ 
readonly
ññ  
DependencyProperty
ññ 1
RippleXProperty
ññ2 A
=
ññB C 
RippleXPropertyKey
óó 
.
óó  
DependencyProperty
óó 1
;
óó1 2
public
ôô 
double
ôô 
RippleX
ôô 
{
öö 	
get
õõ 
{
õõ 
return
õõ 
(
õõ 
double
õõ  
)
õõ  !
GetValue
õõ! )
(
õõ) *
RippleXProperty
õõ* 9
)
õõ9 :
;
õõ: ;
}
õõ< =
private
úú 
set
úú 
{
úú 
SetValue
úú "
(
úú" # 
RippleXPropertyKey
úú# 5
,
úú5 6
value
úú7 <
)
úú< =
;
úú= >
}
úú? @
}
ùù 	
private
üü 
static
üü 
readonly
üü #
DependencyPropertyKey
üü  5 
RippleYPropertyKey
üü6 H
=
üüI J 
DependencyProperty
†† 
.
†† 
RegisterReadOnly
†† /
(
††/ 0
$str
°° 
,
°° 
typeof
°° !
(
°°! "
double
°°" (
)
°°( )
,
°°) *
typeof
°°+ 1
(
°°1 2
Ripple
°°2 8
)
°°8 9
,
°°9 :
new
¢¢ 
PropertyMetadata
¢¢ $
(
¢¢$ %
default
¢¢% ,
(
¢¢, -
double
¢¢- 3
)
¢¢3 4
)
¢¢4 5
)
¢¢5 6
;
¢¢6 7
public
§§ 
static
§§ 
readonly
§§  
DependencyProperty
§§ 1
RippleYProperty
§§2 A
=
§§B C 
RippleYPropertyKey
•• 
.
••  
DependencyProperty
•• 1
;
••1 2
public
ßß 
double
ßß 
RippleY
ßß 
{
®® 	
get
©© 
{
©© 
return
©© 
(
©© 
double
©©  
)
©©  !
GetValue
©©! )
(
©©) *
RippleYProperty
©©* 9
)
©©9 :
;
©©: ;
}
©©< =
private
™™ 
set
™™ 
{
™™ 
SetValue
™™ "
(
™™" # 
RippleYPropertyKey
™™# 5
,
™™5 6
value
™™7 <
)
™™< =
;
™™= >
}
™™? @
}
´´ 	
public
±± 
static
±± 
readonly
±±  
DependencyProperty
±± 1)
RecognizesAccessKeyProperty
±±2 M
=
±±N O 
DependencyProperty
≤≤ 
.
≤≤ 
Register
≤≤ '
(
≤≤' (
nameof
≥≥ 
(
≥≥ !
RecognizesAccessKey
≥≥ *
)
≥≥* +
,
≥≥+ ,
typeof
≥≥- 3
(
≥≥3 4
bool
≥≥4 8
)
≥≥8 9
,
≥≥9 :
typeof
≥≥; A
(
≥≥A B
Ripple
≥≥B H
)
≥≥H I
,
≥≥I J
new
¥¥ 
PropertyMetadata
¥¥ $
(
¥¥$ %
default
¥¥% ,
(
¥¥, -
bool
¥¥- 1
)
¥¥1 2
)
¥¥2 3
)
¥¥3 4
;
¥¥4 5
public
ππ 
bool
ππ !
RecognizesAccessKey
ππ '
{
∫∫ 	
get
ªª 
{
ªª 
return
ªª 
(
ªª 
bool
ªª 
)
ªª 
GetValue
ªª '
(
ªª' ()
RecognizesAccessKeyProperty
ªª( C
)
ªªC D
;
ªªD E
}
ªªF G
set
ºº 
{
ºº 
SetValue
ºº 
(
ºº )
RecognizesAccessKeyProperty
ºº 6
,
ºº6 7
value
ºº8 =
)
ºº= >
;
ºº> ?
}
ºº@ A
}
ΩΩ 	
public
øø 
override
øø 
void
øø 
OnApplyTemplate
øø ,
(
øø, -
)
øø- .
{
¿¿ 	
base
¡¡ 
.
¡¡ 
OnApplyTemplate
¡¡  
(
¡¡  !
)
¡¡! "
;
¡¡" # 
VisualStateManager
√√ 
.
√√ 
	GoToState
√√ (
(
√√( )
this
√√) -
,
√√- .!
TemplateStateNormal
√√/ B
,
√√B C
false
√√D I
)
√√I J
;
√√J K
}
ƒƒ 	
private
∆∆ 
void
∆∆ 
OnSizeChanged
∆∆ "
(
∆∆" #
object
∆∆# )
sender
∆∆* 0
,
∆∆0 1"
SizeChangedEventArgs
∆∆2 F"
sizeChangedEventArgs
∆∆G [
)
∆∆[ \
{
«« 	
var
»» 
innerContent
»» 
=
»» 
(
»»  
Content
»»  '
as
»»( *
FrameworkElement
»»+ ;
)
»»; <
;
»»< =
double
   
width
   
,
   
height
    
;
    !
if
ÃÃ 
(
ÃÃ 
RippleAssist
ÃÃ 
.
ÃÃ 
GetIsCentered
ÃÃ *
(
ÃÃ* +
this
ÃÃ+ /
)
ÃÃ/ 0
&&
ÃÃ1 3
innerContent
ÃÃ4 @
!=
ÃÃA C
null
ÃÃD H
)
ÃÃH I
{
ÕÕ 
width
ŒŒ 
=
ŒŒ 
innerContent
ŒŒ $
.
ŒŒ$ %
ActualWidth
ŒŒ% 0
;
ŒŒ0 1
height
œœ 
=
œœ 
innerContent
œœ %
.
œœ% &
ActualHeight
œœ& 2
;
œœ2 3
}
–– 
else
—— 
{
““ 
width
”” 
=
”” "
sizeChangedEventArgs
”” ,
.
””, -
NewSize
””- 4
.
””4 5
Width
””5 :
;
””: ;
height
‘‘ 
=
‘‘ "
sizeChangedEventArgs
‘‘ -
.
‘‘- .
NewSize
‘‘. 5
.
‘‘5 6
Height
‘‘6 <
;
‘‘< =
}
’’ 
var
◊◊ 
radius
◊◊ 
=
◊◊ 
Math
◊◊ 
.
◊◊ 
Sqrt
◊◊ "
(
◊◊" #
Math
◊◊# '
.
◊◊' (
Pow
◊◊( +
(
◊◊+ ,
width
◊◊, 1
,
◊◊1 2
$num
◊◊3 4
)
◊◊4 5
+
◊◊6 7
Math
◊◊8 <
.
◊◊< =
Pow
◊◊= @
(
◊◊@ A
height
◊◊A G
,
◊◊G H
$num
◊◊I J
)
◊◊J K
)
◊◊K L
;
◊◊L M

RippleSize
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
*
ŸŸ 
radius
ŸŸ #
*
ŸŸ$ %
RippleAssist
ŸŸ& 2
.
ŸŸ2 3%
GetRippleSizeMultiplier
ŸŸ3 J
(
ŸŸJ K
this
ŸŸK O
)
ŸŸO P
;
ŸŸP Q
}
⁄⁄ 	
}
€€ 
}‹‹ ß
dD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\IZIndexController.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

	interface 
IZIndexController &
{ 
void 
Stack 
( 
params 
TransitionerSlide +
[+ ,
], -
highestToLowest. =
)= >
;> ?
} 
} –
aD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\SlideDirection.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

enum 
SlideDirection 
{  
Left! %
,% &
Right' ,
,, -
Up. 0
,0 1
Down2 6
}7 8
} ÿa
\D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\SlideWipe.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

class 
	SlideWipe 
: 
ITransitionWipe ,
{		 
private

 
readonly

 
SineEase

 !
	_sineEase

" +
=

, -
new

. 1
SineEase

2 :
(

: ;
)

; <
;

< =
public 
SlideDirection 
	Direction '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
TimeSpan 
Duration  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
TimeSpan1 9
.9 :
FromSeconds: E
(E F
$numF I
)I J
;J K
public 
void 
Wipe 
( 
TransitionerSlide *
	fromSlide+ 4
,4 5
TransitionerSlide6 G
toSlideH O
,O P
PointQ V
originW ]
,] ^
IZIndexController_ p
zIndexController	q Å
)
Å Ç
{ 	
if 
( 
	fromSlide 
== 
null !
)! "
throw# (
new) ,!
ArgumentNullException- B
(B C
nameofC I
(I J
	fromSlideJ S
)S T
)T U
;U V
if 
( 
toSlide 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
nameofA G
(G H
toSlideH O
)O P
)P Q
;Q R
if 
( 
zIndexController  
==! #
null$ (
)( )
throw* /
new0 3!
ArgumentNullException4 I
(I J
nameofJ P
(P Q
zIndexControllerQ a
)a b
)b c
;c d
var 
zeroKeyTime 
= 
KeyTime %
.% &
FromTimeSpan& 2
(2 3
TimeSpan3 ;
.; <
Zero< @
)@ A
;A B
var 

endKeyTime 
= 
KeyTime $
.$ %
FromTimeSpan% 1
(1 2
Duration2 :
): ;
;; <
double!! 

fromStartX!! 
=!! 
$num!!  !
,!!! "
fromEndX!!# +
=!!, -
$num!!. /
,!!/ 0
toStartX!!1 9
=!!: ;
$num!!< =
,!!= >
toEndX!!? E
=!!F G
$num!!H I
;!!I J
double"" 

fromStartY"" 
="" 
$num""  !
,""! "
fromEndY""# +
="", -
$num"". /
,""/ 0
toStartY""1 9
="": ;
$num""< =
,""= >
toEndY""? E
=""F G
$num""H I
;""I J
if$$ 
($$ 
	Direction$$ 
==$$ 
SlideDirection$$ +
.$$+ ,
Left$$, 0
)$$0 1
{%% 
fromEndX&& 
=&& 
-&& 
	fromSlide&& %
.&&% &
ActualWidth&&& 1
;&&1 2
toStartX'' 
='' 
toSlide'' "
.''" #
ActualWidth''# .
;''. /
}(( 
else)) 
if)) 
()) 
	Direction)) 
==)) !
SlideDirection))" 0
.))0 1
Right))1 6
)))6 7
{** 
fromEndX++ 
=++ 
	fromSlide++ $
.++$ %
ActualWidth++% 0
;++0 1
toStartX,, 
=,, 
-,, 
toSlide,, #
.,,# $
ActualWidth,,$ /
;,,/ 0
}-- 
else.. 
if.. 
(.. 
	Direction.. 
==.. !
SlideDirection.." 0
...0 1
Up..1 3
)..3 4
{// 
fromEndY00 
=00 
-00 
	fromSlide00 %
.00% &
ActualHeight00& 2
;002 3
toStartY11 
=11 
toSlide11 "
.11" #
ActualHeight11# /
;11/ 0
}22 
else33 
if33 
(33 
	Direction33 
==33 !
SlideDirection33" 0
.330 1
Down331 5
)335 6
{44 
fromEndY55 
=55 
	fromSlide55 $
.55$ %
ActualHeight55% 1
;551 2
toStartY66 
=66 
-66 
toSlide66 #
.66# $
ActualHeight66$ 0
;660 1
}77 
var:: 
fromTransform:: 
=:: 
new::  #
TranslateTransform::$ 6
(::6 7

fromStartX::7 A
,::A B

fromStartY::C M
)::M N
;::N O
	fromSlide;; 
.;; 
RenderTransform;; %
=;;& '
fromTransform;;( 5
;;;5 6
var<< 
fromXAnimation<< 
=<<  
new<<! $)
DoubleAnimationUsingKeyFrames<<% B
(<<B C
)<<C D
;<<D E
fromXAnimation== 
.== 
	KeyFrames== $
.==$ %
Add==% (
(==( )
new==) , 
LinearDoubleKeyFrame==- A
(==A B

fromStartX==B L
,==L M
zeroKeyTime==N Y
)==Y Z
)==Z [
;==[ \
fromXAnimation>> 
.>> 
	KeyFrames>> $
.>>$ %
Add>>% (
(>>( )
new>>) , 
EasingDoubleKeyFrame>>- A
(>>A B
fromEndX>>B J
,>>J K

endKeyTime>>L V
,>>V W
	_sineEase>>X a
)>>a b
)>>b c
;>>c d
var?? 
fromYAnimation?? 
=??  
new??! $)
DoubleAnimationUsingKeyFrames??% B
(??B C
)??C D
;??D E
fromYAnimation@@ 
.@@ 
	KeyFrames@@ $
.@@$ %
Add@@% (
(@@( )
new@@) , 
LinearDoubleKeyFrame@@- A
(@@A B

fromStartY@@B L
,@@L M
zeroKeyTime@@N Y
)@@Y Z
)@@Z [
;@@[ \
fromYAnimationAA 
.AA 
	KeyFramesAA $
.AA$ %
AddAA% (
(AA( )
newAA) , 
EasingDoubleKeyFrameAA- A
(AAA B
fromEndYAAB J
,AAJ K

endKeyTimeAAL V
,AAV W
	_sineEaseAAX a
)AAa b
)AAb c
;AAc d
varDD 
toTransformDD 
=DD 
newDD !
TranslateTransformDD" 4
(DD4 5
toStartXDD5 =
,DD= >
toStartYDD? G
)DDG H
;DDH I
toSlideEE 
.EE 
RenderTransformEE #
=EE$ %
toTransformEE& 1
;EE1 2
varFF 
toXAnimationFF 
=FF 
newFF ")
DoubleAnimationUsingKeyFramesFF# @
(FF@ A
)FFA B
;FFB C
toXAnimationGG 
.GG 
	KeyFramesGG "
.GG" #
AddGG# &
(GG& '
newGG' * 
LinearDoubleKeyFrameGG+ ?
(GG? @
toStartXGG@ H
,GGH I
zeroKeyTimeGGJ U
)GGU V
)GGV W
;GGW X
toXAnimationHH 
.HH 
	KeyFramesHH "
.HH" #
AddHH# &
(HH& '
newHH' * 
EasingDoubleKeyFrameHH+ ?
(HH? @
toEndXHH@ F
,HHF G

endKeyTimeHHH R
,HHR S
	_sineEaseHHT ]
)HH] ^
)HH^ _
;HH_ `
varII 
toYAnimationII 
=II 
newII ")
DoubleAnimationUsingKeyFramesII# @
(II@ A
)IIA B
;IIB C
toYAnimationJJ 
.JJ 
	KeyFramesJJ "
.JJ" #
AddJJ# &
(JJ& '
newJJ' * 
LinearDoubleKeyFrameJJ+ ?
(JJ? @
toStartYJJ@ H
,JJH I
zeroKeyTimeJJJ U
)JJU V
)JJV W
;JJW X
toYAnimationKK 
.KK 
	KeyFramesKK "
.KK" #
AddKK# &
(KK& '
newKK' * 
EasingDoubleKeyFrameKK+ ?
(KK? @
toEndYKK@ F
,KKF G

endKeyTimeKKH R
,KKR S
	_sineEaseKKT ]
)KK] ^
)KK^ _
;KK_ `
fromXAnimationNN 
.NN 
	CompletedNN $
+=NN% '
(NN( )
senderNN) /
,NN/ 0
argsNN1 5
)NN5 6
=>NN7 9
{OO 
fromTransformPP 
.PP 
BeginAnimationPP ,
(PP, -
TranslateTransformPP- ?
.PP? @
	XPropertyPP@ I
,PPI J
nullPPK O
)PPO P
;PPP Q
fromTransformQQ 
.QQ 
XQQ 
=QQ  !
fromEndXQQ" *
;QQ* +
	fromSlideRR 
.RR 
RenderTransformRR )
=RR* +
nullRR, 0
;RR0 1
}SS 
;SS 
fromYAnimationTT 
.TT 
	CompletedTT $
+=TT% '
(TT( )
senderTT) /
,TT/ 0
argsTT1 5
)TT5 6
=>TT7 9
{UU 
fromTransformVV 
.VV 
BeginAnimationVV ,
(VV, -
TranslateTransformVV- ?
.VV? @
	YPropertyVV@ I
,VVI J
nullVVK O
)VVO P
;VVP Q
fromTransformWW 
.WW 
YWW 
=WW  !
fromEndYWW" *
;WW* +
	fromSlideXX 
.XX 
RenderTransformXX )
=XX* +
nullXX, 0
;XX0 1
}YY 
;YY 
toXAnimationZZ 
.ZZ 
	CompletedZZ "
+=ZZ# %
(ZZ& '
senderZZ' -
,ZZ- .
argsZZ/ 3
)ZZ3 4
=>ZZ5 7
{[[ 
toTransform\\ 
.\\ 
BeginAnimation\\ *
(\\* +
TranslateTransform\\+ =
.\\= >
	XProperty\\> G
,\\G H
null\\I M
)\\M N
;\\N O
toTransform]] 
.]] 
X]] 
=]] 
toEndX]]  &
;]]& '
toSlide^^ 
.^^ 
RenderTransform^^ '
=^^( )
null^^* .
;^^. /
}__ 
;__ 
toYAnimation`` 
.`` 
	Completed`` "
+=``# %
(``& '
sender``' -
,``- .
args``/ 3
)``3 4
=>``5 7
{aa 
toTransformbb 
.bb 
BeginAnimationbb *
(bb* +
TranslateTransformbb+ =
.bb= >
	YPropertybb> G
,bbG H
nullbbI M
)bbM N
;bbN O
toTransformcc 
.cc 
Ycc 
=cc 
toEndYcc  &
;cc& '
toSlidedd 
.dd 
RenderTransformdd '
=dd( )
nulldd* .
;dd. /
}ee 
;ee 
fromTransformhh 
.hh 
BeginAnimationhh (
(hh( )
TranslateTransformhh) ;
.hh; <
	XPropertyhh< E
,hhE F
fromXAnimationhhG U
)hhU V
;hhV W
fromTransformii 
.ii 
BeginAnimationii (
(ii( )
TranslateTransformii) ;
.ii; <
	YPropertyii< E
,iiE F
fromYAnimationiiG U
)iiU V
;iiV W
toTransformjj 
.jj 
BeginAnimationjj &
(jj& '
TranslateTransformjj' 9
.jj9 :
	XPropertyjj: C
,jjC D
toXAnimationjjE Q
)jjQ R
;jjR S
toTransformkk 
.kk 
BeginAnimationkk &
(kk& '
TranslateTransformkk' 9
.kk9 :
	YPropertykk: C
,kkC D
toYAnimationkkE Q
)kkQ R
;kkR S
zIndexControllerll 
.ll 
Stackll "
(ll" #
toSlidell# *
,ll* +
	fromSlidell, 5
)ll5 6
;ll6 7
}mm 	
}nn 
}oo >
_D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\SlideOutWipe.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

class 
SlideOutWipe 
: 
ITransitionWipe  /
{		 
private

 
readonly

 
SineEase

 !
	_sineEase

" +
=

, -
new

. 1
SineEase

2 :
(

: ;
)

; <
;

< =
public 
void 
Wipe 
( 
TransitionerSlide *
	fromSlide+ 4
,4 5
TransitionerSlide6 G
toSlideH O
,O P
PointQ V
originW ]
,] ^
IZIndexController_ p
zIndexController	q Å
)
Å Ç
{ 	
if 
( 
	fromSlide 
== 
null !
)! "
throw# (
new) ,!
ArgumentNullException- B
(B C
nameofC I
(I J
	fromSlideJ S
)S T
)T U
;U V
if 
( 
toSlide 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
nameofA G
(G H
toSlideH O
)O P
)P Q
;Q R
if 
( 
zIndexController  
==! #
null$ (
)( )
throw* /
new0 3!
ArgumentNullException4 I
(I J
nameofJ P
(P Q
zIndexControllerQ a
)a b
)b c
;c d
var 
zeroKeyTime 
= 
KeyTime %
.% &
FromTimeSpan& 2
(2 3
TimeSpan3 ;
.; <
Zero< @
)@ A
;A B
var 
midishKeyTime 
= 
KeyTime  '
.' (
FromTimeSpan( 4
(4 5
TimeSpan5 =
.= >
FromMilliseconds> N
(N O
$numO R
)R S
)S T
;T U
var 

endKeyTime 
= 
KeyTime $
.$ %
FromTimeSpan% 1
(1 2
TimeSpan2 :
.: ;
FromMilliseconds; K
(K L
$numL O
)O P
)P Q
;Q R
var 
scaleTransform 
=  
new! $
ScaleTransform% 3
(3 4
$num4 5
,5 6
$num7 8
)8 9
;9 :
	fromSlide 
. 
RenderTransform %
=& '
scaleTransform( 6
;6 7
var 
scaleAnimation 
=  
new! $)
DoubleAnimationUsingKeyFrames% B
(B C
)C D
;D E
scaleAnimation 
. 
	KeyFrames $
.$ %
Add% (
(( )
new) , 
EasingDoubleKeyFrame- A
(A B
$numB C
,C D
zeroKeyTimeE P
)P Q
)Q R
;R S
scaleAnimation 
. 
	KeyFrames $
.$ %
Add% (
(( )
new) , 
EasingDoubleKeyFrame- A
(A B
$numB D
,D E

endKeyTimeF P
)P Q
)Q R
;R S
scaleAnimation 
. 
	Completed $
+=% '
(( )
sender) /
,/ 0
args1 5
)5 6
=>7 9
{ 
	fromSlide 
. 
RenderTransform )
=* +
null, 0
;0 1
} 
; 
var   
opacityAnimation    
=  ! "
new  # &)
DoubleAnimationUsingKeyFrames  ' D
(  D E
)  E F
;  F G
opacityAnimation!! 
.!! 
	KeyFrames!! &
.!!& '
Add!!' *
(!!* +
new!!+ . 
EasingDoubleKeyFrame!!/ C
(!!C D
$num!!D E
,!!E F
zeroKeyTime!!G R
)!!R S
)!!S T
;!!T U
opacityAnimation"" 
."" 
	KeyFrames"" &
.""& '
Add""' *
(""* +
new""+ . 
EasingDoubleKeyFrame""/ C
(""C D
$num""D E
,""E F

endKeyTime""G Q
)""Q R
)""R S
;""S T
opacityAnimation## 
.## 
	Completed## &
+=##' )
(##* +
sender##+ 1
,##1 2
args##3 7
)##7 8
=>##9 ;
{$$ 
	fromSlide%% 
.%% 
BeginAnimation%% (
(%%( )
	UIElement%%) 2
.%%2 3
OpacityProperty%%3 B
,%%B C
null%%D H
)%%H I
;%%I J
	fromSlide&& 
.&& 
Opacity&& !
=&&" #
$num&&$ %
;&&% &
}'' 
;'' 
var** 
translateTransform** "
=**# $
new**% (
TranslateTransform**) ;
(**; <
$num**< =
,**= >
toSlide**? F
.**F G
ActualHeight**G S
)**S T
;**T U
toSlide++ 
.++ 
RenderTransform++ #
=++$ %
translateTransform++& 8
;++8 9
var,, 
slideAnimation,, 
=,,  
new,,! $)
DoubleAnimationUsingKeyFrames,,% B
(,,B C
),,C D
;,,D E
slideAnimation-- 
.-- 
	KeyFrames-- $
.--$ %
Add--% (
(--( )
new--) , 
LinearDoubleKeyFrame--- A
(--A B
toSlide--B I
.--I J
ActualHeight--J V
,--V W
zeroKeyTime--X c
)--c d
)--d e
;--e f
slideAnimation.. 
... 
	KeyFrames.. $
...$ %
Add..% (
(..( )
new..) , 
EasingDoubleKeyFrame..- A
(..A B
toSlide..B I
...I J
ActualHeight..J V
,..V W
midishKeyTime..X e
)..e f
{..g h
EasingFunction..i w
=..x y
	_sineEase	..z É
}
..É Ñ
)
..Ñ Ö
;
..Ö Ü
slideAnimation// 
.// 
	KeyFrames// $
.//$ %
Add//% (
(//( )
new//) , 
EasingDoubleKeyFrame//- A
(//A B
$num//B C
,//C D

endKeyTime//E O
)//O P
{//Q R
EasingFunction//S a
=//b c
	_sineEase//d m
}//n o
)//o p
;//p q
translateTransform22 
.22 
BeginAnimation22 -
(22- .
TranslateTransform22. @
.22@ A
	YProperty22A J
,22J K
slideAnimation22L Z
)22Z [
;22[ \
scaleTransform33 
.33 
BeginAnimation33 )
(33) *
ScaleTransform33* 8
.338 9
ScaleXProperty339 G
,33G H
scaleAnimation33I W
)33W X
;33X Y
scaleTransform44 
.44 
BeginAnimation44 )
(44) *
ScaleTransform44* 8
.448 9
ScaleYProperty449 G
,44G H
scaleAnimation44I W
)44W X
;44X Y
	fromSlide55 
.55 
BeginAnimation55 $
(55$ %
	UIElement55% .
.55. /
OpacityProperty55/ >
,55> ?
opacityAnimation55@ P
)55P Q
;55Q R
zIndexController77 
.77 
Stack77 "
(77" #
toSlide77# *
,77* +
	fromSlide77, 5
)775 6
;776 7
}88 	
}99 
}:: Ø
cD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitionAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

static 
class 
TransitionAssist (
{		 
public 
static 
readonly 
DependencyProperty 1&
DisableTransitionsProperty2 L
=M N
DependencyPropertyO a
.a b
RegisterAttachedb r
(r s
$str  
,  !
typeof" (
() *
bool* .
). /
,/ 0
typeof1 7
(8 9
TransitionAssist9 I
)I J
,J K
newL O%
FrameworkPropertyMetadataP i
(i j
defaultj q
(q r
boolr v
)v w
,w x-
 FrameworkPropertyMetadataOptions	y ô
.
ô ö
Inherits
ö ¢
)
¢ £
)
£ §
;
§ •
public 
static 
void !
SetDisableTransitions 0
(0 1
DependencyObject1 A
elementB I
,I J
boolK O
valueP U
)U V
{ 	
element 
. 
SetValue 
( &
DisableTransitionsProperty 7
,7 8
value9 >
)> ?
;? @
} 	
public 
static 
bool !
GetDisableTransitions 0
(0 1
DependencyObject1 A
elementB I
)I J
{ 	
return 
( 
bool 
) 
element !
.! "
GetValue" *
(* +&
DisableTransitionsProperty+ E
)E F
;F G
} 	
} 
}   Åj
cD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitionEffect.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

class 
TransitionEffect !
:" # 
TransitionEffectBase$ 8
{		 
public

 
TransitionEffect

 
(

  
)

  !
{ 	
} 	
public 
TransitionEffect 
(   
TransitionEffectKind  4
kind5 9
)9 :
{ 	
Kind 
= 
kind 
; 
} 	
public 
TransitionEffect 
(   
TransitionEffectKind  4
kind5 9
,9 :
TimeSpan; C
durationD L
)L M
{ 	
Kind 
= 
kind 
; 
Duration 
= 
duration 
;  
} 	
public  
TransitionEffectKind #
Kind$ (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
TimeSpan 

OffsetTime "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
TimeSpan3 ;
.; <
Zero< @
;@ A
public 
TimeSpan 
Duration  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
TimeSpan1 9
.9 :
FromMilliseconds: J
(J K
$numK N
)N O
;O P
public 
override 
Timeline  
Build! &
<& '
TSubject' /
>/ 0
(0 1
TSubject1 9
effectSubject: G
)G H
{   	
if!! 
(!! 
effectSubject!! 
==!!  
null!!! %
)!!% &
throw!!' ,
new!!- 0!
ArgumentNullException!!1 F
(!!F G
nameof!!G M
(!!M N
effectSubject!!N [
)!![ \
)!!\ ]
;!!] ^
Timeline## 
timeline## 
=## 
null##  $
;##$ %
DependencyProperty$$ 
property$$ '
=$$( )
null$$* .
;$$. /
DependencyObject%% 
target%% #
=%%$ %
null%%& *
;%%* +
string&& 

targetName&& 
=&& 
null&&  $
;&&$ %
switch'' 
('' 
Kind'' 
)'' 
{(( 
case**  
TransitionEffectKind** )
.**) *
None*** .
:**. /
break++ 
;++ 
case,,  
TransitionEffectKind,, )
.,,) *
ExpandIn,,* 2
:,,2 3
return-- 
CreateExpandIn-- )
(--) *
effectSubject--* 7
)--7 8
;--8 9
case..  
TransitionEffectKind.. )
...) *
SlideInFromLeft..* 9
:..9 :
timeline// 
=// 
CreateSlide// *
(//* +
-//+ ,
$num//, /
,/// 0
$num//1 2
,//2 3
effectSubject//4 A
.//A B
Offset//B H
)//H I
;//I J
property00 
=00 
TranslateTransform00 1
.001 2
	XProperty002 ;
;00; <

targetName11 
=11  
effectSubject11! .
.11. /"
TranslateTransformName11/ E
;11E F
break22 
;22 
case33  
TransitionEffectKind33 )
.33) *
SlideInFromTop33* 8
:338 9
timeline44 
=44 
CreateSlide44 *
(44* +
-44+ ,
$num44, /
,44/ 0
$num441 2
,442 3
effectSubject444 A
.44A B
Offset44B H
)44H I
;44I J
property55 
=55 
TranslateTransform55 1
.551 2
	YProperty552 ;
;55; <

targetName66 
=66  
effectSubject66! .
.66. /"
TranslateTransformName66/ E
;66E F
break77 
;77 
case88  
TransitionEffectKind88 )
.88) *
SlideInFromRight88* :
:88: ;
timeline99 
=99 
CreateSlide99 *
(99* +
$num99+ .
,99. /
$num990 1
,991 2
effectSubject993 @
.99@ A
Offset99A G
)99G H
;99H I
property:: 
=:: 
TranslateTransform:: 1
.::1 2
	XProperty::2 ;
;::; <

targetName;; 
=;;  
effectSubject;;! .
.;;. /"
TranslateTransformName;;/ E
;;;E F
break<< 
;<< 
case==  
TransitionEffectKind== )
.==) *
SlideInFromBottom==* ;
:==; <
timeline>> 
=>> 
CreateSlide>> *
(>>* +
$num>>+ .
,>>. /
$num>>0 1
,>>1 2
effectSubject>>3 @
.>>@ A
Offset>>A G
)>>G H
;>>H I
property?? 
=?? 
TranslateTransform?? 1
.??1 2
	YProperty??2 ;
;??; <

targetName@@ 
=@@  
effectSubject@@! .
.@@. /"
TranslateTransformName@@/ E
;@@E F
breakAA 
;AA 
caseBB  
TransitionEffectKindBB )
.BB) *
FadeInBB* 0
:BB0 1
timelineCC 
=CC 
CreateFadeInCC +
(CC+ ,
effectSubjectCC, 9
.CC9 :
OffsetCC: @
)CC@ A
;CCA B
propertyDD 
=DD 
OpacityPropertyDD .
;DD. /
targetEE 
=EE 
effectSubjectEE *
;EE* +
breakFF 
;FF 
defaultGG 
:GG 
throwHH 
newHH '
ArgumentOutOfRangeExceptionHH 9
(HH9 :
)HH: ;
;HH; <
}II 
ifKK 
(KK 
timelineKK 
==KK 
nullKK  
||KK! #
(KK$ %
targetKK% +
==KK, .
nullKK/ 3
&&KK4 6

targetNameKK7 A
==KKB D
nullKKE I
)KKI J
)KKJ K
returnKKL R
nullKKS W
;KKW X
timelineLL 
.LL 
DurationLL 
=LL 
DurationLL  (
+LL) *
effectSubjectLL+ 8
.LL8 9
OffsetLL9 ?
;LL? @
ifMM 
(MM 
targetMM 
!=MM 
nullMM 
)MM 

StoryboardNN 
.NN 
	SetTargetNN $
(NN$ %
timelineNN% -
,NN- .
targetNN/ 5
)NN5 6
;NN6 7
ifOO 
(OO 

targetNameOO 
!=OO 
nullOO "
)OO" #

StoryboardPP 
.PP 
SetTargetNamePP (
(PP( )
timelinePP) 1
,PP1 2

targetNamePP3 =
)PP= >
;PP> ?

StoryboardRR 
.RR 
SetTargetPropertyRR (
(RR( )
timelineRR) 1
,RR1 2
newRR3 6
PropertyPathRR7 C
(RRC D
propertyRRD L
)RRL M
)RRM N
;RRN O
returnTT 
timelineTT 
;TT 
}UU 	
privateVV 
TimelineVV 
CreateFadeInVV %
(VV% &
TimeSpanVV& .
initialOffsetVV/ <
)VV< =
{WW 	
returnXX 
CreateSlideXX 
(XX 
$numXX  
,XX  !
$numXX" #
,XX# $
initialOffsetXX% 2
)XX2 3
;XX3 4
}YY 	
private[[ 
Timeline[[ 
CreateSlide[[ $
([[$ %
double[[% +
from[[, 0
,[[0 1
double[[2 8
to[[9 ;
,[[; <
TimeSpan[[= E
initialOffset[[F S
)[[S T
{\\ 	
var]] 
	zeroFrame]] 
=]] 
new]] "
DiscreteDoubleKeyFrame]]  6
(]]6 7
from]]7 ;
)]]; <
;]]< =
var^^ 

startFrame^^ 
=^^ 
new^^  "
DiscreteDoubleKeyFrame^^! 7
(^^7 8
from^^8 <
,^^< =
initialOffset^^> K
+^^L M

OffsetTime^^N X
)^^X Y
;^^Y Z
var__ 
endFrame__ 
=__ 
new__  
EasingDoubleKeyFrame__ 3
(__3 4
to__4 6
,__6 7
initialOffset__8 E
+__F G

OffsetTime__H R
+__S T
Duration__U ]
)__] ^
{___ `
EasingFunction__a o
=__p q
new__r u
SineEase__v ~
(__~ 
)	__ Ä
}
__Å Ç
;
__Ç É
var`` 
slideAnimation`` 
=``  
new``! $)
DoubleAnimationUsingKeyFrames``% B
(``B C
)``C D
;``D E
slideAnimationaa 
.aa 
	KeyFramesaa $
.aa$ %
Addaa% (
(aa( )
	zeroFrameaa) 2
)aa2 3
;aa3 4
slideAnimationbb 
.bb 
	KeyFramesbb $
.bb$ %
Addbb% (
(bb( )

startFramebb) 3
)bb3 4
;bb4 5
slideAnimationcc 
.cc 
	KeyFramescc $
.cc$ %
Addcc% (
(cc( )
endFramecc) 1
)cc1 2
;cc2 3
returnee 
slideAnimationee !
;ee! "
}ff 	
privatehh 
Timelinehh 
CreateExpandInhh '
(hh' ($
ITransitionEffectSubjecthh( @
effectSubjecthhA N
)hhN O
{ii 	
varjj 
scaleXAnimationjj 
=jj  !
newjj" %)
DoubleAnimationUsingKeyFramesjj& C
(jjC D
)jjD E
;jjE F
varkk 
	zeroFramekk 
=kk 
newkk "
DiscreteDoubleKeyFramekk  6
(kk6 7
$numkk7 :
)kk: ;
;kk; <
varll 

startFramell 
=ll 
newll  "
DiscreteDoubleKeyFramell! 7
(ll7 8
$numll8 :
,ll: ;
effectSubjectll< I
.llI J
OffsetllJ P
+llQ R

OffsetTimellS ]
)ll] ^
;ll^ _
varmm 
endFramemm 
=mm 
newmm  
EasingDoubleKeyFramemm 3
(mm3 4
$nummm4 5
,mm5 6
effectSubjectmm7 D
.mmD E
OffsetmmE K
+mmL M

OffsetTimemmN X
+mmY Z
Durationmm[ c
)mmc d
{mme f
EasingFunctionmmg u
=mmv w
newmmx {
SineEase	mm| Ñ
(
mmÑ Ö
)
mmÖ Ü
}
mmá à
;
mmà â
scaleXAnimationnn 
.nn 
	KeyFramesnn %
.nn% &
Addnn& )
(nn) *
	zeroFramenn* 3
)nn3 4
;nn4 5
scaleXAnimationoo 
.oo 
	KeyFramesoo %
.oo% &
Addoo& )
(oo) *

startFrameoo* 4
)oo4 5
;oo5 6
scaleXAnimationpp 
.pp 
	KeyFramespp %
.pp% &
Addpp& )
(pp) *
endFramepp* 2
)pp2 3
;pp3 4

Storyboardrr 
.rr 
SetTargetNamerr $
(rr$ %
scaleXAnimationrr% 4
,rr4 5
effectSubjectrr6 C
.rrC D
ScaleTransformNamerrD V
)rrV W
;rrW X

Storyboardss 
.ss 
SetTargetPropertyss (
(ss( )
scaleXAnimationss) 8
,ss8 9
newss: =
PropertyPathss> J
(ssJ K
ScaleTransformssK Y
.ssY Z
ScaleXPropertyssZ h
)ssh i
)ssi j
;ssj k
varuu 
scaleYAnimationuu 
=uu  !
scaleXAnimationuu" 1
.uu1 2
Cloneuu2 7
(uu7 8
)uu8 9
;uu9 :

Storyboardww 
.ww 
SetTargetNameww $
(ww$ %
scaleYAnimationww% 4
,ww4 5
effectSubjectww6 C
.wwC D
ScaleTransformNamewwD V
)wwV W
;wwW X

Storyboardxx 
.xx 
SetTargetPropertyxx (
(xx( )
scaleYAnimationxx) 8
,xx8 9
newxx: =
PropertyPathxx> J
(xxJ K
ScaleTransformxxK Y
.xxY Z
ScaleYPropertyxxZ h
)xxh i
)xxi j
;xxj k
varzz 
parallelTimelinezz  
=zz! "
newzz# &
ParallelTimelinezz' 7
(zz7 8
)zz8 9
;zz9 :
parallelTimeline{{ 
.{{ 
Children{{ %
.{{% &
Add{{& )
({{) *
scaleXAnimation{{* 9
){{9 :
;{{: ;
parallelTimeline|| 
.|| 
Children|| %
.||% &
Add||& )
(||) *
scaleYAnimation||* 9
)||9 :
;||: ;
return~~ 
parallelTimeline~~ #
;~~# $
} 	
}
ÄÄ 
}ÅÅ Õ
gD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitionEffectBase.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

abstract 
class  
TransitionEffectBase .
:/ 0
FrameworkElement1 A
,A B
ITransitionEffectC T
{ 
public		 
abstract		 
Timeline		  
Build		! &
<		& '
TSubject		' /
>		/ 0
(		0 1
TSubject		1 9
effectSubject		: G
)		G H
where		I N
TSubject		O W
:		X Y
FrameworkElement		Z j
,		j k%
ITransitionEffectSubject			l Ñ
;
		Ñ Ö
}

 
} †
lD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitionEffectExtension.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
[ %
MarkupExtensionReturnType 
( 
typeof %
(% & 
TransitionEffectBase& :
): ;
); <
]< =
public 

class %
TransitionEffectExtension *
:+ ,
MarkupExtension- <
{ 
public		 %
TransitionEffectExtension		 (
(		( )
)		) *
{

 	
Kind 
=  
TransitionEffectKind '
.' (
None( ,
;, -
} 	
public %
TransitionEffectExtension (
(( ) 
TransitionEffectKind) =
kind> B
)B C
{ 	
Kind 
= 
kind 
; 
} 	
public %
TransitionEffectExtension (
(( ) 
TransitionEffectKind) =
kind> B
,B C
TimeSpanD L
durationM U
)U V
{ 	
Kind 
= 
kind 
; 
Duration 
= 
duration 
;  
} 	
[ 	
ConstructorArgument	 
( 
$str #
)# $
]$ %
public  
TransitionEffectKind #
Kind$ (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
[ 	
ConstructorArgument	 
( 
$str '
)' (
]( )
public 
TimeSpan 
? 
Duration !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
override 
object 
ProvideValue +
(+ ,
IServiceProvider, <
serviceProvider= L
)L M
{   	
return!! 
Duration!! 
.!! 
HasValue!! $
?!!% &
new!!' *
TransitionEffect!!+ ;
(!!; <
Kind!!< @
,!!@ A
Duration!!B J
.!!J K
Value!!K P
)!!P Q
:!!R S
new!!T W
TransitionEffect!!X h
(!!h i
Kind!!i m
)!!m n
;!!n o
}"" 	
}## 
}$$ Ù
gD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitionEffectKind.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

enum  
TransitionEffectKind $
{ 
None 
, 
ExpandIn 
, 
FadeIn 
, 
SlideInFromLeft 
, 
SlideInFromTop		 
,		 
SlideInFromRight

 
,

 
SlideInFromBottom 
} 
} ú
pD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitionEffectTypeConverter.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

class )
TransitionEffectTypeConverter .
:/ 0
TypeConverter1 >
{		 
public

 
override

 
bool

 
CanConvertFrom

 +
(

+ ,"
ITypeDescriptorContext

, B
context

C J
,

J K
Type

L P

sourceType

Q [
)

[ \
{ 	
return 

sourceType 
==  
typeof! '
(' (
string( .
). /
||0 2
typeof3 9
(9 : 
TransitionEffectKind: N
)N O
.O P
IsAssignableFromP `
(` a

sourceTypea k
)k l
;l m
} 	
public 
override 
object 
ConvertFrom *
(* +"
ITypeDescriptorContext+ A
contextB I
,I J
CultureInfoK V
cultureW ^
,^ _
object` f
valueg l
)l m
{ 	 
TransitionEffectBase  
transitionEffect! 1
;1 2
if 
( 
value 
is 
string 
stringValue  +
&&, .
Enum 
. 
TryParse 
( 
stringValue )
,) *
out+ . 
TransitionEffectKind/ C

effectKindD N
)N O
)O P
{ 
transitionEffect  
=! "
new# &
TransitionEffect' 7
(7 8

effectKind8 B
)B C
;C D
} 
else 
{ 
transitionEffect  
=! "
value# (
as) + 
TransitionEffectBase, @
;@ A
} 
if 
( 
transitionEffect  
==! #
null$ (
)( )
throw 
new 
XamlParseException ,
(, -
$"- /$
Could not parse to type / G
{G H
typeofH N
(N O 
TransitionEffectKindO c
)c d
.d e
FullNamee m
}m n
 or n r
{r s
typeofs y
(y z!
TransitionEffectBase	z é
)
é è
.
è ê
FullName
ê ò
}
ò ô
.
ô ö
"
ö õ
)
õ ú
;
ú ù
return   
transitionEffect   #
;  # $
}!! 	
}"" 
}## ”Ω
_D:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\Transitioner.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{		 
public 

class 
Transitioner 
: 
Selector  (
,( )
IZIndexController* ;
{ 
private 
Point 
? !
_nextTransitionOrigin ,
;, -
static 
Transitioner 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
Transitioner< H
)H I
,I J
newK N%
FrameworkPropertyMetadataO h
(h i
typeofi o
(o p
Transitionerp |
)| }
)} ~
)~ 
;	 Ä
} 	
public 
static 
RoutedCommand #
MoveNextCommand$ 3
=4 5
new6 9
RoutedCommand: G
(G H
)H I
;I J
public 
static 
RoutedCommand #
MovePreviousCommand$ 7
=8 9
new: =
RoutedCommand> K
(K L
)L M
;M N
public## 
static## 
RoutedCommand## #
MoveFirstCommand##$ 4
=##5 6
new##7 :
RoutedCommand##; H
(##H I
)##I J
;##J K
public(( 
static(( 
RoutedCommand(( #
MoveLastCommand(($ 3
=((4 5
new((6 9
RoutedCommand((: G
(((G H
)((H I
;((I J
public** 
static** 
readonly** 
DependencyProperty** 1.
"AutoApplyTransitionOriginsProperty**2 T
=**U V
DependencyProperty**W i
.**i j
Register**j r
(**r s
$str++ (
,++( )
typeof++* 0
(++0 1
bool++1 5
)++5 6
,++6 7
typeof++8 >
(++> ?
Transitioner++? K
)++K L
,++L M
new++N Q
PropertyMetadata++R b
(++b c
default++c j
(++j k
bool++k o
)++o p
)++p q
)++q r
;++r s
public00 
bool00 &
AutoApplyTransitionOrigins00 .
{11 	
get22 
=>22 
(22 
bool22 
)22 
GetValue22 !
(22! ".
"AutoApplyTransitionOriginsProperty22" D
)22D E
;22E F
set33 
=>33 
SetValue33 
(33 .
"AutoApplyTransitionOriginsProperty33 >
,33> ?
value33@ E
)33E F
;33F G
}44 	
public66 
static66 
readonly66 
DependencyProperty66 1+
DefaultTransitionOriginProperty662 Q
=66R S
DependencyProperty66T f
.66f g
Register66g o
(66o p
$str77 %
,77% &
typeof77' -
(77- .
Point77. 3
)773 4
,774 5
typeof776 <
(77< =
Transitioner77= I
)77I J
,77J K
new77L O
PropertyMetadata77P `
(77` a
new77a d
Point77e j
(77j k
$num77k n
,77n o
$num77p s
)77s t
)77t u
)77u v
;77v w
public99 
Point99 #
DefaultTransitionOrigin99 ,
{:: 	
get;; 
=>;; 
(;; 
Point;; 
);; 
GetValue;; "
(;;" #+
DefaultTransitionOriginProperty;;# B
);;B C
;;;C D
set<< 
=><< 
SetValue<< 
(<< +
DefaultTransitionOriginProperty<< ;
,<<; <
value<<= B
)<<B C
;<<C D
}== 	
public?? 
Transitioner?? 
(?? 
)?? 
{@@ 	
CommandBindingsAA 
.AA 
AddAA 
(AA  
newAA  #
CommandBindingAA$ 2
(AA2 3
MoveNextCommandAA3 B
,AAB C
MoveNextHandlerAAD S
)AAS T
)AAT U
;AAU V
CommandBindingsBB 
.BB 
AddBB 
(BB  
newBB  #
CommandBindingBB$ 2
(BB2 3
MovePreviousCommandBB3 F
,BBF G
MovePreviousHandlerBBH [
)BB[ \
)BB\ ]
;BB] ^
CommandBindingsCC 
.CC 
AddCC 
(CC  
newCC  #
CommandBindingCC$ 2
(CC2 3
MoveFirstCommandCC3 C
,CCC D
MoveFirstHandlerCCE U
)CCU V
)CCV W
;CCW X
CommandBindingsDD 
.DD 
AddDD 
(DD  
newDD  #
CommandBindingDD$ 2
(DD2 3
MoveLastCommandDD3 B
,DDB C
MoveLastHandlerDDD S
)DDS T
)DDT U
;DDU V

AddHandlerEE 
(EE 
TransitionerSlideEE (
.EE( ) 
InTransitionFinishedEE) =
,EE= >
newEE? B
RoutedEventHandlerEEC U
(EEU V'
IsTransitionFinishedHandlerEEV q
)EEq r
)EEr s
;EEs t
LoadedFF 
+=FF 
(FF 
senderFF 
,FF 
argsFF #
)FF# $
=>FF% '
{GG 
ifHH 
(HH 
SelectedIndexHH !
!=HH" $
-HH% &
$numHH& '
)HH' (
ActivateFrameII !
(II! "
SelectedIndexII" /
,II/ 0
-II1 2
$numII2 3
)II3 4
;II4 5
}JJ 
;JJ 
}KK 	
	protectedMM 
overrideMM 
boolMM )
IsItemItsOwnContainerOverrideMM  =
(MM= >
objectMM> D
itemMME I
)MMI J
{NN 	
returnOO 
itemOO 
isOO 
TransitionerSlideOO ,
;OO, -
}PP 	
	protectedRR 
overrideRR 
DependencyObjectRR +'
GetContainerForItemOverrideRR, G
(RRG H
)RRH I
{SS 	
returnTT 
newTT 
TransitionerSlideTT (
(TT( )
)TT) *
;TT* +
}UU 	
	protectedWW 
overrideWW 
voidWW (
OnPreviewMouseLeftButtonDownWW  <
(WW< = 
MouseButtonEventArgsWW= Q
eWWR S
)WWS T
{XX 	
ifYY 
(YY &
AutoApplyTransitionOriginsYY *
)YY* +!
_nextTransitionOriginZZ %
=ZZ& '$
GetNavigationSourcePointZZ( @
(ZZ@ A
eZZA B
)ZZB C
;ZZC D
base[[ 
.[[ (
OnPreviewMouseLeftButtonDown[[ -
([[- .
e[[. /
)[[/ 0
;[[0 1
}\\ 	
	protected^^ 
override^^ 
void^^ 
OnSelectionChanged^^  2
(^^2 3%
SelectionChangedEventArgs^^3 L
e^^M N
)^^N O
{__ 	
var`` 
unselectedIndex`` 
=``  !
-``" #
$num``# $
;``$ %
ifaa 
(aa 
eaa 
.aa 
RemovedItemsaa 
.aa 
Countaa $
==aa% '
$numaa( )
)aa) *
{bb 
unselectedIndexcc 
=cc  !
Itemscc" '
.cc' (
IndexOfcc( /
(cc/ 0
ecc0 1
.cc1 2
RemovedItemscc2 >
[cc> ?
$numcc? @
]cc@ A
)ccA B
;ccB C
}dd 
varee 
selectedIndexee 
=ee 
$numee  !
;ee! "
ifff 
(ff 
eff 
.ff 

AddedItemsff 
.ff 
Countff "
==ff# %
$numff& '
)ff' (
{gg 
selectedIndexhh 
=hh 
Itemshh  %
.hh% &
IndexOfhh& -
(hh- .
ehh. /
.hh/ 0

AddedItemshh0 :
[hh: ;
$numhh; <
]hh< =
)hh= >
;hh> ?
}ii 
ActivateFramekk 
(kk 
selectedIndexkk '
,kk' (
unselectedIndexkk) 8
)kk8 9
;kk9 :
basemm 
.mm 
OnSelectionChangedmm #
(mm# $
emm$ %
)mm% &
;mm& '
}nn 	
privatepp 
voidpp '
IsTransitionFinishedHandlerpp 0
(pp0 1
objectpp1 7
senderpp8 >
,pp> ?
RoutedEventArgspp@ O
routedEventArgsppP _
)pp_ `
{qq 	
foreachrr 
(rr 
varrr 
sliderr 
inrr !
Itemsrr" '
.rr' (
OfTyperr( .
<rr. /
objectrr/ 5
>rr5 6
(rr6 7
)rr7 8
.rr8 9
Selectrr9 ?
(rr? @
GetSliderr@ H
)rrH I
.rrI J
WhererrJ O
(rrO P
srrP Q
=>rrR T
srrU V
.rrV W
StaterrW \
==rr] _"
TransitionerSlideStaterr` v
.rrv w
Previousrrw 
)	rr Ä
)
rrÄ Å
{ss 
slidett 
.tt 
SetCurrentValuett %
(tt% &
TransitionerSlidett& 7
.tt7 8
StatePropertytt8 E
,ttE F"
TransitionerSlideStatettG ]
.tt] ^
Nonett^ b
)ttb c
;ttc d
}uu 
}vv 	
privatexx 
voidxx 
MoveNextHandlerxx $
(xx$ %
objectxx% +
senderxx, 2
,xx2 3#
ExecutedRoutedEventArgsxx4 K#
executedRoutedEventArgsxxL c
)xxc d
{yy 	
ifzz 
(zz &
AutoApplyTransitionOriginszz *
)zz* +!
_nextTransitionOrigin{{ %
={{& '$
GetNavigationSourcePoint{{( @
({{@ A#
executedRoutedEventArgs{{A X
){{X Y
;{{Y Z
SetCurrentValue|| 
(|| !
SelectedIndexProperty|| 1
,||1 2
Math||3 7
.||7 8
Min||8 ;
(||; <
Items||< A
.||A B
Count||B G
-||H I
$num||J K
,||K L
SelectedIndex||M Z
+||[ \
$num||] ^
)||^ _
)||_ `
;||` a
}}} 	
private 
void 
MovePreviousHandler (
(( )
object) /
sender0 6
,6 7#
ExecutedRoutedEventArgs8 O#
executedRoutedEventArgsP g
)g h
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ (
AutoApplyTransitionOrigins
ÅÅ *
)
ÅÅ* +#
_nextTransitionOrigin
ÇÇ %
=
ÇÇ& '&
GetNavigationSourcePoint
ÇÇ( @
(
ÇÇ@ A%
executedRoutedEventArgs
ÇÇA X
)
ÇÇX Y
;
ÇÇY Z
SetCurrentValue
ÉÉ 
(
ÉÉ #
SelectedIndexProperty
ÉÉ 1
,
ÉÉ1 2
Math
ÉÉ3 7
.
ÉÉ7 8
Max
ÉÉ8 ;
(
ÉÉ; <
$num
ÉÉ< =
,
ÉÉ= >
SelectedIndex
ÉÉ? L
-
ÉÉM N
$num
ÉÉO P
)
ÉÉP Q
)
ÉÉQ R
;
ÉÉR S
}
ÑÑ 	
private
ÜÜ 
void
ÜÜ 
MoveFirstHandler
ÜÜ %
(
ÜÜ% &
object
ÜÜ& ,
sender
ÜÜ- 3
,
ÜÜ3 4%
ExecutedRoutedEventArgs
ÜÜ5 L%
executedRoutedEventArgs
ÜÜM d
)
ÜÜd e
{
áá 	
if
àà 
(
àà (
AutoApplyTransitionOrigins
àà *
)
àà* +#
_nextTransitionOrigin
ââ %
=
ââ& '&
GetNavigationSourcePoint
ââ( @
(
ââ@ A%
executedRoutedEventArgs
ââA X
)
ââX Y
;
ââY Z
SetCurrentValue
ää 
(
ää #
SelectedIndexProperty
ää 1
,
ää1 2
$num
ää3 4
)
ää4 5
;
ää5 6
}
ãã 	
private
çç 
void
çç 
MoveLastHandler
çç $
(
çç$ %
object
çç% +
sender
çç, 2
,
çç2 3%
ExecutedRoutedEventArgs
çç4 K%
executedRoutedEventArgs
ççL c
)
ççc d
{
éé 	
if
èè 
(
èè (
AutoApplyTransitionOrigins
èè *
)
èè* +#
_nextTransitionOrigin
êê %
=
êê& '&
GetNavigationSourcePoint
êê( @
(
êê@ A%
executedRoutedEventArgs
êêA X
)
êêX Y
;
êêY Z
SetCurrentValue
ëë 
(
ëë #
SelectedIndexProperty
ëë 1
,
ëë1 2
Items
ëë3 8
.
ëë8 9
Count
ëë9 >
-
ëë? @
$num
ëëA B
)
ëëB C
;
ëëC D
}
íí 	
private
îî 
Point
îî 
?
îî &
GetNavigationSourcePoint
îî /
(
îî/ 0
RoutedEventArgs
îî0 ?%
executedRoutedEventArgs
îî@ W
)
îîW X
{
ïï 	
var
ññ 
sourceElement
ññ 
=
ññ %
executedRoutedEventArgs
ññ  7
.
ññ7 8
OriginalSource
ññ8 F
as
ññG I
FrameworkElement
ññJ Z
;
ññZ [
if
óó 
(
óó 
sourceElement
óó 
==
óó  
null
óó! %
||
óó& (
!
óó) *
IsAncestorOf
óó* 6
(
óó6 7
sourceElement
óó7 D
)
óóD E
||
óóF H
!
óóI J
IsSafePositive
óóJ X
(
óóX Y
ActualWidth
óóY d
)
óód e
||
óóf h
!
òò 
IsSafePositive
òò 
(
òò  
ActualHeight
òò  ,
)
òò, -
||
òò. 0
!
òò1 2
IsSafePositive
òò2 @
(
òò@ A
sourceElement
òòA N
.
òòN O
ActualWidth
òòO Z
)
òòZ [
||
òò\ ^
!
ôô 
IsSafePositive
ôô 
(
ôô  
sourceElement
ôô  -
.
ôô- .
ActualHeight
ôô. :
)
ôô: ;
)
ôô; <
return
ôô= C
null
ôôD H
;
ôôH I
var
õõ 
transitionOrigin
õõ  
=
õõ! "
sourceElement
õõ# 0
.
õõ0 1
TranslatePoint
õõ1 ?
(
õõ? @
new
õõ@ C
Point
õõD I
(
õõI J
sourceElement
õõJ W
.
õõW X
ActualWidth
õõX c
/
õõd e
$num
õõf g
,
õõg h
sourceElement
õõi v
.
õõv w
ActualHeightõõw É
)õõÉ Ñ
,õõÑ Ö
thisõõÜ ä
)õõä ã
;õõã å
transitionOrigin
úú 
=
úú 
new
úú "
Point
úú# (
(
úú( )
transitionOrigin
úú) 9
.
úú9 :
X
úú: ;
/
úú< =
ActualWidth
úú> I
,
úúI J
transitionOrigin
úúK [
.
úú[ \
Y
úú\ ]
/
úú^ _
ActualHeight
úú` l
)
úúl m
;
úúm n
return
ùù 
transitionOrigin
ùù #
;
ùù# $
}
ûû 	
private
†† 
static
†† 
bool
†† 
IsSafePositive
†† *
(
††* +
double
††+ 1
dubz
††2 6
)
††6 7
{
°° 	
return
¢¢ 
!
¢¢ 
double
¢¢ 
.
¢¢ 
IsNaN
¢¢  
(
¢¢  !
dubz
¢¢! %
)
¢¢% &
&&
¢¢' )
!
¢¢* +
double
¢¢+ 1
.
¢¢1 2

IsInfinity
¢¢2 <
(
¢¢< =
dubz
¢¢= A
)
¢¢A B
&&
¢¢C E
dubz
¢¢F J
>
¢¢K L
$num
¢¢M P
;
¢¢P Q
}
££ 	
private
•• 
TransitionerSlide
•• !
GetSlide
••" *
(
••* +
object
••+ 1
item
••2 6
)
••6 7
{
¶¶ 	
if
ßß 
(
ßß #
IsItemItsOwnContainer
ßß %
(
ßß% &
item
ßß& *
)
ßß* +
)
ßß+ ,
return
®® 
(
®® 
TransitionerSlide
®® )
)
®®) *
item
®®* .
;
®®. /
return
™™ 
(
™™ 
TransitionerSlide
™™ %
)
™™% &$
ItemContainerGenerator
™™& <
.
™™< =
ContainerFromItem
™™= N
(
™™N O
item
™™O S
)
™™S T
;
™™T U
}
´´ 	
private
≠≠ 
void
≠≠ 
ActivateFrame
≠≠ "
(
≠≠" #
int
≠≠# &
selectedIndex
≠≠' 4
,
≠≠4 5
int
≠≠6 9
unselectedIndex
≠≠: I
)
≠≠I J
{
ÆÆ 	
if
ØØ 
(
ØØ 
!
ØØ 
IsLoaded
ØØ 
)
ØØ 
return
ØØ !
;
ØØ! "
TransitionerSlide
±± 
oldSlide
±± &
=
±±' (
null
±±) -
,
±±- .
newSlide
±±/ 7
=
±±8 9
null
±±: >
;
±±> ?
for
≤≤ 
(
≤≤ 
var
≤≤ 
index
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
index
≤≤  %
<
≤≤& '
Items
≤≤( -
.
≤≤- .
Count
≤≤. 3
;
≤≤3 4
index
≤≤5 :
++
≤≤: <
)
≤≤< =
{
≥≥ 
var
¥¥ 
slide
¥¥ 
=
¥¥ 
GetSlide
¥¥ $
(
¥¥$ %
Items
¥¥% *
[
¥¥* +
index
¥¥+ 0
]
¥¥0 1
)
¥¥1 2
;
¥¥2 3
if
µµ 
(
µµ 
index
µµ 
==
µµ 
selectedIndex
µµ *
)
µµ* +
{
∂∂ 
newSlide
∑∑ 
=
∑∑ 
slide
∑∑ $
;
∑∑$ %
slide
∏∏ 
.
∏∏ 
SetCurrentValue
∏∏ )
(
∏∏) *
TransitionerSlide
∏∏* ;
.
∏∏; <
StateProperty
∏∏< I
,
∏∏I J$
TransitionerSlideState
∏∏K a
.
∏∏a b
Current
∏∏b i
)
∏∏i j
;
∏∏j k
}
ππ 
else
∫∫ 
if
∫∫ 
(
∫∫ 
index
∫∫ 
==
∫∫ !
unselectedIndex
∫∫" 1
)
∫∫1 2
{
ªª 
oldSlide
ºº 
=
ºº 
slide
ºº $
;
ºº$ %
slide
ΩΩ 
.
ΩΩ 
SetCurrentValue
ΩΩ )
(
ΩΩ) *
TransitionerSlide
ΩΩ* ;
.
ΩΩ; <
StateProperty
ΩΩ< I
,
ΩΩI J$
TransitionerSlideState
ΩΩK a
.
ΩΩa b
Previous
ΩΩb j
)
ΩΩj k
;
ΩΩk l
}
ææ 
else
øø 
{
¿¿ 
slide
¡¡ 
.
¡¡ 
SetCurrentValue
¡¡ )
(
¡¡) *
TransitionerSlide
¡¡* ;
.
¡¡; <
StateProperty
¡¡< I
,
¡¡I J$
TransitionerSlideState
¡¡K a
.
¡¡a b
None
¡¡b f
)
¡¡f g
;
¡¡g h
}
¬¬ 
Panel
√√ 
.
√√ 
	SetZIndex
√√ 
(
√√  
slide
√√  %
,
√√% &
$num
√√' (
)
√√( )
;
√√) *
}
ƒƒ 
if
∆∆ 
(
∆∆ 
newSlide
∆∆ 
!=
∆∆ 
null
∆∆  
)
∆∆  !
{
«« 
newSlide
»» 
.
»» 
Opacity
»»  
=
»»! "
$num
»»# $
;
»»$ %
}
…… 
if
ÀÀ 
(
ÀÀ 
oldSlide
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
&&
ÀÀ! #
newSlide
ÀÀ$ ,
!=
ÀÀ- /
null
ÀÀ0 4
)
ÀÀ4 5
{
ÃÃ 
var
ÕÕ 
wipe
ÕÕ 
=
ÕÕ 
selectedIndex
ÕÕ (
>
ÕÕ) *
unselectedIndex
ÕÕ+ :
?
ÕÕ; <
oldSlide
ÕÕ= E
.
ÕÕE F
ForwardWipe
ÕÕF Q
:
ÕÕR S
oldSlide
ÕÕT \
.
ÕÕ\ ]
BackwardWipe
ÕÕ] i
;
ÕÕi j
if
ŒŒ 
(
ŒŒ 
wipe
ŒŒ 
!=
ŒŒ 
null
ŒŒ  
)
ŒŒ  !
{
œœ 
wipe
–– 
.
–– 
Wipe
–– 
(
–– 
oldSlide
–– &
,
––& '
newSlide
––( 0
,
––0 1!
GetTransitionOrigin
––2 E
(
––E F
newSlide
––F N
)
––N O
,
––O P
this
––Q U
)
––U V
;
––V W
}
—— 
else
““ 
{
”” 
DoStack
‘‘ 
(
‘‘ 
newSlide
‘‘ $
,
‘‘$ %
oldSlide
‘‘& .
)
‘‘. /
;
‘‘/ 0
}
’’ 
oldSlide
◊◊ 
.
◊◊ 
Opacity
◊◊  
=
◊◊! "
$num
◊◊# $
;
◊◊$ %
}
ÿÿ 
else
ŸŸ 
if
ŸŸ 
(
ŸŸ 
oldSlide
ŸŸ 
!=
ŸŸ  
null
ŸŸ! %
||
ŸŸ& (
newSlide
ŸŸ) 1
!=
ŸŸ2 4
null
ŸŸ5 9
)
ŸŸ9 :
{
⁄⁄ 
DoStack
€€ 
(
€€ 
oldSlide
€€  
??
€€! #
newSlide
€€$ ,
)
€€, -
;
€€- .
if
‹‹ 
(
‹‹ 
oldSlide
‹‹ 
!=
‹‹ 
null
‹‹  $
)
‹‹$ %
{
›› 
oldSlide
ﬁﬁ 
.
ﬁﬁ 
Opacity
ﬁﬁ $
=
ﬁﬁ% &
$num
ﬁﬁ' (
;
ﬁﬁ( )
}
ﬂﬂ 
}
‡‡ #
_nextTransitionOrigin
‚‚ !
=
‚‚" #
null
‚‚$ (
;
‚‚( )
}
„„ 	
private
ÂÂ 
Point
ÂÂ !
GetTransitionOrigin
ÂÂ )
(
ÂÂ) *
TransitionerSlide
ÂÂ* ;
slide
ÂÂ< A
)
ÂÂA B
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ #
_nextTransitionOrigin
ÁÁ %
!=
ÁÁ& (
null
ÁÁ) -
)
ÁÁ- .
{
ËË 
return
ÈÈ #
_nextTransitionOrigin
ÈÈ ,
.
ÈÈ, -
Value
ÈÈ- 2
;
ÈÈ2 3
}
ÍÍ 
if
ÏÏ 
(
ÏÏ 
slide
ÏÏ 
.
ÏÏ 
ReadLocalValue
ÏÏ $
(
ÏÏ$ %
TransitionerSlide
ÏÏ% 6
.
ÏÏ6 7&
TransitionOriginProperty
ÏÏ7 O
)
ÏÏO P
!=
ÏÏQ S 
DependencyProperty
ÏÏT f
.
ÏÏf g

UnsetValue
ÏÏg q
)
ÏÏq r
{
ÌÌ 
return
ÓÓ 
slide
ÓÓ 
.
ÓÓ 
TransitionOrigin
ÓÓ -
;
ÓÓ- .
}
ÔÔ 
return
ÒÒ %
DefaultTransitionOrigin
ÒÒ *
;
ÒÒ* +
}
ÚÚ 	
void
ÙÙ 
IZIndexController
ÙÙ 
.
ÙÙ 
Stack
ÙÙ $
(
ÙÙ$ %
params
ÙÙ% +
TransitionerSlide
ÙÙ, =
[
ÙÙ= >
]
ÙÙ> ?
highestToLowest
ÙÙ@ O
)
ÙÙO P
{
ıı 	
DoStack
ˆˆ 
(
ˆˆ 
highestToLowest
ˆˆ #
)
ˆˆ# $
;
ˆˆ$ %
}
˜˜ 	
private
˘˘ 
static
˘˘ 
void
˘˘ 
DoStack
˘˘ #
(
˘˘# $
params
˘˘$ *
TransitionerSlide
˘˘+ <
[
˘˘< =
]
˘˘= >
highestToLowest
˘˘? N
)
˘˘N O
{
˙˙ 	
if
˚˚ 
(
˚˚ 
highestToLowest
˚˚ 
==
˚˚  "
null
˚˚# '
)
˚˚' (
return
˚˚) /
;
˚˚/ 0
var
˝˝ 
pos
˝˝ 
=
˝˝ 
highestToLowest
˝˝ %
.
˝˝% &
Length
˝˝& ,
;
˝˝, -
foreach
˛˛ 
(
˛˛ 
var
˛˛ 
slide
˛˛ 
in
˛˛ !
highestToLowest
˛˛" 1
.
˛˛1 2
Where
˛˛2 7
(
˛˛7 8
s
˛˛8 9
=>
˛˛: <
s
˛˛= >
!=
˛˛? A
null
˛˛B F
)
˛˛F G
)
˛˛G H
{
ˇˇ 
Panel
ÄÄ 
.
ÄÄ 
	SetZIndex
ÄÄ 
(
ÄÄ  
slide
ÄÄ  %
,
ÄÄ% &
pos
ÄÄ' *
--
ÄÄ* ,
)
ÄÄ, -
;
ÄÄ- .
}
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
}ÑÑ Ö8
dD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitionerSlide.cs
	namespace		 	 
MaterialDesignThemes		
 
.		 
Wpf		 "
.		" #
Transitions		# .
{

 
public 

class 
TransitionerSlide "
:# $$
TransitioningContentBase% =
{ 
static 
TransitionerSlide  
(  !
)! "
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
TransitionerSlide< M
)M N
,N O
newP S%
FrameworkPropertyMetadataT m
(m n
typeofn t
(t u
TransitionerSlide	u Ü
)
Ü á
)
á à
)
à â
;
â ä
} 	
public 
static 
readonly 
DependencyProperty 1$
TransitionOriginProperty2 J
=K L
DependencyPropertyM _
._ `
Register` h
(h i
$str 
, 
typeof  &
(& '
Point' ,
), -
,- .
typeof/ 5
(5 6
Transitioner6 B
)B C
,C D
newE H
PropertyMetadataI Y
(Y Z
newZ ]
Point^ c
(c d
$numd g
,g h
$numi l
)l m
)m n
)n o
;o p
public 
Point 
TransitionOrigin %
{ 	
get 
=> 
( 
Point 
) 
GetValue "
(" #$
TransitionOriginProperty# ;
); <
;< =
set 
=> 
SetValue 
( $
TransitionOriginProperty 4
,4 5
value6 ;
); <
;< =
} 	
public 
static 
RoutedEvent ! 
InTransitionFinished" 6
=7 8
EventManager 
. 
RegisterRoutedEvent ,
(, -
$str- C
,C D
RoutingStrategyE T
.T U
BubbleU [
,[ \
typeof] c
(c d
RoutedEventHandlerd v
)v w
,w x
typeof   
(   
TransitionerSlide   (
)  ( )
)  ) *
;  * +
	protected"" 
void"" "
OnInTransitionFinished"" -
(""- .
RoutedEventArgs"". =
e""> ?
)""? @
{## 	

RaiseEvent$$ 
($$ 
e$$ 
)$$ 
;$$ 
}%% 	
public'' 
static'' 
readonly'' 
DependencyProperty'' 1
StateProperty''2 ?
=''@ A
DependencyProperty''B T
.''T U
Register''U ]
(''] ^
$str''^ e
,''e f
typeof''g m
(''m n#
TransitionerSlideState	''n Ñ
)
''Ñ Ö
,
''Ö Ü
typeof
''á ç
(
''ç é
TransitionerSlide
''é ü
)
''ü †
,
''† °
new
''¢ •
PropertyMetadata
''¶ ∂
(
''∂ ∑
default
''∑ æ
(
''æ ø$
TransitionerSlideState
''ø ’
)
''’ ÷
,
''÷ ◊
new
''ÿ €%
PropertyChangedCallback
''‹ Û
(
''Û Ù*
StatePropertyChangedCallback
''Ù ê
)
''ê ë
)
''ë í
)
''í ì
;
''ì î
private)) 
static)) 
void)) (
StatePropertyChangedCallback)) 8
())8 9
DependencyObject))9 I
d))J K
,))K L.
"DependencyPropertyChangedEventArgs))M o
e))p q
)))q r
{** 	
(++ 
(++ 
TransitionerSlide++ 
)++  
d++  !
)++! "
.++" #
AnimateToState++# 1
(++1 2
)++2 3
;++3 4
},, 	
public.. "
TransitionerSlideState.. %
State..& +
{// 	
get00 
=>00 
(00 "
TransitionerSlideState00 *
)00* +
GetValue00+ 3
(003 4
StateProperty004 A
)00A B
;00B C
set11 
=>11 
SetValue11 
(11 
StateProperty11 )
,11) *
value11+ 0
)110 1
;111 2
}22 	
public44 
static44 
readonly44 
DependencyProperty44 1
ForwardWipeProperty442 E
=44F G
DependencyProperty44H Z
.44Z [
Register44[ c
(44c d
$str55 
,55 
typeof55 !
(55! "
ITransitionWipe55" 1
)551 2
,552 3
typeof554 :
(55: ;
TransitionerSlide55; L
)55L M
,55M N
new55O R
PropertyMetadata55S c
(55c d
new55d g

CircleWipe55h r
(55r s
)55s t
)55t u
)55u v
;55v w
public77 
ITransitionWipe77 
ForwardWipe77 *
{88 	
get99 
=>99 
(99 
ITransitionWipe99 #
)99# $
GetValue99$ ,
(99, -
ForwardWipeProperty99- @
)99@ A
;99A B
set:: 
=>:: 
SetValue:: 
(:: 
ForwardWipeProperty:: /
,::/ 0
value::1 6
)::6 7
;::7 8
};; 	
public== 
static== 
readonly== 
DependencyProperty== 1 
BackwardWipeProperty==2 F
===G H
DependencyProperty==I [
.==[ \
Register==\ d
(==d e
$str>> 
,>> 
typeof>> "
(>>" #
ITransitionWipe>># 2
)>>2 3
,>>3 4
typeof>>5 ;
(>>; <
TransitionerSlide>>< M
)>>M N
,>>N O
new>>P S
PropertyMetadata>>T d
(>>d e
new>>e h
SlideOutWipe>>i u
(>>u v
)>>v w
)>>w x
)>>x y
;>>y z
public@@ 
ITransitionWipe@@ 
BackwardWipe@@ +
{AA 	
getBB 
=>BB 
(BB 
ITransitionWipeBB #
)BB# $
GetValueBB$ ,
(BB, - 
BackwardWipePropertyBB- A
)BBA B
;BBB C
setCC 
=>CC 
SetValueCC 
(CC  
BackwardWipePropertyCC 0
,CC0 1
valueCC2 7
)CC7 8
;CC8 9
}DD 	
privateFF 
voidFF 
AnimateToStateFF #
(FF# $
)FF$ %
{GG 	
ifHH 
(HH 
StateHH 
!=HH "
TransitionerSlideStateHH /
.HH/ 0
CurrentHH0 7
)HH7 8
returnHH9 ?
;HH? @
RunOpeningEffectsJJ 
(JJ 
)JJ 
;JJ  
}KK 	
}LL 
}MM ÷
iD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitionerSlideState.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
public 

enum "
TransitionerSlideState &
{ 
None 
, 
Current 
, 
Previous 
, 
} 
}		 ∞
gD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitioningContent.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
." #
Transitions# .
{ 
[ 
Flags 

]
 
public 

enum '
TransitioningContentRunHint +
{ 
Loaded		 
=		 
$num		 
,		 
IsVisibleChanged

 
=

 
$num

 
,

 
All 
= 
Loaded 
| 
IsVisibleChanged '
} 
public 

class  
TransitioningContent %
:& '$
TransitioningContentBase( @
{ 
static  
TransitioningContent #
(# $
)$ %
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; < 
TransitioningContent< P
)P Q
,Q R
newS V%
FrameworkPropertyMetadataW p
(p q
typeofq w
(w x!
TransitioningContent	x å
)
å ç
)
ç é
)
é è
;
è ê
} 	
public  
TransitioningContent #
(# $
)$ %
{ 	
Loaded 
+= 
( 
sender 
, 
args #
)# $
=>% '
Run( +
(+ ,'
TransitioningContentRunHint, G
.G H
LoadedH N
)N O
;O P
IsVisibleChanged 
+= 
(  !
sender! '
,' (
args) -
)- .
=>/ 1
Run2 5
(5 6'
TransitioningContentRunHint6 Q
.Q R
IsVisibleChangedR b
)b c
;c d
} 	
public   
static   
readonly   
DependencyProperty   1
RunHintProperty  2 A
=  B C
DependencyProperty  D V
.  V W
Register  W _
(  _ `
nameof!! 
(!! 
RunHint!! 
)!! 
,!! 
typeof!! #
(!!# $'
TransitioningContentRunHint!!$ ?
)!!? @
,!!@ A
typeof!!B H
(!!H I 
TransitioningContent!!I ]
)!!] ^
,!!^ _
new!!` c
PropertyMetadata!!d t
(!!t u(
TransitioningContentRunHint	!!u ê
.
!!ê ë
All
!!ë î
)
!!î ï
)
!!ï ñ
;
!!ñ ó
public## '
TransitioningContentRunHint## *
RunHint##+ 2
{$$ 	
get%% 
=>%% 
(%% '
TransitioningContentRunHint%% /
)%%/ 0
GetValue%%0 8
(%%8 9
RunHintProperty%%9 H
)%%H I
;%%I J
set&& 
=>&& 
SetValue&& 
(&& 
RunHintProperty&& +
,&&+ ,
value&&- 2
)&&2 3
;&&3 4
}'' 	
private)) 
void)) 
Run)) 
()) '
TransitioningContentRunHint)) 4
requiredHint))5 A
)))A B
{** 	
if++ 
(++ 
(++ 
RunHint++ 
&++ 
requiredHint++ '
)++' (
==++) +
requiredHint++, 8
)++8 9
RunOpeningEffects,, !
(,,! "
),," #
;,,# $
}-- 	
}.. 
}// ˘g
kD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Transitions\TransitioningContentBase.cs
	namespace

 	 
MaterialDesignThemes


 
.

 
Wpf

 "
.

" #
Transitions

# .
{ 
public 

class $
TransitioningContentBase )
:* +
ContentControl, :
,: ;$
ITransitionEffectSubject< T
{ 
public 
const 
string #
MatrixTransformPartName 3
=4 5
$str6 L
;L M
public 
const 
string #
RotateTransformPartName 3
=4 5
$str6 L
;L M
public 
const 
string "
ScaleTransformPartName 2
=3 4
$str5 J
;J K
public 
const 
string !
SkewTransformPartName 1
=2 3
$str4 H
;H I
public 
const 
string &
TranslateTransformPartName 6
=7 8
$str9 R
;R S
private 
MatrixTransform 
_matrixTransform  0
;0 1
private 
RotateTransform 
_rotateTransform  0
;0 1
private 
ScaleTransform 
_scaleTransform .
;. /
private 
SkewTransform 
_skewTransform ,
;, -
private 
TranslateTransform "
_translateTransform# 6
;6 7
private 
bool #
_isOpeningEffectPending ,
;, -
static $
TransitioningContentBase '
(' (
)( )
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <$
TransitioningContentBase< T
)T U
,U V
newW Z%
FrameworkPropertyMetadata[ t
(t u
typeofu {
({ |%
TransitioningContentBase	| î
)
î ï
)
ï ñ
)
ñ ó
;
ó ò
} 	
public!! 
override!! 
void!! 
OnApplyTemplate!! ,
(!!, -
)!!- .
{"" 	
FrameworkElement## 
nameScopeRoot## *
=##+ ,
GetNameScopeRoot##- =
(##= >
)##> ?
;##? @
_matrixTransform%% 
=%% 
GetTemplateChild%% /
(%%/ 0#
MatrixTransformPartName%%0 G
)%%G H
as%%I K
MatrixTransform%%L [
;%%[ \
_rotateTransform&& 
=&& 
GetTemplateChild&& /
(&&/ 0#
RotateTransformPartName&&0 G
)&&G H
as&&I K
RotateTransform&&L [
;&&[ \
_scaleTransform'' 
='' 
GetTemplateChild'' .
(''. /"
ScaleTransformPartName''/ E
)''E F
as''G I
ScaleTransform''J X
;''X Y
_skewTransform(( 
=(( 
GetTemplateChild(( -
(((- .!
SkewTransformPartName((. C
)((C D
as((E G
SkewTransform((H U
;((U V
_translateTransform)) 
=))  !
GetTemplateChild))" 2
())2 3&
TranslateTransformPartName))3 M
)))M N
as))O Q
TranslateTransform))R d
;))d e
UnregisterNames++ 
(++ #
MatrixTransformPartName++ 3
,++3 4#
RotateTransformPartName++5 L
,++L M"
ScaleTransformPartName++N d
,++d e!
SkewTransformPartName++f {
,++{ |'
TranslateTransformPartName	++} ó
)
++ó ò
;
++ò ô
if,, 
(,, 
_matrixTransform,,  
!=,,! #
null,,$ (
),,( )
nameScopeRoot-- 
.-- 
RegisterName-- *
(--* +#
MatrixTransformPartName--+ B
,--B C
_matrixTransform--D T
)--T U
;--U V
if.. 
(.. 
_rotateTransform..  
!=..! #
null..$ (
)..( )
nameScopeRoot// 
.// 
RegisterName// *
(//* +#
RotateTransformPartName//+ B
,//B C
_rotateTransform//D T
)//T U
;//U V
if00 
(00 
_scaleTransform00 
!=00  "
null00# '
)00' (
nameScopeRoot11 
.11 
RegisterName11 *
(11* +"
ScaleTransformPartName11+ A
,11A B
_scaleTransform11C R
)11R S
;11S T
if22 
(22 
_skewTransform22 
!=22 !
null22" &
)22& '
nameScopeRoot33 
.33 
RegisterName33 *
(33* +!
SkewTransformPartName33+ @
,33@ A
_skewTransform33B P
)33P Q
;33Q R
if44 
(44 
_translateTransform44 #
!=44$ &
null44' +
)44+ ,
nameScopeRoot55 
.55 
RegisterName55 *
(55* +&
TranslateTransformPartName55+ E
,55E F
_translateTransform55G Z
)55Z [
;55[ \
base77 
.77 
OnApplyTemplate77  
(77  !
)77! "
;77" #
RunOpeningEffects99 
(99 
)99 
;99  
void;; 
UnregisterNames;;  
(;;  !
params;;! '
string;;( .
[;;. /
];;/ 0
names;;1 6
);;6 7
{<< 
foreach== 
(== 
var== 
name== !
in==" $
names==% *
.==* +
Where==+ 0
(==0 1
n==1 2
=>==3 5
FindName==6 >
(==> ?
n==? @
)==@ A
!===B D
null==E I
)==I J
)==J K
{>> 
UnregisterName?? "
(??" #
name??# '
)??' (
;??( )
}@@ 
}AA 
}BB 	
publicDD 
staticDD 
readonlyDD 
DependencyPropertyDD 1!
OpeningEffectPropertyDD2 G
=DDH I
DependencyPropertyDDJ \
.DD\ ]
RegisterDD] e
(DDe f
$strDDf u
,DDu v
typeofDDw }
(DD} ~!
TransitionEffectBase	DD~ í
)
DDí ì
,
DDì î
typeof
DDï õ
(
DDõ ú&
TransitioningContentBase
DDú ¥
)
DD¥ µ
,
DDµ ∂
new
DD∑ ∫
PropertyMetadata
DDª À
(
DDÀ Ã
default
DDÃ ”
(
DD” ‘"
TransitionEffectBase
DD‘ Ë
)
DDË È
)
DDÈ Í
)
DDÍ Î
;
DDÎ Ï
[II 	
TypeConverterII	 
(II 
typeofII 
(II )
TransitionEffectTypeConverterII ;
)II; <
)II< =
]II= >
publicJJ  
TransitionEffectBaseJJ #
OpeningEffectJJ$ 1
{KK 	
getLL 
=>LL 
(LL  
TransitionEffectBaseLL (
)LL( )
GetValueLL) 1
(LL1 2!
OpeningEffectPropertyLL2 G
)LLG H
;LLH I
setMM 
=>MM 
SetValueMM 
(MM !
OpeningEffectPropertyMM 1
,MM1 2
valueMM3 8
)MM8 9
;MM9 :
}NN 	
publicPP 
staticPP 
readonlyPP 
DependencyPropertyPP 1(
OpeningEffectsOffsetPropertyPP2 N
=PPO P
DependencyPropertyPPQ c
.PPc d
RegisterPPd l
(PPl m
$strQQ "
,QQ" #
typeofQQ$ *
(QQ* +
TimeSpanQQ+ 3
)QQ3 4
,QQ4 5
typeofQQ6 <
(QQ< =$
TransitioningContentBaseQQ= U
)QQU V
,QQV W
newQQX [
PropertyMetadataQQ\ l
(QQl m
defaultQQm t
(QQt u
TimeSpanQQu }
)QQ} ~
)QQ~ 
)	QQ Ä
;
QQÄ Å
publicVV 
TimeSpanVV  
OpeningEffectsOffsetVV ,
{WW 	
getXX 
=>XX 
(XX 
TimeSpanXX 
)XX 
GetValueXX %
(XX% &(
OpeningEffectsOffsetPropertyXX& B
)XXB C
;XXC D
setYY 
=>YY 
SetValueYY 
(YY (
OpeningEffectsOffsetPropertyYY 8
,YY8 9
valueYY: ?
)YY? @
;YY@ A
}ZZ 	
public__  
ObservableCollection__ #
<__# $ 
TransitionEffectBase__$ 8
>__8 9
OpeningEffects__: H
{__I J
get__K N
;__N O
}__P Q
=__R S
new__T W 
ObservableCollection__X l
<__l m!
TransitionEffectBase	__m Å
>
__Å Ç
(
__Ç É
)
__É Ñ
;
__Ñ Ö
stringaa $
ITransitionEffectSubjectaa '
.aa' (
MatrixTransformNameaa( ;
=>aa< >#
MatrixTransformPartNameaa? V
;aaV W
stringcc $
ITransitionEffectSubjectcc '
.cc' (
RotateTransformNamecc( ;
=>cc< >#
RotateTransformPartNamecc? V
;ccV W
stringee $
ITransitionEffectSubjectee '
.ee' (
ScaleTransformNameee( :
=>ee; ="
ScaleTransformPartNameee> T
;eeT U
stringgg $
ITransitionEffectSubjectgg '
.gg' (
SkewTransformNamegg( 9
=>gg: <!
SkewTransformPartNamegg= R
;ggR S
stringii $
ITransitionEffectSubjectii '
.ii' ("
TranslateTransformNameii( >
=>ii? A&
TranslateTransformPartNameiiB \
;ii\ ]
TimeSpankk $
ITransitionEffectSubjectkk )
.kk) *
Offsetkk* 0
=>kk1 3 
OpeningEffectsOffsetkk4 H
;kkH I
	protectedmm 
virtualmm 
voidmm 
RunOpeningEffectsmm 0
(mm0 1
)mm1 2
{nn 	
ifoo 
(oo 
!oo 
IsLoadedoo 
||oo 
_matrixTransformoo -
==oo. 0
nulloo1 5
)oo5 6
{pp #
_isOpeningEffectPendingqq '
=qq( )
trueqq* .
;qq. /
returnrr 
;rr 
}ss #
_isOpeningEffectPendingtt #
=tt$ %
falsett& +
;tt+ ,
varvv 

storyboardvv 
=vv 
newvv  

Storyboardvv! +
(vv+ ,
)vv, -
;vv- .
varww 
openingEffectww 
=ww 
OpeningEffectww  -
?ww- .
.ww. /
Buildww/ 4
(ww4 5
thisww5 9
)ww9 :
;ww: ;
ifxx 
(xx 
openingEffectxx 
!=xx  
nullxx! %
)xx% &

storyboardyy 
.yy 
Childrenyy #
.yy# $
Addyy$ '
(yy' (
openingEffectyy( 5
)yy5 6
;yy6 7
foreachzz 
(zz 
varzz 
effectzz 
inzz  "
OpeningEffectszz# 1
.zz1 2
Selectzz2 8
(zz8 9
ezz9 :
=>zz; =
ezz> ?
.zz? @
Buildzz@ E
(zzE F
thiszzF J
)zzJ K
)zzK L
.zzL M
WherezzM R
(zzR S
tlzzS U
=>zzV X
tlzzY [
!=zz\ ^
nullzz_ c
)zzc d
)zzd e
{{{ 

storyboard|| 
.|| 
Children|| #
.||# $
Add||$ '
(||' (
effect||( .
)||. /
;||/ 0
}}} 

storyboard 
. 
Begin 
( 
GetNameScopeRoot -
(- .
). /
)/ 0
;0 1
}
ÄÄ 	
private
ÇÇ 
FrameworkElement
ÇÇ  
GetNameScopeRoot
ÇÇ! 1
(
ÇÇ1 2
)
ÇÇ2 3
{
ÉÉ 	
if
ÜÜ 
(
ÜÜ 
GetVisualChild
ÜÜ 
(
ÜÜ 
$num
ÜÜ  
)
ÜÜ  !
is
ÜÜ" $
FrameworkElement
ÜÜ% 5
fe
ÜÜ6 8
&&
ÜÜ9 ;
	NameScope
ÜÜ< E
.
ÜÜE F
GetNameScope
ÜÜF R
(
ÜÜR S
fe
ÜÜS U
)
ÜÜU V
!=
ÜÜW Y
null
ÜÜZ ^
)
ÜÜ^ _
{
áá 
return
àà 
fe
àà 
;
àà 
}
ââ 
if
ãã 
(
ãã 
	NameScope
ãã 
.
ãã 
GetNameScope
ãã &
(
ãã& '
this
ãã' +
)
ãã+ ,
==
ãã- /
null
ãã0 4
)
ãã4 5
{
åå 
	NameScope
çç 
.
çç 
SetNameScope
çç &
(
çç& '
this
çç' +
,
çç+ ,
new
çç- 0
	NameScope
çç1 :
(
çç: ;
)
çç; <
)
çç< =
;
çç= >
}
éé 
return
êê 
this
êê 
;
êê 
}
ëë 	
}
íí 
}ìì ´8
QD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\TreeHelper.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
internal 
static 
class 

TreeHelper $
{ 
public 
static 
double 
GetVisibleWidth ,
(, -
FrameworkElement- =
element> E
,E F
	UIElementG P
parentQ W
)W X
{ 	
if 
( 
element 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
nameofA G
(G H
elementH O
)O P
)P Q
;Q R
if 
( 
parent 
== 
null 
) 
throw  %
new& )!
ArgumentNullException* ?
(? @
nameof@ F
(F G
parentG M
)M N
)N O
;O P
var 
location 
= 
element "
." #
TransformToAncestor# 6
(6 7
parent7 =
)= >
.> ?
	Transform? H
(H I
newI L
PointM R
(R S
$numS T
,T U
$numV W
)W X
)X Y
;Y Z
int 
width 
= 
( 
int 
) 
Math "
." #
Floor# (
(( )
element) 0
.0 1
ActualWidth1 <
)< =
;= >
var 
hitTest 
= 
parent  
.  !
InputHitTest! -
(- .
new. 1
Point2 7
(7 8
location8 @
.@ A
XA B
+C D
widthE J
,J K
locationL T
.T U
YU V
)V W
)W X
;X Y
if 
( 
IsAncestorTill 
( 
hitTest &
as' )
FrameworkElement* :
,: ;
element< C
,C D
parentE K
)K L
)L M
{ 
return 
width 
; 
} 
int 
end 
= 
( 
int 
) 
Math  
.  !
Floor! &
(& '
element' .
.. /
ActualWidth/ :
): ;
;; <
int   
start   
=   
$num   
;   
while"" 
("" 
start"" 
<"" 
end"" 
)"" 
{## 
width$$ 
=$$ 
($$ 
end$$ 
+$$ 
start$$ $
)$$$ %
/$$% &
$num$$& '
;$$' (
hitTest%% 
=%% 
parent%%  
.%%  !
InputHitTest%%! -
(%%- .
new%%. 1
Point%%2 7
(%%7 8
location%%8 @
.%%@ A
X%%A B
+%%C D
width%%E J
,%%J K
location%%L T
.%%T U
Y%%U V
)%%V W
)%%W X
;%%X Y
if'' 
('' 
IsAncestorTill'' "
(''" #
hitTest''# *
as''+ -
FrameworkElement''. >
,''> ?
element''@ G
,''G H
parent''I O
)''O P
)''P Q
{(( 
hitTest** 
=** 
parent** $
.**$ %
InputHitTest**% 1
(**1 2
new**2 5
Point**6 ;
(**; <
location**< D
.**D E
X**E F
+**G H
width**I N
+**O P
$num**Q R
,**R S
location**T \
.**\ ]
Y**] ^
)**^ _
)**_ `
;**` a
if,, 
(,, 
IsAncestorTill,, &
(,,& '
hitTest,,' .
as,,/ 1
FrameworkElement,,2 B
,,,B C
element,,D K
,,,K L
parent,,M S
),,S T
),,T U
{-- 
start.. 
=.. 
width..  %
;..% &
}// 
else00 
{11 
return22 
width22 $
;22$ %
}33 
}44 
else55 
{66 
end77 
=77 
width77 
;77  
}88 
}99 
returnHH 
elementHH 
.HH 
ActualWidthHH &
;HH& '
}II 	
privateKK 
staticKK 
boolKK 
IsAncestorTillKK *
(KK* +
FrameworkElementKK+ ;
elementKK< C
,KKC D
objectKKE K
ancestorKKL T
,KKT U
objectKKV \
	containerKK] f
)KKf g
{LL 	
ifMM 
(MM 
elementMM 
==MM 
nullMM 
)MM  
returnMM! '
falseMM( -
;MM- .
FrameworkElementOO 
parentOO #
=OO$ %
elementOO& -
;OO- .
doQQ 
{RR 
ifSS 
(SS 
ReferenceEqualsSS #
(SS# $
parentSS$ *
,SS* +
ancestorSS, 4
)SS4 5
)SS5 6
returnSS7 =
trueSS> B
;SSB C
ifTT 
(TT 
ReferenceEqualsTT #
(TT# $
parentTT$ *
,TT* +
	containerTT, 5
)TT5 6
)TT6 7
returnTT8 >
falseTT? D
;TTD E
}UU 
whileUU 
(UU 
(UU 
parentUU 
=UU 
(UU  
parentUU  &
.UU& '
ParentUU' -
??UU. 0
VisualTreeHelperUU1 A
.UUA B
	GetParentUUB K
(UUK L
parentUUL R
)UUR S
)UUS T
asUUU W
FrameworkElementUUX h
)UUh i
!=UUj l
nullUUm q
)UUq r
;UUr s
returnWW 
falseWW 
;WW 
}XX 	
publicZZ 
staticZZ 
VisualZZ 
FindMainTreeVisualZZ /
(ZZ/ 0
VisualZZ0 6
visualZZ7 =
)ZZ= >
{[[ 	
DependencyObject\\ 
root\\ !
=\\" #
null\\$ (
;\\( )
DependencyObject]] 
dependencyObject]] -
=]]. /
visual]]0 6
;]]6 7
while__ 
(__ 
dependencyObject__ #
!=__$ &
null__' +
)__+ ,
{`` 
rootaa 
=aa 
dependencyObjectaa '
;aa' (
dependencyObjectbb  
=bb! "
VisualTreeHelperbb# 3
.bb3 4
	GetParentbb4 =
(bb= >
dependencyObjectbb> N
)bbN O
;bbO P
}cc 
returnee 
rootee 
asee 
Visualee !
;ee! "
}ff 	
}gg 
}hh å+
UD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\TreeViewAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
public 

static 
class 
TreeViewAssist &
{ 
public 
static 
readonly 
DependencyProperty 1&
AdditionalTemplateProperty2 L
=M N
DependencyPropertyO a
.a b
RegisterAttachedb r
(r s
$str  
,  !
typeof 
( 
DataTemplate 
)  
,  !
typeof 
( 
TreeViewAssist !
)! "
," #
new %
FrameworkPropertyMetadata )
() *
null* .
,. /,
 FrameworkPropertyMetadataOptions0 P
.P Q
InheritsQ Y
)Y Z
)Z [
;[ \
public!! 
static!! 
void!! !
SetAdditionalTemplate!! 0
(!!0 1
DependencyObject!!1 A
element!!B I
,!!I J
DataTemplate!!K W
value!!X ]
)!!] ^
{"" 	
element## 
.## 
SetValue## 
(## &
AdditionalTemplateProperty## 7
,##7 8
value##9 >
)##> ?
;##? @
}$$ 	
public-- 
static-- 
DataTemplate-- "!
GetAdditionalTemplate--# 8
(--8 9
DependencyObject--9 I
element--J Q
)--Q R
{.. 	
return// 
(// 
DataTemplate//  
)//  !
element//! (
.//( )
GetValue//) 1
(//1 2&
AdditionalTemplateProperty//2 L
)//L M
;//M N
}00 	
public99 
static99 
readonly99 
DependencyProperty99 1.
"AdditionalTemplateSelectorProperty992 T
=99U V
DependencyProperty99W i
.99i j
RegisterAttached99j z
(99z {
$str:: (
,::( )
typeof;; 
(;;  
DataTemplateSelector;; '
);;' (
,;;( )
typeof<< 
(<< 
TreeViewAssist<< !
)<<! "
,<<" #
new== %
FrameworkPropertyMetadata== )
(==) *
null==* .
,==. /,
 FrameworkPropertyMetadataOptions==0 P
.==P Q
Inherits==Q Y
)==Y Z
)==Z [
;==[ \
publicDD 
staticDD 
voidDD )
SetAdditionalTemplateSelectorDD 8
(DD8 9
DependencyObjectDD9 I
elementDDJ Q
,DDQ R 
DataTemplateSelectorDDS g
valueDDh m
)DDm n
{EE 	
elementFF 
.FF 
SetValueFF 
(FF .
"AdditionalTemplateSelectorPropertyFF ?
,FF? @
valueFFA F
)FFF G
;FFG H
}GG 	
publicPP 
staticPP  
DataTemplateSelectorPP *)
GetAdditionalTemplateSelectorPP+ H
(PPH I
DependencyObjectPPI Y
elementPPZ a
)PPa b
{QQ 	
returnRR 
(RR  
DataTemplateSelectorRR (
)RR( )
elementRR) 0
.RR0 1
GetValueRR1 9
(RR9 :.
"AdditionalTemplateSelectorPropertyRR: \
)RR\ ]
;RR] ^
}SS 	
privateUU 
staticUU 
readonlyUU 
LazyUU  $
<UU$ %
DataTemplateUU% 1
>UU1 2(
NoAdditionalTemplateProviderUU3 O
=UUP Q
newUUR U
LazyUUV Z
<UUZ [
DataTemplateUU[ g
>UUg h
(UUh i(
CreateEmptyGridDataTemplate	UUi Ñ
)
UUÑ Ö
;
UUÖ Ü
public[[ 
static[[ 
readonly[[ 
DataTemplate[[ +&
SuppressAdditionalTemplate[[, F
=[[G H(
NoAdditionalTemplateProvider[[I e
.[[e f
Value[[f k
;[[k l
public]] 
static]] 
DataTemplate]] "'
CreateEmptyGridDataTemplate]]# >
(]]> ?
)]]? @
{^^ 	
var__ 
xaml__ 
=__ 
$str__ >
;__> ?
var`` 
parserContext`` 
=`` 
new``  #
ParserContext``$ 1
(``1 2
)``2 3
;``3 4
parserContextaa 
.aa 
XmlnsDictionaryaa )
.aa) *
Addaa* -
(aa- .
$straa. 0
,aa0 1
$straa2 m
)aam n
;aan o
parserContextbb 
.bb 
XmlnsDictionarybb )
.bb) *
Addbb* -
(bb- .
$strbb. 1
,bb1 2
$strbb3 a
)bba b
;bbb c
usingdd 
(dd 
vardd 
memoryStreamdd #
=dd$ %
newdd& )
MemoryStreamdd* 6
(dd6 7
Encodingdd7 ?
.dd? @
ASCIIdd@ E
.ddE F
GetBytesddF N
(ddN O
xamlddO S
)ddS T
)ddT U
)ddU V
{ee 
returnff 
(ff 
DataTemplateff $
)ff$ %

XamlReaderff% /
.ff/ 0
Loadff0 4
(ff4 5
memoryStreamff5 A
,ffA B
parserContextffC P
)ffP Q
;ffQ R
}gg 
}hh 	
}ii 
}jj Å.
PD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\Underline.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{ 
[ 
TemplateVisualState 
( 
	GroupName "
=" #
$str# 5
,5 6
Name7 ;
=< =
ActiveStateName> M
)M N
]N O
[ 
TemplateVisualState 
( 
	GroupName "
=# $
$str% 7
,7 8
Name9 =
=> ?
InactiveStateName@ Q
)Q R
]R S
public 

class 
	Underline 
: 
Control $
{ 
public 
const 
string 
ActiveStateName +
=, -
$str. 6
;6 7
public 
const 
string 
InactiveStateName -
=. /
$str0 :
;: ;
static 
	Underline 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
typeof5 ;
(; <
	Underline< E
)E F
,F G
newH K%
FrameworkPropertyMetadataL e
(e f
typeoff l
(l m
	Underlinem v
)v w
)w x
)x y
;y z
} 	
public 
static 
readonly 
DependencyProperty 1
IsActiveProperty2 B
=C D
DependencyPropertyE W
.W X
RegisterX `
(` a
nameof 
( 
IsActive 
) 
, 
typeof $
($ %
bool% )
)) *
,* +
typeof, 2
(2 3
	Underline3 <
)< =
,= >
new %
FrameworkPropertyMetadata )
() *
false* /
,/ 0,
 FrameworkPropertyMetadataOptions1 Q
.Q R
AffectsRenderR _
,_ `,
IsActivePropertyChangedCallback	a Ä
)
Ä Å
)
Å Ç
;
Ç É
private   
static   
void   +
IsActivePropertyChangedCallback   ;
(  ; <
DependencyObject  < L
dependencyObject  M ]
,  ] ^/
"DependencyPropertyChangedEventArgs	  _ Å0
"dependencyPropertyChangedEventArgs
  Ç §
)
  § •
{!! 	
("" 
("" 
	Underline"" 
)"" 
dependencyObject"" (
)""( )
."") *
GotoVisualState""* 9
(""9 :
!"": ;
TransitionAssist""; K
.""K L!
GetDisableTransitions""L a
(""a b
dependencyObject""b r
)""r s
)""s t
;""t u
}## 	
public%% 
bool%% 
IsActive%% 
{&& 	
get'' 
{'' 
return'' 
('' 
bool'' 
)'' 
GetValue'' '
(''' (
IsActiveProperty''( 8
)''8 9
;''9 :
}''; <
set(( 
{(( 
SetValue(( 
((( 
IsActiveProperty(( +
,((+ ,
value((- 2
)((2 3
;((3 4
}((5 6
})) 	
public++ 
static++ 
readonly++ 
DependencyProperty++ 1 
CornerRadiusProperty++2 F
=++G H
DependencyProperty++I [
.++[ \
Register++\ d
(++d e
nameof,, 
(,, 
CornerRadius,, 
),,  
,,,  !
typeof,," (
(,,( )
CornerRadius,,) 5
),,5 6
,,,6 7
typeof,,8 >
(,,> ?
	Underline,,? H
),,H I
,,,I J
new-- %
FrameworkPropertyMetadata-- )
(--) *
new--* -
CornerRadius--. :
(--: ;
$num--; <
)--< =
,--= >,
 FrameworkPropertyMetadataOptions--? _
.--_ `
AffectsRender--` m
,--m n
null--o s
)--s t
)--t u
;--u v
public// 
CornerRadius// 
CornerRadius// (
{00 	
get11 
{11 
return11 
(11 
CornerRadius11 &
)11& '
GetValue11' /
(11/ 0 
CornerRadiusProperty110 D
)11D E
;11E F
}11G H
set22 
{22 
SetValue22 
(22  
CornerRadiusProperty22 /
,22/ 0
value221 6
)226 7
;227 8
}229 :
}33 	
public55 
override55 
void55 
OnApplyTemplate55 ,
(55, -
)55- .
{66 	
base77 
.77 
OnApplyTemplate77  
(77  !
)77! "
;77" #
GotoVisualState99 
(99 
false99 !
)99! "
;99" #
}:: 	
private<< 
void<< 
GotoVisualState<< $
(<<$ %
bool<<% )
useTransitions<<* 8
)<<8 9
{== 	
VisualStateManager>> 
.>> 
	GoToState>> (
(>>( )
this>>) -
,>>- .
SelectStateName>>/ >
(>>> ?
)>>? @
,>>@ A
useTransitions>>B P
)>>P Q
;>>Q R
}?? 	
privateAA 
stringAA 
SelectStateNameAA &
(AA& '
)AA' (
{BB 	
returnCC 
IsActiveCC 
?CC 
ActiveStateNameCC -
:CC. /
InactiveStateNameCC0 A
;CCA B
}DD 	
}EE 
}FF Ç&
WD:\GitHub_Proj\MaterialDesignInXamlToolkit\MaterialDesignThemes.Wpf\ValidationAssist.cs
	namespace 	 
MaterialDesignThemes
 
. 
Wpf "
{		 
public

 

static

 
class

 
ValidationAssist

 (
{ 
public 
static 
readonly 
DependencyProperty 1#
OnlyShowOnFocusProperty2 I
=J K
DependencyPropertyL ^
.^ _
RegisterAttached_ o
(o p
$str 
, 
typeof 
( 
bool 
) 
, 
typeof 
( 
ValidationAssist #
)# $
,$ %
new %
FrameworkPropertyMetadata )
() *
false* /
,/ 0,
 FrameworkPropertyMetadataOptions1 Q
.Q R
InheritsR Z
)Z [
)[ \
;\ ]
public 
static 
bool 
GetOnlyShowOnFocus -
(- .
DependencyObject. >
element? F
)F G
{ 	
return 
( 
bool 
) 
element  
.  !
GetValue! )
() *#
OnlyShowOnFocusProperty* A
)A B
;B C
} 	
public 
static 
void 
SetOnlyShowOnFocus -
(- .
DependencyObject. >
element? F
,F G
boolH L
valueM R
)R S
{ 	
element 
. 
SetValue 
( #
OnlyShowOnFocusProperty 4
,4 5
value6 ;
); <
;< =
} 	
public(( 
static(( 
readonly(( 
DependencyProperty(( 1
UsePopupProperty((2 B
=((C D
DependencyProperty((E W
.((W X
RegisterAttached((X h
(((h i
$str)) 
,)) 
typeof** 
(** 
bool** 
)** 
,** 
typeof++ 
(++ 
ValidationAssist++ #
)++# $
,++$ %
new,, %
FrameworkPropertyMetadata,, )
(,,) *
false,,* /
,,,/ 0,
 FrameworkPropertyMetadataOptions,,1 Q
.,,Q R
Inherits,,R Z
),,Z [
),,[ \
;,,\ ]
public.. 
static.. 
bool.. 
GetUsePopup.. &
(..& '
DependencyObject..' 7
element..8 ?
)..? @
{// 	
return00 
(00 
bool00 
)00 
element00  
.00  !
GetValue00! )
(00) *
UsePopupProperty00* :
)00: ;
;00; <
}11 	
public33 
static33 
void33 
SetUsePopup33 &
(33& '
DependencyObject33' 7
element338 ?
,33? @
bool33A E
value33F K
)33K L
{44 	
element55 
.55 
SetValue55 
(55 
UsePopupProperty55 -
,55- .
value55/ 4
)554 5
;555 6
}66 	
public== 
static== 
readonly== 
DependencyProperty== 1
SuppressProperty==2 B
===C D
DependencyProperty==E W
.==W X
RegisterAttached==X h
(==h i
$str>> 
,>> 
typeof>> 
(>>  
bool>>  $
)>>$ %
,>>% &
typeof>>' -
(>>. /
ValidationAssist>>/ ?
)>>? @
,>>@ A
new>>B E%
FrameworkPropertyMetadata>>F _
(>>_ `
default>>` g
(>>g h
bool>>h l
)>>l m
,>>m n-
 FrameworkPropertyMetadataOptions	>>o è
.
>>è ê
Inherits
>>ê ò
)
>>ò ô
)
>>ô ö
;
>>ö õ
publicEE 
staticEE 
voidEE 
SetSuppressEE &
(EE& '
DependencyObjectEE' 7
elementEE8 ?
,EE? @
boolEEA E
valueEEF K
)EEK L
{FF 	
elementGG 
.GG 
SetValueGG 
(GG 
SuppressPropertyGG -
,GG- .
valueGG/ 4
)GG4 5
;GG5 6
}HH 	
publicMM 
staticMM 
boolMM 
GetSuppressMM &
(MM& '
DependencyObjectMM' 7
elementMM8 ?
)MM? @
{NN 	
returnOO 
(OO 
boolOO 
)OO 
elementOO !
.OO! "
GetValueOO" *
(OO* +
SuppressPropertyOO+ ;
)OO; <
;OO< =
}PP 	
}QQ 
}RR 